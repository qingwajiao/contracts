{
	"id": "0ed6060628e9bf5d38c12ed1031a1a62",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Stack.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\nimport \"./interfaces/IBEP20.sol\";\r\nimport \"./interfaces/IMigratorChef.sol\";\r\nimport \"./libraries/SafeBEP20.sol\";\r\n\r\n\r\ncontract LPMining is Ownable {\r\n\r\n    /**\r\n     * Extends uint256 by SafeMath\r\n     */\r\n    using SafeMath for uint256;\r\n\r\n    /**\r\n     * Extends safe operation by SafeBEP20\r\n     */\r\n    using SafeBEP20 for IBEP20;\r\n\r\n    uint256 public constant DENOMINATOR = 365 days;  \r\n\r\n    uint256 public constant BASE = 100;\r\n\r\n    uint256 public constant DENOMINATOR_TEST = 5 minutes;\r\n\r\n    // uint256 public constant day = 12 * 60 * 24;\r\n    \r\n    // string private constant _symbol = 'SquidGrow';\r\n\r\n    /**\r\n     * Info of each user.\r\n     *\r\n     *\r\n     * We do some fancy math here. Basically, any point in time, the amount of BFLYs\r\n     * entitled to a user but is pending to be distributed is:\r\n     *\r\n     *   pending reward = (user.amount * pool.accBflyPerShare) - user.rewardDebt\r\n     *\r\n     * Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n     *   1. The pool's `accBflyPerShare` (and `lastRewardBlock`) gets updated.\r\n     *   2. User receives the pending reward sent to his/her address.\r\n     *   3. User's `amount` gets updated.\r\n     *   4. User's `rewardDebt` gets updated.\r\n     */\r\n    struct UserInfo {\r\n        uint256 amount;     // How many LP tokens the user has provided.\r\n        uint256 offset; // Reward debt. See explanation below.\r\n        uint256 lockStartTime;\r\n    }\r\n\r\n    struct AprInfo {\r\n        uint256 apr;\r\n        uint256 time;\r\n    }\r\n\r\n\r\n    struct PoolInfo{\r\n        uint256 duration;\r\n        AprInfo[] aprs;\r\n    }\r\n\r\n    PoolInfo[] poolInfos;\r\n\r\n    mapping (uint256 => mapping (address => UserInfo)) public userInfo;\r\n\r\n    /**\r\n     * Info of each pool.\r\n     */\r\n    // struct PoolInfo {\r\n    //     uint256 duration;           // Address of LP token contract.\r\n    //     uint256 allocPoint;       // How many allocation points assigned to this pool. BFLYs to distribute per block.\r\n    //     uint256 lastRewardBlock;  // Last block number that BFLYs distribution occurs.\r\n    //     uint256 accARCPerShare; // Accumulated BFLYs per share, times 1e12. See below.\r\n    //     uint256 amount;\r\n        \r\n    // }\r\n\r\n    /**\r\n     * The reward token!\r\n     */\r\n    IBEP20 public para;\r\n\r\n\r\n    /**\r\n     * ARC tokens per block.\r\n     */\r\n    // uint256 public arcPerBlock;\r\n\r\n    /**\r\n     * Bonus muliplier for early ARC makers.\r\n     */\r\n    uint256 public BONUS_MULTIPLIER = 1;\r\n\r\n    /**\r\n     * The migrator contract. It has a lot of power. Can only be set through governance (owner).\r\n     */\r\n    IMigratorChef public migrator;\r\n\r\n\r\n    \r\n\r\n    /**\r\n     * Total allocation poitns. Must be the sum of all allocation points in all pools.\r\n     */\r\n    // uint256 public totalAllocPoint = 0;\r\n\r\n    /**\r\n     * The block number when mining starts.\r\n     */\r\n    // uint256 public startBlock;\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n\r\n    constructor(\r\n        IBEP20 _para\r\n        // uint256 _arcPerBlock,\r\n        // uint256 _startBlock\r\n    ) {\r\n        para = _para;\r\n        // arcPerBlock = _arcPerBlock;\r\n        // startBlock = _startBlock;\r\n\r\n\r\n        // PoolInfo storage pool0 = poolInfos[0];\r\n        // pool0.duration = 90 days;\r\n        // pool0.aprs.push(AprInfo({\r\n        //     apr:10,\r\n        //     time:block.timestamp\r\n        //     }));\r\n\r\n        // AprInfo[] memory ais;\r\n        // ais[0] = AprInfo(10,block.timestamp);\r\n\r\n        // PoolInfo memory p0 = PoolInfo(90 days,ais);\r\n\r\n        // poolInfos.push(p0);\r\n\r\n        initialized();\r\n    }\r\n\r\n\r\n    function aadd()public pure returns(uint256){\r\n        return 1 minutes;\r\n    }\r\n\r\n    function getPoolInfo(uint256 id)public view returns (PoolInfo memory) {\r\n        return poolInfos[id];\r\n    }\r\n\r\n    function initialized()private {\r\n\r\n        // uint id = poolInfos.length;\r\n        PoolInfo storage p = poolInfos.push();\r\n\r\n        p.aprs.push(AprInfo(20, block.timestamp));\r\n        p.duration = 5;\r\n\r\n        // poolInfos.push(PoolInfo(180 days, poolInfos[id].aprs));\r\n\r\n        // PoolInfo storage pool1 = poolInfos[1];\r\n        // pool1.duration = 180 days;\r\n        // pool1.aprs.push(AprInfo({\r\n        //     apr:20,\r\n        //     time:block.timestamp\r\n        //     }));  \r\n\r\n        // PoolInfo storage pool2 = poolInfos[2];\r\n        // pool2.duration = 360 days;\r\n        // pool2.aprs.push(AprInfo({\r\n        //     apr:30,\r\n        //     time: block.timestamp\r\n        //     })); \r\n\r\n    }           \r\n\r\n    /**\r\n     * @dev Update multiplier\r\n     */\r\n    // function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r\n    //     BONUS_MULTIPLIER = multiplierNumber;\r\n    // }\r\n\r\n    /**\r\n     * @dev Number of the pools\r\n     */\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfos.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a new lp to the pool. Can only be called by the owner.\r\n     * XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\r\n     */\r\n    function add(uint256 _apr, uint256 _duration) external  onlyOwner {\r\n\r\n\r\n        PoolInfo storage p = poolInfos.push();\r\n\r\n        p.aprs.push(AprInfo(_apr, block.timestamp));\r\n        p.duration = _duration;\r\n\r\n        // PoolInfo storage newPool = poolInfos[poolInfos.length];\r\n        // newPool.duration = _duration;\r\n        // newPool.aprs.push(AprInfo({\r\n        //     apr:_apr,\r\n        //     time:block.timestamp\r\n        //     }));\r\n\r\n    }\r\n\r\n    /**\r\n     * @dev Update the given pool's BFLY allocation point. Can only be called by the owner.\r\n     */\r\n    function set(uint256 _pid, uint256 _apr) public onlyOwner {\r\n        PoolInfo storage pool = poolInfos[_pid];\r\n        pool.aprs.push(AprInfo({\r\n            apr:_apr,\r\n            time:block.timestamp\r\n            }));\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Set migrator's address\r\n     */\r\n    function setMigrator(IMigratorChef _migrator) public onlyOwner {\r\n        migrator = _migrator;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Return reward multiplier over the given _from to _to block.\r\n     */\r\n    function getMultiplier(uint256 _from, uint256 _to) public pure returns (uint256) {\r\n        return _to.sub(_from);\r\n    }\r\n\r\n    /**\r\n     * @dev View function to see pending rewards on frontend.\r\n     */\r\n    function pendingReward(uint256 _pid, address _user) external view returns (uint256 reward) {\r\n        PoolInfo storage pool = poolInfos[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 len = pool.aprs.length;\r\n        uint256 multiplier;\r\n        bool flag;\r\n        if (pool.aprs[len-1].time < user.lockStartTime){\r\n            multiplier = getMultiplier(user.lockStartTime,block.timestamp);\r\n            reward = multiplier.mul(pool.aprs[len-1].apr).mul(user.amount);\r\n            reward = reward.div(DENOMINATOR_TEST).div(100);\r\n            return reward;\r\n        }\r\n\r\n        for (uint i = user.offset;i< len-1;i++){\r\n\r\n            if (!flag){\r\n                multiplier = getMultiplier(user.lockStartTime, pool.aprs[i+1].time);\r\n                reward = multiplier.mul(pool.aprs[i].apr).mul(user.amount);\r\n                flag = true;\r\n                continue ;\r\n            }\r\n\r\n            uint256 tempNumber = getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time);\r\n\r\n            reward =reward.add(tempNumber.mul(pool.aprs[i].apr).mul(user.amount));  \r\n            multiplier = multiplier.add(tempNumber);\r\n                      \r\n        }\r\n\r\n        multiplier = getMultiplier(pool.aprs[len-1].time, block.number);\r\n        reward =reward.add(multiplier.mul(pool.aprs[len-1].apr).mul(user.amount));\r\n\r\n        return reward;\r\n\r\n    }\r\n\r\n\r\n    function calculateReward(uint256 _pid, address _user) public view returns (uint256 reward) {\r\n        PoolInfo storage pool = poolInfos[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 len = pool.aprs.length;\r\n        uint256 multiplier;\r\n        bool flag;\r\n        // 如果\r\n        if (pool.aprs[len-1].time < user.lockStartTime){\r\n            multiplier = pool.duration;\r\n            reward = multiplier.mul(pool.aprs[len-1].apr).mul(user.amount);\r\n            return reward;\r\n        }\r\n        for (uint i = user.offset;i< len-1;i++){\r\n\r\n            if (!flag){\r\n                multiplier = getMultiplier(user.lockStartTime, pool.aprs[i+1].time);\r\n                if (multiplier > pool.duration){\r\n                    reward = pool.duration.mul(pool.aprs[i].apr).mul(user.amount);\r\n                    return reward;\r\n                    }\r\n                reward = multiplier.mul(pool.aprs[i].apr).mul(user.amount);\r\n                flag = true;\r\n                continue ;\r\n            }\r\n\r\n            uint256 tempNumber = getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time);\r\n\r\n            if (tempNumber.add(multiplier) > pool.duration){\r\n                reward = reward.add(pool.duration.sub(multiplier).mul(pool.aprs[i].apr).mul(user.amount));\r\n                return reward;\r\n                }    \r\n                //      100          200           400   450 \r\n                //             150 \r\n            \r\n            reward =reward.add(tempNumber.mul(pool.aprs[i].apr).mul(user.amount));  \r\n            multiplier = multiplier.add(tempNumber);          \r\n        }\r\n\r\n            reward = reward.add(pool.duration.sub(multiplier).mul(pool.aprs[len-1].apr).mul(user.amount));\r\n            return reward;          \r\n        \r\n    }\r\n\r\n    /**\r\n     * @dev Deposit LP tokens to LPMining for bfly allocation.\r\n     */\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfos[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n\r\n\r\n        if (user.amount > 0){\r\n            \r\n            if(user.lockStartTime.add(pool.duration)> block.timestamp){\r\n                // 质押到期，返还利息\r\n                uint256 pending = calculateReward(_pid,msg.sender);\r\n                if(pending > 0) {\r\n                    IBEP20(para).safeTransfer(msg.sender, pending);\r\n                }\r\n\r\n                // 追加本金 、更新质押开始时间 \r\n                IBEP20(para).safeTransferFrom(address(msg.sender), address(this), _amount);\r\n                user.amount = user.amount.add(_amount);\r\n            \r\n                user.lockStartTime = block.timestamp;\r\n                user.offset = pool.aprs.length - 1;\r\n\r\n                emit Deposit(msg.sender, _pid, _amount);\r\n                return;\r\n\r\n            }else{\r\n\r\n                // 追加本金 、更新质押开始时间 \r\n                IBEP20(para).safeTransferFrom(address(msg.sender), address(this), _amount);\r\n                user.amount = user.amount.add(_amount);\r\n            \r\n                user.lockStartTime = block.timestamp;\r\n                user.offset = pool.aprs.length - 1;\r\n\r\n                emit Deposit(msg.sender, _pid, _amount);\r\n                return;\r\n            }       \r\n        }else {\r\n            // 第一次质押\r\n            // 记录用户 本金和质押时间\r\n            user.lockStartTime = block.timestamp;\r\n            user.offset = pool.aprs.length - 1; \r\n            user.amount = _amount; \r\n            IBEP20(para).safeTransferFrom(address(msg.sender), address(this), _amount);\r\n            emit Deposit(msg.sender, _pid, _amount);\r\n            return ; \r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * @dev Withdraw LP tokens from MasterChef.\r\n     */\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfos[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        require(user.amount >= _amount, \"BFLY: SUFFICIENT_BALANCE\");\r\n\r\n        if(user.lockStartTime.add(pool.duration)> block.timestamp){\r\n\r\n            // 返还利息\r\n            uint256 pending = calculateReward(_pid,msg.sender);\r\n                if(pending > 0) {\r\n                    IBEP20(para).safeTransfer(msg.sender, pending);\r\n                }\r\n            \r\n        }\r\n            \r\n            IBEP20(para).safeTransfer(msg.sender, user.amount);\r\n            // 将用户质押信息归零\r\n            user.amount = 0; \r\n            return;\r\n        \r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @dev Withdraw without caring about rewards. EMERGENCY ONLY.\r\n     */\r\n    // function emergencyWithdraw(uint256 _pid) public {\r\n    //     PoolInfo storage pool = poolInfo[_pid];\r\n    //     UserInfo storage user = userInfo[_pid][msg.sender];\r\n    //     arc.safeTransfer(address(msg.sender), user.amount);\r\n    //     emit EmergencyWithdraw(msg.sender, _pid, user.amount);\r\n    //     user.amount = 0;\r\n    // }\r\n\r\n    /**\r\n     * @dev Update dev address by the previous dev.\r\n     */\r\n    // function setDev(address _devaddr) public {\r\n    //     require(msg.sender == devaddr, \"BFLY: NO_PERMISSION\");\r\n    //     devaddr = _devaddr;\r\n    // }\r\n\r\n    /**\r\n     * @dev Update arcPerBlock by the owner.\r\n     */\r\n    // function setARCPerBlock(uint256 arcPerBlock_) public onlyOwner {\r\n    //     arcPerBlock = arcPerBlock_;\r\n    // }\r\n}"
			},
			"libraries/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\n\r\nimport \"../interfaces/IBEP20.sol\";\r\n\r\n/**\r\n * @title SafeBEP20\r\n * @dev Wrappers around BEP20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IBEP20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IBEP20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance =\r\n            token.allowance(address(this), spender).sub(value, \"SafeBEP20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"interfaces/IMigratorChef.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport './IBEP20.sol';\r\n\r\ninterface IMigratorChef {\r\n    // Perform LP token migration from legacy PancakeSwap to CakeSwap.\r\n    // Take the current LP token address and return the new LP token address.\r\n    // Migrator should have full access to the caller's LP token.\r\n    // Return the new LP token address.\r\n    //\r\n    // XXX Migrator must have allowance access to PancakeSwap LP tokens.\r\n    // CakeSwap must mint EXACTLY the same amount of CakeSwap LP tokens or\r\n    // else something bad will happen. Traditional PancakeSwap does not\r\n    // do that so be careful!\r\n    function migrate(IBEP20 token) external returns (IBEP20);\r\n}"
			},
			"interfaces/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "194:8964:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "194:8964:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Stack.sol",
								"interfaces/IBEP20.sol",
								"interfaces/IMigratorChef.sol",
								"libraries/SafeBEP20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Stack.sol",
								"interfaces/IBEP20.sol",
								"interfaces/IMigratorChef.sol",
								"libraries/SafeBEP20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Stack.sol": {
				"LPMining": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IBEP20",
									"name": "_para",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BASE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BONUS_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DENOMINATOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DENOMINATOR_TEST",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "aadd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_apr",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "getMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "getPoolInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "duration",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "apr",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "time",
													"type": "uint256"
												}
											],
											"internalType": "struct LPMining.AprInfo[]",
											"name": "aprs",
											"type": "tuple[]"
										}
									],
									"internalType": "struct LPMining.PoolInfo",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "migrator",
							"outputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "para",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_apr",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "_migrator",
									"type": "address"
								}
							],
							"name": "setMigrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "offset",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockStartTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"add(uint256,uint256)": {
								"details": "Add a new lp to the pool. Can only be called by the owner. XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do."
							},
							"deposit(uint256,uint256)": {
								"details": "Deposit LP tokens to LPMining for bfly allocation."
							},
							"getMultiplier(uint256,uint256)": {
								"details": "Return reward multiplier over the given _from to _to block."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingReward(uint256,address)": {
								"details": "View function to see pending rewards on frontend."
							},
							"poolLength()": {
								"details": "Number of the pools"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"set(uint256,uint256)": {
								"details": "Update the given pool's BFLY allocation point. Can only be called by the owner."
							},
							"setMigrator(address)": {
								"details": "Set migrator's address"
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(uint256,uint256)": {
								"details": "Withdraw LP tokens from MasterChef."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Stack.sol\":348:13551  contract LPMining is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Stack.sol\":2708:2709  1 */\n  0x01\n    /* \"Stack.sol\":2674:2709  uint256 public BONUS_MULTIPLIER = 1 */\n  0x04\n  sstore\n    /* \"Stack.sol\":3384:4018  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"Stack.sol\":3510:3515  _para */\n  dup1\n    /* \"Stack.sol\":3503:3507  para */\n  0x03\n  0x00\n    /* \"Stack.sol\":3503:3515  para = _para */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Stack.sol\":3997:4010  initialized() */\n  tag_12\n    /* \"Stack.sol\":3997:4008  initialized */\n  shl(0x20, tag_13)\n    /* \"Stack.sol\":3997:4010  initialized() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"Stack.sol\":3384:4018  constructor(... */\n  pop\n    /* \"Stack.sol\":348:13551  contract LPMining is Ownable {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Stack.sol\":4231:4938  function initialized()private {... */\ntag_13:\n    /* \"Stack.sol\":4314:4332  PoolInfo storage p */\n  0x00\n    /* \"Stack.sol\":4335:4344  poolInfos */\n  0x01\n    /* \"Stack.sol\":4335:4351  poolInfos.push() */\n  dup1\n  dup2\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n    /* \"Stack.sol\":4314:4351  PoolInfo storage p = poolInfos.push() */\n  swap1\n  pop\n    /* \"Stack.sol\":4364:4365  p */\n  dup1\n    /* \"Stack.sol\":4364:4370  p.aprs */\n  0x01\n  add\n    /* \"Stack.sol\":4376:4404  AprInfo(20, block.timestamp) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Stack.sol\":4384:4386  20 */\n  0x14\n    /* \"Stack.sol\":4376:4404  AprInfo(20, block.timestamp) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Stack.sol\":4388:4403  block.timestamp */\n  timestamp\n    /* \"Stack.sol\":4376:4404  AprInfo(20, block.timestamp) */\n  dup2\n  mstore\n  pop\n    /* \"Stack.sol\":4364:4405  p.aprs.push(AprInfo(20, block.timestamp)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  pop\n  pop\n    /* \"Stack.sol\":4429:4430  5 */\n  0x05\n    /* \"Stack.sol\":4416:4417  p */\n  dup2\n    /* \"Stack.sol\":4416:4426  p.duration */\n  0x00\n  add\n    /* \"Stack.sol\":4416:4430  p.duration = 5 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Stack.sol\":4261:4938  {... */\n  pop\n    /* \"Stack.sol\":4231:4938  function initialized()private {... */\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_34\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:679   */\ntag_25:\n    /* \"#utility.yul\":620:627   */\n  0x00\n    /* \"#utility.yul\":649:673   */\n  tag_36\n    /* \"#utility.yul\":667:672   */\n  dup3\n    /* \"#utility.yul\":649:673   */\n  tag_24\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":638:673   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:679   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":685:837   */\ntag_26:\n    /* \"#utility.yul\":773:812   */\n  tag_38\n    /* \"#utility.yul\":806:811   */\n  dup2\n    /* \"#utility.yul\":773:812   */\n  tag_25\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":766:771   */\n  dup2\n    /* \"#utility.yul\":763:813   */\n  eq\n    /* \"#utility.yul\":753:831   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":827:828   */\n  0x00\n    /* \"#utility.yul\":824:825   */\n  dup1\n    /* \"#utility.yul\":817:829   */\n  revert\n    /* \"#utility.yul\":753:831   */\ntag_39:\n    /* \"#utility.yul\":685:837   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":843:1016   */\ntag_27:\n    /* \"#utility.yul\":915:920   */\n  0x00\n    /* \"#utility.yul\":946:952   */\n  dup2\n    /* \"#utility.yul\":940:953   */\n  mload\n    /* \"#utility.yul\":931:953   */\n  swap1\n  pop\n    /* \"#utility.yul\":962:1010   */\n  tag_41\n    /* \"#utility.yul\":1004:1009   */\n  dup2\n    /* \"#utility.yul\":962:1010   */\n  tag_26\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":843:1016   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1022:1403   */\ntag_3:\n    /* \"#utility.yul\":1107:1113   */\n  0x00\n    /* \"#utility.yul\":1156:1158   */\n  0x20\n    /* \"#utility.yul\":1144:1153   */\n  dup3\n    /* \"#utility.yul\":1135:1142   */\n  dup5\n    /* \"#utility.yul\":1131:1154   */\n  sub\n    /* \"#utility.yul\":1127:1159   */\n  slt\n    /* \"#utility.yul\":1124:1243   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1162:1241   */\n  tag_44\n  tag_21\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1124:1243   */\ntag_43:\n    /* \"#utility.yul\":1282:1283   */\n  0x00\n    /* \"#utility.yul\":1307:1386   */\n  tag_45\n    /* \"#utility.yul\":1378:1385   */\n  dup5\n    /* \"#utility.yul\":1369:1375   */\n  dup3\n    /* \"#utility.yul\":1358:1367   */\n  dup6\n    /* \"#utility.yul\":1354:1376   */\n  add\n    /* \"#utility.yul\":1307:1386   */\n  tag_27\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1297:1386   */\n  swap2\n  pop\n    /* \"#utility.yul\":1253:1396   */\n  pop\n    /* \"#utility.yul\":1022:1403   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Stack.sol\":348:13551  contract LPMining is Ownable {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Stack.sol\":348:13551  contract LPMining is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8aa28550\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x98969e82\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x98969e82\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa18f07a0\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe3d0b2bf\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xec342ad0\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x8aa28550\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8dbb1e3a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x918f8674\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x3e3cca90\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x3e3cca90\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x771602f7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7cd07e47\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x14d20dc2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1ab06ee5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23cf3118\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f380b35\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Stack.sol\":5197:5293  function poolLength() external view returns (uint256) {... */\n    tag_3:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Stack.sol\":4028:4106  function aadd()public pure returns(uint256){... */\n    tag_4:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Stack.sol\":6057:6282  function set(uint256 _pid, uint256 _apr) public onlyOwner {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"Stack.sol\":6346:6448  function setMigrator(IMigratorChef _migrator) public onlyOwner {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"Stack.sol\":4114:4223  function getPoolInfo(uint256 id)public view returns (PoolInfo memory) {... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Stack.sol\":2495:2513  IBEP20 public para */\n    tag_8:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Stack.sol\":11945:12690  function withdraw(uint256 _pid, uint256 _amount) public {... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"Stack.sol\":5485:5938  function add(uint256 _apr, uint256 _duration) external  onlyOwner {... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"Stack.sol\":2834:2863  IMigratorChef public migrator */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Stack.sol\":2674:2709  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Stack.sol\":6549:6670  function getMultiplier(uint256 _from, uint256 _to) public pure returns (uint256) {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Stack.sol\":572:618  uint256 public constant DENOMINATOR = 365 days */\n    tag_16:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Stack.sol\":1878:1944  mapping (uint256 => mapping (address => UserInfo)) public userInfo */\n    tag_17:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_82\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Stack.sol\":6759:8137  function pendingReward(uint256 _pid, address _user) external view returns (uint256 reward) {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Stack.sol\":8147:9933  function calculateReward(uint256 _pid, address _user) public view returns (uint256 reward) {... */\n    tag_19:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Stack.sol\":10023:11870  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_20:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"Stack.sol\":672:724  uint256 public constant DENOMINATOR_TEST = 5 minutes */\n    tag_21:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Stack.sol\":629:663  uint256 public constant BASE = 100 */\n    tag_22:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n    tag_101:\n      stop\n        /* \"Stack.sol\":5197:5293  function poolLength() external view returns (uint256) {... */\n    tag_28:\n        /* \"Stack.sol\":5242:5249  uint256 */\n      0x00\n        /* \"Stack.sol\":5269:5278  poolInfos */\n      0x01\n        /* \"Stack.sol\":5269:5285  poolInfos.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Stack.sol\":5262:5285  return poolInfos.length */\n      swap1\n      pop\n        /* \"Stack.sol\":5197:5293  function poolLength() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Stack.sol\":4028:4106  function aadd()public pure returns(uint256){... */\n    tag_32:\n        /* \"Stack.sol\":4063:4070  uint256 */\n      0x00\n        /* \"Stack.sol\":4089:4098  1 minutes */\n      0x3c\n        /* \"Stack.sol\":4082:4098  return 1 minutes */\n      swap1\n      pop\n        /* \"Stack.sol\":4028:4106  function aadd()public pure returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"Stack.sol\":6057:6282  function set(uint256 _pid, uint256 _apr) public onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_108:\n        /* \"Stack.sol\":6126:6147  PoolInfo storage pool */\n      0x00\n        /* \"Stack.sol\":6150:6159  poolInfos */\n      0x01\n        /* \"Stack.sol\":6160:6164  _pid */\n      dup4\n        /* \"Stack.sol\":6150:6165  poolInfos[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_111\n      jumpi\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n    tag_111:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":6126:6165  PoolInfo storage pool = poolInfos[_pid] */\n      swap1\n      pop\n        /* \"Stack.sol\":6176:6180  pool */\n      dup1\n        /* \"Stack.sol\":6176:6185  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":6191:6273  AprInfo({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Stack.sol\":6218:6222  _apr */\n      dup5\n        /* \"Stack.sol\":6191:6273  AprInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Stack.sol\":6242:6257  block.timestamp */\n      timestamp\n        /* \"Stack.sol\":6191:6273  AprInfo({... */\n      dup2\n      mstore\n      pop\n        /* \"Stack.sol\":6176:6274  pool.aprs.push(AprInfo({... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"Stack.sol\":6115:6282  {... */\n      pop\n        /* \"Stack.sol\":6057:6282  function set(uint256 _pid, uint256 _apr) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Stack.sol\":6346:6448  function setMigrator(IMigratorChef _migrator) public onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_117:\n        /* \"Stack.sol\":6431:6440  _migrator */\n      dup1\n        /* \"Stack.sol\":6420:6428  migrator */\n      0x05\n      0x00\n        /* \"Stack.sol\":6420:6440  migrator = _migrator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Stack.sol\":6346:6448  function setMigrator(IMigratorChef _migrator) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Stack.sol\":4114:4223  function getPoolInfo(uint256 id)public view returns (PoolInfo memory) {... */\n    tag_45:\n        /* \"Stack.sol\":4167:4182  PoolInfo memory */\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"Stack.sol\":4202:4211  poolInfos */\n      0x01\n        /* \"Stack.sol\":4212:4214  id */\n      dup3\n        /* \"Stack.sol\":4202:4215  poolInfos[id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_122\n      jumpi\n      tag_123\n      tag_113\n      jump\t// in\n    tag_123:\n    tag_122:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":4195:4215  return poolInfos[id] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_125:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_126\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_125)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Stack.sol\":4114:4223  function getPoolInfo(uint256 id)public view returns (PoolInfo memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Stack.sol\":2495:2513  IBEP20 public para */\n    tag_49:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Stack.sol\":11945:12690  function withdraw(uint256 _pid, uint256 _amount) public {... */\n    tag_54:\n        /* \"Stack.sol\":12012:12033  PoolInfo storage pool */\n      0x00\n        /* \"Stack.sol\":12036:12045  poolInfos */\n      0x01\n        /* \"Stack.sol\":12046:12050  _pid */\n      dup4\n        /* \"Stack.sol\":12036:12051  poolInfos[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_129\n      jumpi\n      tag_130\n      tag_113\n      jump\t// in\n    tag_130:\n    tag_129:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":12012:12051  PoolInfo storage pool = poolInfos[_pid] */\n      swap1\n      pop\n        /* \"Stack.sol\":12062:12083  UserInfo storage user */\n      0x00\n        /* \"Stack.sol\":12086:12094  userInfo */\n      0x02\n        /* \"Stack.sol\":12086:12100  userInfo[_pid] */\n      0x00\n        /* \"Stack.sol\":12095:12099  _pid */\n      dup6\n        /* \"Stack.sol\":12086:12100  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Stack.sol\":12086:12112  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"Stack.sol\":12101:12111  msg.sender */\n      caller\n        /* \"Stack.sol\":12086:12112  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Stack.sol\":12062:12112  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"Stack.sol\":12146:12153  _amount */\n      dup3\n        /* \"Stack.sol\":12131:12135  user */\n      dup2\n        /* \"Stack.sol\":12131:12142  user.amount */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":12131:12153  user.amount >= _amount */\n      lt\n      iszero\n        /* \"Stack.sol\":12123:12182  require(user.amount >= _amount, \"BFLY: SUFFICIENT_BALANCE\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"Stack.sol\":12237:12252  block.timestamp */\n      timestamp\n        /* \"Stack.sol\":12198:12235  user.lockStartTime.add(pool.duration) */\n      tag_135\n        /* \"Stack.sol\":12221:12225  pool */\n      dup4\n        /* \"Stack.sol\":12221:12234  pool.duration */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":12198:12202  user */\n      dup4\n        /* \"Stack.sol\":12198:12216  user.lockStartTime */\n      0x02\n      add\n      sload\n        /* \"Stack.sol\":12198:12220  user.lockStartTime.add */\n      tag_136\n      swap1\n        /* \"Stack.sol\":12198:12235  user.lockStartTime.add(pool.duration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"Stack.sol\":12198:12252  user.lockStartTime.add(pool.duration)> block.timestamp */\n      gt\n        /* \"Stack.sol\":12195:12498  if(user.lockStartTime.add(pool.duration)> block.timestamp){... */\n      iszero\n      tag_137\n      jumpi\n        /* \"Stack.sol\":12299:12314  uint256 pending */\n      0x00\n        /* \"Stack.sol\":12317:12349  calculateReward(_pid,msg.sender) */\n      tag_138\n        /* \"Stack.sol\":12333:12337  _pid */\n      dup6\n        /* \"Stack.sol\":12338:12348  msg.sender */\n      caller\n        /* \"Stack.sol\":12317:12332  calculateReward */\n      tag_90\n        /* \"Stack.sol\":12317:12349  calculateReward(_pid,msg.sender) */\n      jump\t// in\n    tag_138:\n        /* \"Stack.sol\":12299:12349  uint256 pending = calculateReward(_pid,msg.sender) */\n      swap1\n      pop\n        /* \"Stack.sol\":12381:12382  0 */\n      0x00\n        /* \"Stack.sol\":12371:12378  pending */\n      dup2\n        /* \"Stack.sol\":12371:12382  pending > 0 */\n      gt\n        /* \"Stack.sol\":12368:12473  if(pending > 0) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"Stack.sol\":12407:12453  IBEP20(para).safeTransfer(msg.sender, pending) */\n      tag_140\n        /* \"Stack.sol\":12433:12443  msg.sender */\n      caller\n        /* \"Stack.sol\":12445:12452  pending */\n      dup3\n        /* \"Stack.sol\":12414:12418  para */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Stack.sol\":12407:12432  IBEP20(para).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_141\n      swap1\n        /* \"Stack.sol\":12407:12453  IBEP20(para).safeTransfer(msg.sender, pending) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"Stack.sol\":12368:12473  if(pending > 0) {... */\n    tag_139:\n        /* \"Stack.sol\":12253:12498  {... */\n      pop\n        /* \"Stack.sol\":12195:12498  if(user.lockStartTime.add(pool.duration)> block.timestamp){... */\n    tag_137:\n        /* \"Stack.sol\":12526:12576  IBEP20(para).safeTransfer(msg.sender, user.amount) */\n      tag_142\n        /* \"Stack.sol\":12552:12562  msg.sender */\n      caller\n        /* \"Stack.sol\":12564:12568  user */\n      dup3\n        /* \"Stack.sol\":12564:12575  user.amount */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":12533:12537  para */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Stack.sol\":12526:12551  IBEP20(para).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_141\n      swap1\n        /* \"Stack.sol\":12526:12576  IBEP20(para).safeTransfer(msg.sender, user.amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"Stack.sol\":12649:12650  0 */\n      0x00\n        /* \"Stack.sol\":12635:12639  user */\n      dup2\n        /* \"Stack.sol\":12635:12646  user.amount */\n      0x00\n      add\n        /* \"Stack.sol\":12635:12650  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Stack.sol\":12666:12673  return; */\n      pop\n      pop\n        /* \"Stack.sol\":11945:12690  function withdraw(uint256 _pid, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Stack.sol\":5485:5938  function add(uint256 _apr, uint256 _duration) external  onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_149:\n        /* \"Stack.sol\":5566:5584  PoolInfo storage p */\n      0x00\n        /* \"Stack.sol\":5587:5596  poolInfos */\n      0x01\n        /* \"Stack.sol\":5587:5603  poolInfos.push() */\n      dup1\n      dup2\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":5566:5603  PoolInfo storage p = poolInfos.push() */\n      swap1\n      pop\n        /* \"Stack.sol\":5616:5617  p */\n      dup1\n        /* \"Stack.sol\":5616:5622  p.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":5628:5658  AprInfo(_apr, block.timestamp) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Stack.sol\":5636:5640  _apr */\n      dup6\n        /* \"Stack.sol\":5628:5658  AprInfo(_apr, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Stack.sol\":5642:5657  block.timestamp */\n      timestamp\n        /* \"Stack.sol\":5628:5658  AprInfo(_apr, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"Stack.sol\":5616:5659  p.aprs.push(AprInfo(_apr, block.timestamp)) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"Stack.sol\":5683:5692  _duration */\n      dup2\n        /* \"Stack.sol\":5670:5671  p */\n      dup2\n        /* \"Stack.sol\":5670:5680  p.duration */\n      0x00\n      add\n        /* \"Stack.sol\":5670:5692  p.duration = _duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Stack.sol\":5551:5938  {... */\n      pop\n        /* \"Stack.sol\":5485:5938  function add(uint256 _apr, uint256 _duration) external  onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Stack.sol\":2834:2863  IMigratorChef public migrator */\n    tag_61:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Stack.sol\":2674:2709  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_65:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Stack.sol\":6549:6670  function getMultiplier(uint256 _from, uint256 _to) public pure returns (uint256) {... */\n    tag_73:\n        /* \"Stack.sol\":6621:6628  uint256 */\n      0x00\n        /* \"Stack.sol\":6648:6662  _to.sub(_from) */\n      tag_155\n        /* \"Stack.sol\":6656:6661  _from */\n      dup4\n        /* \"Stack.sol\":6648:6651  _to */\n      dup4\n        /* \"Stack.sol\":6648:6655  _to.sub */\n      tag_156\n      swap1\n        /* \"Stack.sol\":6648:6662  _to.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"Stack.sol\":6641:6662  return _to.sub(_from) */\n      swap1\n      pop\n        /* \"Stack.sol\":6549:6670  function getMultiplier(uint256 _from, uint256 _to) public pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Stack.sol\":572:618  uint256 public constant DENOMINATOR = 365 days */\n    tag_76:\n        /* \"Stack.sol\":610:618  365 days */\n      0x01e13380\n        /* \"Stack.sol\":572:618  uint256 public constant DENOMINATOR = 365 days */\n      dup2\n      jump\t// out\n        /* \"Stack.sol\":1878:1944  mapping (uint256 => mapping (address => UserInfo)) public userInfo */\n    tag_81:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"Stack.sol\":6759:8137  function pendingReward(uint256 _pid, address _user) external view returns (uint256 reward) {... */\n    tag_86:\n        /* \"Stack.sol\":6834:6848  uint256 reward */\n      0x00\n        /* \"Stack.sol\":6861:6882  PoolInfo storage pool */\n      dup1\n        /* \"Stack.sol\":6885:6894  poolInfos */\n      0x01\n        /* \"Stack.sol\":6895:6899  _pid */\n      dup5\n        /* \"Stack.sol\":6885:6900  poolInfos[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_158\n      jumpi\n      tag_159\n      tag_113\n      jump\t// in\n    tag_159:\n    tag_158:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":6861:6900  PoolInfo storage pool = poolInfos[_pid] */\n      swap1\n      pop\n        /* \"Stack.sol\":6911:6932  UserInfo storage user */\n      0x00\n        /* \"Stack.sol\":6935:6943  userInfo */\n      0x02\n        /* \"Stack.sol\":6935:6949  userInfo[_pid] */\n      0x00\n        /* \"Stack.sol\":6944:6948  _pid */\n      dup7\n        /* \"Stack.sol\":6935:6949  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Stack.sol\":6935:6956  userInfo[_pid][_user] */\n      0x00\n        /* \"Stack.sol\":6950:6955  _user */\n      dup6\n        /* \"Stack.sol\":6935:6956  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Stack.sol\":6911:6956  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"Stack.sol\":6967:6978  uint256 len */\n      0x00\n        /* \"Stack.sol\":6981:6985  pool */\n      dup3\n        /* \"Stack.sol\":6981:6990  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":6981:6997  pool.aprs.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Stack.sol\":6967:6997  uint256 len = pool.aprs.length */\n      swap1\n      pop\n        /* \"Stack.sol\":7008:7026  uint256 multiplier */\n      0x00\n        /* \"Stack.sol\":7037:7046  bool flag */\n      dup1\n        /* \"Stack.sol\":7085:7089  user */\n      dup4\n        /* \"Stack.sol\":7085:7103  user.lockStartTime */\n      0x02\n      add\n      sload\n        /* \"Stack.sol\":7061:7065  pool */\n      dup6\n        /* \"Stack.sol\":7061:7070  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":7075:7076  1 */\n      0x01\n        /* \"Stack.sol\":7071:7074  len */\n      dup6\n        /* \"Stack.sol\":7071:7076  len-1 */\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"Stack.sol\":7061:7077  pool.aprs[len-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_163\n      jumpi\n      tag_164\n      tag_113\n      jump\t// in\n    tag_164:\n    tag_163:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":7061:7082  pool.aprs[len-1].time */\n      0x01\n      add\n      sload\n        /* \"Stack.sol\":7061:7103  pool.aprs[len-1].time < user.lockStartTime */\n      lt\n        /* \"Stack.sol\":7057:7359  if (pool.aprs[len-1].time < user.lockStartTime){... */\n      iszero\n      tag_166\n      jumpi\n        /* \"Stack.sol\":7132:7181  getMultiplier(user.lockStartTime,block.timestamp) */\n      tag_167\n        /* \"Stack.sol\":7146:7150  user */\n      dup5\n        /* \"Stack.sol\":7146:7164  user.lockStartTime */\n      0x02\n      add\n      sload\n        /* \"Stack.sol\":7165:7180  block.timestamp */\n      timestamp\n        /* \"Stack.sol\":7132:7145  getMultiplier */\n      tag_73\n        /* \"Stack.sol\":7132:7181  getMultiplier(user.lockStartTime,block.timestamp) */\n      jump\t// in\n    tag_167:\n        /* \"Stack.sol\":7119:7181  multiplier = getMultiplier(user.lockStartTime,block.timestamp) */\n      swap2\n      pop\n        /* \"Stack.sol\":7205:7258  multiplier.mul(pool.aprs[len-1].apr).mul(user.amount) */\n      tag_168\n        /* \"Stack.sol\":7246:7250  user */\n      dup5\n        /* \"Stack.sol\":7246:7257  user.amount */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":7205:7241  multiplier.mul(pool.aprs[len-1].apr) */\n      tag_169\n        /* \"Stack.sol\":7220:7224  pool */\n      dup8\n        /* \"Stack.sol\":7220:7229  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":7234:7235  1 */\n      0x01\n        /* \"Stack.sol\":7230:7233  len */\n      dup8\n        /* \"Stack.sol\":7230:7235  len-1 */\n      tag_170\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_170:\n        /* \"Stack.sol\":7220:7236  pool.aprs[len-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_171\n      jumpi\n      tag_172\n      tag_113\n      jump\t// in\n    tag_172:\n    tag_171:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":7220:7240  pool.aprs[len-1].apr */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":7205:7215  multiplier */\n      dup6\n        /* \"Stack.sol\":7205:7219  multiplier.mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":7205:7241  multiplier.mul(pool.aprs[len-1].apr) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"Stack.sol\":7205:7245  multiplier.mul(pool.aprs[len-1].apr).mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":7205:7258  multiplier.mul(pool.aprs[len-1].apr).mul(user.amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"Stack.sol\":7196:7258  reward = multiplier.mul(pool.aprs[len-1].apr).mul(user.amount) */\n      swap6\n      pop\n        /* \"Stack.sol\":7282:7319  reward.div(DENOMINATOR_TEST).div(100) */\n      tag_175\n        /* \"Stack.sol\":7315:7318  100 */\n      0x64\n        /* \"Stack.sol\":7282:7310  reward.div(DENOMINATOR_TEST) */\n      tag_176\n        /* \"Stack.sol\":715:724  5 minutes */\n      0x012c\n        /* \"Stack.sol\":7282:7288  reward */\n      dup10\n        /* \"Stack.sol\":7282:7292  reward.div */\n      tag_177\n      swap1\n        /* \"Stack.sol\":7282:7310  reward.div(DENOMINATOR_TEST) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_176:\n        /* \"Stack.sol\":7282:7314  reward.div(DENOMINATOR_TEST).div */\n      tag_177\n      swap1\n        /* \"Stack.sol\":7282:7319  reward.div(DENOMINATOR_TEST).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_175:\n        /* \"Stack.sol\":7273:7319  reward = reward.div(DENOMINATOR_TEST).div(100) */\n      swap6\n      pop\n        /* \"Stack.sol\":7334:7347  return reward */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_157)\n        /* \"Stack.sol\":7057:7359  if (pool.aprs[len-1].time < user.lockStartTime){... */\n    tag_166:\n        /* \"Stack.sol\":7376:7382  uint i */\n      0x00\n        /* \"Stack.sol\":7385:7389  user */\n      dup5\n        /* \"Stack.sol\":7385:7396  user.offset */\n      0x01\n      add\n      sload\n        /* \"Stack.sol\":7376:7396  uint i = user.offset */\n      swap1\n      pop\n        /* \"Stack.sol\":7371:7942  for (uint i = user.offset;i< len-1;i++){... */\n    tag_178:\n        /* \"Stack.sol\":7404:7405  1 */\n      0x01\n        /* \"Stack.sol\":7400:7403  len */\n      dup5\n        /* \"Stack.sol\":7400:7405  len-1 */\n      tag_181\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_181:\n        /* \"Stack.sol\":7397:7398  i */\n      dup2\n        /* \"Stack.sol\":7397:7405  i< len-1 */\n      lt\n        /* \"Stack.sol\":7371:7942  for (uint i = user.offset;i< len-1;i++){... */\n      iszero\n      tag_179\n      jumpi\n        /* \"Stack.sol\":7432:7436  flag */\n      dup2\n        /* \"Stack.sol\":7427:7674  if (!flag){... */\n      tag_182\n      jumpi\n        /* \"Stack.sol\":7469:7523  getMultiplier(user.lockStartTime, pool.aprs[i+1].time) */\n      tag_183\n        /* \"Stack.sol\":7483:7487  user */\n      dup6\n        /* \"Stack.sol\":7483:7501  user.lockStartTime */\n      0x02\n      add\n      sload\n        /* \"Stack.sol\":7503:7507  pool */\n      dup8\n        /* \"Stack.sol\":7503:7512  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":7515:7516  1 */\n      0x01\n        /* \"Stack.sol\":7513:7514  i */\n      dup5\n        /* \"Stack.sol\":7513:7516  i+1 */\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"Stack.sol\":7503:7517  pool.aprs[i+1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_186\n      jumpi\n      tag_187\n      tag_113\n      jump\t// in\n    tag_187:\n    tag_186:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":7503:7522  pool.aprs[i+1].time */\n      0x01\n      add\n      sload\n        /* \"Stack.sol\":7469:7482  getMultiplier */\n      tag_73\n        /* \"Stack.sol\":7469:7523  getMultiplier(user.lockStartTime, pool.aprs[i+1].time) */\n      jump\t// in\n    tag_183:\n        /* \"Stack.sol\":7456:7523  multiplier = getMultiplier(user.lockStartTime, pool.aprs[i+1].time) */\n      swap3\n      pop\n        /* \"Stack.sol\":7551:7600  multiplier.mul(pool.aprs[i].apr).mul(user.amount) */\n      tag_189\n        /* \"Stack.sol\":7588:7592  user */\n      dup6\n        /* \"Stack.sol\":7588:7599  user.amount */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":7551:7583  multiplier.mul(pool.aprs[i].apr) */\n      tag_190\n        /* \"Stack.sol\":7566:7570  pool */\n      dup9\n        /* \"Stack.sol\":7566:7575  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":7576:7577  i */\n      dup5\n        /* \"Stack.sol\":7566:7578  pool.aprs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_191\n      jumpi\n      tag_192\n      tag_113\n      jump\t// in\n    tag_192:\n    tag_191:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":7566:7582  pool.aprs[i].apr */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":7551:7561  multiplier */\n      dup7\n        /* \"Stack.sol\":7551:7565  multiplier.mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":7551:7583  multiplier.mul(pool.aprs[i].apr) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"Stack.sol\":7551:7587  multiplier.mul(pool.aprs[i].apr).mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":7551:7600  multiplier.mul(pool.aprs[i].apr).mul(user.amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"Stack.sol\":7542:7600  reward = multiplier.mul(pool.aprs[i].apr).mul(user.amount) */\n      swap7\n      pop\n        /* \"Stack.sol\":7626:7630  true */\n      0x01\n        /* \"Stack.sol\":7619:7630  flag = true */\n      swap2\n      pop\n        /* \"Stack.sol\":7649:7657  continue */\n      jump(tag_180)\n        /* \"Stack.sol\":7427:7674  if (!flag){... */\n    tag_182:\n        /* \"Stack.sol\":7690:7708  uint256 tempNumber */\n      0x00\n        /* \"Stack.sol\":7711:7764  getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time) */\n      tag_194\n        /* \"Stack.sol\":7725:7729  pool */\n      dup8\n        /* \"Stack.sol\":7725:7734  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":7735:7736  i */\n      dup4\n        /* \"Stack.sol\":7725:7737  pool.aprs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_195\n      jumpi\n      tag_196\n      tag_113\n      jump\t// in\n    tag_196:\n    tag_195:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":7725:7742  pool.aprs[i].time */\n      0x01\n      add\n      sload\n        /* \"Stack.sol\":7744:7748  pool */\n      dup9\n        /* \"Stack.sol\":7744:7753  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":7756:7757  1 */\n      0x01\n        /* \"Stack.sol\":7754:7755  i */\n      dup6\n        /* \"Stack.sol\":7754:7757  i+1 */\n      tag_198\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_198:\n        /* \"Stack.sol\":7744:7758  pool.aprs[i+1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_199\n      jumpi\n      tag_200\n      tag_113\n      jump\t// in\n    tag_200:\n    tag_199:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":7744:7763  pool.aprs[i+1].time */\n      0x01\n      add\n      sload\n        /* \"Stack.sol\":7711:7724  getMultiplier */\n      tag_73\n        /* \"Stack.sol\":7711:7764  getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time) */\n      jump\t// in\n    tag_194:\n        /* \"Stack.sol\":7690:7764  uint256 tempNumber = getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time) */\n      swap1\n      pop\n        /* \"Stack.sol\":7789:7850  reward.add(tempNumber.mul(pool.aprs[i].apr).mul(user.amount)) */\n      tag_202\n        /* \"Stack.sol\":7800:7849  tempNumber.mul(pool.aprs[i].apr).mul(user.amount) */\n      tag_203\n        /* \"Stack.sol\":7837:7841  user */\n      dup8\n        /* \"Stack.sol\":7837:7848  user.amount */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":7800:7832  tempNumber.mul(pool.aprs[i].apr) */\n      tag_204\n        /* \"Stack.sol\":7815:7819  pool */\n      dup11\n        /* \"Stack.sol\":7815:7824  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":7825:7826  i */\n      dup7\n        /* \"Stack.sol\":7815:7827  pool.aprs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_205\n      jumpi\n      tag_206\n      tag_113\n      jump\t// in\n    tag_206:\n    tag_205:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":7815:7831  pool.aprs[i].apr */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":7800:7810  tempNumber */\n      dup6\n        /* \"Stack.sol\":7800:7814  tempNumber.mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":7800:7832  tempNumber.mul(pool.aprs[i].apr) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"Stack.sol\":7800:7836  tempNumber.mul(pool.aprs[i].apr).mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":7800:7849  tempNumber.mul(pool.aprs[i].apr).mul(user.amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_203:\n        /* \"Stack.sol\":7789:7795  reward */\n      dup10\n        /* \"Stack.sol\":7789:7799  reward.add */\n      tag_136\n      swap1\n        /* \"Stack.sol\":7789:7850  reward.add(tempNumber.mul(pool.aprs[i].apr).mul(user.amount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_202:\n        /* \"Stack.sol\":7781:7850  reward =reward.add(tempNumber.mul(pool.aprs[i].apr).mul(user.amount)) */\n      swap8\n      pop\n        /* \"Stack.sol\":7880:7906  multiplier.add(tempNumber) */\n      tag_208\n        /* \"Stack.sol\":7895:7905  tempNumber */\n      dup2\n        /* \"Stack.sol\":7880:7890  multiplier */\n      dup6\n        /* \"Stack.sol\":7880:7894  multiplier.add */\n      tag_136\n      swap1\n        /* \"Stack.sol\":7880:7906  multiplier.add(tempNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"Stack.sol\":7867:7906  multiplier = multiplier.add(tempNumber) */\n      swap4\n      pop\n        /* \"Stack.sol\":7410:7942  {... */\n      pop\n        /* \"Stack.sol\":7371:7942  for (uint i = user.offset;i< len-1;i++){... */\n    tag_180:\n        /* \"Stack.sol\":7406:7409  i++ */\n      dup1\n      dup1\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      swap2\n      pop\n      pop\n        /* \"Stack.sol\":7371:7942  for (uint i = user.offset;i< len-1;i++){... */\n      jump(tag_178)\n    tag_179:\n      pop\n        /* \"Stack.sol\":7967:8017  getMultiplier(pool.aprs[len-1].time, block.number) */\n      tag_211\n        /* \"Stack.sol\":7981:7985  pool */\n      dup6\n        /* \"Stack.sol\":7981:7990  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":7995:7996  1 */\n      0x01\n        /* \"Stack.sol\":7991:7994  len */\n      dup6\n        /* \"Stack.sol\":7991:7996  len-1 */\n      tag_212\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_212:\n        /* \"Stack.sol\":7981:7997  pool.aprs[len-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_213\n      jumpi\n      tag_214\n      tag_113\n      jump\t// in\n    tag_214:\n    tag_213:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":7981:8002  pool.aprs[len-1].time */\n      0x01\n      add\n      sload\n        /* \"Stack.sol\":8004:8016  block.number */\n      number\n        /* \"Stack.sol\":7967:7980  getMultiplier */\n      tag_73\n        /* \"Stack.sol\":7967:8017  getMultiplier(pool.aprs[len-1].time, block.number) */\n      jump\t// in\n    tag_211:\n        /* \"Stack.sol\":7954:8017  multiplier = getMultiplier(pool.aprs[len-1].time, block.number) */\n      swap2\n      pop\n        /* \"Stack.sol\":8036:8101  reward.add(multiplier.mul(pool.aprs[len-1].apr).mul(user.amount)) */\n      tag_216\n        /* \"Stack.sol\":8047:8100  multiplier.mul(pool.aprs[len-1].apr).mul(user.amount) */\n      tag_217\n        /* \"Stack.sol\":8088:8092  user */\n      dup6\n        /* \"Stack.sol\":8088:8099  user.amount */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":8047:8083  multiplier.mul(pool.aprs[len-1].apr) */\n      tag_218\n        /* \"Stack.sol\":8062:8066  pool */\n      dup9\n        /* \"Stack.sol\":8062:8071  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":8076:8077  1 */\n      0x01\n        /* \"Stack.sol\":8072:8075  len */\n      dup9\n        /* \"Stack.sol\":8072:8077  len-1 */\n      tag_219\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_219:\n        /* \"Stack.sol\":8062:8078  pool.aprs[len-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_220\n      jumpi\n      tag_221\n      tag_113\n      jump\t// in\n    tag_221:\n    tag_220:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":8062:8082  pool.aprs[len-1].apr */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":8047:8057  multiplier */\n      dup7\n        /* \"Stack.sol\":8047:8061  multiplier.mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":8047:8083  multiplier.mul(pool.aprs[len-1].apr) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"Stack.sol\":8047:8087  multiplier.mul(pool.aprs[len-1].apr).mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":8047:8100  multiplier.mul(pool.aprs[len-1].apr).mul(user.amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"Stack.sol\":8036:8042  reward */\n      dup8\n        /* \"Stack.sol\":8036:8046  reward.add */\n      tag_136\n      swap1\n        /* \"Stack.sol\":8036:8101  reward.add(multiplier.mul(pool.aprs[len-1].apr).mul(user.amount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_216:\n        /* \"Stack.sol\":8028:8101  reward =reward.add(multiplier.mul(pool.aprs[len-1].apr).mul(user.amount)) */\n      swap6\n      pop\n        /* \"Stack.sol\":8114:8127  return reward */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Stack.sol\":6759:8137  function pendingReward(uint256 _pid, address _user) external view returns (uint256 reward) {... */\n    tag_157:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Stack.sol\":8147:9933  function calculateReward(uint256 _pid, address _user) public view returns (uint256 reward) {... */\n    tag_90:\n        /* \"Stack.sol\":8222:8236  uint256 reward */\n      0x00\n        /* \"Stack.sol\":8249:8270  PoolInfo storage pool */\n      dup1\n        /* \"Stack.sol\":8273:8282  poolInfos */\n      0x01\n        /* \"Stack.sol\":8283:8287  _pid */\n      dup5\n        /* \"Stack.sol\":8273:8288  poolInfos[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_224\n      jumpi\n      tag_225\n      tag_113\n      jump\t// in\n    tag_225:\n    tag_224:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":8249:8288  PoolInfo storage pool = poolInfos[_pid] */\n      swap1\n      pop\n        /* \"Stack.sol\":8299:8320  UserInfo storage user */\n      0x00\n        /* \"Stack.sol\":8323:8331  userInfo */\n      0x02\n        /* \"Stack.sol\":8323:8337  userInfo[_pid] */\n      0x00\n        /* \"Stack.sol\":8332:8336  _pid */\n      dup7\n        /* \"Stack.sol\":8323:8337  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Stack.sol\":8323:8344  userInfo[_pid][_user] */\n      0x00\n        /* \"Stack.sol\":8338:8343  _user */\n      dup6\n        /* \"Stack.sol\":8323:8344  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Stack.sol\":8299:8344  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"Stack.sol\":8355:8366  uint256 len */\n      0x00\n        /* \"Stack.sol\":8369:8373  pool */\n      dup3\n        /* \"Stack.sol\":8369:8378  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":8369:8385  pool.aprs.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Stack.sol\":8355:8385  uint256 len = pool.aprs.length */\n      swap1\n      pop\n        /* \"Stack.sol\":8396:8414  uint256 multiplier */\n      0x00\n        /* \"Stack.sol\":8425:8434  bool flag */\n      dup1\n        /* \"Stack.sol\":8492:8496  user */\n      dup4\n        /* \"Stack.sol\":8492:8510  user.lockStartTime */\n      0x02\n      add\n      sload\n        /* \"Stack.sol\":8468:8472  pool */\n      dup6\n        /* \"Stack.sol\":8468:8477  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":8482:8483  1 */\n      0x01\n        /* \"Stack.sol\":8478:8481  len */\n      dup6\n        /* \"Stack.sol\":8478:8483  len-1 */\n      tag_227\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_227:\n        /* \"Stack.sol\":8468:8484  pool.aprs[len-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_228\n      jumpi\n      tag_229\n      tag_113\n      jump\t// in\n    tag_229:\n    tag_228:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":8468:8489  pool.aprs[len-1].time */\n      0x01\n      add\n      sload\n        /* \"Stack.sol\":8468:8510  pool.aprs[len-1].time < user.lockStartTime */\n      lt\n        /* \"Stack.sol\":8464:8669  if (pool.aprs[len-1].time < user.lockStartTime){... */\n      iszero\n      tag_231\n      jumpi\n        /* \"Stack.sol\":8539:8543  pool */\n      dup5\n        /* \"Stack.sol\":8539:8552  pool.duration */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":8526:8552  multiplier = pool.duration */\n      swap2\n      pop\n        /* \"Stack.sol\":8576:8629  multiplier.mul(pool.aprs[len-1].apr).mul(user.amount) */\n      tag_232\n        /* \"Stack.sol\":8617:8621  user */\n      dup5\n        /* \"Stack.sol\":8617:8628  user.amount */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":8576:8612  multiplier.mul(pool.aprs[len-1].apr) */\n      tag_233\n        /* \"Stack.sol\":8591:8595  pool */\n      dup8\n        /* \"Stack.sol\":8591:8600  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":8605:8606  1 */\n      0x01\n        /* \"Stack.sol\":8601:8604  len */\n      dup8\n        /* \"Stack.sol\":8601:8606  len-1 */\n      tag_234\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_234:\n        /* \"Stack.sol\":8591:8607  pool.aprs[len-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_235\n      jumpi\n      tag_236\n      tag_113\n      jump\t// in\n    tag_236:\n    tag_235:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":8591:8611  pool.aprs[len-1].apr */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":8576:8586  multiplier */\n      dup6\n        /* \"Stack.sol\":8576:8590  multiplier.mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":8576:8612  multiplier.mul(pool.aprs[len-1].apr) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"Stack.sol\":8576:8616  multiplier.mul(pool.aprs[len-1].apr).mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":8576:8629  multiplier.mul(pool.aprs[len-1].apr).mul(user.amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"Stack.sol\":8567:8629  reward = multiplier.mul(pool.aprs[len-1].apr).mul(user.amount) */\n      swap6\n      pop\n        /* \"Stack.sol\":8644:8657  return reward */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_223)\n        /* \"Stack.sol\":8464:8669  if (pool.aprs[len-1].time < user.lockStartTime){... */\n    tag_231:\n        /* \"Stack.sol\":8684:8690  uint i */\n      0x00\n        /* \"Stack.sol\":8693:8697  user */\n      dup5\n        /* \"Stack.sol\":8693:8704  user.offset */\n      0x01\n      add\n      sload\n        /* \"Stack.sol\":8684:8704  uint i = user.offset */\n      swap1\n      pop\n        /* \"Stack.sol\":8679:9768  for (uint i = user.offset;i< len-1;i++){... */\n    tag_238:\n        /* \"Stack.sol\":8712:8713  1 */\n      0x01\n        /* \"Stack.sol\":8708:8711  len */\n      dup5\n        /* \"Stack.sol\":8708:8713  len-1 */\n      tag_241\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_241:\n        /* \"Stack.sol\":8705:8706  i */\n      dup2\n        /* \"Stack.sol\":8705:8713  i< len-1 */\n      lt\n        /* \"Stack.sol\":8679:9768  for (uint i = user.offset;i< len-1;i++){... */\n      iszero\n      tag_239\n      jumpi\n        /* \"Stack.sol\":8740:8744  flag */\n      dup2\n        /* \"Stack.sol\":8735:9175  if (!flag){... */\n      tag_242\n      jumpi\n        /* \"Stack.sol\":8777:8831  getMultiplier(user.lockStartTime, pool.aprs[i+1].time) */\n      tag_243\n        /* \"Stack.sol\":8791:8795  user */\n      dup6\n        /* \"Stack.sol\":8791:8809  user.lockStartTime */\n      0x02\n      add\n      sload\n        /* \"Stack.sol\":8811:8815  pool */\n      dup8\n        /* \"Stack.sol\":8811:8820  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":8823:8824  1 */\n      0x01\n        /* \"Stack.sol\":8821:8822  i */\n      dup5\n        /* \"Stack.sol\":8821:8824  i+1 */\n      tag_244\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_244:\n        /* \"Stack.sol\":8811:8825  pool.aprs[i+1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_245\n      jumpi\n      tag_246\n      tag_113\n      jump\t// in\n    tag_246:\n    tag_245:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":8811:8830  pool.aprs[i+1].time */\n      0x01\n      add\n      sload\n        /* \"Stack.sol\":8777:8790  getMultiplier */\n      tag_73\n        /* \"Stack.sol\":8777:8831  getMultiplier(user.lockStartTime, pool.aprs[i+1].time) */\n      jump\t// in\n    tag_243:\n        /* \"Stack.sol\":8764:8831  multiplier = getMultiplier(user.lockStartTime, pool.aprs[i+1].time) */\n      swap3\n      pop\n        /* \"Stack.sol\":8867:8871  pool */\n      dup6\n        /* \"Stack.sol\":8867:8880  pool.duration */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":8854:8864  multiplier */\n      dup4\n        /* \"Stack.sol\":8854:8880  multiplier > pool.duration */\n      gt\n        /* \"Stack.sol\":8850:9025  if (multiplier > pool.duration){... */\n      iszero\n      tag_248\n      jumpi\n        /* \"Stack.sol\":8913:8965  pool.duration.mul(pool.aprs[i].apr).mul(user.amount) */\n      tag_249\n        /* \"Stack.sol\":8953:8957  user */\n      dup6\n        /* \"Stack.sol\":8953:8964  user.amount */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":8913:8948  pool.duration.mul(pool.aprs[i].apr) */\n      tag_250\n        /* \"Stack.sol\":8931:8935  pool */\n      dup9\n        /* \"Stack.sol\":8931:8940  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":8941:8942  i */\n      dup5\n        /* \"Stack.sol\":8931:8943  pool.aprs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_251\n      jumpi\n      tag_252\n      tag_113\n      jump\t// in\n    tag_252:\n    tag_251:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":8931:8947  pool.aprs[i].apr */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":8913:8917  pool */\n      dup10\n        /* \"Stack.sol\":8913:8926  pool.duration */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":8913:8930  pool.duration.mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":8913:8948  pool.duration.mul(pool.aprs[i].apr) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_250:\n        /* \"Stack.sol\":8913:8952  pool.duration.mul(pool.aprs[i].apr).mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":8913:8965  pool.duration.mul(pool.aprs[i].apr).mul(user.amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_249:\n        /* \"Stack.sol\":8904:8965  reward = pool.duration.mul(pool.aprs[i].apr).mul(user.amount) */\n      swap7\n      pop\n        /* \"Stack.sol\":8988:9001  return reward */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_223)\n        /* \"Stack.sol\":8850:9025  if (multiplier > pool.duration){... */\n    tag_248:\n        /* \"Stack.sol\":9052:9101  multiplier.mul(pool.aprs[i].apr).mul(user.amount) */\n      tag_254\n        /* \"Stack.sol\":9089:9093  user */\n      dup6\n        /* \"Stack.sol\":9089:9100  user.amount */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":9052:9084  multiplier.mul(pool.aprs[i].apr) */\n      tag_255\n        /* \"Stack.sol\":9067:9071  pool */\n      dup9\n        /* \"Stack.sol\":9067:9076  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":9077:9078  i */\n      dup5\n        /* \"Stack.sol\":9067:9079  pool.aprs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_256\n      jumpi\n      tag_257\n      tag_113\n      jump\t// in\n    tag_257:\n    tag_256:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":9067:9083  pool.aprs[i].apr */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":9052:9062  multiplier */\n      dup7\n        /* \"Stack.sol\":9052:9066  multiplier.mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":9052:9084  multiplier.mul(pool.aprs[i].apr) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"Stack.sol\":9052:9088  multiplier.mul(pool.aprs[i].apr).mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":9052:9101  multiplier.mul(pool.aprs[i].apr).mul(user.amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_254:\n        /* \"Stack.sol\":9043:9101  reward = multiplier.mul(pool.aprs[i].apr).mul(user.amount) */\n      swap7\n      pop\n        /* \"Stack.sol\":9127:9131  true */\n      0x01\n        /* \"Stack.sol\":9120:9131  flag = true */\n      swap2\n      pop\n        /* \"Stack.sol\":9150:9158  continue */\n      jump(tag_240)\n        /* \"Stack.sol\":8735:9175  if (!flag){... */\n    tag_242:\n        /* \"Stack.sol\":9191:9209  uint256 tempNumber */\n      0x00\n        /* \"Stack.sol\":9212:9265  getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time) */\n      tag_259\n        /* \"Stack.sol\":9226:9230  pool */\n      dup8\n        /* \"Stack.sol\":9226:9235  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":9236:9237  i */\n      dup4\n        /* \"Stack.sol\":9226:9238  pool.aprs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_260\n      jumpi\n      tag_261\n      tag_113\n      jump\t// in\n    tag_261:\n    tag_260:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":9226:9243  pool.aprs[i].time */\n      0x01\n      add\n      sload\n        /* \"Stack.sol\":9245:9249  pool */\n      dup9\n        /* \"Stack.sol\":9245:9254  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":9257:9258  1 */\n      0x01\n        /* \"Stack.sol\":9255:9256  i */\n      dup6\n        /* \"Stack.sol\":9255:9258  i+1 */\n      tag_263\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_263:\n        /* \"Stack.sol\":9245:9259  pool.aprs[i+1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_264\n      jumpi\n      tag_265\n      tag_113\n      jump\t// in\n    tag_265:\n    tag_264:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":9245:9264  pool.aprs[i+1].time */\n      0x01\n      add\n      sload\n        /* \"Stack.sol\":9212:9225  getMultiplier */\n      tag_73\n        /* \"Stack.sol\":9212:9265  getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time) */\n      jump\t// in\n    tag_259:\n        /* \"Stack.sol\":9191:9265  uint256 tempNumber = getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time) */\n      swap1\n      pop\n        /* \"Stack.sol\":9315:9319  pool */\n      dup7\n        /* \"Stack.sol\":9315:9328  pool.duration */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":9286:9312  tempNumber.add(multiplier) */\n      tag_267\n        /* \"Stack.sol\":9301:9311  multiplier */\n      dup6\n        /* \"Stack.sol\":9286:9296  tempNumber */\n      dup4\n        /* \"Stack.sol\":9286:9300  tempNumber.add */\n      tag_136\n      swap1\n        /* \"Stack.sol\":9286:9312  tempNumber.add(multiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_267:\n        /* \"Stack.sol\":9286:9328  tempNumber.add(multiplier) > pool.duration */\n      gt\n        /* \"Stack.sol\":9282:9489  if (tempNumber.add(multiplier) > pool.duration){... */\n      iszero\n      tag_268\n      jumpi\n        /* \"Stack.sol\":9357:9437  reward.add(pool.duration.sub(multiplier).mul(pool.aprs[i].apr).mul(user.amount)) */\n      tag_269\n        /* \"Stack.sol\":9368:9436  pool.duration.sub(multiplier).mul(pool.aprs[i].apr).mul(user.amount) */\n      tag_270\n        /* \"Stack.sol\":9424:9428  user */\n      dup8\n        /* \"Stack.sol\":9424:9435  user.amount */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":9368:9419  pool.duration.sub(multiplier).mul(pool.aprs[i].apr) */\n      tag_271\n        /* \"Stack.sol\":9402:9406  pool */\n      dup11\n        /* \"Stack.sol\":9402:9411  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":9412:9413  i */\n      dup7\n        /* \"Stack.sol\":9402:9414  pool.aprs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_272\n      jumpi\n      tag_273\n      tag_113\n      jump\t// in\n    tag_273:\n    tag_272:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":9402:9418  pool.aprs[i].apr */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":9368:9397  pool.duration.sub(multiplier) */\n      tag_275\n        /* \"Stack.sol\":9386:9396  multiplier */\n      dup10\n        /* \"Stack.sol\":9368:9372  pool */\n      dup14\n        /* \"Stack.sol\":9368:9381  pool.duration */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":9368:9385  pool.duration.sub */\n      tag_156\n      swap1\n        /* \"Stack.sol\":9368:9397  pool.duration.sub(multiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_275:\n        /* \"Stack.sol\":9368:9401  pool.duration.sub(multiplier).mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":9368:9419  pool.duration.sub(multiplier).mul(pool.aprs[i].apr) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_271:\n        /* \"Stack.sol\":9368:9423  pool.duration.sub(multiplier).mul(pool.aprs[i].apr).mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":9368:9436  pool.duration.sub(multiplier).mul(pool.aprs[i].apr).mul(user.amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_270:\n        /* \"Stack.sol\":9357:9363  reward */\n      dup10\n        /* \"Stack.sol\":9357:9367  reward.add */\n      tag_136\n      swap1\n        /* \"Stack.sol\":9357:9437  reward.add(pool.duration.sub(multiplier).mul(pool.aprs[i].apr).mul(user.amount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"Stack.sol\":9348:9437  reward = reward.add(pool.duration.sub(multiplier).mul(pool.aprs[i].apr).mul(user.amount)) */\n      swap8\n      pop\n        /* \"Stack.sol\":9456:9469  return reward */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_223)\n        /* \"Stack.sol\":9282:9489  if (tempNumber.add(multiplier) > pool.duration){... */\n    tag_268:\n        /* \"Stack.sol\":9629:9690  reward.add(tempNumber.mul(pool.aprs[i].apr).mul(user.amount)) */\n      tag_276\n        /* \"Stack.sol\":9640:9689  tempNumber.mul(pool.aprs[i].apr).mul(user.amount) */\n      tag_277\n        /* \"Stack.sol\":9677:9681  user */\n      dup8\n        /* \"Stack.sol\":9677:9688  user.amount */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":9640:9672  tempNumber.mul(pool.aprs[i].apr) */\n      tag_278\n        /* \"Stack.sol\":9655:9659  pool */\n      dup11\n        /* \"Stack.sol\":9655:9664  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":9665:9666  i */\n      dup7\n        /* \"Stack.sol\":9655:9667  pool.aprs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_279\n      jumpi\n      tag_280\n      tag_113\n      jump\t// in\n    tag_280:\n    tag_279:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":9655:9671  pool.aprs[i].apr */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":9640:9650  tempNumber */\n      dup6\n        /* \"Stack.sol\":9640:9654  tempNumber.mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":9640:9672  tempNumber.mul(pool.aprs[i].apr) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_278:\n        /* \"Stack.sol\":9640:9676  tempNumber.mul(pool.aprs[i].apr).mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":9640:9689  tempNumber.mul(pool.aprs[i].apr).mul(user.amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_277:\n        /* \"Stack.sol\":9629:9635  reward */\n      dup10\n        /* \"Stack.sol\":9629:9639  reward.add */\n      tag_136\n      swap1\n        /* \"Stack.sol\":9629:9690  reward.add(tempNumber.mul(pool.aprs[i].apr).mul(user.amount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_276:\n        /* \"Stack.sol\":9621:9690  reward =reward.add(tempNumber.mul(pool.aprs[i].apr).mul(user.amount)) */\n      swap8\n      pop\n        /* \"Stack.sol\":9720:9746  multiplier.add(tempNumber) */\n      tag_282\n        /* \"Stack.sol\":9735:9745  tempNumber */\n      dup2\n        /* \"Stack.sol\":9720:9730  multiplier */\n      dup6\n        /* \"Stack.sol\":9720:9734  multiplier.add */\n      tag_136\n      swap1\n        /* \"Stack.sol\":9720:9746  multiplier.add(tempNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_282:\n        /* \"Stack.sol\":9707:9746  multiplier = multiplier.add(tempNumber) */\n      swap4\n      pop\n        /* \"Stack.sol\":8718:9768  {... */\n      pop\n        /* \"Stack.sol\":8679:9768  for (uint i = user.offset;i< len-1;i++){... */\n    tag_240:\n        /* \"Stack.sol\":8714:8717  i++ */\n      dup1\n      dup1\n      tag_283\n      swap1\n      tag_210\n      jump\t// in\n    tag_283:\n      swap2\n      pop\n      pop\n        /* \"Stack.sol\":8679:9768  for (uint i = user.offset;i< len-1;i++){... */\n      jump(tag_238)\n    tag_239:\n      pop\n        /* \"Stack.sol\":9793:9877  reward.add(pool.duration.sub(multiplier).mul(pool.aprs[len-1].apr).mul(user.amount)) */\n      tag_284\n        /* \"Stack.sol\":9804:9876  pool.duration.sub(multiplier).mul(pool.aprs[len-1].apr).mul(user.amount) */\n      tag_285\n        /* \"Stack.sol\":9864:9868  user */\n      dup6\n        /* \"Stack.sol\":9864:9875  user.amount */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":9804:9859  pool.duration.sub(multiplier).mul(pool.aprs[len-1].apr) */\n      tag_286\n        /* \"Stack.sol\":9838:9842  pool */\n      dup9\n        /* \"Stack.sol\":9838:9847  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":9852:9853  1 */\n      0x01\n        /* \"Stack.sol\":9848:9851  len */\n      dup9\n        /* \"Stack.sol\":9848:9853  len-1 */\n      tag_287\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_287:\n        /* \"Stack.sol\":9838:9854  pool.aprs[len-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_288\n      jumpi\n      tag_289\n      tag_113\n      jump\t// in\n    tag_289:\n    tag_288:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":9838:9858  pool.aprs[len-1].apr */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":9804:9833  pool.duration.sub(multiplier) */\n      tag_291\n        /* \"Stack.sol\":9822:9832  multiplier */\n      dup8\n        /* \"Stack.sol\":9804:9808  pool */\n      dup12\n        /* \"Stack.sol\":9804:9817  pool.duration */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":9804:9821  pool.duration.sub */\n      tag_156\n      swap1\n        /* \"Stack.sol\":9804:9833  pool.duration.sub(multiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_291:\n        /* \"Stack.sol\":9804:9837  pool.duration.sub(multiplier).mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":9804:9859  pool.duration.sub(multiplier).mul(pool.aprs[len-1].apr) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_286:\n        /* \"Stack.sol\":9804:9863  pool.duration.sub(multiplier).mul(pool.aprs[len-1].apr).mul */\n      tag_174\n      swap1\n        /* \"Stack.sol\":9804:9876  pool.duration.sub(multiplier).mul(pool.aprs[len-1].apr).mul(user.amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_285:\n        /* \"Stack.sol\":9793:9799  reward */\n      dup8\n        /* \"Stack.sol\":9793:9803  reward.add */\n      tag_136\n      swap1\n        /* \"Stack.sol\":9793:9877  reward.add(pool.duration.sub(multiplier).mul(pool.aprs[len-1].apr).mul(user.amount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_284:\n        /* \"Stack.sol\":9784:9877  reward = reward.add(pool.duration.sub(multiplier).mul(pool.aprs[len-1].apr).mul(user.amount)) */\n      swap6\n      pop\n        /* \"Stack.sol\":9892:9905  return reward */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Stack.sol\":8147:9933  function calculateReward(uint256 _pid, address _user) public view returns (uint256 reward) {... */\n    tag_223:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Stack.sol\":10023:11870  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_94:\n        /* \"Stack.sol\":10089:10110  PoolInfo storage pool */\n      0x00\n        /* \"Stack.sol\":10113:10122  poolInfos */\n      0x01\n        /* \"Stack.sol\":10123:10127  _pid */\n      dup4\n        /* \"Stack.sol\":10113:10128  poolInfos[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_293\n      jumpi\n      tag_294\n      tag_113\n      jump\t// in\n    tag_294:\n    tag_293:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Stack.sol\":10089:10128  PoolInfo storage pool = poolInfos[_pid] */\n      swap1\n      pop\n        /* \"Stack.sol\":10139:10160  UserInfo storage user */\n      0x00\n        /* \"Stack.sol\":10163:10171  userInfo */\n      0x02\n        /* \"Stack.sol\":10163:10177  userInfo[_pid] */\n      0x00\n        /* \"Stack.sol\":10172:10176  _pid */\n      dup6\n        /* \"Stack.sol\":10163:10177  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Stack.sol\":10163:10189  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"Stack.sol\":10178:10188  msg.sender */\n      caller\n        /* \"Stack.sol\":10163:10189  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Stack.sol\":10139:10189  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"Stack.sol\":10222:10223  0 */\n      0x00\n        /* \"Stack.sol\":10208:10212  user */\n      dup2\n        /* \"Stack.sol\":10208:10219  user.amount */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":10208:10223  user.amount > 0 */\n      gt\n        /* \"Stack.sol\":10204:11853  if (user.amount > 0){... */\n      iszero\n      tag_296\n      jumpi\n        /* \"Stack.sol\":10295:10310  block.timestamp */\n      timestamp\n        /* \"Stack.sol\":10256:10293  user.lockStartTime.add(pool.duration) */\n      tag_297\n        /* \"Stack.sol\":10279:10283  pool */\n      dup4\n        /* \"Stack.sol\":10279:10292  pool.duration */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":10256:10260  user */\n      dup4\n        /* \"Stack.sol\":10256:10274  user.lockStartTime */\n      0x02\n      add\n      sload\n        /* \"Stack.sol\":10256:10278  user.lockStartTime.add */\n      tag_136\n      swap1\n        /* \"Stack.sol\":10256:10293  user.lockStartTime.add(pool.duration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_297:\n        /* \"Stack.sol\":10256:10310  user.lockStartTime.add(pool.duration)> block.timestamp */\n      gt\n        /* \"Stack.sol\":10253:11431  if(user.lockStartTime.add(pool.duration)> block.timestamp){... */\n      iszero\n      tag_298\n      jumpi\n        /* \"Stack.sol\":10378:10393  uint256 pending */\n      0x00\n        /* \"Stack.sol\":10396:10428  calculateReward(_pid,msg.sender) */\n      tag_299\n        /* \"Stack.sol\":10412:10416  _pid */\n      dup6\n        /* \"Stack.sol\":10417:10427  msg.sender */\n      caller\n        /* \"Stack.sol\":10396:10411  calculateReward */\n      tag_90\n        /* \"Stack.sol\":10396:10428  calculateReward(_pid,msg.sender) */\n      jump\t// in\n    tag_299:\n        /* \"Stack.sol\":10378:10428  uint256 pending = calculateReward(_pid,msg.sender) */\n      swap1\n      pop\n        /* \"Stack.sol\":10460:10461  0 */\n      0x00\n        /* \"Stack.sol\":10450:10457  pending */\n      dup2\n        /* \"Stack.sol\":10450:10461  pending > 0 */\n      gt\n        /* \"Stack.sol\":10447:10552  if(pending > 0) {... */\n      iszero\n      tag_300\n      jumpi\n        /* \"Stack.sol\":10486:10532  IBEP20(para).safeTransfer(msg.sender, pending) */\n      tag_301\n        /* \"Stack.sol\":10512:10522  msg.sender */\n      caller\n        /* \"Stack.sol\":10524:10531  pending */\n      dup3\n        /* \"Stack.sol\":10493:10497  para */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Stack.sol\":10486:10511  IBEP20(para).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_141\n      swap1\n        /* \"Stack.sol\":10486:10532  IBEP20(para).safeTransfer(msg.sender, pending) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_301:\n        /* \"Stack.sol\":10447:10552  if(pending > 0) {... */\n    tag_300:\n        /* \"Stack.sol\":10634:10708  IBEP20(para).safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_302\n        /* \"Stack.sol\":10672:10682  msg.sender */\n      caller\n        /* \"Stack.sol\":10693:10697  this */\n      address\n        /* \"Stack.sol\":10700:10707  _amount */\n      dup7\n        /* \"Stack.sol\":10641:10645  para */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Stack.sol\":10634:10663  IBEP20(para).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_303\n      swap1\n        /* \"Stack.sol\":10634:10708  IBEP20(para).safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_302:\n        /* \"Stack.sol\":10741:10765  user.amount.add(_amount) */\n      tag_304\n        /* \"Stack.sol\":10757:10764  _amount */\n      dup5\n        /* \"Stack.sol\":10741:10745  user */\n      dup4\n        /* \"Stack.sol\":10741:10752  user.amount */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":10741:10756  user.amount.add */\n      tag_136\n      swap1\n        /* \"Stack.sol\":10741:10765  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_304:\n        /* \"Stack.sol\":10727:10731  user */\n      dup3\n        /* \"Stack.sol\":10727:10738  user.amount */\n      0x00\n      add\n        /* \"Stack.sol\":10727:10765  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Stack.sol\":10819:10834  block.timestamp */\n      timestamp\n        /* \"Stack.sol\":10798:10802  user */\n      dup3\n        /* \"Stack.sol\":10798:10816  user.lockStartTime */\n      0x02\n      add\n        /* \"Stack.sol\":10798:10834  user.lockStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Stack.sol\":10886:10887  1 */\n      0x01\n        /* \"Stack.sol\":10867:10871  pool */\n      dup4\n        /* \"Stack.sol\":10867:10876  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":10867:10883  pool.aprs.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Stack.sol\":10867:10887  pool.aprs.length - 1 */\n      tag_305\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_305:\n        /* \"Stack.sol\":10853:10857  user */\n      dup3\n        /* \"Stack.sol\":10853:10864  user.offset */\n      0x01\n      add\n        /* \"Stack.sol\":10853:10887  user.offset = pool.aprs.length - 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Stack.sol\":10933:10937  _pid */\n      dup5\n        /* \"Stack.sol\":10921:10931  msg.sender */\n      caller\n        /* \"Stack.sol\":10913:10947  Deposit(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"Stack.sol\":10939:10946  _amount */\n      dup7\n        /* \"Stack.sol\":10913:10947  Deposit(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_306\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Stack.sol\":10966:10973  return; */\n      pop\n      pop\n      pop\n      jump(tag_292)\n        /* \"Stack.sol\":10253:11431  if(user.lockStartTime.add(pool.duration)> block.timestamp){... */\n    tag_298:\n        /* \"Stack.sol\":11077:11151  IBEP20(para).safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_308\n        /* \"Stack.sol\":11115:11125  msg.sender */\n      caller\n        /* \"Stack.sol\":11136:11140  this */\n      address\n        /* \"Stack.sol\":11143:11150  _amount */\n      dup6\n        /* \"Stack.sol\":11084:11088  para */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Stack.sol\":11077:11106  IBEP20(para).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_303\n      swap1\n        /* \"Stack.sol\":11077:11151  IBEP20(para).safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_308:\n        /* \"Stack.sol\":11184:11208  user.amount.add(_amount) */\n      tag_309\n        /* \"Stack.sol\":11200:11207  _amount */\n      dup4\n        /* \"Stack.sol\":11184:11188  user */\n      dup3\n        /* \"Stack.sol\":11184:11195  user.amount */\n      0x00\n      add\n      sload\n        /* \"Stack.sol\":11184:11199  user.amount.add */\n      tag_136\n      swap1\n        /* \"Stack.sol\":11184:11208  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_309:\n        /* \"Stack.sol\":11170:11174  user */\n      dup2\n        /* \"Stack.sol\":11170:11181  user.amount */\n      0x00\n      add\n        /* \"Stack.sol\":11170:11208  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Stack.sol\":11262:11277  block.timestamp */\n      timestamp\n        /* \"Stack.sol\":11241:11245  user */\n      dup2\n        /* \"Stack.sol\":11241:11259  user.lockStartTime */\n      0x02\n      add\n        /* \"Stack.sol\":11241:11277  user.lockStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Stack.sol\":11329:11330  1 */\n      0x01\n        /* \"Stack.sol\":11310:11314  pool */\n      dup3\n        /* \"Stack.sol\":11310:11319  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":11310:11326  pool.aprs.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Stack.sol\":11310:11330  pool.aprs.length - 1 */\n      tag_310\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_310:\n        /* \"Stack.sol\":11296:11300  user */\n      dup2\n        /* \"Stack.sol\":11296:11307  user.offset */\n      0x01\n      add\n        /* \"Stack.sol\":11296:11330  user.offset = pool.aprs.length - 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Stack.sol\":11376:11380  _pid */\n      dup4\n        /* \"Stack.sol\":11364:11374  msg.sender */\n      caller\n        /* \"Stack.sol\":11356:11390  Deposit(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"Stack.sol\":11382:11389  _amount */\n      dup6\n        /* \"Stack.sol\":11356:11390  Deposit(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_311\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Stack.sol\":11409:11416  return; */\n      pop\n      pop\n      jump(tag_292)\n        /* \"Stack.sol\":10204:11853  if (user.amount > 0){... */\n    tag_296:\n        /* \"Stack.sol\":11573:11588  block.timestamp */\n      timestamp\n        /* \"Stack.sol\":11552:11556  user */\n      dup2\n        /* \"Stack.sol\":11552:11570  user.lockStartTime */\n      0x02\n      add\n        /* \"Stack.sol\":11552:11588  user.lockStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Stack.sol\":11636:11637  1 */\n      0x01\n        /* \"Stack.sol\":11617:11621  pool */\n      dup3\n        /* \"Stack.sol\":11617:11626  pool.aprs */\n      0x01\n      add\n        /* \"Stack.sol\":11617:11633  pool.aprs.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Stack.sol\":11617:11637  pool.aprs.length - 1 */\n      tag_313\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_313:\n        /* \"Stack.sol\":11603:11607  user */\n      dup2\n        /* \"Stack.sol\":11603:11614  user.offset */\n      0x01\n      add\n        /* \"Stack.sol\":11603:11637  user.offset = pool.aprs.length - 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Stack.sol\":11667:11674  _amount */\n      dup3\n        /* \"Stack.sol\":11653:11657  user */\n      dup2\n        /* \"Stack.sol\":11653:11664  user.amount */\n      0x00\n      add\n        /* \"Stack.sol\":11653:11674  user.amount = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Stack.sol\":11690:11764  IBEP20(para).safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_314\n        /* \"Stack.sol\":11728:11738  msg.sender */\n      caller\n        /* \"Stack.sol\":11749:11753  this */\n      address\n        /* \"Stack.sol\":11756:11763  _amount */\n      dup6\n        /* \"Stack.sol\":11697:11701  para */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Stack.sol\":11690:11719  IBEP20(para).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_303\n      swap1\n        /* \"Stack.sol\":11690:11764  IBEP20(para).safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_314:\n        /* \"Stack.sol\":11804:11808  _pid */\n      dup4\n        /* \"Stack.sol\":11792:11802  msg.sender */\n      caller\n        /* \"Stack.sol\":11784:11818  Deposit(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"Stack.sol\":11810:11817  _amount */\n      dup6\n        /* \"Stack.sol\":11784:11818  Deposit(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_315\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Stack.sol\":11833:11841  return ; */\n      pop\n      pop\n        /* \"Stack.sol\":10023:11870  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_292:\n      pop\n      pop\n      jump\t// out\n        /* \"Stack.sol\":672:724  uint256 public constant DENOMINATOR_TEST = 5 minutes */\n    tag_96:\n        /* \"Stack.sol\":715:724  5 minutes */\n      0x012c\n        /* \"Stack.sol\":672:724  uint256 public constant DENOMINATOR_TEST = 5 minutes */\n      dup2\n      jump\t// out\n        /* \"Stack.sol\":629:663  uint256 public constant BASE = 100 */\n    tag_99:\n        /* \"Stack.sol\":660:663  100 */\n      0x64\n        /* \"Stack.sol\":629:663  uint256 public constant BASE = 100 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_317\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap1\n      tag_321\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_319:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_322\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_324\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_325\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_326\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_327\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap1\n      tag_329\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_327:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_331\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeBEP20.sol\":771:982  function safeTransfer(... */\n    tag_141:\n        /* \"libraries/SafeBEP20.sol\":888:974  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_333\n        /* \"libraries/SafeBEP20.sol\":908:913  token */\n      dup4\n        /* \"libraries/SafeBEP20.sol\":938:961  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"libraries/SafeBEP20.sol\":963:965  to */\n      dup5\n        /* \"libraries/SafeBEP20.sol\":967:972  value */\n      dup5\n        /* \"libraries/SafeBEP20.sol\":915:973  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_334\n      swap3\n      swap2\n      swap1\n      tag_335\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"libraries/SafeBEP20.sol\":888:907  _callOptionalReturn */\n      tag_336\n        /* \"libraries/SafeBEP20.sol\":888:974  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_333:\n        /* \"libraries/SafeBEP20.sol\":771:982  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_339\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_341\n      swap2\n      swap1\n      tag_342\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_344\n      swap2\n      swap1\n      tag_345\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeBEP20.sol\":990:1238  function safeTransferFrom(... */\n    tag_303:\n        /* \"libraries/SafeBEP20.sol\":1134:1230  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_347\n        /* \"libraries/SafeBEP20.sol\":1154:1159  token */\n      dup5\n        /* \"libraries/SafeBEP20.sol\":1184:1211  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"libraries/SafeBEP20.sol\":1213:1217  from */\n      dup6\n        /* \"libraries/SafeBEP20.sol\":1219:1221  to */\n      dup6\n        /* \"libraries/SafeBEP20.sol\":1223:1228  value */\n      dup6\n        /* \"libraries/SafeBEP20.sol\":1161:1229  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_348\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_349\n      jump\t// in\n    tag_348:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"libraries/SafeBEP20.sol\":1134:1153  _callOptionalReturn */\n      tag_336\n        /* \"libraries/SafeBEP20.sol\":1134:1230  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_347:\n        /* \"libraries/SafeBEP20.sol\":990:1238  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"libraries/SafeBEP20.sol\":3282:4056  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n    tag_336:\n        /* \"libraries/SafeBEP20.sol\":3706:3729  bytes memory returndata */\n      0x00\n        /* \"libraries/SafeBEP20.sol\":3732:3801  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_352\n        /* \"libraries/SafeBEP20.sol\":3760:3764  data */\n      dup3\n        /* \"libraries/SafeBEP20.sol\":3732:3801  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"libraries/SafeBEP20.sol\":3740:3745  token */\n      dup6\n        /* \"libraries/SafeBEP20.sol\":3732:3759  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_353\n      swap1\n        /* \"libraries/SafeBEP20.sol\":3732:3801  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_352:\n        /* \"libraries/SafeBEP20.sol\":3706:3801  bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap1\n      pop\n        /* \"libraries/SafeBEP20.sol\":3836:3837  0 */\n      0x00\n        /* \"libraries/SafeBEP20.sol\":3816:3826  returndata */\n      dup2\n        /* \"libraries/SafeBEP20.sol\":3816:3833  returndata.length */\n      mload\n        /* \"libraries/SafeBEP20.sol\":3816:3837  returndata.length > 0 */\n      gt\n        /* \"libraries/SafeBEP20.sol\":3812:4049  if (returndata.length > 0) {... */\n      iszero\n      tag_354\n      jumpi\n        /* \"libraries/SafeBEP20.sol\":3971:3981  returndata */\n      dup1\n        /* \"libraries/SafeBEP20.sol\":3960:3990  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_355\n      swap2\n      swap1\n      tag_356\n      jump\t// in\n    tag_355:\n        /* \"libraries/SafeBEP20.sol\":3952:4037  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_357\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_358\n      swap1\n      tag_359\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_357:\n        /* \"libraries/SafeBEP20.sol\":3812:4049  if (returndata.length > 0) {... */\n    tag_354:\n        /* \"libraries/SafeBEP20.sol\":3352:4056  {... */\n      pop\n        /* \"libraries/SafeBEP20.sol\":3282:4056  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n    tag_353:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4006:4018  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_361\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4059:4065  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4067:4071  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4073:4074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4076:4088  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4058  functionCallWithValue */\n      tag_362\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4030:4089  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n    tag_362:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5125:5137  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5182:5187  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5178  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5187  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_364\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_365\n      swap1\n      tag_366\n      jump\t// in\n    tag_365:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_364:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5241:5253  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5255:5278  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5288  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5293  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5301:5306  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5308:5312  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5313  target.call{value: value}(data) */\n      mload(0x40)\n      tag_367\n      swap2\n      swap1\n      tag_368\n      jump\t// in\n    tag_367:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_371\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_370)\n    tag_371:\n      0x60\n      swap2\n      pop\n    tag_370:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5240:5313  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_372\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5357:5363  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5365:5372  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5374:5384  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5386:5398  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5356  verifyCallResultFromTarget */\n      tag_373\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5323:5399  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_373:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7646:7658  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7674:7681  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n      iszero\n      tag_375\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7723  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7711  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7718  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7723  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n      tag_376\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      tag_377\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7933  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7926  isContract */\n      tag_378\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      jump\t// in\n    tag_377:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_380\n      swap1\n      tag_381\n      jump\t// in\n    tag_380:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_379:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n    tag_376:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8003:8013  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7996:8013  return returndata */\n      swap1\n      pop\n      jump(tag_374)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n    tag_375:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      tag_383\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8052:8062  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8076  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8051  _revert */\n      tag_384\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_383:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_374:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_378:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8616:9156  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_384:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8795:8796  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8785  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8792  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8796  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n      iszero\n      tag_387\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9003:9013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8997:9014  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9059:9074  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9046:9056  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9042:9044  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9038:9057  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9031:9075  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n    tag_387:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9126:9138  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9119:9139  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_389\n      swap2\n      swap1\n      tag_390\n      jump\t// in\n    tag_389:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_391:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_392:\n        /* \"#utility.yul\":177:201   */\n      tag_450\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_391\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_30:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_452\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_392\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_394:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_396:\n        /* \"#utility.yul\":842:866   */\n      tag_457\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_391\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_458:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_397:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_460\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_396\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1516   */\n    tag_36:\n        /* \"#utility.yul\":1110:1116   */\n      0x00\n        /* \"#utility.yul\":1118:1124   */\n      dup1\n        /* \"#utility.yul\":1167:1169   */\n      0x40\n        /* \"#utility.yul\":1155:1164   */\n      dup4\n        /* \"#utility.yul\":1146:1153   */\n      dup6\n        /* \"#utility.yul\":1142:1165   */\n      sub\n        /* \"#utility.yul\":1138:1170   */\n      slt\n        /* \"#utility.yul\":1135:1254   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":1173:1252   */\n      tag_463\n      tag_394\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":1135:1254   */\n    tag_462:\n        /* \"#utility.yul\":1293:1294   */\n      0x00\n        /* \"#utility.yul\":1318:1371   */\n      tag_464\n        /* \"#utility.yul\":1363:1370   */\n      dup6\n        /* \"#utility.yul\":1354:1360   */\n      dup3\n        /* \"#utility.yul\":1343:1352   */\n      dup7\n        /* \"#utility.yul\":1339:1361   */\n      add\n        /* \"#utility.yul\":1318:1371   */\n      tag_397\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":1308:1371   */\n      swap3\n      pop\n        /* \"#utility.yul\":1264:1381   */\n      pop\n        /* \"#utility.yul\":1420:1422   */\n      0x20\n        /* \"#utility.yul\":1446:1499   */\n      tag_465\n        /* \"#utility.yul\":1491:1498   */\n      dup6\n        /* \"#utility.yul\":1482:1488   */\n      dup3\n        /* \"#utility.yul\":1471:1480   */\n      dup7\n        /* \"#utility.yul\":1467:1489   */\n      add\n        /* \"#utility.yul\":1446:1499   */\n      tag_397\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":1436:1499   */\n      swap2\n      pop\n        /* \"#utility.yul\":1391:1509   */\n      pop\n        /* \"#utility.yul\":1042:1516   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1522:1648   */\n    tag_398:\n        /* \"#utility.yul\":1559:1566   */\n      0x00\n        /* \"#utility.yul\":1599:1641   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1592:1597   */\n      dup3\n        /* \"#utility.yul\":1588:1642   */\n      and\n        /* \"#utility.yul\":1577:1642   */\n      swap1\n      pop\n        /* \"#utility.yul\":1522:1648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1654:1750   */\n    tag_399:\n        /* \"#utility.yul\":1691:1698   */\n      0x00\n        /* \"#utility.yul\":1720:1744   */\n      tag_468\n        /* \"#utility.yul\":1738:1743   */\n      dup3\n        /* \"#utility.yul\":1720:1744   */\n      tag_398\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":1709:1744   */\n      swap1\n      pop\n        /* \"#utility.yul\":1654:1750   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1756:1874   */\n    tag_400:\n        /* \"#utility.yul\":1815:1822   */\n      0x00\n        /* \"#utility.yul\":1844:1868   */\n      tag_470\n        /* \"#utility.yul\":1862:1867   */\n      dup3\n        /* \"#utility.yul\":1844:1868   */\n      tag_399\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":1833:1868   */\n      swap1\n      pop\n        /* \"#utility.yul\":1756:1874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2046   */\n    tag_401:\n        /* \"#utility.yul\":1975:2021   */\n      tag_472\n        /* \"#utility.yul\":2015:2020   */\n      dup2\n        /* \"#utility.yul\":1975:2021   */\n      tag_400\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":1968:1973   */\n      dup2\n        /* \"#utility.yul\":1965:2022   */\n      eq\n        /* \"#utility.yul\":1955:2040   */\n      tag_473\n      jumpi\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2033:2034   */\n      dup1\n        /* \"#utility.yul\":2026:2038   */\n      revert\n        /* \"#utility.yul\":1955:2040   */\n    tag_473:\n        /* \"#utility.yul\":1880:2046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2052:2235   */\n    tag_402:\n        /* \"#utility.yul\":2120:2125   */\n      0x00\n        /* \"#utility.yul\":2158:2164   */\n      dup2\n        /* \"#utility.yul\":2145:2165   */\n      calldataload\n        /* \"#utility.yul\":2136:2165   */\n      swap1\n      pop\n        /* \"#utility.yul\":2174:2229   */\n      tag_475\n        /* \"#utility.yul\":2223:2228   */\n      dup2\n        /* \"#utility.yul\":2174:2229   */\n      tag_401\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":2052:2235   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2241:2614   */\n    tag_40:\n        /* \"#utility.yul\":2322:2328   */\n      0x00\n        /* \"#utility.yul\":2371:2373   */\n      0x20\n        /* \"#utility.yul\":2359:2368   */\n      dup3\n        /* \"#utility.yul\":2350:2357   */\n      dup5\n        /* \"#utility.yul\":2346:2369   */\n      sub\n        /* \"#utility.yul\":2342:2374   */\n      slt\n        /* \"#utility.yul\":2339:2458   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":2377:2456   */\n      tag_478\n      tag_394\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":2339:2458   */\n    tag_477:\n        /* \"#utility.yul\":2497:2498   */\n      0x00\n        /* \"#utility.yul\":2522:2597   */\n      tag_479\n        /* \"#utility.yul\":2589:2596   */\n      dup5\n        /* \"#utility.yul\":2580:2586   */\n      dup3\n        /* \"#utility.yul\":2569:2578   */\n      dup6\n        /* \"#utility.yul\":2565:2587   */\n      add\n        /* \"#utility.yul\":2522:2597   */\n      tag_402\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":2512:2597   */\n      swap2\n      pop\n        /* \"#utility.yul\":2468:2607   */\n      pop\n        /* \"#utility.yul\":2241:2614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2620:2949   */\n    tag_44:\n        /* \"#utility.yul\":2679:2685   */\n      0x00\n        /* \"#utility.yul\":2728:2730   */\n      0x20\n        /* \"#utility.yul\":2716:2725   */\n      dup3\n        /* \"#utility.yul\":2707:2714   */\n      dup5\n        /* \"#utility.yul\":2703:2726   */\n      sub\n        /* \"#utility.yul\":2699:2731   */\n      slt\n        /* \"#utility.yul\":2696:2815   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":2734:2813   */\n      tag_482\n      tag_394\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":2696:2815   */\n    tag_481:\n        /* \"#utility.yul\":2854:2855   */\n      0x00\n        /* \"#utility.yul\":2879:2932   */\n      tag_483\n        /* \"#utility.yul\":2924:2931   */\n      dup5\n        /* \"#utility.yul\":2915:2921   */\n      dup3\n        /* \"#utility.yul\":2904:2913   */\n      dup6\n        /* \"#utility.yul\":2900:2922   */\n      add\n        /* \"#utility.yul\":2879:2932   */\n      tag_397\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":2869:2932   */\n      swap2\n      pop\n        /* \"#utility.yul\":2825:2942   */\n      pop\n        /* \"#utility.yul\":2620:2949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2955:3063   */\n    tag_403:\n        /* \"#utility.yul\":3032:3056   */\n      tag_485\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3032:3056   */\n      tag_391\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":3027:3030   */\n      dup3\n        /* \"#utility.yul\":3020:3057   */\n      mstore\n        /* \"#utility.yul\":2955:3063   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3069:3207   */\n    tag_404:\n        /* \"#utility.yul\":3160:3166   */\n      0x00\n        /* \"#utility.yul\":3194:3199   */\n      dup2\n        /* \"#utility.yul\":3188:3200   */\n      mload\n        /* \"#utility.yul\":3178:3200   */\n      swap1\n      pop\n        /* \"#utility.yul\":3069:3207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3411   */\n    tag_405:\n        /* \"#utility.yul\":3326:3337   */\n      0x00\n        /* \"#utility.yul\":3360:3366   */\n      dup3\n        /* \"#utility.yul\":3355:3358   */\n      dup3\n        /* \"#utility.yul\":3348:3367   */\n      mstore\n        /* \"#utility.yul\":3400:3404   */\n      0x20\n        /* \"#utility.yul\":3395:3398   */\n      dup3\n        /* \"#utility.yul\":3391:3405   */\n      add\n        /* \"#utility.yul\":3376:3405   */\n      swap1\n      pop\n        /* \"#utility.yul\":3213:3411   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3417:3573   */\n    tag_406:\n        /* \"#utility.yul\":3508:3512   */\n      0x00\n        /* \"#utility.yul\":3531:3534   */\n      dup2\n        /* \"#utility.yul\":3523:3534   */\n      swap1\n      pop\n        /* \"#utility.yul\":3561:3565   */\n      0x20\n        /* \"#utility.yul\":3556:3559   */\n      dup3\n        /* \"#utility.yul\":3552:3566   */\n      add\n        /* \"#utility.yul\":3544:3566   */\n      swap1\n      pop\n        /* \"#utility.yul\":3417:3573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3637:4131   */\n    tag_407:\n        /* \"#utility.yul\":3772:3776   */\n      0x40\n        /* \"#utility.yul\":3767:3770   */\n      dup3\n        /* \"#utility.yul\":3763:3777   */\n      add\n        /* \"#utility.yul\":3858:3862   */\n      0x00\n        /* \"#utility.yul\":3851:3856   */\n      dup3\n        /* \"#utility.yul\":3847:3863   */\n      add\n        /* \"#utility.yul\":3841:3864   */\n      mload\n        /* \"#utility.yul\":3877:3940   */\n      tag_490\n        /* \"#utility.yul\":3934:3938   */\n      0x00\n        /* \"#utility.yul\":3929:3932   */\n      dup6\n        /* \"#utility.yul\":3925:3939   */\n      add\n        /* \"#utility.yul\":3911:3923   */\n      dup3\n        /* \"#utility.yul\":3877:3940   */\n      tag_403\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":3787:3950   */\n      pop\n        /* \"#utility.yul\":4032:4036   */\n      0x20\n        /* \"#utility.yul\":4025:4030   */\n      dup3\n        /* \"#utility.yul\":4021:4037   */\n      add\n        /* \"#utility.yul\":4015:4038   */\n      mload\n        /* \"#utility.yul\":4051:4114   */\n      tag_491\n        /* \"#utility.yul\":4108:4112   */\n      0x20\n        /* \"#utility.yul\":4103:4106   */\n      dup6\n        /* \"#utility.yul\":4099:4113   */\n      add\n        /* \"#utility.yul\":4085:4097   */\n      dup3\n        /* \"#utility.yul\":4051:4114   */\n      tag_403\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":3960:4124   */\n      pop\n        /* \"#utility.yul\":3741:4131   */\n      pop\n        /* \"#utility.yul\":3637:4131   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4412   */\n    tag_408:\n        /* \"#utility.yul\":4254:4264   */\n      0x00\n        /* \"#utility.yul\":4275:4369   */\n      tag_493\n        /* \"#utility.yul\":4365:4368   */\n      dup4\n        /* \"#utility.yul\":4357:4363   */\n      dup4\n        /* \"#utility.yul\":4275:4369   */\n      tag_407\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":4401:4405   */\n      0x40\n        /* \"#utility.yul\":4396:4399   */\n      dup4\n        /* \"#utility.yul\":4392:4406   */\n      add\n        /* \"#utility.yul\":4378:4406   */\n      swap1\n      pop\n        /* \"#utility.yul\":4137:4412   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4418:4555   */\n    tag_409:\n        /* \"#utility.yul\":4512:4516   */\n      0x00\n        /* \"#utility.yul\":4544:4548   */\n      0x20\n        /* \"#utility.yul\":4539:4542   */\n      dup3\n        /* \"#utility.yul\":4535:4549   */\n      add\n        /* \"#utility.yul\":4527:4549   */\n      swap1\n      pop\n        /* \"#utility.yul\":4418:4555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4623:5527   */\n    tag_410:\n        /* \"#utility.yul\":4780:4783   */\n      0x00\n        /* \"#utility.yul\":4809:4887   */\n      tag_496\n        /* \"#utility.yul\":4881:4886   */\n      dup3\n        /* \"#utility.yul\":4809:4887   */\n      tag_404\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":4903:5003   */\n      tag_497\n        /* \"#utility.yul\":4996:5002   */\n      dup2\n        /* \"#utility.yul\":4991:4994   */\n      dup6\n        /* \"#utility.yul\":4903:5003   */\n      tag_405\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":4896:5003   */\n      swap4\n      pop\n        /* \"#utility.yul\":5027:5107   */\n      tag_498\n        /* \"#utility.yul\":5101:5106   */\n      dup4\n        /* \"#utility.yul\":5027:5107   */\n      tag_406\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":5130:5137   */\n      dup1\n        /* \"#utility.yul\":5161:5162   */\n      0x00\n        /* \"#utility.yul\":5146:5502   */\n    tag_499:\n        /* \"#utility.yul\":5171:5177   */\n      dup4\n        /* \"#utility.yul\":5168:5169   */\n      dup2\n        /* \"#utility.yul\":5165:5178   */\n      lt\n        /* \"#utility.yul\":5146:5502   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":5247:5253   */\n      dup2\n        /* \"#utility.yul\":5241:5254   */\n      mload\n        /* \"#utility.yul\":5274:5385   */\n      tag_502\n        /* \"#utility.yul\":5381:5384   */\n      dup9\n        /* \"#utility.yul\":5366:5379   */\n      dup3\n        /* \"#utility.yul\":5274:5385   */\n      tag_408\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":5267:5385   */\n      swap8\n      pop\n        /* \"#utility.yul\":5408:5492   */\n      tag_503\n        /* \"#utility.yul\":5485:5491   */\n      dup4\n        /* \"#utility.yul\":5408:5492   */\n      tag_409\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":5398:5492   */\n      swap3\n      pop\n        /* \"#utility.yul\":5206:5502   */\n      pop\n        /* \"#utility.yul\":5193:5194   */\n      0x01\n        /* \"#utility.yul\":5190:5191   */\n      dup2\n        /* \"#utility.yul\":5186:5195   */\n      add\n        /* \"#utility.yul\":5181:5195   */\n      swap1\n      pop\n        /* \"#utility.yul\":5146:5502   */\n      jump(tag_499)\n    tag_501:\n        /* \"#utility.yul\":5150:5164   */\n      pop\n        /* \"#utility.yul\":5518:5521   */\n      dup6\n        /* \"#utility.yul\":5511:5521   */\n      swap4\n      pop\n        /* \"#utility.yul\":4785:5527   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4623:5527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5593:6281   */\n    tag_411:\n        /* \"#utility.yul\":5712:5715   */\n      0x00\n        /* \"#utility.yul\":5748:5752   */\n      0x40\n        /* \"#utility.yul\":5743:5746   */\n      dup4\n        /* \"#utility.yul\":5739:5753   */\n      add\n        /* \"#utility.yul\":5839:5843   */\n      0x00\n        /* \"#utility.yul\":5832:5837   */\n      dup4\n        /* \"#utility.yul\":5828:5844   */\n      add\n        /* \"#utility.yul\":5822:5845   */\n      mload\n        /* \"#utility.yul\":5858:5921   */\n      tag_505\n        /* \"#utility.yul\":5915:5919   */\n      0x00\n        /* \"#utility.yul\":5910:5913   */\n      dup7\n        /* \"#utility.yul\":5906:5920   */\n      add\n        /* \"#utility.yul\":5892:5904   */\n      dup3\n        /* \"#utility.yul\":5858:5921   */\n      tag_403\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":5763:5931   */\n      pop\n        /* \"#utility.yul\":6013:6017   */\n      0x20\n        /* \"#utility.yul\":6006:6011   */\n      dup4\n        /* \"#utility.yul\":6002:6018   */\n      add\n        /* \"#utility.yul\":5996:6019   */\n      mload\n        /* \"#utility.yul\":6066:6069   */\n      dup5\n        /* \"#utility.yul\":6060:6064   */\n      dup3\n        /* \"#utility.yul\":6056:6070   */\n      sub\n        /* \"#utility.yul\":6049:6053   */\n      0x20\n        /* \"#utility.yul\":6044:6047   */\n      dup7\n        /* \"#utility.yul\":6040:6054   */\n      add\n        /* \"#utility.yul\":6033:6071   */\n      mstore\n        /* \"#utility.yul\":6092:6243   */\n      tag_506\n        /* \"#utility.yul\":6238:6242   */\n      dup3\n        /* \"#utility.yul\":6224:6236   */\n      dup3\n        /* \"#utility.yul\":6092:6243   */\n      tag_410\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":6084:6243   */\n      swap2\n      pop\n        /* \"#utility.yul\":5941:6254   */\n      pop\n        /* \"#utility.yul\":6271:6275   */\n      dup1\n        /* \"#utility.yul\":6264:6275   */\n      swap2\n      pop\n        /* \"#utility.yul\":5717:6281   */\n      pop\n        /* \"#utility.yul\":5593:6281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6287:6660   */\n    tag_47:\n        /* \"#utility.yul\":6430:6434   */\n      0x00\n        /* \"#utility.yul\":6468:6470   */\n      0x20\n        /* \"#utility.yul\":6457:6466   */\n      dup3\n        /* \"#utility.yul\":6453:6471   */\n      add\n        /* \"#utility.yul\":6445:6471   */\n      swap1\n      pop\n        /* \"#utility.yul\":6517:6526   */\n      dup2\n        /* \"#utility.yul\":6511:6515   */\n      dup2\n        /* \"#utility.yul\":6507:6527   */\n      sub\n        /* \"#utility.yul\":6503:6504   */\n      0x00\n        /* \"#utility.yul\":6492:6501   */\n      dup4\n        /* \"#utility.yul\":6488:6505   */\n      add\n        /* \"#utility.yul\":6481:6528   */\n      mstore\n        /* \"#utility.yul\":6545:6653   */\n      tag_508\n        /* \"#utility.yul\":6648:6652   */\n      dup2\n        /* \"#utility.yul\":6639:6645   */\n      dup5\n        /* \"#utility.yul\":6545:6653   */\n      tag_411\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":6537:6653   */\n      swap1\n      pop\n        /* \"#utility.yul\":6287:6660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6666:6726   */\n    tag_412:\n        /* \"#utility.yul\":6694:6697   */\n      0x00\n        /* \"#utility.yul\":6715:6720   */\n      dup2\n        /* \"#utility.yul\":6708:6720   */\n      swap1\n      pop\n        /* \"#utility.yul\":6666:6726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6732:6874   */\n    tag_413:\n        /* \"#utility.yul\":6782:6791   */\n      0x00\n        /* \"#utility.yul\":6815:6868   */\n      tag_511\n        /* \"#utility.yul\":6833:6867   */\n      tag_512\n        /* \"#utility.yul\":6842:6866   */\n      tag_513\n        /* \"#utility.yul\":6860:6865   */\n      dup5\n        /* \"#utility.yul\":6842:6866   */\n      tag_398\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":6833:6867   */\n      tag_412\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":6815:6868   */\n      tag_398\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":6802:6868   */\n      swap1\n      pop\n        /* \"#utility.yul\":6732:6874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6880:7006   */\n    tag_414:\n        /* \"#utility.yul\":6930:6939   */\n      0x00\n        /* \"#utility.yul\":6963:7000   */\n      tag_515\n        /* \"#utility.yul\":6994:6999   */\n      dup3\n        /* \"#utility.yul\":6963:7000   */\n      tag_413\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":6950:7000   */\n      swap1\n      pop\n        /* \"#utility.yul\":6880:7006   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7012:7153   */\n    tag_415:\n        /* \"#utility.yul\":7077:7086   */\n      0x00\n        /* \"#utility.yul\":7110:7147   */\n      tag_517\n        /* \"#utility.yul\":7141:7146   */\n      dup3\n        /* \"#utility.yul\":7110:7147   */\n      tag_414\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":7097:7147   */\n      swap1\n      pop\n        /* \"#utility.yul\":7012:7153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7159:7320   */\n    tag_416:\n        /* \"#utility.yul\":7261:7313   */\n      tag_519\n        /* \"#utility.yul\":7307:7312   */\n      dup2\n        /* \"#utility.yul\":7261:7313   */\n      tag_415\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":7256:7259   */\n      dup3\n        /* \"#utility.yul\":7249:7314   */\n      mstore\n        /* \"#utility.yul\":7159:7320   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7326:7578   */\n    tag_51:\n        /* \"#utility.yul\":7434:7438   */\n      0x00\n        /* \"#utility.yul\":7472:7474   */\n      0x20\n        /* \"#utility.yul\":7461:7470   */\n      dup3\n        /* \"#utility.yul\":7457:7475   */\n      add\n        /* \"#utility.yul\":7449:7475   */\n      swap1\n      pop\n        /* \"#utility.yul\":7485:7571   */\n      tag_521\n        /* \"#utility.yul\":7568:7569   */\n      0x00\n        /* \"#utility.yul\":7557:7566   */\n      dup4\n        /* \"#utility.yul\":7553:7570   */\n      add\n        /* \"#utility.yul\":7544:7550   */\n      dup5\n        /* \"#utility.yul\":7485:7571   */\n      tag_416\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":7326:7578   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7584:7732   */\n    tag_417:\n        /* \"#utility.yul\":7656:7665   */\n      0x00\n        /* \"#utility.yul\":7689:7726   */\n      tag_523\n        /* \"#utility.yul\":7720:7725   */\n      dup3\n        /* \"#utility.yul\":7689:7726   */\n      tag_414\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":7676:7726   */\n      swap1\n      pop\n        /* \"#utility.yul\":7584:7732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7738:7913   */\n    tag_418:\n        /* \"#utility.yul\":7847:7906   */\n      tag_525\n        /* \"#utility.yul\":7900:7905   */\n      dup2\n        /* \"#utility.yul\":7847:7906   */\n      tag_417\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":7842:7845   */\n      dup3\n        /* \"#utility.yul\":7835:7907   */\n      mstore\n        /* \"#utility.yul\":7738:7913   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7919:8185   */\n    tag_63:\n        /* \"#utility.yul\":8034:8038   */\n      0x00\n        /* \"#utility.yul\":8072:8074   */\n      0x20\n        /* \"#utility.yul\":8061:8070   */\n      dup3\n        /* \"#utility.yul\":8057:8075   */\n      add\n        /* \"#utility.yul\":8049:8075   */\n      swap1\n      pop\n        /* \"#utility.yul\":8085:8178   */\n      tag_527\n        /* \"#utility.yul\":8175:8176   */\n      0x00\n        /* \"#utility.yul\":8164:8173   */\n      dup4\n        /* \"#utility.yul\":8160:8177   */\n      add\n        /* \"#utility.yul\":8151:8157   */\n      dup5\n        /* \"#utility.yul\":8085:8178   */\n      tag_418\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":7919:8185   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8191:8309   */\n    tag_419:\n        /* \"#utility.yul\":8278:8302   */\n      tag_529\n        /* \"#utility.yul\":8296:8301   */\n      dup2\n        /* \"#utility.yul\":8278:8302   */\n      tag_399\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":8273:8276   */\n      dup3\n        /* \"#utility.yul\":8266:8303   */\n      mstore\n        /* \"#utility.yul\":8191:8309   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8315:8537   */\n    tag_70:\n        /* \"#utility.yul\":8408:8412   */\n      0x00\n        /* \"#utility.yul\":8446:8448   */\n      0x20\n        /* \"#utility.yul\":8435:8444   */\n      dup3\n        /* \"#utility.yul\":8431:8449   */\n      add\n        /* \"#utility.yul\":8423:8449   */\n      swap1\n      pop\n        /* \"#utility.yul\":8459:8530   */\n      tag_531\n        /* \"#utility.yul\":8527:8528   */\n      0x00\n        /* \"#utility.yul\":8516:8525   */\n      dup4\n        /* \"#utility.yul\":8512:8529   */\n      add\n        /* \"#utility.yul\":8503:8509   */\n      dup5\n        /* \"#utility.yul\":8459:8530   */\n      tag_419\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":8315:8537   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8543:8665   */\n    tag_420:\n        /* \"#utility.yul\":8616:8640   */\n      tag_533\n        /* \"#utility.yul\":8634:8639   */\n      dup2\n        /* \"#utility.yul\":8616:8640   */\n      tag_399\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":8609:8614   */\n      dup2\n        /* \"#utility.yul\":8606:8641   */\n      eq\n        /* \"#utility.yul\":8596:8659   */\n      tag_534\n      jumpi\n        /* \"#utility.yul\":8655:8656   */\n      0x00\n        /* \"#utility.yul\":8652:8653   */\n      dup1\n        /* \"#utility.yul\":8645:8657   */\n      revert\n        /* \"#utility.yul\":8596:8659   */\n    tag_534:\n        /* \"#utility.yul\":8543:8665   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8671:8810   */\n    tag_421:\n        /* \"#utility.yul\":8717:8722   */\n      0x00\n        /* \"#utility.yul\":8755:8761   */\n      dup2\n        /* \"#utility.yul\":8742:8762   */\n      calldataload\n        /* \"#utility.yul\":8733:8762   */\n      swap1\n      pop\n        /* \"#utility.yul\":8771:8804   */\n      tag_536\n        /* \"#utility.yul\":8798:8803   */\n      dup2\n        /* \"#utility.yul\":8771:8804   */\n      tag_420\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":8671:8810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8816:9290   */\n    tag_80:\n        /* \"#utility.yul\":8884:8890   */\n      0x00\n        /* \"#utility.yul\":8892:8898   */\n      dup1\n        /* \"#utility.yul\":8941:8943   */\n      0x40\n        /* \"#utility.yul\":8929:8938   */\n      dup4\n        /* \"#utility.yul\":8920:8927   */\n      dup6\n        /* \"#utility.yul\":8916:8939   */\n      sub\n        /* \"#utility.yul\":8912:8944   */\n      slt\n        /* \"#utility.yul\":8909:9028   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":8947:9026   */\n      tag_539\n      tag_394\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":8909:9028   */\n    tag_538:\n        /* \"#utility.yul\":9067:9068   */\n      0x00\n        /* \"#utility.yul\":9092:9145   */\n      tag_540\n        /* \"#utility.yul\":9137:9144   */\n      dup6\n        /* \"#utility.yul\":9128:9134   */\n      dup3\n        /* \"#utility.yul\":9117:9126   */\n      dup7\n        /* \"#utility.yul\":9113:9135   */\n      add\n        /* \"#utility.yul\":9092:9145   */\n      tag_397\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":9082:9145   */\n      swap3\n      pop\n        /* \"#utility.yul\":9038:9155   */\n      pop\n        /* \"#utility.yul\":9194:9196   */\n      0x20\n        /* \"#utility.yul\":9220:9273   */\n      tag_541\n        /* \"#utility.yul\":9265:9272   */\n      dup6\n        /* \"#utility.yul\":9256:9262   */\n      dup3\n        /* \"#utility.yul\":9245:9254   */\n      dup7\n        /* \"#utility.yul\":9241:9263   */\n      add\n        /* \"#utility.yul\":9220:9273   */\n      tag_421\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":9210:9273   */\n      swap2\n      pop\n        /* \"#utility.yul\":9165:9283   */\n      pop\n        /* \"#utility.yul\":8816:9290   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9296:9738   */\n    tag_83:\n        /* \"#utility.yul\":9445:9449   */\n      0x00\n        /* \"#utility.yul\":9483:9485   */\n      0x60\n        /* \"#utility.yul\":9472:9481   */\n      dup3\n        /* \"#utility.yul\":9468:9486   */\n      add\n        /* \"#utility.yul\":9460:9486   */\n      swap1\n      pop\n        /* \"#utility.yul\":9496:9567   */\n      tag_543\n        /* \"#utility.yul\":9564:9565   */\n      0x00\n        /* \"#utility.yul\":9553:9562   */\n      dup4\n        /* \"#utility.yul\":9549:9566   */\n      add\n        /* \"#utility.yul\":9540:9546   */\n      dup7\n        /* \"#utility.yul\":9496:9567   */\n      tag_392\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":9577:9649   */\n      tag_544\n        /* \"#utility.yul\":9645:9647   */\n      0x20\n        /* \"#utility.yul\":9634:9643   */\n      dup4\n        /* \"#utility.yul\":9630:9648   */\n      add\n        /* \"#utility.yul\":9621:9627   */\n      dup6\n        /* \"#utility.yul\":9577:9649   */\n      tag_392\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":9659:9731   */\n      tag_545\n        /* \"#utility.yul\":9727:9729   */\n      0x40\n        /* \"#utility.yul\":9716:9725   */\n      dup4\n        /* \"#utility.yul\":9712:9730   */\n      add\n        /* \"#utility.yul\":9703:9709   */\n      dup5\n        /* \"#utility.yul\":9659:9731   */\n      tag_392\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":9296:9738   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9744:10073   */\n    tag_103:\n        /* \"#utility.yul\":9803:9809   */\n      0x00\n        /* \"#utility.yul\":9852:9854   */\n      0x20\n        /* \"#utility.yul\":9840:9849   */\n      dup3\n        /* \"#utility.yul\":9831:9838   */\n      dup5\n        /* \"#utility.yul\":9827:9850   */\n      sub\n        /* \"#utility.yul\":9823:9855   */\n      slt\n        /* \"#utility.yul\":9820:9939   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":9858:9937   */\n      tag_548\n      tag_394\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":9820:9939   */\n    tag_547:\n        /* \"#utility.yul\":9978:9979   */\n      0x00\n        /* \"#utility.yul\":10003:10056   */\n      tag_549\n        /* \"#utility.yul\":10048:10055   */\n      dup5\n        /* \"#utility.yul\":10039:10045   */\n      dup3\n        /* \"#utility.yul\":10028:10037   */\n      dup6\n        /* \"#utility.yul\":10024:10046   */\n      add\n        /* \"#utility.yul\":10003:10056   */\n      tag_421\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":9993:10056   */\n      swap2\n      pop\n        /* \"#utility.yul\":9949:10066   */\n      pop\n        /* \"#utility.yul\":9744:10073   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10079:10259   */\n    tag_113:\n        /* \"#utility.yul\":10127:10204   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10124:10125   */\n      0x00\n        /* \"#utility.yul\":10117:10205   */\n      mstore\n        /* \"#utility.yul\":10224:10228   */\n      0x32\n        /* \"#utility.yul\":10221:10222   */\n      0x04\n        /* \"#utility.yul\":10214:10229   */\n      mstore\n        /* \"#utility.yul\":10248:10252   */\n      0x24\n        /* \"#utility.yul\":10245:10246   */\n      0x00\n        /* \"#utility.yul\":10238:10253   */\n      revert\n        /* \"#utility.yul\":10265:10434   */\n    tag_422:\n        /* \"#utility.yul\":10349:10360   */\n      0x00\n        /* \"#utility.yul\":10383:10389   */\n      dup3\n        /* \"#utility.yul\":10378:10381   */\n      dup3\n        /* \"#utility.yul\":10371:10390   */\n      mstore\n        /* \"#utility.yul\":10423:10427   */\n      0x20\n        /* \"#utility.yul\":10418:10421   */\n      dup3\n        /* \"#utility.yul\":10414:10428   */\n      add\n        /* \"#utility.yul\":10399:10428   */\n      swap1\n      pop\n        /* \"#utility.yul\":10265:10434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10440:10614   */\n    tag_423:\n        /* \"#utility.yul\":10580:10606   */\n      0x42464c593a2053554646494349454e545f42414c414e43450000000000000000\n        /* \"#utility.yul\":10576:10577   */\n      0x00\n        /* \"#utility.yul\":10568:10574   */\n      dup3\n        /* \"#utility.yul\":10564:10578   */\n      add\n        /* \"#utility.yul\":10557:10607   */\n      mstore\n        /* \"#utility.yul\":10440:10614   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10620:10986   */\n    tag_424:\n        /* \"#utility.yul\":10762:10765   */\n      0x00\n        /* \"#utility.yul\":10783:10850   */\n      tag_554\n        /* \"#utility.yul\":10847:10849   */\n      0x18\n        /* \"#utility.yul\":10842:10845   */\n      dup4\n        /* \"#utility.yul\":10783:10850   */\n      tag_422\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":10776:10850   */\n      swap2\n      pop\n        /* \"#utility.yul\":10859:10952   */\n      tag_555\n        /* \"#utility.yul\":10948:10951   */\n      dup3\n        /* \"#utility.yul\":10859:10952   */\n      tag_423\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":10977:10979   */\n      0x20\n        /* \"#utility.yul\":10972:10975   */\n      dup3\n        /* \"#utility.yul\":10968:10980   */\n      add\n        /* \"#utility.yul\":10961:10980   */\n      swap1\n      pop\n        /* \"#utility.yul\":10620:10986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10992:11411   */\n    tag_134:\n        /* \"#utility.yul\":11158:11162   */\n      0x00\n        /* \"#utility.yul\":11196:11198   */\n      0x20\n        /* \"#utility.yul\":11185:11194   */\n      dup3\n        /* \"#utility.yul\":11181:11199   */\n      add\n        /* \"#utility.yul\":11173:11199   */\n      swap1\n      pop\n        /* \"#utility.yul\":11245:11254   */\n      dup2\n        /* \"#utility.yul\":11239:11243   */\n      dup2\n        /* \"#utility.yul\":11235:11255   */\n      sub\n        /* \"#utility.yul\":11231:11232   */\n      0x00\n        /* \"#utility.yul\":11220:11229   */\n      dup4\n        /* \"#utility.yul\":11216:11233   */\n      add\n        /* \"#utility.yul\":11209:11256   */\n      mstore\n        /* \"#utility.yul\":11273:11404   */\n      tag_557\n        /* \"#utility.yul\":11399:11403   */\n      dup2\n        /* \"#utility.yul\":11273:11404   */\n      tag_424\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":11265:11404   */\n      swap1\n      pop\n        /* \"#utility.yul\":10992:11411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11417:11597   */\n    tag_425:\n        /* \"#utility.yul\":11465:11542   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11462:11463   */\n      0x00\n        /* \"#utility.yul\":11455:11543   */\n      mstore\n        /* \"#utility.yul\":11562:11566   */\n      0x11\n        /* \"#utility.yul\":11559:11560   */\n      0x04\n        /* \"#utility.yul\":11552:11567   */\n      mstore\n        /* \"#utility.yul\":11586:11590   */\n      0x24\n        /* \"#utility.yul\":11583:11584   */\n      0x00\n        /* \"#utility.yul\":11576:11591   */\n      revert\n        /* \"#utility.yul\":11603:11797   */\n    tag_162:\n        /* \"#utility.yul\":11643:11647   */\n      0x00\n        /* \"#utility.yul\":11663:11683   */\n      tag_560\n        /* \"#utility.yul\":11681:11682   */\n      dup3\n        /* \"#utility.yul\":11663:11683   */\n      tag_391\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":11658:11683   */\n      swap2\n      pop\n        /* \"#utility.yul\":11697:11717   */\n      tag_561\n        /* \"#utility.yul\":11715:11716   */\n      dup4\n        /* \"#utility.yul\":11697:11717   */\n      tag_391\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":11692:11717   */\n      swap3\n      pop\n        /* \"#utility.yul\":11741:11742   */\n      dup3\n        /* \"#utility.yul\":11738:11739   */\n      dup3\n        /* \"#utility.yul\":11734:11743   */\n      sub\n        /* \"#utility.yul\":11726:11743   */\n      swap1\n      pop\n        /* \"#utility.yul\":11765:11766   */\n      dup2\n        /* \"#utility.yul\":11759:11763   */\n      dup2\n        /* \"#utility.yul\":11756:11767   */\n      gt\n        /* \"#utility.yul\":11753:11790   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":11770:11788   */\n      tag_563\n      tag_425\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":11753:11790   */\n    tag_562:\n        /* \"#utility.yul\":11603:11797   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11803:11994   */\n    tag_185:\n        /* \"#utility.yul\":11843:11846   */\n      0x00\n        /* \"#utility.yul\":11862:11882   */\n      tag_565\n        /* \"#utility.yul\":11880:11881   */\n      dup3\n        /* \"#utility.yul\":11862:11882   */\n      tag_391\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":11857:11882   */\n      swap2\n      pop\n        /* \"#utility.yul\":11896:11916   */\n      tag_566\n        /* \"#utility.yul\":11914:11915   */\n      dup4\n        /* \"#utility.yul\":11896:11916   */\n      tag_391\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":11891:11916   */\n      swap3\n      pop\n        /* \"#utility.yul\":11939:11940   */\n      dup3\n        /* \"#utility.yul\":11936:11937   */\n      dup3\n        /* \"#utility.yul\":11932:11941   */\n      add\n        /* \"#utility.yul\":11925:11941   */\n      swap1\n      pop\n        /* \"#utility.yul\":11960:11963   */\n      dup1\n        /* \"#utility.yul\":11957:11958   */\n      dup3\n        /* \"#utility.yul\":11954:11964   */\n      gt\n        /* \"#utility.yul\":11951:11987   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":11967:11985   */\n      tag_568\n      tag_425\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":11951:11987   */\n    tag_567:\n        /* \"#utility.yul\":11803:11994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12000:12233   */\n    tag_210:\n        /* \"#utility.yul\":12039:12042   */\n      0x00\n        /* \"#utility.yul\":12062:12086   */\n      tag_570\n        /* \"#utility.yul\":12080:12085   */\n      dup3\n        /* \"#utility.yul\":12062:12086   */\n      tag_391\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":12053:12086   */\n      swap2\n      pop\n        /* \"#utility.yul\":12108:12174   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12101:12106   */\n      dup3\n        /* \"#utility.yul\":12098:12175   */\n      sub\n        /* \"#utility.yul\":12095:12198   */\n      tag_571\n      jumpi\n        /* \"#utility.yul\":12178:12196   */\n      tag_572\n      tag_425\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":12095:12198   */\n    tag_571:\n        /* \"#utility.yul\":12225:12226   */\n      0x01\n        /* \"#utility.yul\":12218:12223   */\n      dup3\n        /* \"#utility.yul\":12214:12227   */\n      add\n        /* \"#utility.yul\":12207:12227   */\n      swap1\n      pop\n        /* \"#utility.yul\":12000:12233   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12239:12464   */\n    tag_426:\n        /* \"#utility.yul\":12379:12413   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12375:12376   */\n      0x00\n        /* \"#utility.yul\":12367:12373   */\n      dup3\n        /* \"#utility.yul\":12363:12377   */\n      add\n        /* \"#utility.yul\":12356:12414   */\n      mstore\n        /* \"#utility.yul\":12448:12456   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12443:12445   */\n      0x20\n        /* \"#utility.yul\":12435:12441   */\n      dup3\n        /* \"#utility.yul\":12431:12446   */\n      add\n        /* \"#utility.yul\":12424:12457   */\n      mstore\n        /* \"#utility.yul\":12239:12464   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12470:12836   */\n    tag_427:\n        /* \"#utility.yul\":12612:12615   */\n      0x00\n        /* \"#utility.yul\":12633:12700   */\n      tag_575\n        /* \"#utility.yul\":12697:12699   */\n      0x26\n        /* \"#utility.yul\":12692:12695   */\n      dup4\n        /* \"#utility.yul\":12633:12700   */\n      tag_422\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":12626:12700   */\n      swap2\n      pop\n        /* \"#utility.yul\":12709:12802   */\n      tag_576\n        /* \"#utility.yul\":12798:12801   */\n      dup3\n        /* \"#utility.yul\":12709:12802   */\n      tag_426\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":12827:12829   */\n      0x40\n        /* \"#utility.yul\":12822:12825   */\n      dup3\n        /* \"#utility.yul\":12818:12830   */\n      add\n        /* \"#utility.yul\":12811:12830   */\n      swap1\n      pop\n        /* \"#utility.yul\":12470:12836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12842:13261   */\n    tag_321:\n        /* \"#utility.yul\":13008:13012   */\n      0x00\n        /* \"#utility.yul\":13046:13048   */\n      0x20\n        /* \"#utility.yul\":13035:13044   */\n      dup3\n        /* \"#utility.yul\":13031:13049   */\n      add\n        /* \"#utility.yul\":13023:13049   */\n      swap1\n      pop\n        /* \"#utility.yul\":13095:13104   */\n      dup2\n        /* \"#utility.yul\":13089:13093   */\n      dup2\n        /* \"#utility.yul\":13085:13105   */\n      sub\n        /* \"#utility.yul\":13081:13082   */\n      0x00\n        /* \"#utility.yul\":13070:13079   */\n      dup4\n        /* \"#utility.yul\":13066:13083   */\n      add\n        /* \"#utility.yul\":13059:13106   */\n      mstore\n        /* \"#utility.yul\":13123:13254   */\n      tag_578\n        /* \"#utility.yul\":13249:13253   */\n      dup2\n        /* \"#utility.yul\":13123:13254   */\n      tag_427\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":13115:13254   */\n      swap1\n      pop\n        /* \"#utility.yul\":12842:13261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13267:13449   */\n    tag_428:\n        /* \"#utility.yul\":13407:13441   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13403:13404   */\n      0x00\n        /* \"#utility.yul\":13395:13401   */\n      dup3\n        /* \"#utility.yul\":13391:13405   */\n      add\n        /* \"#utility.yul\":13384:13442   */\n      mstore\n        /* \"#utility.yul\":13267:13449   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13455:13821   */\n    tag_429:\n        /* \"#utility.yul\":13597:13600   */\n      0x00\n        /* \"#utility.yul\":13618:13685   */\n      tag_581\n        /* \"#utility.yul\":13682:13684   */\n      0x20\n        /* \"#utility.yul\":13677:13680   */\n      dup4\n        /* \"#utility.yul\":13618:13685   */\n      tag_422\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":13611:13685   */\n      swap2\n      pop\n        /* \"#utility.yul\":13694:13787   */\n      tag_582\n        /* \"#utility.yul\":13783:13786   */\n      dup3\n        /* \"#utility.yul\":13694:13787   */\n      tag_428\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":13812:13814   */\n      0x20\n        /* \"#utility.yul\":13807:13810   */\n      dup3\n        /* \"#utility.yul\":13803:13815   */\n      add\n        /* \"#utility.yul\":13796:13815   */\n      swap1\n      pop\n        /* \"#utility.yul\":13455:13821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13827:14246   */\n    tag_329:\n        /* \"#utility.yul\":13993:13997   */\n      0x00\n        /* \"#utility.yul\":14031:14033   */\n      0x20\n        /* \"#utility.yul\":14020:14029   */\n      dup3\n        /* \"#utility.yul\":14016:14034   */\n      add\n        /* \"#utility.yul\":14008:14034   */\n      swap1\n      pop\n        /* \"#utility.yul\":14080:14089   */\n      dup2\n        /* \"#utility.yul\":14074:14078   */\n      dup2\n        /* \"#utility.yul\":14070:14090   */\n      sub\n        /* \"#utility.yul\":14066:14067   */\n      0x00\n        /* \"#utility.yul\":14055:14064   */\n      dup4\n        /* \"#utility.yul\":14051:14068   */\n      add\n        /* \"#utility.yul\":14044:14091   */\n      mstore\n        /* \"#utility.yul\":14108:14239   */\n      tag_584\n        /* \"#utility.yul\":14234:14238   */\n      dup2\n        /* \"#utility.yul\":14108:14239   */\n      tag_429\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":14100:14239   */\n      swap1\n      pop\n        /* \"#utility.yul\":13827:14246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14252:14584   */\n    tag_335:\n        /* \"#utility.yul\":14373:14377   */\n      0x00\n        /* \"#utility.yul\":14411:14413   */\n      0x40\n        /* \"#utility.yul\":14400:14409   */\n      dup3\n        /* \"#utility.yul\":14396:14414   */\n      add\n        /* \"#utility.yul\":14388:14414   */\n      swap1\n      pop\n        /* \"#utility.yul\":14424:14495   */\n      tag_586\n        /* \"#utility.yul\":14492:14493   */\n      0x00\n        /* \"#utility.yul\":14481:14490   */\n      dup4\n        /* \"#utility.yul\":14477:14494   */\n      add\n        /* \"#utility.yul\":14468:14474   */\n      dup6\n        /* \"#utility.yul\":14424:14495   */\n      tag_419\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":14505:14577   */\n      tag_587\n        /* \"#utility.yul\":14573:14575   */\n      0x20\n        /* \"#utility.yul\":14562:14571   */\n      dup4\n        /* \"#utility.yul\":14558:14576   */\n      add\n        /* \"#utility.yul\":14549:14555   */\n      dup5\n        /* \"#utility.yul\":14505:14577   */\n      tag_392\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":14252:14584   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14590:15000   */\n    tag_342:\n        /* \"#utility.yul\":14630:14637   */\n      0x00\n        /* \"#utility.yul\":14653:14673   */\n      tag_589\n        /* \"#utility.yul\":14671:14672   */\n      dup3\n        /* \"#utility.yul\":14653:14673   */\n      tag_391\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":14648:14673   */\n      swap2\n      pop\n        /* \"#utility.yul\":14687:14707   */\n      tag_590\n        /* \"#utility.yul\":14705:14706   */\n      dup4\n        /* \"#utility.yul\":14687:14707   */\n      tag_391\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":14682:14707   */\n      swap3\n      pop\n        /* \"#utility.yul\":14742:14743   */\n      dup3\n        /* \"#utility.yul\":14739:14740   */\n      dup3\n        /* \"#utility.yul\":14735:14744   */\n      mul\n        /* \"#utility.yul\":14764:14794   */\n      tag_591\n        /* \"#utility.yul\":14782:14793   */\n      dup2\n        /* \"#utility.yul\":14764:14794   */\n      tag_391\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":14753:14794   */\n      swap2\n      pop\n        /* \"#utility.yul\":14943:14944   */\n      dup3\n        /* \"#utility.yul\":14934:14941   */\n      dup3\n        /* \"#utility.yul\":14930:14945   */\n      div\n        /* \"#utility.yul\":14927:14928   */\n      dup5\n        /* \"#utility.yul\":14924:14946   */\n      eq\n        /* \"#utility.yul\":14904:14905   */\n      dup4\n        /* \"#utility.yul\":14897:14906   */\n      iszero\n        /* \"#utility.yul\":14877:14960   */\n      or\n        /* \"#utility.yul\":14854:14993   */\n      tag_592\n      jumpi\n        /* \"#utility.yul\":14973:14991   */\n      tag_593\n      tag_425\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":14854:14993   */\n    tag_592:\n        /* \"#utility.yul\":14638:15000   */\n      pop\n        /* \"#utility.yul\":14590:15000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15006:15186   */\n    tag_430:\n        /* \"#utility.yul\":15054:15131   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15051:15052   */\n      0x00\n        /* \"#utility.yul\":15044:15132   */\n      mstore\n        /* \"#utility.yul\":15151:15155   */\n      0x12\n        /* \"#utility.yul\":15148:15149   */\n      0x04\n        /* \"#utility.yul\":15141:15156   */\n      mstore\n        /* \"#utility.yul\":15175:15179   */\n      0x24\n        /* \"#utility.yul\":15172:15173   */\n      0x00\n        /* \"#utility.yul\":15165:15180   */\n      revert\n        /* \"#utility.yul\":15192:15377   */\n    tag_345:\n        /* \"#utility.yul\":15232:15233   */\n      0x00\n        /* \"#utility.yul\":15249:15269   */\n      tag_596\n        /* \"#utility.yul\":15267:15268   */\n      dup3\n        /* \"#utility.yul\":15249:15269   */\n      tag_391\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":15244:15269   */\n      swap2\n      pop\n        /* \"#utility.yul\":15283:15303   */\n      tag_597\n        /* \"#utility.yul\":15301:15302   */\n      dup4\n        /* \"#utility.yul\":15283:15303   */\n      tag_391\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":15278:15303   */\n      swap3\n      pop\n        /* \"#utility.yul\":15322:15323   */\n      dup3\n        /* \"#utility.yul\":15312:15347   */\n      tag_598\n      jumpi\n        /* \"#utility.yul\":15327:15345   */\n      tag_599\n      tag_430\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":15312:15347   */\n    tag_598:\n        /* \"#utility.yul\":15369:15370   */\n      dup3\n        /* \"#utility.yul\":15366:15367   */\n      dup3\n        /* \"#utility.yul\":15362:15371   */\n      div\n        /* \"#utility.yul\":15357:15371   */\n      swap1\n      pop\n        /* \"#utility.yul\":15192:15377   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15383:15825   */\n    tag_349:\n        /* \"#utility.yul\":15532:15536   */\n      0x00\n        /* \"#utility.yul\":15570:15572   */\n      0x60\n        /* \"#utility.yul\":15559:15568   */\n      dup3\n        /* \"#utility.yul\":15555:15573   */\n      add\n        /* \"#utility.yul\":15547:15573   */\n      swap1\n      pop\n        /* \"#utility.yul\":15583:15654   */\n      tag_601\n        /* \"#utility.yul\":15651:15652   */\n      0x00\n        /* \"#utility.yul\":15640:15649   */\n      dup4\n        /* \"#utility.yul\":15636:15653   */\n      add\n        /* \"#utility.yul\":15627:15633   */\n      dup7\n        /* \"#utility.yul\":15583:15654   */\n      tag_419\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":15664:15736   */\n      tag_602\n        /* \"#utility.yul\":15732:15734   */\n      0x20\n        /* \"#utility.yul\":15721:15730   */\n      dup4\n        /* \"#utility.yul\":15717:15735   */\n      add\n        /* \"#utility.yul\":15708:15714   */\n      dup6\n        /* \"#utility.yul\":15664:15736   */\n      tag_419\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":15746:15818   */\n      tag_603\n        /* \"#utility.yul\":15814:15816   */\n      0x40\n        /* \"#utility.yul\":15803:15812   */\n      dup4\n        /* \"#utility.yul\":15799:15817   */\n      add\n        /* \"#utility.yul\":15790:15796   */\n      dup5\n        /* \"#utility.yul\":15746:15818   */\n      tag_392\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":15383:15825   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15831:15921   */\n    tag_431:\n        /* \"#utility.yul\":15865:15872   */\n      0x00\n        /* \"#utility.yul\":15908:15913   */\n      dup2\n        /* \"#utility.yul\":15901:15914   */\n      iszero\n        /* \"#utility.yul\":15894:15915   */\n      iszero\n        /* \"#utility.yul\":15883:15915   */\n      swap1\n      pop\n        /* \"#utility.yul\":15831:15921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15927:16043   */\n    tag_432:\n        /* \"#utility.yul\":15997:16018   */\n      tag_606\n        /* \"#utility.yul\":16012:16017   */\n      dup2\n        /* \"#utility.yul\":15997:16018   */\n      tag_431\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":15990:15995   */\n      dup2\n        /* \"#utility.yul\":15987:16019   */\n      eq\n        /* \"#utility.yul\":15977:16037   */\n      tag_607\n      jumpi\n        /* \"#utility.yul\":16033:16034   */\n      0x00\n        /* \"#utility.yul\":16030:16031   */\n      dup1\n        /* \"#utility.yul\":16023:16035   */\n      revert\n        /* \"#utility.yul\":15977:16037   */\n    tag_607:\n        /* \"#utility.yul\":15927:16043   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16049:16186   */\n    tag_433:\n        /* \"#utility.yul\":16103:16108   */\n      0x00\n        /* \"#utility.yul\":16134:16140   */\n      dup2\n        /* \"#utility.yul\":16128:16141   */\n      mload\n        /* \"#utility.yul\":16119:16141   */\n      swap1\n      pop\n        /* \"#utility.yul\":16150:16180   */\n      tag_609\n        /* \"#utility.yul\":16174:16179   */\n      dup2\n        /* \"#utility.yul\":16150:16180   */\n      tag_432\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":16049:16186   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16192:16537   */\n    tag_356:\n        /* \"#utility.yul\":16259:16265   */\n      0x00\n        /* \"#utility.yul\":16308:16310   */\n      0x20\n        /* \"#utility.yul\":16296:16305   */\n      dup3\n        /* \"#utility.yul\":16287:16294   */\n      dup5\n        /* \"#utility.yul\":16283:16306   */\n      sub\n        /* \"#utility.yul\":16279:16311   */\n      slt\n        /* \"#utility.yul\":16276:16395   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":16314:16393   */\n      tag_612\n      tag_394\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":16276:16395   */\n    tag_611:\n        /* \"#utility.yul\":16434:16435   */\n      0x00\n        /* \"#utility.yul\":16459:16520   */\n      tag_613\n        /* \"#utility.yul\":16512:16519   */\n      dup5\n        /* \"#utility.yul\":16503:16509   */\n      dup3\n        /* \"#utility.yul\":16492:16501   */\n      dup6\n        /* \"#utility.yul\":16488:16510   */\n      add\n        /* \"#utility.yul\":16459:16520   */\n      tag_433\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":16449:16520   */\n      swap2\n      pop\n        /* \"#utility.yul\":16405:16530   */\n      pop\n        /* \"#utility.yul\":16192:16537   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16543:16772   */\n    tag_434:\n        /* \"#utility.yul\":16683:16717   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":16679:16680   */\n      0x00\n        /* \"#utility.yul\":16671:16677   */\n      dup3\n        /* \"#utility.yul\":16667:16681   */\n      add\n        /* \"#utility.yul\":16660:16718   */\n      mstore\n        /* \"#utility.yul\":16752:16764   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16747:16749   */\n      0x20\n        /* \"#utility.yul\":16739:16745   */\n      dup3\n        /* \"#utility.yul\":16735:16750   */\n      add\n        /* \"#utility.yul\":16728:16765   */\n      mstore\n        /* \"#utility.yul\":16543:16772   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16778:17144   */\n    tag_435:\n        /* \"#utility.yul\":16920:16923   */\n      0x00\n        /* \"#utility.yul\":16941:17008   */\n      tag_616\n        /* \"#utility.yul\":17005:17007   */\n      0x2a\n        /* \"#utility.yul\":17000:17003   */\n      dup4\n        /* \"#utility.yul\":16941:17008   */\n      tag_422\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":16934:17008   */\n      swap2\n      pop\n        /* \"#utility.yul\":17017:17110   */\n      tag_617\n        /* \"#utility.yul\":17106:17109   */\n      dup3\n        /* \"#utility.yul\":17017:17110   */\n      tag_434\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":17135:17137   */\n      0x40\n        /* \"#utility.yul\":17130:17133   */\n      dup3\n        /* \"#utility.yul\":17126:17138   */\n      add\n        /* \"#utility.yul\":17119:17138   */\n      swap1\n      pop\n        /* \"#utility.yul\":16778:17144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17150:17569   */\n    tag_359:\n        /* \"#utility.yul\":17316:17320   */\n      0x00\n        /* \"#utility.yul\":17354:17356   */\n      0x20\n        /* \"#utility.yul\":17343:17352   */\n      dup3\n        /* \"#utility.yul\":17339:17357   */\n      add\n        /* \"#utility.yul\":17331:17357   */\n      swap1\n      pop\n        /* \"#utility.yul\":17403:17412   */\n      dup2\n        /* \"#utility.yul\":17397:17401   */\n      dup2\n        /* \"#utility.yul\":17393:17413   */\n      sub\n        /* \"#utility.yul\":17389:17390   */\n      0x00\n        /* \"#utility.yul\":17378:17387   */\n      dup4\n        /* \"#utility.yul\":17374:17391   */\n      add\n        /* \"#utility.yul\":17367:17414   */\n      mstore\n        /* \"#utility.yul\":17431:17562   */\n      tag_619\n        /* \"#utility.yul\":17557:17561   */\n      dup2\n        /* \"#utility.yul\":17431:17562   */\n      tag_435\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":17423:17562   */\n      swap1\n      pop\n        /* \"#utility.yul\":17150:17569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17575:17800   */\n    tag_436:\n        /* \"#utility.yul\":17715:17749   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":17711:17712   */\n      0x00\n        /* \"#utility.yul\":17703:17709   */\n      dup3\n        /* \"#utility.yul\":17699:17713   */\n      add\n        /* \"#utility.yul\":17692:17750   */\n      mstore\n        /* \"#utility.yul\":17784:17792   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17779:17781   */\n      0x20\n        /* \"#utility.yul\":17771:17777   */\n      dup3\n        /* \"#utility.yul\":17767:17782   */\n      add\n        /* \"#utility.yul\":17760:17793   */\n      mstore\n        /* \"#utility.yul\":17575:17800   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17806:18172   */\n    tag_437:\n        /* \"#utility.yul\":17948:17951   */\n      0x00\n        /* \"#utility.yul\":17969:18036   */\n      tag_622\n        /* \"#utility.yul\":18033:18035   */\n      0x26\n        /* \"#utility.yul\":18028:18031   */\n      dup4\n        /* \"#utility.yul\":17969:18036   */\n      tag_422\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":17962:18036   */\n      swap2\n      pop\n        /* \"#utility.yul\":18045:18138   */\n      tag_623\n        /* \"#utility.yul\":18134:18137   */\n      dup3\n        /* \"#utility.yul\":18045:18138   */\n      tag_436\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":18163:18165   */\n      0x40\n        /* \"#utility.yul\":18158:18161   */\n      dup3\n        /* \"#utility.yul\":18154:18166   */\n      add\n        /* \"#utility.yul\":18147:18166   */\n      swap1\n      pop\n        /* \"#utility.yul\":17806:18172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18178:18597   */\n    tag_366:\n        /* \"#utility.yul\":18344:18348   */\n      0x00\n        /* \"#utility.yul\":18382:18384   */\n      0x20\n        /* \"#utility.yul\":18371:18380   */\n      dup3\n        /* \"#utility.yul\":18367:18385   */\n      add\n        /* \"#utility.yul\":18359:18385   */\n      swap1\n      pop\n        /* \"#utility.yul\":18431:18440   */\n      dup2\n        /* \"#utility.yul\":18425:18429   */\n      dup2\n        /* \"#utility.yul\":18421:18441   */\n      sub\n        /* \"#utility.yul\":18417:18418   */\n      0x00\n        /* \"#utility.yul\":18406:18415   */\n      dup4\n        /* \"#utility.yul\":18402:18419   */\n      add\n        /* \"#utility.yul\":18395:18442   */\n      mstore\n        /* \"#utility.yul\":18459:18590   */\n      tag_625\n        /* \"#utility.yul\":18585:18589   */\n      dup2\n        /* \"#utility.yul\":18459:18590   */\n      tag_437\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":18451:18590   */\n      swap1\n      pop\n        /* \"#utility.yul\":18178:18597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18603:18701   */\n    tag_438:\n        /* \"#utility.yul\":18654:18660   */\n      0x00\n        /* \"#utility.yul\":18688:18693   */\n      dup2\n        /* \"#utility.yul\":18682:18694   */\n      mload\n        /* \"#utility.yul\":18672:18694   */\n      swap1\n      pop\n        /* \"#utility.yul\":18603:18701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18707:18854   */\n    tag_439:\n        /* \"#utility.yul\":18808:18819   */\n      0x00\n        /* \"#utility.yul\":18845:18848   */\n      dup2\n        /* \"#utility.yul\":18830:18848   */\n      swap1\n      pop\n        /* \"#utility.yul\":18707:18854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18860:19106   */\n    tag_440:\n        /* \"#utility.yul\":18941:18942   */\n      0x00\n        /* \"#utility.yul\":18951:19064   */\n    tag_629:\n        /* \"#utility.yul\":18965:18971   */\n      dup4\n        /* \"#utility.yul\":18962:18963   */\n      dup2\n        /* \"#utility.yul\":18959:18972   */\n      lt\n        /* \"#utility.yul\":18951:19064   */\n      iszero\n      tag_631\n      jumpi\n        /* \"#utility.yul\":19050:19051   */\n      dup1\n        /* \"#utility.yul\":19045:19048   */\n      dup3\n        /* \"#utility.yul\":19041:19052   */\n      add\n        /* \"#utility.yul\":19035:19053   */\n      mload\n        /* \"#utility.yul\":19031:19032   */\n      dup2\n        /* \"#utility.yul\":19026:19029   */\n      dup5\n        /* \"#utility.yul\":19022:19033   */\n      add\n        /* \"#utility.yul\":19015:19054   */\n      mstore\n        /* \"#utility.yul\":18987:18989   */\n      0x20\n        /* \"#utility.yul\":18984:18985   */\n      dup2\n        /* \"#utility.yul\":18980:18990   */\n      add\n        /* \"#utility.yul\":18975:18990   */\n      swap1\n      pop\n        /* \"#utility.yul\":18951:19064   */\n      jump(tag_629)\n    tag_631:\n        /* \"#utility.yul\":19098:19099   */\n      0x00\n        /* \"#utility.yul\":19089:19095   */\n      dup5\n        /* \"#utility.yul\":19084:19087   */\n      dup5\n        /* \"#utility.yul\":19080:19096   */\n      add\n        /* \"#utility.yul\":19073:19100   */\n      mstore\n        /* \"#utility.yul\":18922:19106   */\n      pop\n        /* \"#utility.yul\":18860:19106   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19112:19498   */\n    tag_441:\n        /* \"#utility.yul\":19216:19219   */\n      0x00\n        /* \"#utility.yul\":19244:19282   */\n      tag_633\n        /* \"#utility.yul\":19276:19281   */\n      dup3\n        /* \"#utility.yul\":19244:19282   */\n      tag_438\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":19298:19386   */\n      tag_634\n        /* \"#utility.yul\":19379:19385   */\n      dup2\n        /* \"#utility.yul\":19374:19377   */\n      dup6\n        /* \"#utility.yul\":19298:19386   */\n      tag_439\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":19291:19386   */\n      swap4\n      pop\n        /* \"#utility.yul\":19395:19460   */\n      tag_635\n        /* \"#utility.yul\":19453:19459   */\n      dup2\n        /* \"#utility.yul\":19448:19451   */\n      dup6\n        /* \"#utility.yul\":19441:19445   */\n      0x20\n        /* \"#utility.yul\":19434:19439   */\n      dup7\n        /* \"#utility.yul\":19430:19446   */\n      add\n        /* \"#utility.yul\":19395:19460   */\n      tag_440\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":19485:19491   */\n      dup1\n        /* \"#utility.yul\":19480:19483   */\n      dup5\n        /* \"#utility.yul\":19476:19492   */\n      add\n        /* \"#utility.yul\":19469:19492   */\n      swap2\n      pop\n        /* \"#utility.yul\":19220:19498   */\n      pop\n        /* \"#utility.yul\":19112:19498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19504:19775   */\n    tag_368:\n        /* \"#utility.yul\":19634:19637   */\n      0x00\n        /* \"#utility.yul\":19656:19749   */\n      tag_637\n        /* \"#utility.yul\":19745:19748   */\n      dup3\n        /* \"#utility.yul\":19736:19742   */\n      dup5\n        /* \"#utility.yul\":19656:19749   */\n      tag_441\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":19649:19749   */\n      swap2\n      pop\n        /* \"#utility.yul\":19766:19769   */\n      dup2\n        /* \"#utility.yul\":19759:19769   */\n      swap1\n      pop\n        /* \"#utility.yul\":19504:19775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19781:19960   */\n    tag_442:\n        /* \"#utility.yul\":19921:19952   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":19917:19918   */\n      0x00\n        /* \"#utility.yul\":19909:19915   */\n      dup3\n        /* \"#utility.yul\":19905:19919   */\n      add\n        /* \"#utility.yul\":19898:19953   */\n      mstore\n        /* \"#utility.yul\":19781:19960   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19966:20332   */\n    tag_443:\n        /* \"#utility.yul\":20108:20111   */\n      0x00\n        /* \"#utility.yul\":20129:20196   */\n      tag_640\n        /* \"#utility.yul\":20193:20195   */\n      0x1d\n        /* \"#utility.yul\":20188:20191   */\n      dup4\n        /* \"#utility.yul\":20129:20196   */\n      tag_422\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":20122:20196   */\n      swap2\n      pop\n        /* \"#utility.yul\":20205:20298   */\n      tag_641\n        /* \"#utility.yul\":20294:20297   */\n      dup3\n        /* \"#utility.yul\":20205:20298   */\n      tag_442\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":20323:20325   */\n      0x20\n        /* \"#utility.yul\":20318:20321   */\n      dup3\n        /* \"#utility.yul\":20314:20326   */\n      add\n        /* \"#utility.yul\":20307:20326   */\n      swap1\n      pop\n        /* \"#utility.yul\":19966:20332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20338:20757   */\n    tag_381:\n        /* \"#utility.yul\":20504:20508   */\n      0x00\n        /* \"#utility.yul\":20542:20544   */\n      0x20\n        /* \"#utility.yul\":20531:20540   */\n      dup3\n        /* \"#utility.yul\":20527:20545   */\n      add\n        /* \"#utility.yul\":20519:20545   */\n      swap1\n      pop\n        /* \"#utility.yul\":20591:20600   */\n      dup2\n        /* \"#utility.yul\":20585:20589   */\n      dup2\n        /* \"#utility.yul\":20581:20601   */\n      sub\n        /* \"#utility.yul\":20577:20578   */\n      0x00\n        /* \"#utility.yul\":20566:20575   */\n      dup4\n        /* \"#utility.yul\":20562:20579   */\n      add\n        /* \"#utility.yul\":20555:20602   */\n      mstore\n        /* \"#utility.yul\":20619:20750   */\n      tag_643\n        /* \"#utility.yul\":20745:20749   */\n      dup2\n        /* \"#utility.yul\":20619:20750   */\n      tag_443\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":20611:20750   */\n      swap1\n      pop\n        /* \"#utility.yul\":20338:20757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20763:20862   */\n    tag_444:\n        /* \"#utility.yul\":20815:20821   */\n      0x00\n        /* \"#utility.yul\":20849:20854   */\n      dup2\n        /* \"#utility.yul\":20843:20855   */\n      mload\n        /* \"#utility.yul\":20833:20855   */\n      swap1\n      pop\n        /* \"#utility.yul\":20763:20862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20868:20970   */\n    tag_445:\n        /* \"#utility.yul\":20909:20915   */\n      0x00\n        /* \"#utility.yul\":20960:20962   */\n      0x1f\n        /* \"#utility.yul\":20956:20963   */\n      not\n        /* \"#utility.yul\":20951:20953   */\n      0x1f\n        /* \"#utility.yul\":20944:20949   */\n      dup4\n        /* \"#utility.yul\":20940:20954   */\n      add\n        /* \"#utility.yul\":20936:20964   */\n      and\n        /* \"#utility.yul\":20926:20964   */\n      swap1\n      pop\n        /* \"#utility.yul\":20868:20970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20976:21353   */\n    tag_446:\n        /* \"#utility.yul\":21064:21067   */\n      0x00\n        /* \"#utility.yul\":21092:21131   */\n      tag_647\n        /* \"#utility.yul\":21125:21130   */\n      dup3\n        /* \"#utility.yul\":21092:21131   */\n      tag_444\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":21147:21218   */\n      tag_648\n        /* \"#utility.yul\":21211:21217   */\n      dup2\n        /* \"#utility.yul\":21206:21209   */\n      dup6\n        /* \"#utility.yul\":21147:21218   */\n      tag_422\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":21140:21218   */\n      swap4\n      pop\n        /* \"#utility.yul\":21227:21292   */\n      tag_649\n        /* \"#utility.yul\":21285:21291   */\n      dup2\n        /* \"#utility.yul\":21280:21283   */\n      dup6\n        /* \"#utility.yul\":21273:21277   */\n      0x20\n        /* \"#utility.yul\":21266:21271   */\n      dup7\n        /* \"#utility.yul\":21262:21278   */\n      add\n        /* \"#utility.yul\":21227:21292   */\n      tag_440\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":21317:21346   */\n      tag_650\n        /* \"#utility.yul\":21339:21345   */\n      dup2\n        /* \"#utility.yul\":21317:21346   */\n      tag_445\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":21312:21315   */\n      dup5\n        /* \"#utility.yul\":21308:21347   */\n      add\n        /* \"#utility.yul\":21301:21347   */\n      swap2\n      pop\n        /* \"#utility.yul\":21068:21353   */\n      pop\n        /* \"#utility.yul\":20976:21353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21359:21672   */\n    tag_390:\n        /* \"#utility.yul\":21472:21476   */\n      0x00\n        /* \"#utility.yul\":21510:21512   */\n      0x20\n        /* \"#utility.yul\":21499:21508   */\n      dup3\n        /* \"#utility.yul\":21495:21513   */\n      add\n        /* \"#utility.yul\":21487:21513   */\n      swap1\n      pop\n        /* \"#utility.yul\":21559:21568   */\n      dup2\n        /* \"#utility.yul\":21553:21557   */\n      dup2\n        /* \"#utility.yul\":21549:21569   */\n      sub\n        /* \"#utility.yul\":21545:21546   */\n      0x00\n        /* \"#utility.yul\":21534:21543   */\n      dup4\n        /* \"#utility.yul\":21530:21547   */\n      add\n        /* \"#utility.yul\":21523:21570   */\n      mstore\n        /* \"#utility.yul\":21587:21665   */\n      tag_652\n        /* \"#utility.yul\":21660:21664   */\n      dup2\n        /* \"#utility.yul\":21651:21657   */\n      dup5\n        /* \"#utility.yul\":21587:21665   */\n      tag_446\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":21579:21665   */\n      swap1\n      pop\n        /* \"#utility.yul\":21359:21672   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201019a6fc57bf444c1fc6a3c0fda26e5d5fcb01d37e54f8f916221bbedcc40bbc64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_883": {
									"entryPoint": null,
									"id": 883,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_454": {
									"entryPoint": 180,
									"id": 454,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 188,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialized_933": {
									"entryPoint": 384,
									"id": 933,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IBEP20_$1913_fromMemory": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IBEP20_$1913_fromMemory": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IBEP20_$1913": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IBEP20_$1913": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1406:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "667:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "649:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "638:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IBEP20_$1913",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "610:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "620:7:8",
														"type": ""
													}
												],
												"src": "568:111:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "743:94:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "815:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "824:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "827:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "817:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "817:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "817:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "766:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "806:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IBEP20_$1913",
																					"nodeType": "YulIdentifier",
																					"src": "773:32:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "773:39:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "763:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:50:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "756:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:58:8"
															},
															"nodeType": "YulIf",
															"src": "753:78:8"
														}
													]
												},
												"name": "validator_revert_t_contract$_IBEP20_$1913",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "736:5:8",
														"type": ""
													}
												],
												"src": "685:152:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "921:95:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "931:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "946:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "940:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "940:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "931:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1004:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IBEP20_$1913",
																	"nodeType": "YulIdentifier",
																	"src": "962:41:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "962:48:8"
														}
													]
												},
												"name": "abi_decode_t_contract$_IBEP20_$1913_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "899:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "907:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "915:5:8",
														"type": ""
													}
												],
												"src": "843:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:289:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1160:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1162:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1162:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1162:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1135:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1144:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1131:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1156:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1127:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:32:8"
															},
															"nodeType": "YulIf",
															"src": "1124:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1253:143:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1268:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1282:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1272:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1297:89:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1358:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1369:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1354:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1354:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1378:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IBEP20_$1913_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1307:46:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1307:79:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1297:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IBEP20_$1913_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1084:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1095:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1107:6:8",
														"type": ""
													}
												],
												"src": "1022:381:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IBEP20_$1913(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IBEP20_$1913(value) {\n        if iszero(eq(value, cleanup_t_contract$_IBEP20_$1913(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IBEP20_$1913_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IBEP20_$1913(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IBEP20_$1913_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IBEP20_$1913_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x28B6 CODESIZE SUB DUP1 PUSH3 0x28B6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3C SWAP2 SWAP1 PUSH3 0x287 JUMP JUMPDEST PUSH3 0x5C PUSH3 0x50 PUSH3 0xB4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xBC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0xAD PUSH3 0x180 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x2B9 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x5 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x23B DUP3 PUSH3 0x20E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24F DUP3 PUSH3 0x22E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x261 DUP2 PUSH3 0x242 JUMP JUMPDEST DUP2 EQ PUSH3 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x281 DUP2 PUSH3 0x256 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2A0 JUMPI PUSH3 0x29F PUSH3 0x209 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2B0 DUP5 DUP3 DUP6 ADD PUSH3 0x270 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25ED DUP1 PUSH3 0x2C9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AA28550 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x98969E82 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x98969E82 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xA18F07A0 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0xE3D0B2BF EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xEC342AD0 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D2 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x918F8674 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x2E8 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x3E3CCA90 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x3E3CCA90 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x771602F7 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x240 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x14D20DC2 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x2F380B35 EQ PUSH2 0x1B0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1BE2 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1C0F JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1D66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x222 PUSH2 0x765 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x248 PUSH2 0x80A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x836 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x112C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39E PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BC PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x14EB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3C SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x40C PUSH2 0x156E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x422 JUMPI PUSH2 0x421 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x497 PUSH2 0x156E JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x4E3 PUSH2 0x1AB3 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4F7 JUMPI PUSH2 0x4F6 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x585 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x53F JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x5D0 JUMPI PUSH2 0x5CF PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x672 SWAP1 PUSH2 0x1FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH2 0x697 DUP4 PUSH1 0x0 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x704 JUMPI PUSH1 0x0 PUSH2 0x6A9 DUP6 CALLER PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x702 JUMPI PUSH2 0x701 CALLER DUP3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1602 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP JUMPDEST PUSH2 0x755 CALLER DUP3 PUSH1 0x0 ADD SLOAD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1602 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x76D PUSH2 0x156E JUMP JUMPDEST PUSH2 0x777 PUSH1 0x0 PUSH2 0x1688 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x781 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP DUP2 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x874 DUP4 DUP4 PUSH2 0x174C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x8D2 JUMPI PUSH2 0x8D1 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP4 PUSH1 0x2 ADD SLOAD DUP6 PUSH1 0x1 ADD PUSH1 0x1 DUP6 PUSH2 0x95B SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x96C JUMPI PUSH2 0x96B PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0xA26 JUMPI PUSH2 0x992 DUP5 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x85F JUMP JUMPDEST SWAP2 POP PUSH2 0x9F0 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x9E2 DUP8 PUSH1 0x1 ADD PUSH1 0x1 DUP8 PUSH2 0x9B0 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x9C1 JUMPI PUSH2 0x9C0 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP PUSH2 0xA1A PUSH1 0x64 PUSH2 0xA0C PUSH2 0x12C DUP10 PUSH2 0x1778 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1778 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 ADD SLOAD SWAP1 POP JUMPDEST PUSH1 0x1 DUP5 PUSH2 0xA3D SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xBDD JUMPI DUP2 PUSH2 0xAE7 JUMPI PUSH2 0xA8A DUP6 PUSH1 0x2 ADD SLOAD DUP8 PUSH1 0x1 ADD PUSH1 0x1 DUP5 PUSH2 0xA62 SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA73 JUMPI PUSH2 0xA72 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x85F JUMP JUMPDEST SWAP3 POP PUSH2 0xADC DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0xACE DUP9 PUSH1 0x1 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xAAD JUMPI PUSH2 0xAAC PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP7 PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP7 POP PUSH1 0x1 SWAP2 POP PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D DUP8 PUSH1 0x1 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB02 JUMPI PUSH2 0xB01 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x1 ADD PUSH1 0x1 DUP6 PUSH2 0xB25 SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB36 JUMPI PUSH2 0xB35 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x85F JUMP JUMPDEST SWAP1 POP PUSH2 0xBB1 PUSH2 0xBA2 DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0xB94 DUP11 PUSH1 0x1 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xB73 JUMPI PUSH2 0xB72 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 POP PUSH2 0xBC6 DUP2 DUP6 PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xBD5 SWAP1 PUSH2 0x207B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA30 JUMP JUMPDEST POP PUSH2 0xC1B DUP6 PUSH1 0x1 ADD PUSH1 0x1 DUP6 PUSH2 0xBF2 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xC03 JUMPI PUSH2 0xC02 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD NUMBER PUSH2 0x85F JUMP JUMPDEST SWAP2 POP PUSH2 0xC8B PUSH2 0xC7C DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0xC6E DUP9 PUSH1 0x1 ADD PUSH1 0x1 DUP9 PUSH2 0xC3C SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP7 PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xCB0 JUMPI PUSH2 0xCAF PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP4 PUSH1 0x2 ADD SLOAD DUP6 PUSH1 0x1 ADD PUSH1 0x1 DUP6 PUSH2 0xD39 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD4A JUMPI PUSH2 0xD49 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0xDD1 JUMPI DUP5 PUSH1 0x0 ADD SLOAD SWAP2 POP PUSH2 0xDC5 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0xDB7 DUP8 PUSH1 0x1 ADD PUSH1 0x1 DUP8 PUSH2 0xD85 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD96 JUMPI PUSH2 0xD95 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x1126 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 ADD SLOAD SWAP1 POP JUMPDEST PUSH1 0x1 DUP5 PUSH2 0xDE8 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1099 JUMPI DUP2 PUSH2 0xEFF JUMPI PUSH2 0xE35 DUP6 PUSH1 0x2 ADD SLOAD DUP8 PUSH1 0x1 ADD PUSH1 0x1 DUP5 PUSH2 0xE0D SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xE1E JUMPI PUSH2 0xE1D PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x85F JUMP JUMPDEST SWAP3 POP DUP6 PUSH1 0x0 ADD SLOAD DUP4 GT ISZERO PUSH2 0xEA4 JUMPI PUSH2 0xE97 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0xE89 DUP9 PUSH1 0x1 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xE64 JUMPI PUSH2 0xE63 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x1126 JUMP JUMPDEST PUSH2 0xEF4 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0xEE6 DUP9 PUSH1 0x1 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xEC5 JUMPI PUSH2 0xEC4 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP7 PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP7 POP PUSH1 0x1 SWAP2 POP PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF65 DUP8 PUSH1 0x1 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xF1A JUMPI PUSH2 0xF19 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x1 ADD PUSH1 0x1 DUP6 PUSH2 0xF3D SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xF4E JUMPI PUSH2 0xF4D PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x85F JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0xF7F DUP6 DUP4 PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x100B JUMPI PUSH2 0xFFD PUSH2 0xFEE DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0xFE0 DUP11 PUSH1 0x1 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xFA9 JUMPI PUSH2 0xFA8 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0xFD2 DUP10 DUP14 PUSH1 0x0 ADD SLOAD PUSH2 0x174C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x106D PUSH2 0x105E DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1050 DUP11 PUSH1 0x1 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x102F JUMPI PUSH2 0x102E PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 POP PUSH2 0x1082 DUP2 DUP6 PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1091 SWAP1 PUSH2 0x207B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDDB JUMP JUMPDEST POP PUSH2 0x111E PUSH2 0x110F DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1101 DUP9 PUSH1 0x1 ADD PUSH1 0x1 DUP9 PUSH2 0x10B9 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x10CA JUMPI PUSH2 0x10C9 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0x10F3 DUP8 DUP12 PUSH1 0x0 ADD SLOAD PUSH2 0x174C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1142 JUMPI PUSH2 0x1141 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x140D JUMPI TIMESTAMP PUSH2 0x11CF DUP4 PUSH1 0x0 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x1324 JUMPI PUSH1 0x0 PUSH2 0x11E1 DUP6 CALLER PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x123A JUMPI PUSH2 0x1239 CALLER DUP3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1602 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x1289 CALLER ADDRESS DUP7 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x178E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12A0 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x12C5 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1314 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x14DC JUMP JUMPDEST PUSH2 0x1373 CALLER ADDRESS DUP6 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x178E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x138A DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x13AF SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x13FE SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x14DC JUMP JUMPDEST TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x142A SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x148A CALLER ADDRESS DUP6 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x178E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x14D1 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x12C DUP2 JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH2 0x14F3 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1562 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1559 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x156B DUP2 PUSH2 0x1688 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1576 PUSH2 0x1817 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1594 PUSH2 0x836 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E1 SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x15FA SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1683 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1621 SWAP3 SWAP2 SWAP1 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x181F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x175A SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1770 SWAP2 SWAP1 PUSH2 0x21EA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1786 SWAP2 SWAP1 PUSH2 0x225B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1811 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17AF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x228C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x181F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1881 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18E6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x18E1 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x18A1 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH2 0x18E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D7 SWAP1 PUSH2 0x239A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x18F5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x18FE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1943 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193A SWAP1 PUSH2 0x242C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x196C SWAP2 SWAP1 PUSH2 0x24BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19A9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x19BF DUP8 DUP4 DUP4 DUP8 PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1A2D JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1A25 JUMPI PUSH2 0x19E5 DUP6 PUSH2 0x1A40 JUMP JUMPDEST PUSH2 0x1A24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1B SWAP1 PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1A38 JUMP JUMPDEST PUSH2 0x1A37 DUP4 DUP4 PUSH2 0x1A63 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1A76 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AAA SWAP2 SWAP1 PUSH2 0x2595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE0 DUP2 PUSH2 0x1ACD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AFB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B0F DUP2 PUSH2 0x1ACD JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2C DUP2 PUSH2 0x1B06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B49 JUMPI PUSH2 0x1B48 PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B57 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B68 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B9D DUP3 PUSH2 0x1B72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BAF DUP3 PUSH2 0x1B92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BBF DUP2 PUSH2 0x1BA4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BDC DUP2 PUSH2 0x1BB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF8 JUMPI PUSH2 0x1BF7 PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C06 DUP5 DUP3 DUP6 ADD PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C25 JUMPI PUSH2 0x1C24 PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C33 DUP5 DUP3 DUP6 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C45 DUP2 PUSH2 0x1ACD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1C8D PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1C3C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1CA0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1C3C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB2 DUP4 DUP4 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD6 DUP3 PUSH2 0x1C4B JUMP JUMPDEST PUSH2 0x1CE0 DUP2 DUP6 PUSH2 0x1C56 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CEB DUP4 PUSH2 0x1C67 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D1C JUMPI DUP2 MLOAD PUSH2 0x1D03 DUP9 DUP3 PUSH2 0x1CA6 JUMP JUMPDEST SWAP8 POP PUSH2 0x1D0E DUP4 PUSH2 0x1CBE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1CEF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x1D41 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x1C3C JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1D59 DUP3 DUP3 PUSH2 0x1CCB JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D80 DUP2 DUP5 PUSH2 0x1D29 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DAD PUSH2 0x1DA8 PUSH2 0x1DA3 DUP5 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x1D88 JUMP JUMPDEST PUSH2 0x1B72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBF DUP3 PUSH2 0x1D92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD1 DUP3 PUSH2 0x1DB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DE1 DUP2 PUSH2 0x1DC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DFC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0D DUP3 PUSH2 0x1DB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E1D DUP2 PUSH2 0x1E02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E38 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E47 DUP2 PUSH2 0x1B92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E62 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E71 DUP2 PUSH2 0x1B92 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E8E DUP2 PUSH2 0x1E68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EAB JUMPI PUSH2 0x1EAA PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EB9 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ECA DUP6 DUP3 DUP7 ADD PUSH2 0x1E7F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EE9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1AD7 JUMP JUMPDEST PUSH2 0x1EF6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AD7 JUMP JUMPDEST PUSH2 0x1F03 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AD7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F21 JUMPI PUSH2 0x1F20 PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F2F DUP5 DUP3 DUP6 ADD PUSH2 0x1E7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42464C593A2053554646494349454E545F42414C414E43450000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FAE PUSH1 0x18 DUP4 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB9 DUP3 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FDD DUP2 PUSH2 0x1FA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x201E DUP3 PUSH2 0x1ACD JUMP JUMPDEST SWAP2 POP PUSH2 0x2029 DUP4 PUSH2 0x1ACD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2041 JUMPI PUSH2 0x2040 PUSH2 0x1FE4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2052 DUP3 PUSH2 0x1ACD JUMP JUMPDEST SWAP2 POP PUSH2 0x205D DUP4 PUSH2 0x1ACD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2075 JUMPI PUSH2 0x2074 PUSH2 0x1FE4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2086 DUP3 PUSH2 0x1ACD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x20B8 JUMPI PUSH2 0x20B7 PUSH2 0x1FE4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211F PUSH1 0x26 DUP4 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP PUSH2 0x212A DUP3 PUSH2 0x20C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x214E DUP2 PUSH2 0x2112 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x218B PUSH1 0x20 DUP4 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP PUSH2 0x2196 DUP3 PUSH2 0x2155 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21BA DUP2 PUSH2 0x217E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21D6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E3E JUMP JUMPDEST PUSH2 0x21E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AD7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F5 DUP3 PUSH2 0x1ACD JUMP JUMPDEST SWAP2 POP PUSH2 0x2200 DUP4 PUSH2 0x1ACD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x220E DUP2 PUSH2 0x1ACD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2225 JUMPI PUSH2 0x2224 PUSH2 0x1FE4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2266 DUP3 PUSH2 0x1ACD JUMP JUMPDEST SWAP2 POP PUSH2 0x2271 DUP4 PUSH2 0x1ACD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2281 JUMPI PUSH2 0x2280 PUSH2 0x222C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x22A1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1E3E JUMP JUMPDEST PUSH2 0x22AE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E3E JUMP JUMPDEST PUSH2 0x22BB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AD7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D8 DUP2 PUSH2 0x22C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x22E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22F5 DUP2 PUSH2 0x22CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2311 JUMPI PUSH2 0x2310 PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x231F DUP5 DUP3 DUP6 ADD PUSH2 0x22E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2384 PUSH1 0x2A DUP4 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP PUSH2 0x238F DUP3 PUSH2 0x2328 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B3 DUP2 PUSH2 0x2377 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2416 PUSH1 0x26 DUP4 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP PUSH2 0x2421 DUP3 PUSH2 0x23BA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2445 DUP2 PUSH2 0x2409 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2480 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2465 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2497 DUP3 PUSH2 0x244C JUMP JUMPDEST PUSH2 0x24A1 DUP2 DUP6 PUSH2 0x2457 JUMP JUMPDEST SWAP4 POP PUSH2 0x24B1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2462 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24C9 DUP3 DUP5 PUSH2 0x248C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x250A PUSH1 0x1D DUP4 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP PUSH2 0x2515 DUP3 PUSH2 0x24D4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2539 DUP2 PUSH2 0x24FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2567 DUP3 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2571 DUP2 DUP6 PUSH2 0x1F67 JUMP JUMPDEST SWAP4 POP PUSH2 0x2581 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2462 JUMP JUMPDEST PUSH2 0x258A DUP2 PUSH2 0x254B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25AF DUP2 DUP5 PUSH2 0x255C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT NOT 0xA6 0xFC JUMPI 0xBF DIFFICULTY 0x4C 0x1F 0xC6 LOG3 0xC0 REVERT LOG2 PUSH15 0x5D5FCB01D37E54F8F916221BBEDCC4 SIGNEXTEND 0xBC PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "348:13203:4:-:0;;;2708:1;2674:35;;3384:634;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;3510:5:4;3503:4;;:12;;;;;;;;;;;;;;;;;;3997:13;:11;;;:13;;:::i;:::-;3384:634;348:13203;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;4231:707:4:-;4314:18;4335:9;:16;;;;;;;;;;;;;;;;;;;;;;;;4314:37;;4364:1;:6;;4376:28;;;;;;;;4384:2;4376:28;;;;4388:15;4376:28;;;4364:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4429:1;4416;:10;;:14;;;;4261:677;4231:707::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:111::-;620:7;649:24;667:5;649:24;:::i;:::-;638:35;;568:111;;;:::o;685:152::-;773:39;806:5;773:39;:::i;:::-;766:5;763:50;753:78;;827:1;824;817:12;753:78;685:152;:::o;843:173::-;915:5;946:6;940:13;931:22;;962:48;1004:5;962:48;:::i;:::-;843:173;;;;:::o;1022:381::-;1107:6;1156:2;1144:9;1135:7;1131:23;1127:32;1124:119;;;1162:79;;:::i;:::-;1124:119;1282:1;1307:79;1378:7;1369:6;1358:9;1354:22;1307:79;:::i;:::-;1297:89;;1253:143;1022:381;;;;:::o;348:13203:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BASE_799": {
									"entryPoint": 5350,
									"id": 799,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BONUS_MULTIPLIER_840": {
									"entryPoint": 2096,
									"id": 840,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DENOMINATOR_796": {
									"entryPoint": 2172,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DENOMINATOR_TEST_802": {
									"entryPoint": 5344,
									"id": 802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_2144": {
									"entryPoint": 6175,
									"id": 2144,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 5486,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_454": {
									"entryPoint": 6167,
									"id": 454,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_441": {
									"entryPoint": 6755,
									"id": 441,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 5768,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@aadd_891": {
									"entryPoint": 1019,
									"id": 891,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@add_640": {
									"entryPoint": 5612,
									"id": 640,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@add_979": {
									"entryPoint": 1913,
									"id": 979,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculateReward_1511": {
									"entryPoint": 3225,
									"id": 1511,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deposit_1727": {
									"entryPoint": 4396,
									"id": 1727,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@div_685": {
									"entryPoint": 6008,
									"id": 685,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_266": {
									"entryPoint": 6398,
									"id": 266,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_202": {
									"entryPoint": 6374,
									"id": 202,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getMultiplier_1039": {
									"entryPoint": 2143,
									"id": 1039,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPoolInfo_904": {
									"entryPoint": 1243,
									"id": 904,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_130": {
									"entryPoint": 6720,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@migrator_844": {
									"entryPoint": 2058,
									"id": 844,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_670": {
									"entryPoint": 5986,
									"id": 670,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 2102,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@para_836": {
									"entryPoint": 1428,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pendingReward_1259": {
									"entryPoint": 2235,
									"id": 1259,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolLength_943": {
									"entryPoint": 1006,
									"id": 943,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1893,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1987": {
									"entryPoint": 6030,
									"id": 1987,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_1961": {
									"entryPoint": 5634,
									"id": 1961,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setMigrator_1023": {
									"entryPoint": 1167,
									"id": 1023,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@set_1009": {
									"entryPoint": 1028,
									"id": 1009,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_655": {
									"entryPoint": 5964,
									"id": 655,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 5355,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_832": {
									"entryPoint": 2180,
									"id": 832,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_397": {
									"entryPoint": 6603,
									"id": 397,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdraw_1811": {
									"entryPoint": 1466,
									"id": 1811,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IMigratorChef_$1926": {
									"entryPoint": 7117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IMigratorChef_$1926": {
									"entryPoint": 7138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 7828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_struct$_AprInfo_$814_memory_ptr_to_t_struct$_AprInfo_$814_memory_ptr": {
									"entryPoint": 7334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IBEP20_$1913_to_t_address_fromStack": {
									"entryPoint": 7640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IMigratorChef_$1926_to_t_address_fromStack": {
									"entryPoint": 7700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_876f7f9e4780f33e63eb3317edb660ae4a2d4ec1a87e78bffd7c78916a0979f9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_AprInfo_$814_memory_ptr_to_t_struct$_AprInfo_$814_memory_ptr": {
									"entryPoint": 7287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_PoolInfo_$821_memory_ptr_to_t_struct$_PoolInfo_$821_memory_ptr_fromStack": {
									"entryPoint": 7465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8844,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8641,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$1913__to_t_address__fromStack_reversed": {
									"entryPoint": 7655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IMigratorChef_$1926__to_t_address__fromStack_reversed": {
									"entryPoint": 7715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_876f7f9e4780f33e63eb3317edb660ae4a2d4ec1a87e78bffd7c78916a0979f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_PoolInfo_$821_memory_ptr__to_t_struct$_PoolInfo_$821_memory_ptr__fromStack_reversed": {
									"entryPoint": 7526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7892,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IMigratorChef_$1926": {
									"entryPoint": 7076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBEP20_$1913_to_t_address": {
									"entryPoint": 7622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IMigratorChef_$1926_to_t_address": {
									"entryPoint": 7682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9314,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8164,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8748,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7992,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6913,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082": {
									"entryPoint": 9000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 8387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 9146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_876f7f9e4780f33e63eb3317edb660ae4a2d4ec1a87e78bffd7c78916a0979f9": {
									"entryPoint": 8056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 8533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 9428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IMigratorChef_$1926": {
									"entryPoint": 7094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21675:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:8",
														"type": ""
													}
												],
												"src": "90:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:8",
														"type": ""
													}
												],
												"src": "214:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:8",
														"type": ""
													}
												],
												"src": "442:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:8"
															},
															"nodeType": "YulIf",
															"src": "822:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:8",
														"type": ""
													}
												],
												"src": "769:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:8",
														"type": ""
													}
												],
												"src": "897:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1125:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1171:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1173:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1173:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1173:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1146:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1155:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1142:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1142:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1167:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1138:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:32:8"
															},
															"nodeType": "YulIf",
															"src": "1135:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1264:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1279:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1293:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1283:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1308:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1343:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1354:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1339:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1339:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1318:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1308:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1391:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1406:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1420:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1410:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1436:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1471:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1482:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1467:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1467:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1491:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1446:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1436:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1087:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1098:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1110:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1118:6:8",
														"type": ""
													}
												],
												"src": "1042:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1567:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1577:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1592:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1588:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1588:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1577:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1549:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1559:7:8",
														"type": ""
													}
												],
												"src": "1522:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1699:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1709:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1738:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1720:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1709:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1681:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1691:7:8",
														"type": ""
													}
												],
												"src": "1654:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1823:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1833:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1862:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1844:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1844:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1833:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IMigratorChef_$1926",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1805:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1815:7:8",
														"type": ""
													}
												],
												"src": "1756:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1945:101:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2024:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2033:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2036:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2026:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2026:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2026:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1968:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2015:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IMigratorChef_$1926",
																					"nodeType": "YulIdentifier",
																					"src": "1975:39:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1975:46:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1965:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1965:57:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1958:65:8"
															},
															"nodeType": "YulIf",
															"src": "1955:85:8"
														}
													]
												},
												"name": "validator_revert_t_contract$_IMigratorChef_$1926",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1938:5:8",
														"type": ""
													}
												],
												"src": "1880:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2126:109:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2136:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2158:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2145:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2145:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2136:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2223:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IMigratorChef_$1926",
																	"nodeType": "YulIdentifier",
																	"src": "2174:48:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2174:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2174:55:8"
														}
													]
												},
												"name": "abi_decode_t_contract$_IMigratorChef_$1926",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2104:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2112:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2120:5:8",
														"type": ""
													}
												],
												"src": "2052:183:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2329:285:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2375:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2377:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2377:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2377:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2350:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2359:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2346:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2346:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2371:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2342:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2342:32:8"
															},
															"nodeType": "YulIf",
															"src": "2339:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2468:139:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2483:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2497:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2487:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2512:85:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2569:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2580:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2565:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2565:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2589:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IMigratorChef_$1926",
																			"nodeType": "YulIdentifier",
																			"src": "2522:42:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2522:75:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2512:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IMigratorChef_$1926",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2299:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2310:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2322:6:8",
														"type": ""
													}
												],
												"src": "2241:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2686:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2732:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2734:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2734:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2734:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2707:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2703:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2703:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2728:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2699:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2699:32:8"
															},
															"nodeType": "YulIf",
															"src": "2696:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2825:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2840:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2854:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2844:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2869:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2904:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2915:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2900:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2900:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2924:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2879:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2879:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2869:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2656:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2667:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2679:6:8",
														"type": ""
													}
												],
												"src": "2620:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3010:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3027:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3050:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3032:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3032:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3020:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3020:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3020:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2998:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3005:3:8",
														"type": ""
													}
												],
												"src": "2955:108:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3167:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3178:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3194:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3188:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3188:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3178:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3150:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3160:6:8",
														"type": ""
													}
												],
												"src": "3069:138:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3338:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3355:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3360:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3376:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3395:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3400:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3391:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3391:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3376:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3310:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3315:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3326:11:8",
														"type": ""
													}
												],
												"src": "3213:198:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3513:60:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3523:11:8",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "3531:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3523:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3544:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3556:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3561:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3552:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3552:14:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3544:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3500:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3508:4:8",
														"type": ""
													}
												],
												"src": "3417:156:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3741:390:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3751:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3772:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3763:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3763:14:8"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "3755:4:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3787:163:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3821:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3851:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3858:4:8",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3847:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3847:16:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3841:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3841:23:8"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3825:12:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3911:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3929:3:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3934:4:8",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3925:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3925:14:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3877:33:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3877:63:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3877:63:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3960:164:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3995:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4025:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4032:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4021:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4021:16:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4015:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4015:23:8"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3999:12:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4085:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4103:3:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4108:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4099:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4099:14:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4051:33:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4051:63:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4051:63:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_AprInfo_$814_memory_ptr_to_t_struct$_AprInfo_$814_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3728:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3735:3:8",
														"type": ""
													}
												],
												"src": "3637:494:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4265:147:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4357:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4365:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_AprInfo_$814_memory_ptr_to_t_struct$_AprInfo_$814_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4275:81:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4275:94:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4275:94:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4378:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4396:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4401:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4392:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:14:8"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "4378:10:8"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_AprInfo_$814_memory_ptr_to_t_struct$_AprInfo_$814_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4238:6:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4246:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "4254:10:8",
														"type": ""
													}
												],
												"src": "4137:275:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4517:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4527:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4539:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4544:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4535:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4535:14:8"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "4527:4:8"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4504:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "4512:4:8",
														"type": ""
													}
												],
												"src": "4418:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4785:742:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4795:92:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4881:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4809:71:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4809:78:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4799:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4896:107:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4991:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4996:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4903:87:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4903:100:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5012:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5101:5:8"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5027:73:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5027:80:8"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "5016:7:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5116:21:8",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "5130:7:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5120:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5206:296:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5220:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5247:6:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5241:5:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5241:13:8"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "5224:13:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5267:118:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "5366:13:8"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5381:3:8"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_AprInfo_$814_memory_ptr_to_t_struct$_AprInfo_$814_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5274:91:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5274:111:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5267:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5398:94:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5485:6:8"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5408:76:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5408:84:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5398:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5168:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5171:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5165:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5165:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5179:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5181:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5190:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5193:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5186:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5186:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5181:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5150:14:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5152:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5161:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "5156:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5146:356:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5511:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5518:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5511:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4764:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4771:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4780:3:8",
														"type": ""
													}
												],
												"src": "4623:904:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5717:564:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5727:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5743:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5748:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5739:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5739:14:8"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "5731:4:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5763:168:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5802:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5832:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5839:4:8",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5828:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5828:16:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5822:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5822:23:8"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5806:12:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5892:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5910:3:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5915:4:8",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5906:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5906:14:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5858:33:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5858:63:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5858:63:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5941:313:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5976:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6006:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6013:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6002:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6002:16:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5996:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5996:23:8"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5980:12:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6044:3:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6049:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6040:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6040:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "6060:4:8"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6066:3:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6056:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6056:14:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "6033:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6033:38:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6033:38:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6084:159:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6224:12:8"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6238:4:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6092:131:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6092:151:8"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "6084:4:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6264:11:8",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "6271:4:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6264:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_PoolInfo_$821_memory_ptr_to_t_struct$_PoolInfo_$821_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5696:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5703:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5712:3:8",
														"type": ""
													}
												],
												"src": "5593:688:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6435:225:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6445:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6457:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6468:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6453:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6453:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6445:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6492:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6503:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6488:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6488:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6511:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6517:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6507:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6507:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6481:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6481:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6481:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6537:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6639:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6648:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_PoolInfo_$821_memory_ptr_to_t_struct$_PoolInfo_$821_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6545:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6545:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6537:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_PoolInfo_$821_memory_ptr__to_t_struct$_PoolInfo_$821_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6407:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6419:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6430:4:8",
														"type": ""
													}
												],
												"src": "6287:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6698:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6708:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6715:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6708:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6684:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6694:3:8",
														"type": ""
													}
												],
												"src": "6666:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6792:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6802:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6860:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "6842:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6842:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "6833:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6833:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6815:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6815:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6802:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6772:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6782:9:8",
														"type": ""
													}
												],
												"src": "6732:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6940:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6950:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6994:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6963:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6963:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6950:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6920:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6930:9:8",
														"type": ""
													}
												],
												"src": "6880:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7087:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7097:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7141:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7110:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7110:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7097:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBEP20_$1913_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7067:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7077:9:8",
														"type": ""
													}
												],
												"src": "7012:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7239:81:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7256:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7307:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBEP20_$1913_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7261:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7261:52:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7249:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7249:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7249:65:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBEP20_$1913_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7227:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7234:3:8",
														"type": ""
													}
												],
												"src": "7159:161:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7439:139:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7449:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7461:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7472:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7457:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7457:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7449:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7544:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7557:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7568:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7553:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7553:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBEP20_$1913_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7485:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7485:86:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7485:86:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$1913__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7411:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7423:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7434:4:8",
														"type": ""
													}
												],
												"src": "7326:252:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7666:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7676:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7720:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7689:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7689:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7676:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IMigratorChef_$1926_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7646:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7656:9:8",
														"type": ""
													}
												],
												"src": "7584:148:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7825:88:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7842:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7900:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IMigratorChef_$1926_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7847:52:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7847:59:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7835:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7835:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7835:72:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IMigratorChef_$1926_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7813:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7820:3:8",
														"type": ""
													}
												],
												"src": "7738:175:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8039:146:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8049:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8061:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8072:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8057:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8057:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8049:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8151:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8164:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8175:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8160:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8160:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IMigratorChef_$1926_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8085:65:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8085:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8085:93:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IMigratorChef_$1926__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8011:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8023:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8034:4:8",
														"type": ""
													}
												],
												"src": "7919:266:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8256:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8273:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8296:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8278:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8278:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8266:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8266:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8266:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8244:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8251:3:8",
														"type": ""
													}
												],
												"src": "8191:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8413:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8423:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8435:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8446:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8431:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8431:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8423:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8503:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8516:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8527:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8512:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8512:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8459:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8459:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8459:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8385:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8397:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8408:4:8",
														"type": ""
													}
												],
												"src": "8315:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8586:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8643:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8652:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8655:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8645:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8645:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8645:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8609:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8634:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "8616:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8616:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8606:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8606:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8599:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8599:43:8"
															},
															"nodeType": "YulIf",
															"src": "8596:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8579:5:8",
														"type": ""
													}
												],
												"src": "8543:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8723:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8733:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8755:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8742:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8742:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8733:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8798:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8771:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8771:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8771:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8701:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8709:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8717:5:8",
														"type": ""
													}
												],
												"src": "8671:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8899:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8945:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8947:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8947:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8947:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8920:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8929:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8916:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8916:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8941:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8912:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8912:32:8"
															},
															"nodeType": "YulIf",
															"src": "8909:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "9038:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9053:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9067:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9057:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9082:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9117:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9128:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9113:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9113:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9137:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9092:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9092:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9082:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9165:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9180:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9194:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9184:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9210:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9245:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9256:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9241:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9241:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9265:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9220:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9220:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9210:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8861:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8872:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8884:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8892:6:8",
														"type": ""
													}
												],
												"src": "8816:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9450:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9460:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9472:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9483:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9468:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9468:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9460:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9540:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9553:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9564:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9549:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9549:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9496:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9496:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9496:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9621:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9634:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9645:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9630:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9630:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9577:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9577:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9577:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9703:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9716:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9727:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9712:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9712:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9659:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9659:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9659:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9406:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9418:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9426:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9434:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9445:4:8",
														"type": ""
													}
												],
												"src": "9296:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9810:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9856:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9858:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9858:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9858:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9831:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9840:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9827:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9827:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9852:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9823:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9823:32:8"
															},
															"nodeType": "YulIf",
															"src": "9820:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "9949:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9964:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9978:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9968:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9993:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10028:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10039:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10024:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10024:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10048:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10003:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10003:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9993:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9780:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9791:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9803:6:8",
														"type": ""
													}
												],
												"src": "9744:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10107:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10124:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10127:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10117:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10117:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10117:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10221:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10224:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10214:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10214:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10214:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10245:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10248:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10238:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10238:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10238:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10079:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10361:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10378:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10383:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10371:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10371:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10371:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10399:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10418:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10423:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10414:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10414:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10399:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10333:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10338:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10349:11:8",
														"type": ""
													}
												],
												"src": "10265:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10546:68:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10568:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10576:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10564:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10564:14:8"
																	},
																	{
																		"hexValue": "42464c593a2053554646494349454e545f42414c414e4345",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10580:26:8",
																		"type": "",
																		"value": "BFLY: SUFFICIENT_BALANCE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10557:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10557:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10557:50:8"
														}
													]
												},
												"name": "store_literal_in_memory_876f7f9e4780f33e63eb3317edb660ae4a2d4ec1a87e78bffd7c78916a0979f9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10538:6:8",
														"type": ""
													}
												],
												"src": "10440:174:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10766:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10776:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10842:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10847:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10783:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10783:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10776:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10948:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_876f7f9e4780f33e63eb3317edb660ae4a2d4ec1a87e78bffd7c78916a0979f9",
																	"nodeType": "YulIdentifier",
																	"src": "10859:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10859:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10859:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10961:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10972:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10977:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10968:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10968:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10961:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_876f7f9e4780f33e63eb3317edb660ae4a2d4ec1a87e78bffd7c78916a0979f9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10754:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10762:3:8",
														"type": ""
													}
												],
												"src": "10620:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11163:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11173:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11185:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11196:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11181:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11181:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11173:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11220:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11231:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11216:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11216:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11239:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11245:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11235:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11235:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11209:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11209:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11209:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11265:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11399:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_876f7f9e4780f33e63eb3317edb660ae4a2d4ec1a87e78bffd7c78916a0979f9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11273:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11273:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11265:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_876f7f9e4780f33e63eb3317edb660ae4a2d4ec1a87e78bffd7c78916a0979f9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11143:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11158:4:8",
														"type": ""
													}
												],
												"src": "10992:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11445:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11462:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11465:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11455:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11455:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11455:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11559:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11562:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11552:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11552:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11552:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11583:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11586:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11576:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11576:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11576:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11417:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11648:149:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11658:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11681:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11663:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11663:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11658:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11692:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11715:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11697:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11697:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11692:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11726:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11738:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11741:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11734:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11734:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11726:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11768:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11770:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11770:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11770:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "11759:4:8"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11765:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11756:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11756:11:8"
															},
															"nodeType": "YulIf",
															"src": "11753:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11634:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11637:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11643:4:8",
														"type": ""
													}
												],
												"src": "11603:194:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11847:147:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11857:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11880:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11862:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11862:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11857:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11891:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11914:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11896:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11896:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11891:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11925:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11936:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11939:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11932:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11932:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11925:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11965:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11967:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11967:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11967:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11957:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "11960:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11954:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11954:10:8"
															},
															"nodeType": "YulIf",
															"src": "11951:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11834:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11837:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11843:3:8",
														"type": ""
													}
												],
												"src": "11803:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12043:190:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12053:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12080:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12062:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12062:24:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12053:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12176:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12178:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12178:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12178:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12101:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12108:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12098:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12098:77:8"
															},
															"nodeType": "YulIf",
															"src": "12095:103:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12207:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12218:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12225:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12214:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12214:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12207:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12029:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12039:3:8",
														"type": ""
													}
												],
												"src": "12000:233:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12345:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12367:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12375:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12363:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12363:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12379:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12356:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12356:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12356:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12435:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12443:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12431:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12431:15:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12448:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12424:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12424:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12424:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12337:6:8",
														"type": ""
													}
												],
												"src": "12239:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12616:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12626:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12692:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12697:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12633:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12633:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12626:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12798:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "12709:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12709:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12709:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12811:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12822:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12827:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12818:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12818:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12811:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12604:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12612:3:8",
														"type": ""
													}
												],
												"src": "12470:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13013:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13023:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13035:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13046:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13031:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13031:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13023:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13070:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13081:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13066:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13066:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13089:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13095:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13085:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13085:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13059:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13059:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13059:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13115:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13249:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13123:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13123:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13115:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12993:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13008:4:8",
														"type": ""
													}
												],
												"src": "12842:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13373:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13395:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13403:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13391:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13391:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13407:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13384:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13384:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13384:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13365:6:8",
														"type": ""
													}
												],
												"src": "13267:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13601:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13611:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13677:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13682:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13618:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13618:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13611:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13783:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "13694:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13694:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13694:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13796:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13807:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13812:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13803:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13803:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13796:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13589:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13597:3:8",
														"type": ""
													}
												],
												"src": "13455:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13998:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14008:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14020:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14031:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14016:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14016:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14008:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14055:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14066:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14051:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14051:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14074:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14080:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14070:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14070:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14044:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14044:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14044:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14100:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14234:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14108:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14108:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14100:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13978:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13993:4:8",
														"type": ""
													}
												],
												"src": "13827:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14378:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14388:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14400:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14411:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14396:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14396:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14388:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14468:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14481:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14492:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14477:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14477:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14424:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14424:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14424:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14549:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14562:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14573:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14558:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14558:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14505:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14505:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14505:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14342:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14354:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14362:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14373:4:8",
														"type": ""
													}
												],
												"src": "14252:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14638:362:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14648:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14671:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14653:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14653:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14648:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14682:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14705:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14687:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14687:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14682:1:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14716:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14739:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14742:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14735:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14735:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "14720:11:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14753:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "14782:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14764:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14764:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14753:7:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14971:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14973:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14973:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14973:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14904:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14897:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14897:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "14927:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "14934:7:8"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "14943:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "14930:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14930:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "14924:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14924:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "14877:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14877:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14857:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14857:113:8"
															},
															"nodeType": "YulIf",
															"src": "14854:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14621:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14624:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "14630:7:8",
														"type": ""
													}
												],
												"src": "14590:410:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15034:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15051:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15054:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15044:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15044:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15044:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15148:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15151:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15141:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15141:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15141:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15172:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15175:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15165:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15165:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15165:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "15006:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15234:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15244:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15267:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15249:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15249:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15244:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15278:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15301:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15283:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15283:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15278:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15325:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15327:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15327:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15327:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15322:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15315:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15315:9:8"
															},
															"nodeType": "YulIf",
															"src": "15312:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15357:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15366:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15369:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15362:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15362:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15357:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15223:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15226:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15232:1:8",
														"type": ""
													}
												],
												"src": "15192:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15537:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15547:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15559:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15570:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15555:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15555:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15547:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15627:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15640:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15651:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15636:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15636:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15583:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15583:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15583:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15708:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15721:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15732:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15717:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15717:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15664:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15664:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15664:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15790:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15803:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15814:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15799:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15799:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15746:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15746:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15746:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15493:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15505:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15513:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15521:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15532:4:8",
														"type": ""
													}
												],
												"src": "15383:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15873:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15883:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15908:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "15901:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15901:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15894:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15894:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15883:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15855:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15865:7:8",
														"type": ""
													}
												],
												"src": "15831:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15967:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16021:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16030:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16033:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16023:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16023:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16023:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15990:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16012:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "15997:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15997:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15987:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15987:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15980:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15980:40:8"
															},
															"nodeType": "YulIf",
															"src": "15977:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15960:5:8",
														"type": ""
													}
												],
												"src": "15927:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16109:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16119:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16134:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16128:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16128:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16119:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16174:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "16150:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16150:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16150:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16087:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16095:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16103:5:8",
														"type": ""
													}
												],
												"src": "16049:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16266:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16312:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16314:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16314:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16314:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16287:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16296:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16283:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16283:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16308:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16279:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16279:32:8"
															},
															"nodeType": "YulIf",
															"src": "16276:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "16405:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16420:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16434:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16424:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16449:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16492:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16503:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16488:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16488:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16512:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "16459:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16459:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16449:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16236:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16247:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16259:6:8",
														"type": ""
													}
												],
												"src": "16192:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16649:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16671:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16679:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16667:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16667:14:8"
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16683:34:8",
																		"type": "",
																		"value": "SafeBEP20: BEP20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16660:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16660:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16660:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16739:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16747:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16735:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16735:15:8"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16752:12:8",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16728:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16728:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16728:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16641:6:8",
														"type": ""
													}
												],
												"src": "16543:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16924:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16934:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17000:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17005:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16941:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16941:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16934:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17106:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																	"nodeType": "YulIdentifier",
																	"src": "17017:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17017:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17017:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17119:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17130:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17135:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17126:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17126:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17119:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16912:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16920:3:8",
														"type": ""
													}
												],
												"src": "16778:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17321:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17331:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17343:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17354:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17339:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17339:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17331:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17378:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17389:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17374:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17374:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17397:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17403:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17393:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17393:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17367:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17367:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17367:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17423:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17557:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17431:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17431:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17423:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17301:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17316:4:8",
														"type": ""
													}
												],
												"src": "17150:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17681:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17703:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17711:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17699:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17699:14:8"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17715:34:8",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17692:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17692:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17692:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17771:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17779:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17767:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17767:15:8"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17784:8:8",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17760:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17760:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17760:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17673:6:8",
														"type": ""
													}
												],
												"src": "17575:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17952:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17962:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18028:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18033:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17969:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17969:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17962:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18134:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "18045:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18045:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18045:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18147:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18158:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18163:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18154:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18154:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18147:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17940:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17948:3:8",
														"type": ""
													}
												],
												"src": "17806:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18349:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18359:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18371:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18382:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18367:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18367:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18359:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18406:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18417:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18402:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18402:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18425:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18431:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18421:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18421:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18395:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18395:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18395:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18451:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18585:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18459:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18459:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18451:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18329:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18344:4:8",
														"type": ""
													}
												],
												"src": "18178:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18661:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18672:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18688:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18682:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18682:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18672:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18644:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18654:6:8",
														"type": ""
													}
												],
												"src": "18603:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18820:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18830:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "18845:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18830:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18792:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18797:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18808:11:8",
														"type": ""
													}
												],
												"src": "18707:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18922:184:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18932:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18941:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "18936:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19001:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "19026:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "19031:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "19022:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19022:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "19045:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "19050:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "19041:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19041:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "19035:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19035:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19015:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19015:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19015:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "18962:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18965:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18959:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18959:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "18973:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18975:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "18984:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18987:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "18980:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18980:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "18975:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "18955:3:8",
																"statements": []
															},
															"src": "18951:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "19084:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19089:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19080:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19080:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19098:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19073:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19073:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19073:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "18904:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "18909:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18914:6:8",
														"type": ""
													}
												],
												"src": "18860:246:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19220:278:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19230:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19276:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "19244:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19244:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "19234:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19291:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19374:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19379:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19298:75:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19298:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19291:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19434:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19441:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19430:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19430:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19448:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19453:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "19395:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19395:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19395:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19469:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19480:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19485:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19476:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19476:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19469:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19201:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19208:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19216:3:8",
														"type": ""
													}
												],
												"src": "19112:386:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19638:137:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19649:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19736:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19745:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19656:79:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19656:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19649:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19759:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "19766:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19759:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19617:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19623:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19634:3:8",
														"type": ""
													}
												],
												"src": "19504:271:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19887:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19909:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19917:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19905:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19905:14:8"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19921:31:8",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19898:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19898:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19898:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19879:6:8",
														"type": ""
													}
												],
												"src": "19781:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20112:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20122:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20188:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20193:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20129:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20129:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20122:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20294:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "20205:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20205:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20205:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20307:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20318:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20323:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20314:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20314:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20307:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20100:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20108:3:8",
														"type": ""
													}
												],
												"src": "19966:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20509:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20519:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20531:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20542:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20527:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20527:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20519:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20566:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20577:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20562:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20562:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20585:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20591:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20581:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20581:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20555:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20555:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20555:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20611:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20745:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20619:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20619:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20611:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20489:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20504:4:8",
														"type": ""
													}
												],
												"src": "20338:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20822:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20833:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20849:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20843:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20843:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "20833:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20805:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20815:6:8",
														"type": ""
													}
												],
												"src": "20763:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20916:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20926:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20944:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20951:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20940:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20940:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20960:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "20956:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20956:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20936:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20936:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "20926:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20899:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "20909:6:8",
														"type": ""
													}
												],
												"src": "20868:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21068:285:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21078:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21125:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21092:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21092:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21082:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21140:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21206:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21211:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21147:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21147:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21140:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21266:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21273:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21262:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21262:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21280:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21285:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "21227:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21227:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21227:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21301:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21312:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "21339:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "21317:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21317:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21308:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21308:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21301:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21049:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21056:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21064:3:8",
														"type": ""
													}
												],
												"src": "20976:377:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21477:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21487:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21499:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21510:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21495:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21495:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21487:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21534:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21545:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21530:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21530:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21553:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21559:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21549:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21549:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21523:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21523:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21523:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21579:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21651:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21660:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21587:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21587:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21579:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21449:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21461:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21472:4:8",
														"type": ""
													}
												],
												"src": "21359:313:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IMigratorChef_$1926(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IMigratorChef_$1926(value) {\n        if iszero(eq(value, cleanup_t_contract$_IMigratorChef_$1926(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IMigratorChef_$1926(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IMigratorChef_$1926(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IMigratorChef_$1926(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IMigratorChef_$1926(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct LPMining.AprInfo -> struct LPMining.AprInfo\n    function abi_encode_t_struct$_AprInfo_$814_memory_ptr_to_t_struct$_AprInfo_$814_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // apr\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // time\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_AprInfo_$814_memory_ptr_to_t_struct$_AprInfo_$814_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_AprInfo_$814_memory_ptr_to_t_struct$_AprInfo_$814_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct LPMining.AprInfo[] -> struct LPMining.AprInfo[]\n    function abi_encode_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_AprInfo_$814_memory_ptr_to_t_struct$_AprInfo_$814_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct LPMining.PoolInfo -> struct LPMining.PoolInfo\n    function abi_encode_t_struct$_PoolInfo_$821_memory_ptr_to_t_struct$_PoolInfo_$821_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // duration\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // aprs\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AprInfo_$814_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_PoolInfo_$821_memory_ptr__to_t_struct$_PoolInfo_$821_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_PoolInfo_$821_memory_ptr_to_t_struct$_PoolInfo_$821_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IBEP20_$1913_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IBEP20_$1913_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBEP20_$1913_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IBEP20_$1913__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBEP20_$1913_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IMigratorChef_$1926_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IMigratorChef_$1926_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IMigratorChef_$1926_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IMigratorChef_$1926__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IMigratorChef_$1926_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_876f7f9e4780f33e63eb3317edb660ae4a2d4ec1a87e78bffd7c78916a0979f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"BFLY: SUFFICIENT_BALANCE\")\n\n    }\n\n    function abi_encode_t_stringliteral_876f7f9e4780f33e63eb3317edb660ae4a2d4ec1a87e78bffd7c78916a0979f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_876f7f9e4780f33e63eb3317edb660ae4a2d4ec1a87e78bffd7c78916a0979f9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_876f7f9e4780f33e63eb3317edb660ae4a2d4ec1a87e78bffd7c78916a0979f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_876f7f9e4780f33e63eb3317edb660ae4a2d4ec1a87e78bffd7c78916a0979f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeBEP20: BEP20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AA28550 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x98969E82 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x98969E82 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xA18F07A0 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0xE3D0B2BF EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xEC342AD0 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D2 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x918F8674 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x2E8 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x3E3CCA90 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x3E3CCA90 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x771602F7 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x240 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x14D20DC2 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x2F380B35 EQ PUSH2 0x1B0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1BE2 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1C0F JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1D66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x222 PUSH2 0x765 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x248 PUSH2 0x80A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x836 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x112C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39E PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BC PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x14EB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3C SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x40C PUSH2 0x156E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x422 JUMPI PUSH2 0x421 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x497 PUSH2 0x156E JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x4E3 PUSH2 0x1AB3 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4F7 JUMPI PUSH2 0x4F6 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x585 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x53F JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x5D0 JUMPI PUSH2 0x5CF PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x672 SWAP1 PUSH2 0x1FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH2 0x697 DUP4 PUSH1 0x0 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x704 JUMPI PUSH1 0x0 PUSH2 0x6A9 DUP6 CALLER PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x702 JUMPI PUSH2 0x701 CALLER DUP3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1602 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP JUMPDEST PUSH2 0x755 CALLER DUP3 PUSH1 0x0 ADD SLOAD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1602 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x76D PUSH2 0x156E JUMP JUMPDEST PUSH2 0x777 PUSH1 0x0 PUSH2 0x1688 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x781 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP DUP2 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x874 DUP4 DUP4 PUSH2 0x174C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x8D2 JUMPI PUSH2 0x8D1 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP4 PUSH1 0x2 ADD SLOAD DUP6 PUSH1 0x1 ADD PUSH1 0x1 DUP6 PUSH2 0x95B SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x96C JUMPI PUSH2 0x96B PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0xA26 JUMPI PUSH2 0x992 DUP5 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x85F JUMP JUMPDEST SWAP2 POP PUSH2 0x9F0 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x9E2 DUP8 PUSH1 0x1 ADD PUSH1 0x1 DUP8 PUSH2 0x9B0 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x9C1 JUMPI PUSH2 0x9C0 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP PUSH2 0xA1A PUSH1 0x64 PUSH2 0xA0C PUSH2 0x12C DUP10 PUSH2 0x1778 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1778 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 ADD SLOAD SWAP1 POP JUMPDEST PUSH1 0x1 DUP5 PUSH2 0xA3D SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xBDD JUMPI DUP2 PUSH2 0xAE7 JUMPI PUSH2 0xA8A DUP6 PUSH1 0x2 ADD SLOAD DUP8 PUSH1 0x1 ADD PUSH1 0x1 DUP5 PUSH2 0xA62 SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA73 JUMPI PUSH2 0xA72 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x85F JUMP JUMPDEST SWAP3 POP PUSH2 0xADC DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0xACE DUP9 PUSH1 0x1 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xAAD JUMPI PUSH2 0xAAC PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP7 PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP7 POP PUSH1 0x1 SWAP2 POP PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D DUP8 PUSH1 0x1 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB02 JUMPI PUSH2 0xB01 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x1 ADD PUSH1 0x1 DUP6 PUSH2 0xB25 SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB36 JUMPI PUSH2 0xB35 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x85F JUMP JUMPDEST SWAP1 POP PUSH2 0xBB1 PUSH2 0xBA2 DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0xB94 DUP11 PUSH1 0x1 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xB73 JUMPI PUSH2 0xB72 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 POP PUSH2 0xBC6 DUP2 DUP6 PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xBD5 SWAP1 PUSH2 0x207B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA30 JUMP JUMPDEST POP PUSH2 0xC1B DUP6 PUSH1 0x1 ADD PUSH1 0x1 DUP6 PUSH2 0xBF2 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xC03 JUMPI PUSH2 0xC02 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD NUMBER PUSH2 0x85F JUMP JUMPDEST SWAP2 POP PUSH2 0xC8B PUSH2 0xC7C DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0xC6E DUP9 PUSH1 0x1 ADD PUSH1 0x1 DUP9 PUSH2 0xC3C SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP7 PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xCB0 JUMPI PUSH2 0xCAF PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP4 PUSH1 0x2 ADD SLOAD DUP6 PUSH1 0x1 ADD PUSH1 0x1 DUP6 PUSH2 0xD39 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD4A JUMPI PUSH2 0xD49 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0xDD1 JUMPI DUP5 PUSH1 0x0 ADD SLOAD SWAP2 POP PUSH2 0xDC5 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0xDB7 DUP8 PUSH1 0x1 ADD PUSH1 0x1 DUP8 PUSH2 0xD85 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD96 JUMPI PUSH2 0xD95 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x1126 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 ADD SLOAD SWAP1 POP JUMPDEST PUSH1 0x1 DUP5 PUSH2 0xDE8 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1099 JUMPI DUP2 PUSH2 0xEFF JUMPI PUSH2 0xE35 DUP6 PUSH1 0x2 ADD SLOAD DUP8 PUSH1 0x1 ADD PUSH1 0x1 DUP5 PUSH2 0xE0D SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xE1E JUMPI PUSH2 0xE1D PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x85F JUMP JUMPDEST SWAP3 POP DUP6 PUSH1 0x0 ADD SLOAD DUP4 GT ISZERO PUSH2 0xEA4 JUMPI PUSH2 0xE97 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0xE89 DUP9 PUSH1 0x1 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xE64 JUMPI PUSH2 0xE63 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x1126 JUMP JUMPDEST PUSH2 0xEF4 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0xEE6 DUP9 PUSH1 0x1 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xEC5 JUMPI PUSH2 0xEC4 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP7 PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP7 POP PUSH1 0x1 SWAP2 POP PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF65 DUP8 PUSH1 0x1 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xF1A JUMPI PUSH2 0xF19 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x1 ADD PUSH1 0x1 DUP6 PUSH2 0xF3D SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xF4E JUMPI PUSH2 0xF4D PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x85F JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0xF7F DUP6 DUP4 PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x100B JUMPI PUSH2 0xFFD PUSH2 0xFEE DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0xFE0 DUP11 PUSH1 0x1 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xFA9 JUMPI PUSH2 0xFA8 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0xFD2 DUP10 DUP14 PUSH1 0x0 ADD SLOAD PUSH2 0x174C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x106D PUSH2 0x105E DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1050 DUP11 PUSH1 0x1 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x102F JUMPI PUSH2 0x102E PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 POP PUSH2 0x1082 DUP2 DUP6 PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1091 SWAP1 PUSH2 0x207B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDDB JUMP JUMPDEST POP PUSH2 0x111E PUSH2 0x110F DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1101 DUP9 PUSH1 0x1 ADD PUSH1 0x1 DUP9 PUSH2 0x10B9 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x10CA JUMPI PUSH2 0x10C9 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0x10F3 DUP8 DUP12 PUSH1 0x0 ADD SLOAD PUSH2 0x174C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1762 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1142 JUMPI PUSH2 0x1141 PUSH2 0x1F38 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x140D JUMPI TIMESTAMP PUSH2 0x11CF DUP4 PUSH1 0x0 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x1324 JUMPI PUSH1 0x0 PUSH2 0x11E1 DUP6 CALLER PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x123A JUMPI PUSH2 0x1239 CALLER DUP3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1602 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x1289 CALLER ADDRESS DUP7 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x178E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12A0 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x12C5 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1314 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x14DC JUMP JUMPDEST PUSH2 0x1373 CALLER ADDRESS DUP6 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x178E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x138A DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x15EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x13AF SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x13FE SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x14DC JUMP JUMPDEST TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x142A SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x148A CALLER ADDRESS DUP6 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x178E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x14D1 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x12C DUP2 JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH2 0x14F3 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1562 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1559 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x156B DUP2 PUSH2 0x1688 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1576 PUSH2 0x1817 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1594 PUSH2 0x836 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E1 SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x15FA SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1683 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1621 SWAP3 SWAP2 SWAP1 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x181F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x175A SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1770 SWAP2 SWAP1 PUSH2 0x21EA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1786 SWAP2 SWAP1 PUSH2 0x225B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1811 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17AF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x228C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x181F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1881 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18E6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x18E1 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x18A1 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH2 0x18E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D7 SWAP1 PUSH2 0x239A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x18F5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x18FE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1943 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193A SWAP1 PUSH2 0x242C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x196C SWAP2 SWAP1 PUSH2 0x24BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19A9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x19BF DUP8 DUP4 DUP4 DUP8 PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1A2D JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1A25 JUMPI PUSH2 0x19E5 DUP6 PUSH2 0x1A40 JUMP JUMPDEST PUSH2 0x1A24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1B SWAP1 PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1A38 JUMP JUMPDEST PUSH2 0x1A37 DUP4 DUP4 PUSH2 0x1A63 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1A76 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AAA SWAP2 SWAP1 PUSH2 0x2595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE0 DUP2 PUSH2 0x1ACD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AFB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B0F DUP2 PUSH2 0x1ACD JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2C DUP2 PUSH2 0x1B06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B49 JUMPI PUSH2 0x1B48 PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B57 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B68 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B9D DUP3 PUSH2 0x1B72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BAF DUP3 PUSH2 0x1B92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BBF DUP2 PUSH2 0x1BA4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BDC DUP2 PUSH2 0x1BB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF8 JUMPI PUSH2 0x1BF7 PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C06 DUP5 DUP3 DUP6 ADD PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C25 JUMPI PUSH2 0x1C24 PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C33 DUP5 DUP3 DUP6 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C45 DUP2 PUSH2 0x1ACD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1C8D PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1C3C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1CA0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1C3C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB2 DUP4 DUP4 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD6 DUP3 PUSH2 0x1C4B JUMP JUMPDEST PUSH2 0x1CE0 DUP2 DUP6 PUSH2 0x1C56 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CEB DUP4 PUSH2 0x1C67 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D1C JUMPI DUP2 MLOAD PUSH2 0x1D03 DUP9 DUP3 PUSH2 0x1CA6 JUMP JUMPDEST SWAP8 POP PUSH2 0x1D0E DUP4 PUSH2 0x1CBE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1CEF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x1D41 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x1C3C JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1D59 DUP3 DUP3 PUSH2 0x1CCB JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D80 DUP2 DUP5 PUSH2 0x1D29 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DAD PUSH2 0x1DA8 PUSH2 0x1DA3 DUP5 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x1D88 JUMP JUMPDEST PUSH2 0x1B72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBF DUP3 PUSH2 0x1D92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD1 DUP3 PUSH2 0x1DB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DE1 DUP2 PUSH2 0x1DC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DFC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0D DUP3 PUSH2 0x1DB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E1D DUP2 PUSH2 0x1E02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E38 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E47 DUP2 PUSH2 0x1B92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E62 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E71 DUP2 PUSH2 0x1B92 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E8E DUP2 PUSH2 0x1E68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EAB JUMPI PUSH2 0x1EAA PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EB9 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ECA DUP6 DUP3 DUP7 ADD PUSH2 0x1E7F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EE9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1AD7 JUMP JUMPDEST PUSH2 0x1EF6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AD7 JUMP JUMPDEST PUSH2 0x1F03 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AD7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F21 JUMPI PUSH2 0x1F20 PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F2F DUP5 DUP3 DUP6 ADD PUSH2 0x1E7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42464C593A2053554646494349454E545F42414C414E43450000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FAE PUSH1 0x18 DUP4 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB9 DUP3 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FDD DUP2 PUSH2 0x1FA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x201E DUP3 PUSH2 0x1ACD JUMP JUMPDEST SWAP2 POP PUSH2 0x2029 DUP4 PUSH2 0x1ACD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2041 JUMPI PUSH2 0x2040 PUSH2 0x1FE4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2052 DUP3 PUSH2 0x1ACD JUMP JUMPDEST SWAP2 POP PUSH2 0x205D DUP4 PUSH2 0x1ACD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2075 JUMPI PUSH2 0x2074 PUSH2 0x1FE4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2086 DUP3 PUSH2 0x1ACD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x20B8 JUMPI PUSH2 0x20B7 PUSH2 0x1FE4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211F PUSH1 0x26 DUP4 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP PUSH2 0x212A DUP3 PUSH2 0x20C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x214E DUP2 PUSH2 0x2112 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x218B PUSH1 0x20 DUP4 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP PUSH2 0x2196 DUP3 PUSH2 0x2155 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21BA DUP2 PUSH2 0x217E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21D6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E3E JUMP JUMPDEST PUSH2 0x21E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AD7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F5 DUP3 PUSH2 0x1ACD JUMP JUMPDEST SWAP2 POP PUSH2 0x2200 DUP4 PUSH2 0x1ACD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x220E DUP2 PUSH2 0x1ACD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2225 JUMPI PUSH2 0x2224 PUSH2 0x1FE4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2266 DUP3 PUSH2 0x1ACD JUMP JUMPDEST SWAP2 POP PUSH2 0x2271 DUP4 PUSH2 0x1ACD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2281 JUMPI PUSH2 0x2280 PUSH2 0x222C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x22A1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1E3E JUMP JUMPDEST PUSH2 0x22AE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E3E JUMP JUMPDEST PUSH2 0x22BB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AD7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D8 DUP2 PUSH2 0x22C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x22E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22F5 DUP2 PUSH2 0x22CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2311 JUMPI PUSH2 0x2310 PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x231F DUP5 DUP3 DUP6 ADD PUSH2 0x22E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2384 PUSH1 0x2A DUP4 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP PUSH2 0x238F DUP3 PUSH2 0x2328 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B3 DUP2 PUSH2 0x2377 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2416 PUSH1 0x26 DUP4 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP PUSH2 0x2421 DUP3 PUSH2 0x23BA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2445 DUP2 PUSH2 0x2409 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2480 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2465 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2497 DUP3 PUSH2 0x244C JUMP JUMPDEST PUSH2 0x24A1 DUP2 DUP6 PUSH2 0x2457 JUMP JUMPDEST SWAP4 POP PUSH2 0x24B1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2462 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24C9 DUP3 DUP5 PUSH2 0x248C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x250A PUSH1 0x1D DUP4 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP PUSH2 0x2515 DUP3 PUSH2 0x24D4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2539 DUP2 PUSH2 0x24FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2567 DUP3 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2571 DUP2 DUP6 PUSH2 0x1F67 JUMP JUMPDEST SWAP4 POP PUSH2 0x2581 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2462 JUMP JUMPDEST PUSH2 0x258A DUP2 PUSH2 0x254B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25AF DUP2 DUP5 PUSH2 0x255C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT NOT 0xA6 0xFC JUMPI 0xBF DIFFICULTY 0x4C 0x1F 0xC6 LOG3 0xC0 REVERT LOG2 PUSH15 0x5D5FCB01D37E54F8F916221BBEDCC4 SIGNEXTEND 0xBC PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "348:13203:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5197:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4028:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6057:225;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6346:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4114:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2495:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11945:745;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;:::-;;5485:453:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2834:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2674:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6549:121:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;572:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1878:66;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6759:1378;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8147:1786;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10023:1847;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;672:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;629:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5197:96:4;5242:7;5269:9;:16;;;;5262:23;;5197:96;:::o;4028:78::-;4063:7;4089:9;4082:16;;4028:78;:::o;6057:225::-;1094:13:0;:11;:13::i;:::-;6126:21:4::1;6150:9;6160:4;6150:15;;;;;;;;:::i;:::-;;;;;;;;;;;;6126:39;;6176:4;:9;;6191:82;;;;;;;;6218:4;6191:82;;;;6242:15;6191:82;;::::0;6176:98:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6115:167;6057:225:::0;;:::o;6346:102::-;1094:13:0;:11;:13::i;:::-;6431:9:4::1;6420:8;;:20;;;;;;;;;;;;;;;;;;6346:102:::0;:::o;4114:109::-;4167:15;;:::i;:::-;4202:9;4212:2;4202:13;;;;;;;;:::i;:::-;;;;;;;;;;;;4195:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4114:109;;;:::o;2495:18::-;;;;;;;;;;;;;:::o;11945:745::-;12012:21;12036:9;12046:4;12036:15;;;;;;;;:::i;:::-;;;;;;;;;;;;12012:39;;12062:21;12086:8;:14;12095:4;12086:14;;;;;;;;;;;:26;12101:10;12086:26;;;;;;;;;;;;;;;12062:50;;12146:7;12131:4;:11;;;:22;;12123:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;12237:15;12198:37;12221:4;:13;;;12198:4;:18;;;:22;;:37;;;;:::i;:::-;:54;12195:303;;;12299:15;12317:32;12333:4;12338:10;12317:15;:32::i;:::-;12299:50;;12381:1;12371:7;:11;12368:105;;;12407:46;12433:10;12445:7;12414:4;;;;;;;;;;;12407:25;;;;:46;;;;;:::i;:::-;12368:105;12253:245;12195:303;12526:50;12552:10;12564:4;:11;;;12533:4;;;;;;;;;;;12526:25;;;;:50;;;;;:::i;:::-;12649:1;12635:4;:11;;:15;;;;12666:7;;11945:745;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;5485:453:4:-;1094:13:0;:11;:13::i;:::-;5566:18:4::1;5587:9;:16:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;5566:37;;5616:1;:6;;5628:30;;;;;;;;5636:4;5628:30;;;;5642:15;5628:30;;::::0;5616:43:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5683:9;5670:1;:10;;:22;;;;5551:387;5485:453:::0;;:::o;2834:29::-;;;;;;;;;;;;;:::o;2674:35::-;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;6549:121:4:-;6621:7;6648:14;6656:5;6648:3;:7;;:14;;;;:::i;:::-;6641:21;;6549:121;;;;:::o;572:46::-;610:8;572:46;:::o;1878:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6759:1378::-;6834:14;6861:21;6885:9;6895:4;6885:15;;;;;;;;:::i;:::-;;;;;;;;;;;;6861:39;;6911:21;6935:8;:14;6944:4;6935:14;;;;;;;;;;;:21;6950:5;6935:21;;;;;;;;;;;;;;;6911:45;;6967:11;6981:4;:9;;:16;;;;6967:30;;7008:18;7037:9;7085:4;:18;;;7061:4;:9;;7075:1;7071:3;:5;;;;:::i;:::-;7061:16;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;;:42;7057:302;;;7132:49;7146:4;:18;;;7165:15;7132:13;:49::i;:::-;7119:62;;7205:53;7246:4;:11;;;7205:36;7220:4;:9;;7234:1;7230:3;:5;;;;:::i;:::-;7220:16;;;;;;;;:::i;:::-;;;;;;;;;;;;:20;;;7205:10;:14;;:36;;;;:::i;:::-;:40;;:53;;;;:::i;:::-;7196:62;;7282:37;7315:3;7282:28;715:9;7282:6;:10;;:28;;;;:::i;:::-;:32;;:37;;;;:::i;:::-;7273:46;;7334:13;;;;;;;7057:302;7376:6;7385:4;:11;;;7376:20;;7371:571;7404:1;7400:3;:5;;;;:::i;:::-;7397:1;:8;7371:571;;;7432:4;7427:247;;7469:54;7483:4;:18;;;7503:4;:9;;7515:1;7513;:3;;;;:::i;:::-;7503:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:19;;;7469:13;:54::i;:::-;7456:67;;7551:49;7588:4;:11;;;7551:32;7566:4;:9;;7576:1;7566:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;7551:10;:14;;:32;;;;:::i;:::-;:36;;:49;;;;:::i;:::-;7542:58;;7626:4;7619:11;;7649:8;;7427:247;7690:18;7711:53;7725:4;:9;;7735:1;7725:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:17;;;7744:4;:9;;7756:1;7754;:3;;;;:::i;:::-;7744:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:19;;;7711:13;:53::i;:::-;7690:74;;7789:61;7800:49;7837:4;:11;;;7800:32;7815:4;:9;;7825:1;7815:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;7800:10;:14;;:32;;;;:::i;:::-;:36;;:49;;;;:::i;:::-;7789:6;:10;;:61;;;;:::i;:::-;7781:69;;7880:26;7895:10;7880;:14;;:26;;;;:::i;:::-;7867:39;;7410:532;7371:571;7406:3;;;;;:::i;:::-;;;;7371:571;;;;7967:50;7981:4;:9;;7995:1;7991:3;:5;;;;:::i;:::-;7981:16;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;;8004:12;7967:13;:50::i;:::-;7954:63;;8036:65;8047:53;8088:4;:11;;;8047:36;8062:4;:9;;8076:1;8072:3;:5;;;;:::i;:::-;8062:16;;;;;;;;:::i;:::-;;;;;;;;;;;;:20;;;8047:10;:14;;:36;;;;:::i;:::-;:40;;:53;;;;:::i;:::-;8036:6;:10;;:65;;;;:::i;:::-;8028:73;;8114:13;;;;;6759:1378;;;;;:::o;8147:1786::-;8222:14;8249:21;8273:9;8283:4;8273:15;;;;;;;;:::i;:::-;;;;;;;;;;;;8249:39;;8299:21;8323:8;:14;8332:4;8323:14;;;;;;;;;;;:21;8338:5;8323:21;;;;;;;;;;;;;;;8299:45;;8355:11;8369:4;:9;;:16;;;;8355:30;;8396:18;8425:9;8492:4;:18;;;8468:4;:9;;8482:1;8478:3;:5;;;;:::i;:::-;8468:16;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;;:42;8464:205;;;8539:4;:13;;;8526:26;;8576:53;8617:4;:11;;;8576:36;8591:4;:9;;8605:1;8601:3;:5;;;;:::i;:::-;8591:16;;;;;;;;:::i;:::-;;;;;;;;;;;;:20;;;8576:10;:14;;:36;;;;:::i;:::-;:40;;:53;;;;:::i;:::-;8567:62;;8644:13;;;;;;;8464:205;8684:6;8693:4;:11;;;8684:20;;8679:1089;8712:1;8708:3;:5;;;;:::i;:::-;8705:1;:8;8679:1089;;;8740:4;8735:440;;8777:54;8791:4;:18;;;8811:4;:9;;8823:1;8821;:3;;;;:::i;:::-;8811:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:19;;;8777:13;:54::i;:::-;8764:67;;8867:4;:13;;;8854:10;:26;8850:175;;;8913:52;8953:4;:11;;;8913:35;8931:4;:9;;8941:1;8931:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;8913:4;:13;;;:17;;:35;;;;:::i;:::-;:39;;:52;;;;:::i;:::-;8904:61;;8988:13;;;;;;;;8850:175;9052:49;9089:4;:11;;;9052:32;9067:4;:9;;9077:1;9067:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;9052:10;:14;;:32;;;;:::i;:::-;:36;;:49;;;;:::i;:::-;9043:58;;9127:4;9120:11;;9150:8;;8735:440;9191:18;9212:53;9226:4;:9;;9236:1;9226:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:17;;;9245:4;:9;;9257:1;9255;:3;;;;:::i;:::-;9245:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:19;;;9212:13;:53::i;:::-;9191:74;;9315:4;:13;;;9286:26;9301:10;9286;:14;;:26;;;;:::i;:::-;:42;9282:207;;;9357:80;9368:68;9424:4;:11;;;9368:51;9402:4;:9;;9412:1;9402:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;9368:29;9386:10;9368:4;:13;;;:17;;:29;;;;:::i;:::-;:33;;:51;;;;:::i;:::-;:55;;:68;;;;:::i;:::-;9357:6;:10;;:80;;;;:::i;:::-;9348:89;;9456:13;;;;;;;;;9282:207;9629:61;9640:49;9677:4;:11;;;9640:32;9655:4;:9;;9665:1;9655:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;9640:10;:14;;:32;;;;:::i;:::-;:36;;:49;;;;:::i;:::-;9629:6;:10;;:61;;;;:::i;:::-;9621:69;;9720:26;9735:10;9720;:14;;:26;;;;:::i;:::-;9707:39;;8718:1050;8679:1089;8714:3;;;;;:::i;:::-;;;;8679:1089;;;;9793:84;9804:72;9864:4;:11;;;9804:55;9838:4;:9;;9852:1;9848:3;:5;;;;:::i;:::-;9838:16;;;;;;;;:::i;:::-;;;;;;;;;;;;:20;;;9804:29;9822:10;9804:4;:13;;;:17;;:29;;;;:::i;:::-;:33;;:55;;;;:::i;:::-;:59;;:72;;;;:::i;:::-;9793:6;:10;;:84;;;;:::i;:::-;9784:93;;9892:13;;;;;8147:1786;;;;;:::o;10023:1847::-;10089:21;10113:9;10123:4;10113:15;;;;;;;;:::i;:::-;;;;;;;;;;;;10089:39;;10139:21;10163:8;:14;10172:4;10163:14;;;;;;;;;;;:26;10178:10;10163:26;;;;;;;;;;;;;;;10139:50;;10222:1;10208:4;:11;;;:15;10204:1649;;;10295:15;10256:37;10279:4;:13;;;10256:4;:18;;;:22;;:37;;;;:::i;:::-;:54;10253:1178;;;10378:15;10396:32;10412:4;10417:10;10396:15;:32::i;:::-;10378:50;;10460:1;10450:7;:11;10447:105;;;10486:46;10512:10;10524:7;10493:4;;;;;;;;;;;10486:25;;;;:46;;;;;:::i;:::-;10447:105;10634:74;10672:10;10693:4;10700:7;10641:4;;;;;;;;;;;10634:29;;;;:74;;;;;;:::i;:::-;10741:24;10757:7;10741:4;:11;;;:15;;:24;;;;:::i;:::-;10727:4;:11;;:38;;;;10819:15;10798:4;:18;;:36;;;;10886:1;10867:4;:9;;:16;;;;:20;;;;:::i;:::-;10853:4;:11;;:34;;;;10933:4;10921:10;10913:34;;;10939:7;10913:34;;;;;;:::i;:::-;;;;;;;;10966:7;;;;;10253:1178;11077:74;11115:10;11136:4;11143:7;11084:4;;;;;;;;;;;11077:29;;;;:74;;;;;;:::i;:::-;11184:24;11200:7;11184:4;:11;;;:15;;:24;;;;:::i;:::-;11170:4;:11;;:38;;;;11262:15;11241:4;:18;;:36;;;;11329:1;11310:4;:9;;:16;;;;:20;;;;:::i;:::-;11296:4;:11;;:34;;;;11376:4;11364:10;11356:34;;;11382:7;11356:34;;;;;;:::i;:::-;;;;;;;;11409:7;;;;10204:1649;11573:15;11552:4;:18;;:36;;;;11636:1;11617:4;:9;;:16;;;;:20;;;;:::i;:::-;11603:4;:11;;:34;;;;11667:7;11653:4;:11;;:21;;;;11690:74;11728:10;11749:4;11756:7;11697:4;;;;;;;;;;;11690:29;;;;:74;;;;;;:::i;:::-;11804:4;11792:10;11784:34;;;11810:7;11784:34;;;;;;:::i;:::-;;;;;;;;11833:8;;10023:1847;;;:::o;672:52::-;715:9;672:52;:::o;629:34::-;660:3;629:34;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2755:96:3:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;771:211:7:-;888:86;908:5;938:23;;;963:2;967:5;915:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;888:19;:86::i;:::-;771:211;;;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;3122:96:3:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;990:248:7:-;1134:96;1154:5;1184:27;;;1213:4;1219:2;1223:5;1161:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1134:19;:96::i;:::-;990:248;;;;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;3282:774:7:-;3706:23;3732:69;3760:4;3732:69;;;;;;;;;;;;;;;;;3740:5;3732:27;;;;:69;;;;;:::i;:::-;3706:95;;3836:1;3816:10;:17;:21;3812:237;;;3971:10;3960:30;;;;;;;;;;;;:::i;:::-;3952:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3812:237;3352:704;3282:774;;:::o;3873:223:1:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;;3873:223;;;;;:::o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;:::o;7:77:8:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:474::-;1110:6;1118;1167:2;1155:9;1146:7;1142:23;1138:32;1135:119;;;1173:79;;:::i;:::-;1135:119;1293:1;1318:53;1363:7;1354:6;1343:9;1339:22;1318:53;:::i;:::-;1308:63;;1264:117;1420:2;1446:53;1491:7;1482:6;1471:9;1467:22;1446:53;:::i;:::-;1436:63;;1391:118;1042:474;;;;;:::o;1522:126::-;1559:7;1599:42;1592:5;1588:54;1577:65;;1522:126;;;:::o;1654:96::-;1691:7;1720:24;1738:5;1720:24;:::i;:::-;1709:35;;1654:96;;;:::o;1756:118::-;1815:7;1844:24;1862:5;1844:24;:::i;:::-;1833:35;;1756:118;;;:::o;1880:166::-;1975:46;2015:5;1975:46;:::i;:::-;1968:5;1965:57;1955:85;;2036:1;2033;2026:12;1955:85;1880:166;:::o;2052:183::-;2120:5;2158:6;2145:20;2136:29;;2174:55;2223:5;2174:55;:::i;:::-;2052:183;;;;:::o;2241:373::-;2322:6;2371:2;2359:9;2350:7;2346:23;2342:32;2339:119;;;2377:79;;:::i;:::-;2339:119;2497:1;2522:75;2589:7;2580:6;2569:9;2565:22;2522:75;:::i;:::-;2512:85;;2468:139;2241:373;;;;:::o;2620:329::-;2679:6;2728:2;2716:9;2707:7;2703:23;2699:32;2696:119;;;2734:79;;:::i;:::-;2696:119;2854:1;2879:53;2924:7;2915:6;2904:9;2900:22;2879:53;:::i;:::-;2869:63;;2825:117;2620:329;;;;:::o;2955:108::-;3032:24;3050:5;3032:24;:::i;:::-;3027:3;3020:37;2955:108;;:::o;3069:138::-;3160:6;3194:5;3188:12;3178:22;;3069:138;;;:::o;3213:198::-;3326:11;3360:6;3355:3;3348:19;3400:4;3395:3;3391:14;3376:29;;3213:198;;;;:::o;3417:156::-;3508:4;3531:3;3523:11;;3561:4;3556:3;3552:14;3544:22;;3417:156;;;:::o;3637:494::-;3772:4;3767:3;3763:14;3858:4;3851:5;3847:16;3841:23;3877:63;3934:4;3929:3;3925:14;3911:12;3877:63;:::i;:::-;3787:163;4032:4;4025:5;4021:16;4015:23;4051:63;4108:4;4103:3;4099:14;4085:12;4051:63;:::i;:::-;3960:164;3741:390;3637:494;;:::o;4137:275::-;4254:10;4275:94;4365:3;4357:6;4275:94;:::i;:::-;4401:4;4396:3;4392:14;4378:28;;4137:275;;;;:::o;4418:137::-;4512:4;4544;4539:3;4535:14;4527:22;;4418:137;;;:::o;4623:904::-;4780:3;4809:78;4881:5;4809:78;:::i;:::-;4903:100;4996:6;4991:3;4903:100;:::i;:::-;4896:107;;5027:80;5101:5;5027:80;:::i;:::-;5130:7;5161:1;5146:356;5171:6;5168:1;5165:13;5146:356;;;5247:6;5241:13;5274:111;5381:3;5366:13;5274:111;:::i;:::-;5267:118;;5408:84;5485:6;5408:84;:::i;:::-;5398:94;;5206:296;5193:1;5190;5186:9;5181:14;;5146:356;;;5150:14;5518:3;5511:10;;4785:742;;;4623:904;;;;:::o;5593:688::-;5712:3;5748:4;5743:3;5739:14;5839:4;5832:5;5828:16;5822:23;5858:63;5915:4;5910:3;5906:14;5892:12;5858:63;:::i;:::-;5763:168;6013:4;6006:5;6002:16;5996:23;6066:3;6060:4;6056:14;6049:4;6044:3;6040:14;6033:38;6092:151;6238:4;6224:12;6092:151;:::i;:::-;6084:159;;5941:313;6271:4;6264:11;;5717:564;5593:688;;;;:::o;6287:373::-;6430:4;6468:2;6457:9;6453:18;6445:26;;6517:9;6511:4;6507:20;6503:1;6492:9;6488:17;6481:47;6545:108;6648:4;6639:6;6545:108;:::i;:::-;6537:116;;6287:373;;;;:::o;6666:60::-;6694:3;6715:5;6708:12;;6666:60;;;:::o;6732:142::-;6782:9;6815:53;6833:34;6842:24;6860:5;6842:24;:::i;:::-;6833:34;:::i;:::-;6815:53;:::i;:::-;6802:66;;6732:142;;;:::o;6880:126::-;6930:9;6963:37;6994:5;6963:37;:::i;:::-;6950:50;;6880:126;;;:::o;7012:141::-;7077:9;7110:37;7141:5;7110:37;:::i;:::-;7097:50;;7012:141;;;:::o;7159:161::-;7261:52;7307:5;7261:52;:::i;:::-;7256:3;7249:65;7159:161;;:::o;7326:252::-;7434:4;7472:2;7461:9;7457:18;7449:26;;7485:86;7568:1;7557:9;7553:17;7544:6;7485:86;:::i;:::-;7326:252;;;;:::o;7584:148::-;7656:9;7689:37;7720:5;7689:37;:::i;:::-;7676:50;;7584:148;;;:::o;7738:175::-;7847:59;7900:5;7847:59;:::i;:::-;7842:3;7835:72;7738:175;;:::o;7919:266::-;8034:4;8072:2;8061:9;8057:18;8049:26;;8085:93;8175:1;8164:9;8160:17;8151:6;8085:93;:::i;:::-;7919:266;;;;:::o;8191:118::-;8278:24;8296:5;8278:24;:::i;:::-;8273:3;8266:37;8191:118;;:::o;8315:222::-;8408:4;8446:2;8435:9;8431:18;8423:26;;8459:71;8527:1;8516:9;8512:17;8503:6;8459:71;:::i;:::-;8315:222;;;;:::o;8543:122::-;8616:24;8634:5;8616:24;:::i;:::-;8609:5;8606:35;8596:63;;8655:1;8652;8645:12;8596:63;8543:122;:::o;8671:139::-;8717:5;8755:6;8742:20;8733:29;;8771:33;8798:5;8771:33;:::i;:::-;8671:139;;;;:::o;8816:474::-;8884:6;8892;8941:2;8929:9;8920:7;8916:23;8912:32;8909:119;;;8947:79;;:::i;:::-;8909:119;9067:1;9092:53;9137:7;9128:6;9117:9;9113:22;9092:53;:::i;:::-;9082:63;;9038:117;9194:2;9220:53;9265:7;9256:6;9245:9;9241:22;9220:53;:::i;:::-;9210:63;;9165:118;8816:474;;;;;:::o;9296:442::-;9445:4;9483:2;9472:9;9468:18;9460:26;;9496:71;9564:1;9553:9;9549:17;9540:6;9496:71;:::i;:::-;9577:72;9645:2;9634:9;9630:18;9621:6;9577:72;:::i;:::-;9659;9727:2;9716:9;9712:18;9703:6;9659:72;:::i;:::-;9296:442;;;;;;:::o;9744:329::-;9803:6;9852:2;9840:9;9831:7;9827:23;9823:32;9820:119;;;9858:79;;:::i;:::-;9820:119;9978:1;10003:53;10048:7;10039:6;10028:9;10024:22;10003:53;:::i;:::-;9993:63;;9949:117;9744:329;;;;:::o;10079:180::-;10127:77;10124:1;10117:88;10224:4;10221:1;10214:15;10248:4;10245:1;10238:15;10265:169;10349:11;10383:6;10378:3;10371:19;10423:4;10418:3;10414:14;10399:29;;10265:169;;;;:::o;10440:174::-;10580:26;10576:1;10568:6;10564:14;10557:50;10440:174;:::o;10620:366::-;10762:3;10783:67;10847:2;10842:3;10783:67;:::i;:::-;10776:74;;10859:93;10948:3;10859:93;:::i;:::-;10977:2;10972:3;10968:12;10961:19;;10620:366;;;:::o;10992:419::-;11158:4;11196:2;11185:9;11181:18;11173:26;;11245:9;11239:4;11235:20;11231:1;11220:9;11216:17;11209:47;11273:131;11399:4;11273:131;:::i;:::-;11265:139;;10992:419;;;:::o;11417:180::-;11465:77;11462:1;11455:88;11562:4;11559:1;11552:15;11586:4;11583:1;11576:15;11603:194;11643:4;11663:20;11681:1;11663:20;:::i;:::-;11658:25;;11697:20;11715:1;11697:20;:::i;:::-;11692:25;;11741:1;11738;11734:9;11726:17;;11765:1;11759:4;11756:11;11753:37;;;11770:18;;:::i;:::-;11753:37;11603:194;;;;:::o;11803:191::-;11843:3;11862:20;11880:1;11862:20;:::i;:::-;11857:25;;11896:20;11914:1;11896:20;:::i;:::-;11891:25;;11939:1;11936;11932:9;11925:16;;11960:3;11957:1;11954:10;11951:36;;;11967:18;;:::i;:::-;11951:36;11803:191;;;;:::o;12000:233::-;12039:3;12062:24;12080:5;12062:24;:::i;:::-;12053:33;;12108:66;12101:5;12098:77;12095:103;;12178:18;;:::i;:::-;12095:103;12225:1;12218:5;12214:13;12207:20;;12000:233;;;:::o;12239:225::-;12379:34;12375:1;12367:6;12363:14;12356:58;12448:8;12443:2;12435:6;12431:15;12424:33;12239:225;:::o;12470:366::-;12612:3;12633:67;12697:2;12692:3;12633:67;:::i;:::-;12626:74;;12709:93;12798:3;12709:93;:::i;:::-;12827:2;12822:3;12818:12;12811:19;;12470:366;;;:::o;12842:419::-;13008:4;13046:2;13035:9;13031:18;13023:26;;13095:9;13089:4;13085:20;13081:1;13070:9;13066:17;13059:47;13123:131;13249:4;13123:131;:::i;:::-;13115:139;;12842:419;;;:::o;13267:182::-;13407:34;13403:1;13395:6;13391:14;13384:58;13267:182;:::o;13455:366::-;13597:3;13618:67;13682:2;13677:3;13618:67;:::i;:::-;13611:74;;13694:93;13783:3;13694:93;:::i;:::-;13812:2;13807:3;13803:12;13796:19;;13455:366;;;:::o;13827:419::-;13993:4;14031:2;14020:9;14016:18;14008:26;;14080:9;14074:4;14070:20;14066:1;14055:9;14051:17;14044:47;14108:131;14234:4;14108:131;:::i;:::-;14100:139;;13827:419;;;:::o;14252:332::-;14373:4;14411:2;14400:9;14396:18;14388:26;;14424:71;14492:1;14481:9;14477:17;14468:6;14424:71;:::i;:::-;14505:72;14573:2;14562:9;14558:18;14549:6;14505:72;:::i;:::-;14252:332;;;;;:::o;14590:410::-;14630:7;14653:20;14671:1;14653:20;:::i;:::-;14648:25;;14687:20;14705:1;14687:20;:::i;:::-;14682:25;;14742:1;14739;14735:9;14764:30;14782:11;14764:30;:::i;:::-;14753:41;;14943:1;14934:7;14930:15;14927:1;14924:22;14904:1;14897:9;14877:83;14854:139;;14973:18;;:::i;:::-;14854:139;14638:362;14590:410;;;;:::o;15006:180::-;15054:77;15051:1;15044:88;15151:4;15148:1;15141:15;15175:4;15172:1;15165:15;15192:185;15232:1;15249:20;15267:1;15249:20;:::i;:::-;15244:25;;15283:20;15301:1;15283:20;:::i;:::-;15278:25;;15322:1;15312:35;;15327:18;;:::i;:::-;15312:35;15369:1;15366;15362:9;15357:14;;15192:185;;;;:::o;15383:442::-;15532:4;15570:2;15559:9;15555:18;15547:26;;15583:71;15651:1;15640:9;15636:17;15627:6;15583:71;:::i;:::-;15664:72;15732:2;15721:9;15717:18;15708:6;15664:72;:::i;:::-;15746;15814:2;15803:9;15799:18;15790:6;15746:72;:::i;:::-;15383:442;;;;;;:::o;15831:90::-;15865:7;15908:5;15901:13;15894:21;15883:32;;15831:90;;;:::o;15927:116::-;15997:21;16012:5;15997:21;:::i;:::-;15990:5;15987:32;15977:60;;16033:1;16030;16023:12;15977:60;15927:116;:::o;16049:137::-;16103:5;16134:6;16128:13;16119:22;;16150:30;16174:5;16150:30;:::i;:::-;16049:137;;;;:::o;16192:345::-;16259:6;16308:2;16296:9;16287:7;16283:23;16279:32;16276:119;;;16314:79;;:::i;:::-;16276:119;16434:1;16459:61;16512:7;16503:6;16492:9;16488:22;16459:61;:::i;:::-;16449:71;;16405:125;16192:345;;;;:::o;16543:229::-;16683:34;16679:1;16671:6;16667:14;16660:58;16752:12;16747:2;16739:6;16735:15;16728:37;16543:229;:::o;16778:366::-;16920:3;16941:67;17005:2;17000:3;16941:67;:::i;:::-;16934:74;;17017:93;17106:3;17017:93;:::i;:::-;17135:2;17130:3;17126:12;17119:19;;16778:366;;;:::o;17150:419::-;17316:4;17354:2;17343:9;17339:18;17331:26;;17403:9;17397:4;17393:20;17389:1;17378:9;17374:17;17367:47;17431:131;17557:4;17431:131;:::i;:::-;17423:139;;17150:419;;;:::o;17575:225::-;17715:34;17711:1;17703:6;17699:14;17692:58;17784:8;17779:2;17771:6;17767:15;17760:33;17575:225;:::o;17806:366::-;17948:3;17969:67;18033:2;18028:3;17969:67;:::i;:::-;17962:74;;18045:93;18134:3;18045:93;:::i;:::-;18163:2;18158:3;18154:12;18147:19;;17806:366;;;:::o;18178:419::-;18344:4;18382:2;18371:9;18367:18;18359:26;;18431:9;18425:4;18421:20;18417:1;18406:9;18402:17;18395:47;18459:131;18585:4;18459:131;:::i;:::-;18451:139;;18178:419;;;:::o;18603:98::-;18654:6;18688:5;18682:12;18672:22;;18603:98;;;:::o;18707:147::-;18808:11;18845:3;18830:18;;18707:147;;;;:::o;18860:246::-;18941:1;18951:113;18965:6;18962:1;18959:13;18951:113;;;19050:1;19045:3;19041:11;19035:18;19031:1;19026:3;19022:11;19015:39;18987:2;18984:1;18980:10;18975:15;;18951:113;;;19098:1;19089:6;19084:3;19080:16;19073:27;18922:184;18860:246;;;:::o;19112:386::-;19216:3;19244:38;19276:5;19244:38;:::i;:::-;19298:88;19379:6;19374:3;19298:88;:::i;:::-;19291:95;;19395:65;19453:6;19448:3;19441:4;19434:5;19430:16;19395:65;:::i;:::-;19485:6;19480:3;19476:16;19469:23;;19220:278;19112:386;;;;:::o;19504:271::-;19634:3;19656:93;19745:3;19736:6;19656:93;:::i;:::-;19649:100;;19766:3;19759:10;;19504:271;;;;:::o;19781:179::-;19921:31;19917:1;19909:6;19905:14;19898:55;19781:179;:::o;19966:366::-;20108:3;20129:67;20193:2;20188:3;20129:67;:::i;:::-;20122:74;;20205:93;20294:3;20205:93;:::i;:::-;20323:2;20318:3;20314:12;20307:19;;19966:366;;;:::o;20338:419::-;20504:4;20542:2;20531:9;20527:18;20519:26;;20591:9;20585:4;20581:20;20577:1;20566:9;20562:17;20555:47;20619:131;20745:4;20619:131;:::i;:::-;20611:139;;20338:419;;;:::o;20763:99::-;20815:6;20849:5;20843:12;20833:22;;20763:99;;;:::o;20868:102::-;20909:6;20960:2;20956:7;20951:2;20944:5;20940:14;20936:28;20926:38;;20868:102;;;:::o;20976:377::-;21064:3;21092:39;21125:5;21092:39;:::i;:::-;21147:71;21211:6;21206:3;21147:71;:::i;:::-;21140:78;;21227:65;21285:6;21280:3;21273:4;21266:5;21262:16;21227:65;:::i;:::-;21317:29;21339:6;21317:29;:::i;:::-;21312:3;21308:39;21301:46;;21068:285;20976:377;;;;:::o;21359:313::-;21472:4;21510:2;21499:9;21495:18;21487:26;;21559:9;21553:4;21549:20;21545:1;21534:9;21530:17;21523:47;21587:78;21660:4;21651:6;21587:78;:::i;:::-;21579:86;;21359:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1941800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BASE()": "439",
								"BONUS_MULTIPLIER()": "2452",
								"DENOMINATOR()": "418",
								"DENOMINATOR_TEST()": "417",
								"aadd()": "383",
								"add(uint256,uint256)": "infinite",
								"calculateReward(uint256,address)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"getMultiplier(uint256,uint256)": "infinite",
								"getPoolInfo(uint256)": "infinite",
								"migrator()": "infinite",
								"owner()": "2567",
								"para()": "infinite",
								"pendingReward(uint256,address)": "infinite",
								"poolLength()": "2469",
								"renounceOwnership()": "30465",
								"set(uint256,uint256)": "infinite",
								"setMigrator(address)": "27119",
								"transferOwnership(address)": "30876",
								"userInfo(uint256,address)": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"initialized()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 348,
									"end": 13551,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 348,
									"end": 13551,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 13551,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2708,
									"end": 2709,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2674,
									"end": 2709,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2674,
									"end": 2709,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 3384,
									"end": 4018,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3510,
									"end": 3515,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3507,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 3503,
									"end": 3507,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3515,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3997,
									"end": 4010,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 3997,
									"end": 4008,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 3997,
									"end": 4008,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3997,
									"end": 4008,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 3997,
									"end": 4010,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3997,
									"end": 4010,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 3997,
									"end": 4010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3997,
									"end": 4010,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 3997,
									"end": 4010,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3384,
									"end": 4018,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 348,
									"end": 13551,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 348,
									"end": 13551,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4231,
									"end": 4938,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 4231,
									"end": 4938,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4314,
									"end": 4332,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4335,
									"end": 4344,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 4351,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4314,
									"end": 4351,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4314,
									"end": 4351,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4365,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4370,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4364,
									"end": 4370,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4376,
									"end": 4404,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4376,
									"end": 4404,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4376,
									"end": 4404,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4376,
									"end": 4404,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4376,
									"end": 4404,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4376,
									"end": 4404,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4376,
									"end": 4404,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4376,
									"end": 4404,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 4376,
									"end": 4404,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4376,
									"end": 4404,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4376,
									"end": 4404,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4376,
									"end": 4404,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4388,
									"end": 4403,
									"name": "TIMESTAMP",
									"source": 4
								},
								{
									"begin": 4376,
									"end": 4404,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4376,
									"end": 4404,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4376,
									"end": 4404,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4405,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4429,
									"end": 4430,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 4416,
									"end": 4417,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4416,
									"end": 4426,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4416,
									"end": 4426,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4416,
									"end": 4430,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4416,
									"end": 4430,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4416,
									"end": 4430,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4416,
									"end": 4430,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4261,
									"end": 4938,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4231,
									"end": 4938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 679,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 679,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 620,
									"end": 627,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 649,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 667,
									"end": 672,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 649,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 649,
									"end": 673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 649,
									"end": 673,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 649,
									"end": 673,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 638,
									"end": 673,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 638,
									"end": 673,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 679,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 568,
									"end": 679,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 568,
									"end": 679,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 679,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 685,
									"end": 837,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 685,
									"end": 837,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 773,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 806,
									"end": 811,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 773,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 773,
									"end": 812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 773,
									"end": 812,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 773,
									"end": 812,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 763,
									"end": 813,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 753,
									"end": 831,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 753,
									"end": 831,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 827,
									"end": 828,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 825,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 817,
									"end": 829,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 753,
									"end": 831,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 753,
									"end": 831,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 685,
									"end": 837,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 685,
									"end": 837,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 915,
									"end": 920,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 940,
									"end": 953,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 931,
									"end": 953,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 931,
									"end": 953,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1004,
									"end": 1009,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 962,
									"end": 1010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 843,
									"end": 1016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1107,
									"end": 1113,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1156,
									"end": 1158,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1144,
									"end": 1153,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1135,
									"end": 1142,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1127,
									"end": 1159,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1162,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1162,
									"end": 1241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1241,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1162,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1282,
									"end": 1283,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1307,
									"end": 1386,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1378,
									"end": 1385,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1375,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1367,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1376,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1386,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1307,
									"end": 1386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1386,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1307,
									"end": 1386,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1297,
									"end": 1386,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1297,
									"end": 1386,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1253,
									"end": 1396,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 348,
									"end": 13551,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 348,
									"end": 13551,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 348,
									"end": 13551,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 13551,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 348,
									"end": 13551,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 13551,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 13551,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 348,
									"end": 13551,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 13551,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201019a6fc57bf444c1fc6a3c0fda26e5d5fcb01d37e54f8f916221bbedcc40bbc64736f6c63430008110033",
									".code": [
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "8AA28550"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "98969E82"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "98969E82"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "A18F07A0"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "E2BBB158"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "E3D0B2BF"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "EC342AD0"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "8AA28550"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "8DBB1E3A"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "918F8674"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "93F1A40B"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "3E3CCA90"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "3E3CCA90"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "441A3E70"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "771602F7"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "7CD07E47"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "81E3EDA"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "14D20DC2"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "1AB06EE5"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "23CF3118"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "2F380B35"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 348,
											"end": 13551,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5197,
											"end": 5293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 5197,
											"end": 5293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4028,
											"end": 4106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4028,
											"end": 4106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 6057,
											"end": 6282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 6057,
											"end": 6282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 6346,
											"end": 6448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4114,
											"end": 4223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4114,
											"end": 4223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4114,
											"end": 4223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2495,
											"end": 2513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2495,
											"end": 2513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 11945,
											"end": 12690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 11945,
											"end": 12690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 5485,
											"end": 5938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5485,
											"end": 5938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2834,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2834,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2674,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2674,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 6549,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 6549,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 6549,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 572,
											"end": 618,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 572,
											"end": 618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 572,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 572,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 572,
											"end": 618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 572,
											"end": 618,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 572,
											"end": 618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 572,
											"end": 618,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 618,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 572,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 572,
											"end": 618,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 572,
											"end": 618,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 572,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 572,
											"end": 618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 572,
											"end": 618,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 572,
											"end": 618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 572,
											"end": 618,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 618,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 572,
											"end": 618,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 572,
											"end": 618,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 572,
											"end": 618,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 572,
											"end": 618,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 572,
											"end": 618,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1878,
											"end": 1944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1878,
											"end": 1944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1878,
											"end": 1944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6759,
											"end": 8137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6759,
											"end": 8137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 6759,
											"end": 8137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 8147,
											"end": 9933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8147,
											"end": 9933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 8147,
											"end": 9933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 10023,
											"end": 11870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 10023,
											"end": 11870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 672,
											"end": 724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 724,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 672,
											"end": 724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 724,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 724,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 672,
											"end": 724,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 724,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 629,
											"end": 663,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 629,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 629,
											"end": 663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 629,
											"end": 663,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 629,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 629,
											"end": 663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 629,
											"end": 663,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 629,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 663,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 663,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 663,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 629,
											"end": 663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 663,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5242,
											"end": 5249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5278,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5269,
											"end": 5285,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5269,
											"end": 5285,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5269,
											"end": 5285,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5269,
											"end": 5285,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5285,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5285,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4098,
											"name": "PUSH",
											"source": 4,
											"value": "3C"
										},
										{
											"begin": 4082,
											"end": 4098,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4082,
											"end": 4098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6126,
											"end": 6147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6150,
											"end": 6159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6160,
											"end": 6164,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6150,
											"end": 6165,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6165,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6165,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6180,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6176,
											"end": 6185,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6191,
											"end": 6273,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6273,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6191,
											"end": 6273,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6191,
											"end": 6273,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6273,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6218,
											"end": 6222,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6273,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6273,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6191,
											"end": 6273,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6242,
											"end": 6257,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6273,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6273,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6273,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6274,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6115,
											"end": 6282,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6440,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6420,
											"end": 6428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6440,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4167,
											"end": 4182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4202,
											"end": 4211,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4212,
											"end": 4214,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4202,
											"end": 4215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12012,
											"end": 12033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12036,
											"end": 12045,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12046,
											"end": 12050,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 12036,
											"end": 12051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12012,
											"end": 12051,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12012,
											"end": 12051,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12062,
											"end": 12083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12086,
											"end": 12094,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 12086,
											"end": 12100,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12095,
											"end": 12099,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12100,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12100,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12086,
											"end": 12100,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12100,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12100,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12086,
											"end": 12100,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12100,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12086,
											"end": 12100,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12101,
											"end": 12111,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12062,
											"end": 12112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12062,
											"end": 12112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12146,
											"end": 12153,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12131,
											"end": 12135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12131,
											"end": 12142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12131,
											"end": 12142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12131,
											"end": 12142,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12131,
											"end": 12153,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12131,
											"end": 12153,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 12123,
											"end": 12182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 12123,
											"end": 12182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12237,
											"end": 12252,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 12198,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 12221,
											"end": 12225,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12221,
											"end": 12234,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12221,
											"end": 12234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12221,
											"end": 12234,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12198,
											"end": 12202,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12198,
											"end": 12216,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 12198,
											"end": 12216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12198,
											"end": 12216,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12198,
											"end": 12220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 12198,
											"end": 12220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12198,
											"end": 12235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12198,
											"end": 12235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12198,
											"end": 12235,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12198,
											"end": 12235,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12198,
											"end": 12235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12198,
											"end": 12235,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 12198,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12198,
											"end": 12252,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 12195,
											"end": 12498,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12195,
											"end": 12498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 12195,
											"end": 12498,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12317,
											"end": 12349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 12333,
											"end": 12337,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12338,
											"end": 12348,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 12317,
											"end": 12332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 12317,
											"end": 12349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12317,
											"end": 12349,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 12317,
											"end": 12349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12349,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12381,
											"end": 12382,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12371,
											"end": 12378,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12371,
											"end": 12382,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 12368,
											"end": 12473,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12368,
											"end": 12473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 12368,
											"end": 12473,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12407,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 12433,
											"end": 12443,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 12445,
											"end": 12452,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 12418,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 12414,
											"end": 12418,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12414,
											"end": 12418,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 12418,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 12418,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 12418,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 12414,
											"end": 12418,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 12418,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 12418,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 12418,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12414,
											"end": 12418,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12407,
											"end": 12432,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12407,
											"end": 12432,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12407,
											"end": 12432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 12407,
											"end": 12432,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12407,
											"end": 12453,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12407,
											"end": 12453,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12407,
											"end": 12453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12407,
											"end": 12453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12407,
											"end": 12453,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12407,
											"end": 12453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12407,
											"end": 12453,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 12407,
											"end": 12453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12368,
											"end": 12473,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 12368,
											"end": 12473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12253,
											"end": 12498,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12195,
											"end": 12498,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 12195,
											"end": 12498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12526,
											"end": 12576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 12552,
											"end": 12562,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 12564,
											"end": 12568,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12564,
											"end": 12575,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12564,
											"end": 12575,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12564,
											"end": 12575,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12533,
											"end": 12537,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 12533,
											"end": 12537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12533,
											"end": 12537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12533,
											"end": 12537,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12533,
											"end": 12537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12533,
											"end": 12537,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 12533,
											"end": 12537,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 12533,
											"end": 12537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12533,
											"end": 12537,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12533,
											"end": 12537,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12533,
											"end": 12537,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12526,
											"end": 12551,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12526,
											"end": 12551,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12526,
											"end": 12551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 12526,
											"end": 12551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12526,
											"end": 12576,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12526,
											"end": 12576,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12526,
											"end": 12576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12526,
											"end": 12576,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12526,
											"end": 12576,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12526,
											"end": 12576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12526,
											"end": 12576,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 12526,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12649,
											"end": 12650,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12635,
											"end": 12639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12635,
											"end": 12646,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12635,
											"end": 12646,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12635,
											"end": 12650,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12635,
											"end": 12650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12635,
											"end": 12650,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12635,
											"end": 12650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12666,
											"end": 12673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12666,
											"end": 12673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 12690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5587,
											"end": 5603,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5603,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5566,
											"end": 5603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5566,
											"end": 5603,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5617,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5616,
											"end": 5622,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5628,
											"end": 5658,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5658,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5628,
											"end": 5658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5628,
											"end": 5658,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5658,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5636,
											"end": 5640,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5658,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5658,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5628,
											"end": 5658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5642,
											"end": 5657,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5658,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5658,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5658,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5683,
											"end": 5692,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 5671,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 5680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5680,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 5692,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 5692,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 5692,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 5692,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5551,
											"end": 5938,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 6656,
											"end": 6661,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6648,
											"end": 6651,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6648,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 6648,
											"end": 6655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6648,
											"end": 6662,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6648,
											"end": 6662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6648,
											"end": 6662,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6648,
											"end": 6662,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6648,
											"end": 6662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6648,
											"end": 6662,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 6648,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6641,
											"end": 6662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6641,
											"end": 6662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 572,
											"end": 618,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 572,
											"end": 618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 610,
											"end": 618,
											"name": "PUSH",
											"source": 4,
											"value": "1E13380"
										},
										{
											"begin": 572,
											"end": 618,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 572,
											"end": 618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6861,
											"end": 6882,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6885,
											"end": 6894,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6895,
											"end": 6899,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6885,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6861,
											"end": 6900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6861,
											"end": 6900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6911,
											"end": 6932,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6943,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6935,
											"end": 6949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6944,
											"end": 6948,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6949,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6949,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6949,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6935,
											"end": 6949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6949,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6949,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6949,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6949,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6935,
											"end": 6949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6949,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6950,
											"end": 6955,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6911,
											"end": 6956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6911,
											"end": 6956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6967,
											"end": 6978,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6981,
											"end": 6985,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6981,
											"end": 6990,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6981,
											"end": 6990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6967,
											"end": 6997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6967,
											"end": 6997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7037,
											"end": 7046,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7085,
											"end": 7089,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7065,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7070,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7061,
											"end": 7070,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7075,
											"end": 7076,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7071,
											"end": 7074,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7071,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 7071,
											"end": 7076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7071,
											"end": 7076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7071,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 7071,
											"end": 7076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7071,
											"end": 7076,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 7071,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7061,
											"end": 7077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7082,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7061,
											"end": 7082,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7082,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7103,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7057,
											"end": 7359,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7057,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 7057,
											"end": 7359,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 7146,
											"end": 7150,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7146,
											"end": 7164,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7146,
											"end": 7164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7146,
											"end": 7164,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7165,
											"end": 7180,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 7132,
											"end": 7181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7181,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 7132,
											"end": 7181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 7246,
											"end": 7250,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7246,
											"end": 7257,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7246,
											"end": 7257,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 7220,
											"end": 7224,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7220,
											"end": 7229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7234,
											"end": 7235,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7230,
											"end": 7233,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7230,
											"end": 7235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 7230,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7235,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7230,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7220,
											"end": 7236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7240,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7220,
											"end": 7240,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7240,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7215,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 7205,
											"end": 7219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7241,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7205,
											"end": 7241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7241,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 7205,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 7205,
											"end": 7245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7258,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7258,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7205,
											"end": 7258,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7258,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 7205,
											"end": 7258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7196,
											"end": 7258,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 7196,
											"end": 7258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 7315,
											"end": 7318,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7282,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 715,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "12C"
										},
										{
											"begin": 7282,
											"end": 7288,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7282,
											"end": 7292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7310,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7282,
											"end": 7310,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7310,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7282,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7282,
											"end": 7314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7319,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7319,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7282,
											"end": 7319,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7319,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 7282,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7273,
											"end": 7319,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 7273,
											"end": 7319,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7334,
											"end": 7347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7334,
											"end": 7347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7334,
											"end": 7347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7334,
											"end": 7347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7334,
											"end": 7347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7334,
											"end": 7347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 7334,
											"end": 7347,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7057,
											"end": 7359,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 7057,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7382,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7385,
											"end": 7389,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7385,
											"end": 7396,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7385,
											"end": 7396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7385,
											"end": 7396,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7942,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 7371,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7404,
											"end": 7405,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7400,
											"end": 7403,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7400,
											"end": 7405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7400,
											"end": 7405,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7400,
											"end": 7405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7400,
											"end": 7405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 7400,
											"end": 7405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7400,
											"end": 7405,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7400,
											"end": 7405,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7397,
											"end": 7398,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7397,
											"end": 7405,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7942,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7371,
											"end": 7942,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7432,
											"end": 7436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7427,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7427,
											"end": 7674,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 7523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7483,
											"end": 7487,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7507,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7512,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7503,
											"end": 7512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7515,
											"end": 7516,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7513,
											"end": 7514,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7513,
											"end": 7516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 7513,
											"end": 7516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7513,
											"end": 7516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7513,
											"end": 7516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 7513,
											"end": 7516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7513,
											"end": 7516,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 7513,
											"end": 7516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7503,
											"end": 7517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7522,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7503,
											"end": 7522,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7522,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 7469,
											"end": 7523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 7523,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7469,
											"end": 7523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7456,
											"end": 7523,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7456,
											"end": 7523,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 7588,
											"end": 7592,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7588,
											"end": 7599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7588,
											"end": 7599,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 7566,
											"end": 7570,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7575,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7566,
											"end": 7575,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7576,
											"end": 7577,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7566,
											"end": 7578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7578,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7582,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7566,
											"end": 7582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7566,
											"end": 7582,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7561,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 7551,
											"end": 7565,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7583,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7583,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7551,
											"end": 7583,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7583,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 7551,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 7551,
											"end": 7587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7600,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7600,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7600,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7551,
											"end": 7600,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7600,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 7551,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7600,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7600,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7630,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7619,
											"end": 7630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7649,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7649,
											"end": 7657,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7427,
											"end": 7674,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7427,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7690,
											"end": 7708,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7711,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 7725,
											"end": 7729,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7734,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7725,
											"end": 7734,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7735,
											"end": 7736,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7725,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7742,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7725,
											"end": 7742,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7742,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7748,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7753,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7744,
											"end": 7753,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7756,
											"end": 7757,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7754,
											"end": 7755,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7754,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 7754,
											"end": 7757,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7754,
											"end": 7757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7754,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 7754,
											"end": 7757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7754,
											"end": 7757,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 7754,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7744,
											"end": 7758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7763,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7744,
											"end": 7763,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7763,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7711,
											"end": 7724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 7711,
											"end": 7764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7711,
											"end": 7764,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 7711,
											"end": 7764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7690,
											"end": 7764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7690,
											"end": 7764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7789,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 7800,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 7837,
											"end": 7841,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7848,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7848,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 7815,
											"end": 7819,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7824,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7815,
											"end": 7824,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7825,
											"end": 7826,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7815,
											"end": 7827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7831,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7831,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7810,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 7800,
											"end": 7814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7832,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7832,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7800,
											"end": 7832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7832,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 7800,
											"end": 7832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 7800,
											"end": 7836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7800,
											"end": 7849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7849,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 7800,
											"end": 7849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7789,
											"end": 7795,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 7789,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 7789,
											"end": 7799,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7789,
											"end": 7850,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7789,
											"end": 7850,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7789,
											"end": 7850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7789,
											"end": 7850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7789,
											"end": 7850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7789,
											"end": 7850,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 7789,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7850,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7850,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7880,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 7895,
											"end": 7905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7880,
											"end": 7890,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7880,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 7880,
											"end": 7894,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7880,
											"end": 7906,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7880,
											"end": 7906,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7880,
											"end": 7906,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7880,
											"end": 7906,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7880,
											"end": 7906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7880,
											"end": 7906,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 7880,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7867,
											"end": 7906,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7867,
											"end": 7906,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7410,
											"end": 7942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7942,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7371,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7406,
											"end": 7409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7406,
											"end": 7409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7406,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 7406,
											"end": 7409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7406,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 7406,
											"end": 7409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7406,
											"end": 7409,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 7406,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7406,
											"end": 7409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7406,
											"end": 7409,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7406,
											"end": 7409,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 7371,
											"end": 7942,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7942,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7371,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7967,
											"end": 8017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 7981,
											"end": 7985,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 7990,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7981,
											"end": 7990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7995,
											"end": 7996,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7991,
											"end": 7994,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7991,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 7991,
											"end": 7996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7991,
											"end": 7996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7991,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 7991,
											"end": 7996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7991,
											"end": 7996,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 7991,
											"end": 7996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7981,
											"end": 7997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 8002,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7981,
											"end": 8002,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 8002,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8004,
											"end": 8016,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 7967,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 7967,
											"end": 8017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7967,
											"end": 8017,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 7967,
											"end": 8017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7954,
											"end": 8017,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7954,
											"end": 8017,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8036,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 8047,
											"end": 8100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 8088,
											"end": 8092,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8088,
											"end": 8099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8088,
											"end": 8099,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8088,
											"end": 8099,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 8062,
											"end": 8066,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8071,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8062,
											"end": 8071,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8076,
											"end": 8077,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8072,
											"end": 8075,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8072,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 8072,
											"end": 8077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8072,
											"end": 8077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8072,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 8072,
											"end": 8077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8072,
											"end": 8077,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 8072,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8062,
											"end": 8078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8082,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8082,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8082,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8057,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 8047,
											"end": 8061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8083,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8083,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8083,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8047,
											"end": 8083,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8083,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 8047,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 8047,
											"end": 8087,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8100,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8100,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8047,
											"end": 8100,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8100,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 8047,
											"end": 8100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8036,
											"end": 8042,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8036,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 8036,
											"end": 8046,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8036,
											"end": 8101,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8036,
											"end": 8101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8036,
											"end": 8101,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8036,
											"end": 8101,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8036,
											"end": 8101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8036,
											"end": 8101,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 8036,
											"end": 8101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8028,
											"end": 8101,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 8028,
											"end": 8101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6759,
											"end": 8137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8222,
											"end": 8236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8249,
											"end": 8270,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8282,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8283,
											"end": 8287,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8273,
											"end": 8288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8249,
											"end": 8288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8249,
											"end": 8288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8299,
											"end": 8320,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8323,
											"end": 8331,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8336,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8344,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8338,
											"end": 8343,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8344,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8323,
											"end": 8344,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8344,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8323,
											"end": 8344,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8344,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8344,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8323,
											"end": 8344,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8344,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8344,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8323,
											"end": 8344,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8323,
											"end": 8344,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8323,
											"end": 8344,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8299,
											"end": 8344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8299,
											"end": 8344,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8355,
											"end": 8366,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8369,
											"end": 8373,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8369,
											"end": 8378,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8369,
											"end": 8378,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8369,
											"end": 8385,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8369,
											"end": 8385,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8369,
											"end": 8385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8369,
											"end": 8385,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8355,
											"end": 8385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8355,
											"end": 8385,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8396,
											"end": 8414,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8425,
											"end": 8434,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8492,
											"end": 8496,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8492,
											"end": 8510,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8492,
											"end": 8510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8492,
											"end": 8510,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8472,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8477,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8468,
											"end": 8477,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8482,
											"end": 8483,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8478,
											"end": 8481,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8478,
											"end": 8483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 8478,
											"end": 8483,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8478,
											"end": 8483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8478,
											"end": 8483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 8478,
											"end": 8483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8478,
											"end": 8483,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 8478,
											"end": 8483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8468,
											"end": 8484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8484,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8489,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8468,
											"end": 8489,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8489,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8510,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8464,
											"end": 8669,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8464,
											"end": 8669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 8464,
											"end": 8669,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8539,
											"end": 8543,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8539,
											"end": 8552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8539,
											"end": 8552,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8539,
											"end": 8552,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8526,
											"end": 8552,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8526,
											"end": 8552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 8617,
											"end": 8621,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8617,
											"end": 8628,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8617,
											"end": 8628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8617,
											"end": 8628,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 8591,
											"end": 8595,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8600,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8591,
											"end": 8600,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8605,
											"end": 8606,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8601,
											"end": 8604,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8601,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 8601,
											"end": 8606,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8601,
											"end": 8606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8601,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 8601,
											"end": 8606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8601,
											"end": 8606,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 8601,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8591,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8591,
											"end": 8611,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8611,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8586,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 8576,
											"end": 8590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8612,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8612,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8612,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8576,
											"end": 8612,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8612,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 8576,
											"end": 8612,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 8576,
											"end": 8616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8629,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8629,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8576,
											"end": 8629,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8629,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 8576,
											"end": 8629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8567,
											"end": 8629,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 8567,
											"end": 8629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8644,
											"end": 8657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8644,
											"end": 8657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8644,
											"end": 8657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8644,
											"end": 8657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8644,
											"end": 8657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8644,
											"end": 8657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 8644,
											"end": 8657,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8464,
											"end": 8669,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 8464,
											"end": 8669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8684,
											"end": 8690,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8693,
											"end": 8697,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8693,
											"end": 8704,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8693,
											"end": 8704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8693,
											"end": 8704,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8684,
											"end": 8704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8684,
											"end": 8704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8679,
											"end": 9768,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 8679,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8712,
											"end": 8713,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8708,
											"end": 8711,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 8708,
											"end": 8713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8705,
											"end": 8706,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8705,
											"end": 8713,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8679,
											"end": 9768,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8679,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 8679,
											"end": 9768,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8740,
											"end": 8744,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 8735,
											"end": 9175,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8777,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 8791,
											"end": 8795,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8791,
											"end": 8809,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8791,
											"end": 8809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8791,
											"end": 8809,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8815,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8820,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8811,
											"end": 8820,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8823,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8821,
											"end": 8822,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8821,
											"end": 8824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 8821,
											"end": 8824,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8821,
											"end": 8824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8821,
											"end": 8824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 8821,
											"end": 8824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8821,
											"end": 8824,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 8821,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8811,
											"end": 8825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8830,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8811,
											"end": 8830,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8777,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 8777,
											"end": 8831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8777,
											"end": 8831,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 8777,
											"end": 8831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8764,
											"end": 8831,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8764,
											"end": 8831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8867,
											"end": 8871,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8867,
											"end": 8880,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8867,
											"end": 8880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8867,
											"end": 8880,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8854,
											"end": 8864,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8854,
											"end": 8880,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8850,
											"end": 9025,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8850,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 8850,
											"end": 9025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 8953,
											"end": 8957,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8953,
											"end": 8964,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8953,
											"end": 8964,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8953,
											"end": 8964,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8940,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8931,
											"end": 8940,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8941,
											"end": 8942,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8931,
											"end": 8943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8947,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 8947,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8931,
											"end": 8947,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8917,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8926,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8926,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8926,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 8913,
											"end": 8930,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8948,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8948,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8913,
											"end": 8948,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8948,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 8913,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 8913,
											"end": 8952,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8965,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8965,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8913,
											"end": 8965,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8965,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 8913,
											"end": 8965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8965,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8988,
											"end": 9001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8988,
											"end": 9001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8988,
											"end": 9001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8988,
											"end": 9001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8988,
											"end": 9001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8988,
											"end": 9001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8988,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 8988,
											"end": 9001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8850,
											"end": 9025,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 8850,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9052,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 9089,
											"end": 9093,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9100,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9100,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9100,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9052,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 9067,
											"end": 9071,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9076,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9067,
											"end": 9076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9078,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 9067,
											"end": 9079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9079,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9067,
											"end": 9083,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9083,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9052,
											"end": 9062,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9052,
											"end": 9066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 9052,
											"end": 9066,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9052,
											"end": 9084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9052,
											"end": 9084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9052,
											"end": 9084,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9052,
											"end": 9084,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9052,
											"end": 9084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9052,
											"end": 9084,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 9052,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9052,
											"end": 9088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 9052,
											"end": 9088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9052,
											"end": 9101,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9052,
											"end": 9101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9052,
											"end": 9101,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9052,
											"end": 9101,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9052,
											"end": 9101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9052,
											"end": 9101,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 9052,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9043,
											"end": 9101,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 9043,
											"end": 9101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9127,
											"end": 9131,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9120,
											"end": 9131,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9120,
											"end": 9131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 9150,
											"end": 9158,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 9175,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 8735,
											"end": 9175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9191,
											"end": 9209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9212,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 9226,
											"end": 9230,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9235,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9226,
											"end": 9235,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9236,
											"end": 9237,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 9226,
											"end": 9238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9243,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9226,
											"end": 9243,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9243,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9249,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9254,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9245,
											"end": 9254,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9258,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9255,
											"end": 9256,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9255,
											"end": 9258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 9255,
											"end": 9258,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9255,
											"end": 9258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9255,
											"end": 9258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 9255,
											"end": 9258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9255,
											"end": 9258,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 9255,
											"end": 9258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 9245,
											"end": 9259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9264,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9245,
											"end": 9264,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9264,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9212,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 9212,
											"end": 9265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9212,
											"end": 9265,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 9212,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9191,
											"end": 9265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9191,
											"end": 9265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9319,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9328,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9328,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9328,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 9301,
											"end": 9311,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9296,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 9286,
											"end": 9300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9312,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9312,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9286,
											"end": 9312,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9312,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 9286,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9328,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 9282,
											"end": 9489,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9282,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 9282,
											"end": 9489,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9357,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 9368,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 9424,
											"end": 9428,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9424,
											"end": 9435,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9424,
											"end": 9435,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9424,
											"end": 9435,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 9402,
											"end": 9406,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9411,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9402,
											"end": 9411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9412,
											"end": 9413,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 9402,
											"end": 9414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9414,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9418,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9402,
											"end": 9418,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9418,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 9386,
											"end": 9396,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9372,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9381,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 9368,
											"end": 9385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9397,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9397,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9397,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9397,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9397,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 9368,
											"end": 9397,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 9368,
											"end": 9401,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9419,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9419,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9419,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 9368,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 9368,
											"end": 9423,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9436,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9436,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9436,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 9368,
											"end": 9436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9357,
											"end": 9363,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 9357,
											"end": 9367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 9357,
											"end": 9367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9357,
											"end": 9437,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9357,
											"end": 9437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9357,
											"end": 9437,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9357,
											"end": 9437,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9357,
											"end": 9437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9357,
											"end": 9437,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 9357,
											"end": 9437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9348,
											"end": 9437,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 9348,
											"end": 9437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 9456,
											"end": 9469,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9282,
											"end": 9489,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 9282,
											"end": 9489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9629,
											"end": 9690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 9640,
											"end": 9689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 9677,
											"end": 9681,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9677,
											"end": 9688,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9677,
											"end": 9688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9677,
											"end": 9688,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9640,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 9655,
											"end": 9659,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9664,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9655,
											"end": 9664,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9665,
											"end": 9666,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 9655,
											"end": 9667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9671,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9655,
											"end": 9671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9655,
											"end": 9671,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9640,
											"end": 9650,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9640,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 9640,
											"end": 9654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9640,
											"end": 9672,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9640,
											"end": 9672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9640,
											"end": 9672,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9640,
											"end": 9672,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9640,
											"end": 9672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9640,
											"end": 9672,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 9640,
											"end": 9672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9640,
											"end": 9676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 9640,
											"end": 9676,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9640,
											"end": 9689,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9640,
											"end": 9689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9640,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9640,
											"end": 9689,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9640,
											"end": 9689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9640,
											"end": 9689,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 9640,
											"end": 9689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9629,
											"end": 9635,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 9629,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 9629,
											"end": 9639,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9629,
											"end": 9690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9629,
											"end": 9690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9629,
											"end": 9690,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9629,
											"end": 9690,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9629,
											"end": 9690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9629,
											"end": 9690,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 9629,
											"end": 9690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9621,
											"end": 9690,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 9621,
											"end": 9690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9720,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 9735,
											"end": 9745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9720,
											"end": 9730,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9720,
											"end": 9734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 9720,
											"end": 9734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9720,
											"end": 9746,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9720,
											"end": 9746,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9720,
											"end": 9746,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9720,
											"end": 9746,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9720,
											"end": 9746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9720,
											"end": 9746,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 9720,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9707,
											"end": 9746,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9707,
											"end": 9746,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8718,
											"end": 9768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8679,
											"end": 9768,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 8679,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8717,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8717,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 8714,
											"end": 8717,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8714,
											"end": 8717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8717,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 8714,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8717,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8679,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 8679,
											"end": 9768,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8679,
											"end": 9768,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 8679,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8679,
											"end": 9768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 9804,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 9864,
											"end": 9868,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9864,
											"end": 9875,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9864,
											"end": 9875,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9864,
											"end": 9875,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 9838,
											"end": 9842,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9847,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9838,
											"end": 9847,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9852,
											"end": 9853,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9848,
											"end": 9851,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9848,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 9848,
											"end": 9853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9848,
											"end": 9853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9848,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 9848,
											"end": 9853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9848,
											"end": 9853,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 9848,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 9838,
											"end": 9854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9858,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9838,
											"end": 9858,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9838,
											"end": 9858,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 9822,
											"end": 9832,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9808,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9817,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9804,
											"end": 9817,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9817,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 9804,
											"end": 9821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9833,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9833,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9804,
											"end": 9833,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9833,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 9804,
											"end": 9833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 9804,
											"end": 9837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9859,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9859,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9804,
											"end": 9859,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9859,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 9804,
											"end": 9859,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 9804,
											"end": 9863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9876,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9876,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9804,
											"end": 9876,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9876,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 9804,
											"end": 9876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9799,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 9793,
											"end": 9803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9877,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9877,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9793,
											"end": 9877,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9877,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 9793,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9784,
											"end": 9877,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 9784,
											"end": 9877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9892,
											"end": 9905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9892,
											"end": 9905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9892,
											"end": 9905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9892,
											"end": 9905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9892,
											"end": 9905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 9933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10089,
											"end": 10110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10122,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10123,
											"end": 10127,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 10113,
											"end": 10128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10139,
											"end": 10160,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10163,
											"end": 10171,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10163,
											"end": 10177,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10172,
											"end": 10176,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10177,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10177,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10177,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10163,
											"end": 10177,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10177,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10177,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10177,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10163,
											"end": 10177,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10177,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10163,
											"end": 10177,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10178,
											"end": 10188,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10139,
											"end": 10189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10139,
											"end": 10189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10222,
											"end": 10223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10208,
											"end": 10212,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10208,
											"end": 10219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10208,
											"end": 10219,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10208,
											"end": 10219,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10208,
											"end": 10223,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10204,
											"end": 11853,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10204,
											"end": 11853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 10204,
											"end": 11853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10295,
											"end": 10310,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 10279,
											"end": 10283,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10279,
											"end": 10292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10292,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10260,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10274,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10256,
											"end": 10274,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10274,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 10256,
											"end": 10278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10293,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10256,
											"end": 10293,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10293,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 10256,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10310,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10253,
											"end": 11431,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10253,
											"end": 11431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 10253,
											"end": 11431,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10378,
											"end": 10393,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10396,
											"end": 10428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 10412,
											"end": 10416,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10417,
											"end": 10427,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 10396,
											"end": 10428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10428,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 10396,
											"end": 10428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10378,
											"end": 10428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10378,
											"end": 10428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10460,
											"end": 10461,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10450,
											"end": 10457,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10450,
											"end": 10461,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 10552,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 10552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 10447,
											"end": 10552,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10486,
											"end": 10532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 10512,
											"end": 10522,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10524,
											"end": 10531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10493,
											"end": 10497,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10493,
											"end": 10497,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10493,
											"end": 10497,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10493,
											"end": 10497,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10493,
											"end": 10497,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10493,
											"end": 10497,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 10493,
											"end": 10497,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 10493,
											"end": 10497,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10493,
											"end": 10497,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10493,
											"end": 10497,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10493,
											"end": 10497,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10486,
											"end": 10511,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10486,
											"end": 10511,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10486,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 10486,
											"end": 10511,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10486,
											"end": 10532,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10486,
											"end": 10532,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10486,
											"end": 10532,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10486,
											"end": 10532,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10486,
											"end": 10532,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10486,
											"end": 10532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10486,
											"end": 10532,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 10486,
											"end": 10532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 10552,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 10447,
											"end": 10552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10634,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 10672,
											"end": 10682,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10693,
											"end": 10697,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10707,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10641,
											"end": 10645,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10641,
											"end": 10645,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10641,
											"end": 10645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10641,
											"end": 10645,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10641,
											"end": 10645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10641,
											"end": 10645,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 10641,
											"end": 10645,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 10641,
											"end": 10645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10641,
											"end": 10645,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10641,
											"end": 10645,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10641,
											"end": 10645,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10634,
											"end": 10663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10634,
											"end": 10663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10634,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 10634,
											"end": 10663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10634,
											"end": 10708,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10634,
											"end": 10708,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10634,
											"end": 10708,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10634,
											"end": 10708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10634,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10634,
											"end": 10708,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10634,
											"end": 10708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10634,
											"end": 10708,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 10634,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 10757,
											"end": 10764,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10745,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10752,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10741,
											"end": 10752,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10752,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 10741,
											"end": 10756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10727,
											"end": 10731,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10727,
											"end": 10738,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10727,
											"end": 10738,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10727,
											"end": 10765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10727,
											"end": 10765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10727,
											"end": 10765,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10727,
											"end": 10765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10819,
											"end": 10834,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10802,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10834,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10886,
											"end": 10887,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10867,
											"end": 10871,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10867,
											"end": 10876,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10867,
											"end": 10876,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10867,
											"end": 10883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10867,
											"end": 10883,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10867,
											"end": 10883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10867,
											"end": 10883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10867,
											"end": 10887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 10867,
											"end": 10887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10867,
											"end": 10887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10867,
											"end": 10887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 10867,
											"end": 10887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10867,
											"end": 10887,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 10867,
											"end": 10887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10853,
											"end": 10857,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10853,
											"end": 10864,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10853,
											"end": 10864,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10853,
											"end": 10887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10853,
											"end": 10887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10853,
											"end": 10887,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10853,
											"end": 10887,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10933,
											"end": 10937,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10921,
											"end": 10931,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "PUSH",
											"source": 4,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 10939,
											"end": 10946,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 10913,
											"end": 10947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10966,
											"end": 10973,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10966,
											"end": 10973,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10966,
											"end": 10973,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10966,
											"end": 10973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 10966,
											"end": 10973,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10253,
											"end": 11431,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 10253,
											"end": 11431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 11115,
											"end": 11125,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11136,
											"end": 11140,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 11143,
											"end": 11150,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11088,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 11084,
											"end": 11088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11084,
											"end": 11088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11088,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11088,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 11084,
											"end": 11088,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11088,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11088,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11084,
											"end": 11088,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11106,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11077,
											"end": 11106,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 11077,
											"end": 11106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11151,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11151,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11151,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11077,
											"end": 11151,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11151,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 11077,
											"end": 11151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11184,
											"end": 11208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 11200,
											"end": 11207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11184,
											"end": 11188,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11184,
											"end": 11195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11184,
											"end": 11195,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11184,
											"end": 11195,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11184,
											"end": 11199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 11184,
											"end": 11199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11184,
											"end": 11208,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11184,
											"end": 11208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11184,
											"end": 11208,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11184,
											"end": 11208,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11184,
											"end": 11208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11184,
											"end": 11208,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 11184,
											"end": 11208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11170,
											"end": 11174,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11170,
											"end": 11181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11170,
											"end": 11181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11170,
											"end": 11208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11170,
											"end": 11208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11170,
											"end": 11208,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11170,
											"end": 11208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11262,
											"end": 11277,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 11241,
											"end": 11245,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11241,
											"end": 11277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11241,
											"end": 11277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11241,
											"end": 11277,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11241,
											"end": 11277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11329,
											"end": 11330,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11310,
											"end": 11314,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11310,
											"end": 11319,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11310,
											"end": 11319,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11310,
											"end": 11326,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11310,
											"end": 11326,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11310,
											"end": 11326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11310,
											"end": 11326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11310,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 11310,
											"end": 11330,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11310,
											"end": 11330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11310,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 11310,
											"end": 11330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11310,
											"end": 11330,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 11310,
											"end": 11330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11296,
											"end": 11300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11296,
											"end": 11307,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11296,
											"end": 11307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11296,
											"end": 11330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11296,
											"end": 11330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11296,
											"end": 11330,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11296,
											"end": 11330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11376,
											"end": 11380,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11364,
											"end": 11374,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "PUSH",
											"source": 4,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 11382,
											"end": 11389,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 11356,
											"end": 11390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11356,
											"end": 11390,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 11409,
											"end": 11416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11409,
											"end": 11416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11409,
											"end": 11416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 11409,
											"end": 11416,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10204,
											"end": 11853,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 10204,
											"end": 11853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11573,
											"end": 11588,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 11552,
											"end": 11556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11552,
											"end": 11570,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11552,
											"end": 11570,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11552,
											"end": 11588,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11552,
											"end": 11588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11552,
											"end": 11588,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11552,
											"end": 11588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11636,
											"end": 11637,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11617,
											"end": 11621,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11617,
											"end": 11626,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11617,
											"end": 11626,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11617,
											"end": 11633,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11617,
											"end": 11633,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11617,
											"end": 11633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11617,
											"end": 11633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11617,
											"end": 11637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 11617,
											"end": 11637,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11617,
											"end": 11637,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11617,
											"end": 11637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 11617,
											"end": 11637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11617,
											"end": 11637,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 11617,
											"end": 11637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11603,
											"end": 11607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11603,
											"end": 11614,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11603,
											"end": 11614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11603,
											"end": 11637,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11603,
											"end": 11637,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11603,
											"end": 11637,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11603,
											"end": 11637,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11667,
											"end": 11674,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11653,
											"end": 11657,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11653,
											"end": 11664,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11653,
											"end": 11664,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11653,
											"end": 11674,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11653,
											"end": 11674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11653,
											"end": 11674,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11653,
											"end": 11674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11690,
											"end": 11764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 11728,
											"end": 11738,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11749,
											"end": 11753,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 11756,
											"end": 11763,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11697,
											"end": 11701,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 11697,
											"end": 11701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11697,
											"end": 11701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11697,
											"end": 11701,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11697,
											"end": 11701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11697,
											"end": 11701,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 11697,
											"end": 11701,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 11697,
											"end": 11701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11697,
											"end": 11701,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 11697,
											"end": 11701,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11697,
											"end": 11701,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11690,
											"end": 11719,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11690,
											"end": 11719,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11690,
											"end": 11719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 11690,
											"end": 11719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11690,
											"end": 11764,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11690,
											"end": 11764,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11690,
											"end": 11764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11690,
											"end": 11764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11690,
											"end": 11764,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11690,
											"end": 11764,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11690,
											"end": 11764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11690,
											"end": 11764,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 11690,
											"end": 11764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11804,
											"end": 11808,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11792,
											"end": 11802,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "PUSH",
											"source": 4,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 11810,
											"end": 11817,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 11784,
											"end": 11818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11784,
											"end": 11818,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 11833,
											"end": 11841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11833,
											"end": 11841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 11870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 715,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "12C"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 629,
											"end": 663,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 660,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 771,
											"end": 982,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 771,
											"end": 982,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 888,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 908,
											"end": 913,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 938,
											"end": 961,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 938,
											"end": 961,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 938,
											"end": 961,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 963,
											"end": 965,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 967,
											"end": 972,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 915,
											"end": 973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 888,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 888,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 888,
											"end": 974,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 888,
											"end": 974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 771,
											"end": 982,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 771,
											"end": 982,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 771,
											"end": 982,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 771,
											"end": 982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1134,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1228,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 1161,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1134,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1134,
											"end": 1230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1134,
											"end": 1230,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 1134,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 4056,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3282,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3729,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 3760,
											"end": 3764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 7,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3745,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3837,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3816,
											"end": 3826,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3837,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 4049,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 3812,
											"end": 4049,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3981,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 3960,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 3952,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 4049,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 3812,
											"end": 4049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 4056,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 4056,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 4056,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 4056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4088,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 4037,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5125,
											"end": 5137,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5178,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 5149,
											"end": 5230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5278,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5306,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 5282,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 5357,
											"end": 5363,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 5330,
											"end": 5399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 5406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7658,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7674,
											"end": 7681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7711,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 7927,
											"end": 7933,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 7916,
											"end": 7934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 7908,
											"end": 7968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8003,
											"end": 8013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8076,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 8044,
											"end": 8077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7466,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8775,
											"end": 8796,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8997,
											"end": 9014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9059,
											"end": 9074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9046,
											"end": 9056,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9044,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9075,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 9119,
											"end": 9139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1169,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1164,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1146,
											"end": 1153,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1142,
											"end": 1165,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1138,
											"end": 1170,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 1173,
											"end": 1252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1293,
											"end": 1294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1360,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1339,
											"end": 1361,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 1318,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1371,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1264,
											"end": 1381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 1491,
											"end": 1498,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1480,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1467,
											"end": 1489,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 1446,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1499,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1566,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1641,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1588,
											"end": 1642,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1577,
											"end": 1642,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1577,
											"end": 1642,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1691,
											"end": 1698,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 1720,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1744,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1654,
											"end": 1750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1815,
											"end": 1822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 1862,
											"end": 1867,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1844,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 1844,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1844,
											"end": 1868,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 1844,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1868,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2046,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 1880,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 2015,
											"end": 2020,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 1975,
											"end": 2021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 2021,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 1975,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 1973,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1965,
											"end": 2022,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 1955,
											"end": 2040,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2034,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2038,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 2040,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 1955,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2235,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 2052,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2165,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 2223,
											"end": 2228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 2174,
											"end": 2229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2229,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 2174,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2235,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2235,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2614,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2373,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2368,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2357,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2369,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2342,
											"end": 2374,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2458,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 2339,
											"end": 2458,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2377,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 2377,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 2377,
											"end": 2456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2377,
											"end": 2456,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 2377,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2458,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 2339,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2498,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 2589,
											"end": 2596,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2586,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2578,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2565,
											"end": 2587,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 2522,
											"end": 2597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2597,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 2522,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2512,
											"end": 2597,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2512,
											"end": 2597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2614,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2614,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2614,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2614,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2620,
											"end": 2949,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2620,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2685,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2728,
											"end": 2730,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2714,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2726,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2731,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2815,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 2696,
											"end": 2815,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2734,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 2734,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 2734,
											"end": 2813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2734,
											"end": 2813,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 2734,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2815,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 2696,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2921,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2904,
											"end": 2913,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2900,
											"end": 2922,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2879,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 2879,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2879,
											"end": 2932,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 2879,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2932,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2825,
											"end": 2942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2620,
											"end": 2949,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2620,
											"end": 2949,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2620,
											"end": 2949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2620,
											"end": 2949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2620,
											"end": 2949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2955,
											"end": 3063,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 2955,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3032,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3032,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 3032,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3032,
											"end": 3056,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 3032,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3027,
											"end": 3030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3057,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2955,
											"end": 3063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2955,
											"end": 3063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2955,
											"end": 3063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3207,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 3069,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3160,
											"end": 3166,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3199,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3200,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3178,
											"end": 3200,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3178,
											"end": 3200,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3207,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3337,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3360,
											"end": 3366,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3355,
											"end": 3358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3400,
											"end": 3404,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3398,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3391,
											"end": 3405,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3376,
											"end": 3405,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3376,
											"end": 3405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3573,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 3417,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3508,
											"end": 3512,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3534,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3565,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3556,
											"end": 3559,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3552,
											"end": 3566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3573,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3573,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3573,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 4131,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 3637,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3772,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3767,
											"end": 3770,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3858,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3847,
											"end": 3863,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3841,
											"end": 3864,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 3934,
											"end": 3938,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3932,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3925,
											"end": 3939,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3923,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 3877,
											"end": 3940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3940,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 3877,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4036,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4021,
											"end": 4037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4015,
											"end": 4038,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4051,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 4108,
											"end": 4112,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4103,
											"end": 4106,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4099,
											"end": 4113,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4097,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4051,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 4051,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4051,
											"end": 4114,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 4051,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 4124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 4131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 4131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 4131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4412,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 4137,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 4365,
											"end": 4368,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4357,
											"end": 4363,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 4275,
											"end": 4369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4369,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 4275,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4405,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4399,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4406,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4378,
											"end": 4406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4378,
											"end": 4406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4412,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4412,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4555,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 4418,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4512,
											"end": 4516,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4544,
											"end": 4548,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4539,
											"end": 4542,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4555,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4555,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4623,
											"end": 5527,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 4623,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4780,
											"end": 4783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 4881,
											"end": 4886,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4809,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 4809,
											"end": 4887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4809,
											"end": 4887,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 4809,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 4996,
											"end": 5002,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4991,
											"end": 4994,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 4903,
											"end": 5003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 5003,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 4903,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4896,
											"end": 5003,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4896,
											"end": 5003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 5101,
											"end": 5106,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 5027,
											"end": 5107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 5107,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 5027,
											"end": 5107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5130,
											"end": 5137,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5161,
											"end": 5162,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5502,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 5146,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5171,
											"end": 5177,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5169,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5165,
											"end": 5178,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5502,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 5146,
											"end": 5502,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5241,
											"end": 5254,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5274,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 5381,
											"end": 5384,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5366,
											"end": 5379,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5274,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 5274,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5274,
											"end": 5385,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 5274,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5267,
											"end": 5385,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 5267,
											"end": 5385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 5485,
											"end": 5491,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 5408,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5492,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 5408,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5398,
											"end": 5492,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5398,
											"end": 5492,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5206,
											"end": 5502,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5193,
											"end": 5194,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5190,
											"end": 5191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5195,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5181,
											"end": 5195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5181,
											"end": 5195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 5146,
											"end": 5502,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5502,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 5146,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5150,
											"end": 5164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5518,
											"end": 5521,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5521,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 5527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 5527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 5527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4623,
											"end": 5527,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4623,
											"end": 5527,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4623,
											"end": 5527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4623,
											"end": 5527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4623,
											"end": 5527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5593,
											"end": 6281,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 5593,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5712,
											"end": 5715,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5748,
											"end": 5752,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5743,
											"end": 5746,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5739,
											"end": 5753,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5839,
											"end": 5843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5837,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5828,
											"end": 5844,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5845,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5858,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 5915,
											"end": 5919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5910,
											"end": 5913,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5906,
											"end": 5920,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5892,
											"end": 5904,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5858,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 5858,
											"end": 5921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5858,
											"end": 5921,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 5858,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6017,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6011,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5996,
											"end": 6019,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6069,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6060,
											"end": 6064,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6056,
											"end": 6070,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6053,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6044,
											"end": 6047,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6033,
											"end": 6071,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6092,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 6238,
											"end": 6242,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6224,
											"end": 6236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6092,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 6092,
											"end": 6243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6092,
											"end": 6243,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 6092,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6084,
											"end": 6243,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6084,
											"end": 6243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5941,
											"end": 6254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6275,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6264,
											"end": 6275,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6264,
											"end": 6275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5593,
											"end": 6281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5593,
											"end": 6281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5593,
											"end": 6281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5593,
											"end": 6281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5593,
											"end": 6281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6287,
											"end": 6660,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 6287,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6434,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6468,
											"end": 6470,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6466,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6453,
											"end": 6471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6445,
											"end": 6471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6445,
											"end": 6471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6517,
											"end": 6526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6511,
											"end": 6515,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6507,
											"end": 6527,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6504,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6492,
											"end": 6501,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6488,
											"end": 6505,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6481,
											"end": 6528,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 6648,
											"end": 6652,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6639,
											"end": 6645,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 6545,
											"end": 6653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6653,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 6545,
											"end": 6653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6537,
											"end": 6653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6537,
											"end": 6653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6287,
											"end": 6660,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6287,
											"end": 6660,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6287,
											"end": 6660,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6287,
											"end": 6660,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6287,
											"end": 6660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6726,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 6666,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6694,
											"end": 6697,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6715,
											"end": 6720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6708,
											"end": 6720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6708,
											"end": 6720,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6732,
											"end": 6874,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 6732,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6782,
											"end": 6791,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6815,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 6833,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 6842,
											"end": 6866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 6860,
											"end": 6865,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 6866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 6842,
											"end": 6866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 6866,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 6842,
											"end": 6866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 6833,
											"end": 6867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 6867,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 6833,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6815,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 6815,
											"end": 6868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6815,
											"end": 6868,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 6815,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6868,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6732,
											"end": 6874,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6732,
											"end": 6874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6732,
											"end": 6874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6732,
											"end": 6874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6880,
											"end": 7006,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 6880,
											"end": 7006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6930,
											"end": 6939,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6963,
											"end": 7000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 6994,
											"end": 6999,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6963,
											"end": 7000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 6963,
											"end": 7000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6963,
											"end": 7000,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 6963,
											"end": 7000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6950,
											"end": 7000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6950,
											"end": 7000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6880,
											"end": 7006,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6880,
											"end": 7006,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6880,
											"end": 7006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6880,
											"end": 7006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7012,
											"end": 7153,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 7012,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7086,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7110,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 7141,
											"end": 7146,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7110,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 7110,
											"end": 7147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7110,
											"end": 7147,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 7110,
											"end": 7147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7097,
											"end": 7147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7097,
											"end": 7147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7012,
											"end": 7153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7012,
											"end": 7153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7012,
											"end": 7153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7012,
											"end": 7153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7159,
											"end": 7320,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 7159,
											"end": 7320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7261,
											"end": 7313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 7307,
											"end": 7312,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7261,
											"end": 7313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 7261,
											"end": 7313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7261,
											"end": 7313,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 7261,
											"end": 7313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7256,
											"end": 7259,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7159,
											"end": 7320,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7159,
											"end": 7320,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7159,
											"end": 7320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7326,
											"end": 7578,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 7326,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7434,
											"end": 7438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7474,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7461,
											"end": 7470,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7457,
											"end": 7475,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7449,
											"end": 7475,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7449,
											"end": 7475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7485,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 7568,
											"end": 7569,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7557,
											"end": 7566,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7570,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7544,
											"end": 7550,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7485,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 7485,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7485,
											"end": 7571,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 7485,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7326,
											"end": 7578,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7326,
											"end": 7578,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7326,
											"end": 7578,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7326,
											"end": 7578,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7326,
											"end": 7578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7732,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 7584,
											"end": 7732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7656,
											"end": 7665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7689,
											"end": 7726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 7720,
											"end": 7725,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7689,
											"end": 7726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 7689,
											"end": 7726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7689,
											"end": 7726,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 7689,
											"end": 7726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7676,
											"end": 7726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7676,
											"end": 7726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7732,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7732,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 7913,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 7738,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7847,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 7900,
											"end": 7905,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7847,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 7847,
											"end": 7906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7847,
											"end": 7906,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 7847,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7842,
											"end": 7845,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7835,
											"end": 7907,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 7913,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 7913,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 7913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7919,
											"end": 8185,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 7919,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8034,
											"end": 8038,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8072,
											"end": 8074,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8061,
											"end": 8070,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8057,
											"end": 8075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8049,
											"end": 8075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8049,
											"end": 8075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8085,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 8175,
											"end": 8176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8164,
											"end": 8173,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8160,
											"end": 8177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8151,
											"end": 8157,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8085,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 8085,
											"end": 8178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8085,
											"end": 8178,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 8085,
											"end": 8178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7919,
											"end": 8185,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7919,
											"end": 8185,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7919,
											"end": 8185,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7919,
											"end": 8185,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7919,
											"end": 8185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8191,
											"end": 8309,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 8191,
											"end": 8309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8278,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 8296,
											"end": 8301,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8278,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 8278,
											"end": 8302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8278,
											"end": 8302,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 8278,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8273,
											"end": 8276,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8266,
											"end": 8303,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8191,
											"end": 8309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8191,
											"end": 8309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8191,
											"end": 8309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8315,
											"end": 8537,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 8315,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8408,
											"end": 8412,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8446,
											"end": 8448,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8435,
											"end": 8444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8431,
											"end": 8449,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8423,
											"end": 8449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8423,
											"end": 8449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 8527,
											"end": 8528,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8516,
											"end": 8525,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8512,
											"end": 8529,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8503,
											"end": 8509,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 8459,
											"end": 8530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 8530,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 8459,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8315,
											"end": 8537,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8315,
											"end": 8537,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8315,
											"end": 8537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8315,
											"end": 8537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8315,
											"end": 8537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8543,
											"end": 8665,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 8543,
											"end": 8665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8616,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 8634,
											"end": 8639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8616,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 8616,
											"end": 8640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8616,
											"end": 8640,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 8616,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8609,
											"end": 8614,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8641,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 8596,
											"end": 8659,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8655,
											"end": 8656,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8652,
											"end": 8653,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8657,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8659,
											"name": "tag",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 8596,
											"end": 8659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8543,
											"end": 8665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8543,
											"end": 8665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 8810,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 8671,
											"end": 8810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8717,
											"end": 8722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8755,
											"end": 8761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8742,
											"end": 8762,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8733,
											"end": 8762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8733,
											"end": 8762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8771,
											"end": 8804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 8798,
											"end": 8803,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8771,
											"end": 8804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 8771,
											"end": 8804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8771,
											"end": 8804,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 8771,
											"end": 8804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 8810,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 8810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 8810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 8810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 8810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8816,
											"end": 9290,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 8816,
											"end": 9290,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8884,
											"end": 8890,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8892,
											"end": 8898,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8941,
											"end": 8943,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8929,
											"end": 8938,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8920,
											"end": 8927,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8939,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8912,
											"end": 8944,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8909,
											"end": 9028,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8909,
											"end": 9028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 8909,
											"end": 9028,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8947,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 8947,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 8947,
											"end": 9026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8947,
											"end": 9026,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 8947,
											"end": 9026,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8909,
											"end": 9028,
											"name": "tag",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 8909,
											"end": 9028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9067,
											"end": 9068,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9092,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 9137,
											"end": 9144,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9128,
											"end": 9134,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9117,
											"end": 9126,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9113,
											"end": 9135,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9092,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 9092,
											"end": 9145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9092,
											"end": 9145,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 9092,
											"end": 9145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9082,
											"end": 9145,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9082,
											"end": 9145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9038,
											"end": 9155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9194,
											"end": 9196,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9220,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 9265,
											"end": 9272,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9256,
											"end": 9262,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9245,
											"end": 9254,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9241,
											"end": 9263,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9220,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 9220,
											"end": 9273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9220,
											"end": 9273,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 9220,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9210,
											"end": 9273,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9210,
											"end": 9273,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9165,
											"end": 9283,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8816,
											"end": 9290,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8816,
											"end": 9290,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8816,
											"end": 9290,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8816,
											"end": 9290,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8816,
											"end": 9290,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8816,
											"end": 9290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9296,
											"end": 9738,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 9296,
											"end": 9738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9445,
											"end": 9449,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9483,
											"end": 9485,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9472,
											"end": 9481,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9468,
											"end": 9486,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9460,
											"end": 9486,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9460,
											"end": 9486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9496,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 9564,
											"end": 9565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9553,
											"end": 9562,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9549,
											"end": 9566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9540,
											"end": 9546,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9496,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 9496,
											"end": 9567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9496,
											"end": 9567,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 9496,
											"end": 9567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9577,
											"end": 9649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 9645,
											"end": 9647,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9634,
											"end": 9643,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9621,
											"end": 9627,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9577,
											"end": 9649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 9577,
											"end": 9649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9577,
											"end": 9649,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 9577,
											"end": 9649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9659,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 9727,
											"end": 9729,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9716,
											"end": 9725,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9712,
											"end": 9730,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9703,
											"end": 9709,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9659,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 9659,
											"end": 9731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9659,
											"end": 9731,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 9659,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9296,
											"end": 9738,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9296,
											"end": 9738,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9296,
											"end": 9738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9296,
											"end": 9738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9296,
											"end": 9738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9296,
											"end": 9738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9296,
											"end": 9738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 10073,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 9744,
											"end": 10073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9803,
											"end": 9809,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9852,
											"end": 9854,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9831,
											"end": 9838,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9827,
											"end": 9850,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9823,
											"end": 9855,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 9939,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 9939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 9820,
											"end": 9939,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9858,
											"end": 9937,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 9858,
											"end": 9937,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 9858,
											"end": 9937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9858,
											"end": 9937,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 9858,
											"end": 9937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 9939,
											"name": "tag",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 9820,
											"end": 9939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10003,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 10048,
											"end": 10055,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10039,
											"end": 10045,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10028,
											"end": 10037,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10024,
											"end": 10046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10003,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 10003,
											"end": 10056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10003,
											"end": 10056,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 10003,
											"end": 10056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9993,
											"end": 10056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9993,
											"end": 10056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9949,
											"end": 10066,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 10073,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 10073,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 10073,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 10073,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 10073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10079,
											"end": 10259,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 10079,
											"end": 10259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10127,
											"end": 10204,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10124,
											"end": 10125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10117,
											"end": 10205,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10224,
											"end": 10228,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 10221,
											"end": 10222,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10214,
											"end": 10229,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10248,
											"end": 10252,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10245,
											"end": 10246,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10253,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10434,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 10265,
											"end": 10434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10349,
											"end": 10360,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10383,
											"end": 10389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10378,
											"end": 10381,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10371,
											"end": 10390,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10423,
											"end": 10427,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10418,
											"end": 10421,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10414,
											"end": 10428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10399,
											"end": 10428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10399,
											"end": 10428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10434,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10434,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10440,
											"end": 10614,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 10440,
											"end": 10614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10580,
											"end": 10606,
											"name": "PUSH",
											"source": 8,
											"value": "42464C593A2053554646494349454E545F42414C414E43450000000000000000"
										},
										{
											"begin": 10576,
											"end": 10577,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10568,
											"end": 10574,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10564,
											"end": 10578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10557,
											"end": 10607,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10440,
											"end": 10614,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10440,
											"end": 10614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10620,
											"end": 10986,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 10620,
											"end": 10986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10762,
											"end": 10765,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10783,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 10847,
											"end": 10849,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 10842,
											"end": 10845,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10783,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 10783,
											"end": 10850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10783,
											"end": 10850,
											"name": "tag",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 10783,
											"end": 10850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10776,
											"end": 10850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10776,
											"end": 10850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10859,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 10948,
											"end": 10951,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10859,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 10859,
											"end": 10952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10859,
											"end": 10952,
											"name": "tag",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 10859,
											"end": 10952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10977,
											"end": 10979,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10972,
											"end": 10975,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10968,
											"end": 10980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10961,
											"end": 10980,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10961,
											"end": 10980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10620,
											"end": 10986,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10620,
											"end": 10986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10620,
											"end": 10986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10620,
											"end": 10986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10992,
											"end": 11411,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 10992,
											"end": 11411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11158,
											"end": 11162,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11196,
											"end": 11198,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11185,
											"end": 11194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11181,
											"end": 11199,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11173,
											"end": 11199,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11173,
											"end": 11199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11245,
											"end": 11254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11235,
											"end": 11255,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11231,
											"end": 11232,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11220,
											"end": 11229,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11216,
											"end": 11233,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11209,
											"end": 11256,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 11399,
											"end": 11403,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 11273,
											"end": 11404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11404,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 11273,
											"end": 11404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11265,
											"end": 11404,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11265,
											"end": 11404,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10992,
											"end": 11411,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10992,
											"end": 11411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10992,
											"end": 11411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10992,
											"end": 11411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11417,
											"end": 11597,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 11417,
											"end": 11597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11465,
											"end": 11542,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11462,
											"end": 11463,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11455,
											"end": 11543,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11562,
											"end": 11566,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 11559,
											"end": 11560,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11552,
											"end": 11567,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11586,
											"end": 11590,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11583,
											"end": 11584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11576,
											"end": 11591,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11603,
											"end": 11797,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 11603,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11643,
											"end": 11647,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11663,
											"end": 11683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 11681,
											"end": 11682,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11663,
											"end": 11683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 11663,
											"end": 11683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11663,
											"end": 11683,
											"name": "tag",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 11663,
											"end": 11683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11658,
											"end": 11683,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11658,
											"end": 11683,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11697,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 11715,
											"end": 11716,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11697,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 11697,
											"end": 11717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11697,
											"end": 11717,
											"name": "tag",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 11697,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11692,
											"end": 11717,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11692,
											"end": 11717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11741,
											"end": 11742,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11738,
											"end": 11739,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11734,
											"end": 11743,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11726,
											"end": 11743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11726,
											"end": 11743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11765,
											"end": 11766,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11759,
											"end": 11763,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11756,
											"end": 11767,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11753,
											"end": 11790,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11753,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 11753,
											"end": 11790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 11770,
											"end": 11788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "tag",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11753,
											"end": 11790,
											"name": "tag",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 11753,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11603,
											"end": 11797,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11603,
											"end": 11797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11603,
											"end": 11797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11603,
											"end": 11797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11603,
											"end": 11797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11803,
											"end": 11994,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 11803,
											"end": 11994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 11846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11862,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 11880,
											"end": 11881,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11862,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 11862,
											"end": 11882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11862,
											"end": 11882,
											"name": "tag",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 11862,
											"end": 11882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11857,
											"end": 11882,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11857,
											"end": 11882,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11896,
											"end": 11916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 11914,
											"end": 11915,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11896,
											"end": 11916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 11896,
											"end": 11916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11896,
											"end": 11916,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 11896,
											"end": 11916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11891,
											"end": 11916,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11891,
											"end": 11916,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11939,
											"end": 11940,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11936,
											"end": 11937,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11932,
											"end": 11941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11925,
											"end": 11941,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11925,
											"end": 11941,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11960,
											"end": 11963,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11957,
											"end": 11958,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11954,
											"end": 11964,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11951,
											"end": 11987,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11951,
											"end": 11987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 11951,
											"end": 11987,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11967,
											"end": 11985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 11967,
											"end": 11985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 11967,
											"end": 11985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11967,
											"end": 11985,
											"name": "tag",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 11967,
											"end": 11985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11951,
											"end": 11987,
											"name": "tag",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 11951,
											"end": 11987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11803,
											"end": 11994,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11803,
											"end": 11994,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11803,
											"end": 11994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11803,
											"end": 11994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11803,
											"end": 11994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12233,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 12000,
											"end": 12233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12039,
											"end": 12042,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12062,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 12080,
											"end": 12085,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12062,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 12062,
											"end": 12086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12062,
											"end": 12086,
											"name": "tag",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 12062,
											"end": 12086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12053,
											"end": 12086,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12053,
											"end": 12086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12108,
											"end": 12174,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12101,
											"end": 12106,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12098,
											"end": 12175,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12095,
											"end": 12198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 12095,
											"end": 12198,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 12178,
											"end": 12196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "tag",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12095,
											"end": 12198,
											"name": "tag",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 12095,
											"end": 12198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12225,
											"end": 12226,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12218,
											"end": 12223,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12214,
											"end": 12227,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12207,
											"end": 12227,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12207,
											"end": 12227,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12233,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12233,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12239,
											"end": 12464,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 12239,
											"end": 12464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12379,
											"end": 12413,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12375,
											"end": 12376,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12367,
											"end": 12373,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12363,
											"end": 12377,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12356,
											"end": 12414,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12448,
											"end": 12456,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12443,
											"end": 12445,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12435,
											"end": 12441,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12431,
											"end": 12446,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12424,
											"end": 12457,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12239,
											"end": 12464,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12239,
											"end": 12464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12470,
											"end": 12836,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 12470,
											"end": 12836,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12612,
											"end": 12615,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12633,
											"end": 12700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 12697,
											"end": 12699,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 12692,
											"end": 12695,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 12633,
											"end": 12700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12700,
											"name": "tag",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 12633,
											"end": 12700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12626,
											"end": 12700,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12626,
											"end": 12700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12709,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "576"
										},
										{
											"begin": 12798,
											"end": 12801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12709,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 12709,
											"end": 12802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12709,
											"end": 12802,
											"name": "tag",
											"source": 8,
											"value": "576"
										},
										{
											"begin": 12709,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12827,
											"end": 12829,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12822,
											"end": 12825,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12818,
											"end": 12830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12811,
											"end": 12830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12811,
											"end": 12830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12470,
											"end": 12836,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12470,
											"end": 12836,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12470,
											"end": 12836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12470,
											"end": 12836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12842,
											"end": 13261,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 12842,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13008,
											"end": 13012,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13046,
											"end": 13048,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13035,
											"end": 13044,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13031,
											"end": 13049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13023,
											"end": 13049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13023,
											"end": 13049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13095,
											"end": 13104,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13089,
											"end": 13093,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13085,
											"end": 13105,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13081,
											"end": 13082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13070,
											"end": 13079,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13066,
											"end": 13083,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13059,
											"end": 13106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13123,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 13249,
											"end": 13253,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13123,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 13123,
											"end": 13254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13123,
											"end": 13254,
											"name": "tag",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 13123,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13115,
											"end": 13254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13115,
											"end": 13254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12842,
											"end": 13261,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12842,
											"end": 13261,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12842,
											"end": 13261,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12842,
											"end": 13261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13267,
											"end": 13449,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 13267,
											"end": 13449,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13407,
											"end": 13441,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13403,
											"end": 13404,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13395,
											"end": 13401,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13391,
											"end": 13405,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13384,
											"end": 13442,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13267,
											"end": 13449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13267,
											"end": 13449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13455,
											"end": 13821,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 13455,
											"end": 13821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13597,
											"end": 13600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13618,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 13682,
											"end": 13684,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13677,
											"end": 13680,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13618,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 13618,
											"end": 13685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13618,
											"end": 13685,
											"name": "tag",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 13618,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13611,
											"end": 13685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13611,
											"end": 13685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13694,
											"end": 13787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 13783,
											"end": 13786,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13694,
											"end": 13787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 13694,
											"end": 13787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13694,
											"end": 13787,
											"name": "tag",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 13694,
											"end": 13787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13812,
											"end": 13814,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13807,
											"end": 13810,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13803,
											"end": 13815,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13796,
											"end": 13815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13796,
											"end": 13815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13455,
											"end": 13821,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13455,
											"end": 13821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13455,
											"end": 13821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13455,
											"end": 13821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13827,
											"end": 14246,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 13827,
											"end": 14246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13993,
											"end": 13997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14031,
											"end": 14033,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14020,
											"end": 14029,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14016,
											"end": 14034,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14008,
											"end": 14034,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14008,
											"end": 14034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14080,
											"end": 14089,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14070,
											"end": 14090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14066,
											"end": 14067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14055,
											"end": 14064,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14051,
											"end": 14068,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14044,
											"end": 14091,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14108,
											"end": 14239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 14234,
											"end": 14238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14108,
											"end": 14239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 14108,
											"end": 14239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14108,
											"end": 14239,
											"name": "tag",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 14108,
											"end": 14239,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14100,
											"end": 14239,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14100,
											"end": 14239,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13827,
											"end": 14246,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13827,
											"end": 14246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13827,
											"end": 14246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13827,
											"end": 14246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14584,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 14252,
											"end": 14584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14373,
											"end": 14377,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14411,
											"end": 14413,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14400,
											"end": 14409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14396,
											"end": 14414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14388,
											"end": 14414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14388,
											"end": 14414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14424,
											"end": 14495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 14492,
											"end": 14493,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14481,
											"end": 14490,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14477,
											"end": 14494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14468,
											"end": 14474,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14424,
											"end": 14495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 14424,
											"end": 14495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14424,
											"end": 14495,
											"name": "tag",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 14424,
											"end": 14495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14505,
											"end": 14577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 14573,
											"end": 14575,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14562,
											"end": 14571,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14549,
											"end": 14555,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14505,
											"end": 14577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 14505,
											"end": 14577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14505,
											"end": 14577,
											"name": "tag",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 14505,
											"end": 14577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14584,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14584,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14590,
											"end": 15000,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 14590,
											"end": 15000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14630,
											"end": 14637,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14653,
											"end": 14673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 14671,
											"end": 14672,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14653,
											"end": 14673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 14653,
											"end": 14673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14653,
											"end": 14673,
											"name": "tag",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 14653,
											"end": 14673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14648,
											"end": 14673,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14648,
											"end": 14673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14687,
											"end": 14707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 14705,
											"end": 14706,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14687,
											"end": 14707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 14687,
											"end": 14707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14687,
											"end": 14707,
											"name": "tag",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 14687,
											"end": 14707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14707,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14707,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14742,
											"end": 14743,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14739,
											"end": 14740,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14735,
											"end": 14744,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14764,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 14782,
											"end": 14793,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14764,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 14764,
											"end": 14794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14764,
											"end": 14794,
											"name": "tag",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 14764,
											"end": 14794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14753,
											"end": 14794,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14753,
											"end": 14794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14943,
											"end": 14944,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14934,
											"end": 14941,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14930,
											"end": 14945,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 14928,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14924,
											"end": 14946,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 14904,
											"end": 14905,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14897,
											"end": 14906,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14877,
											"end": 14960,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 14854,
											"end": 14993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 14854,
											"end": 14993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14973,
											"end": 14991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 14973,
											"end": 14991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 14973,
											"end": 14991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14973,
											"end": 14991,
											"name": "tag",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 14973,
											"end": 14991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14854,
											"end": 14993,
											"name": "tag",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 14854,
											"end": 14993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14638,
											"end": 15000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14590,
											"end": 15000,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14590,
											"end": 15000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14590,
											"end": 15000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14590,
											"end": 15000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14590,
											"end": 15000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15006,
											"end": 15186,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 15006,
											"end": 15186,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15054,
											"end": 15131,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15051,
											"end": 15052,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15044,
											"end": 15132,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15151,
											"end": 15155,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 15148,
											"end": 15149,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15141,
											"end": 15156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15175,
											"end": 15179,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 15172,
											"end": 15173,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15165,
											"end": 15180,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15192,
											"end": 15377,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 15192,
											"end": 15377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15232,
											"end": 15233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15249,
											"end": 15269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 15267,
											"end": 15268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15249,
											"end": 15269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 15249,
											"end": 15269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15249,
											"end": 15269,
											"name": "tag",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 15249,
											"end": 15269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15269,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15283,
											"end": 15303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 15301,
											"end": 15302,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15283,
											"end": 15303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 15283,
											"end": 15303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15283,
											"end": 15303,
											"name": "tag",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 15283,
											"end": 15303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15278,
											"end": 15303,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15278,
											"end": 15303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15322,
											"end": 15323,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15312,
											"end": 15347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 15312,
											"end": 15347,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15327,
											"end": 15345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 15327,
											"end": 15345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 15327,
											"end": 15345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15327,
											"end": 15345,
											"name": "tag",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 15327,
											"end": 15345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15312,
											"end": 15347,
											"name": "tag",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 15312,
											"end": 15347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15369,
											"end": 15370,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15366,
											"end": 15367,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15362,
											"end": 15371,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 15357,
											"end": 15371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15357,
											"end": 15371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15192,
											"end": 15377,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15192,
											"end": 15377,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15192,
											"end": 15377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15192,
											"end": 15377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15192,
											"end": 15377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15383,
											"end": 15825,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 15383,
											"end": 15825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15532,
											"end": 15536,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15570,
											"end": 15572,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 15559,
											"end": 15568,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15555,
											"end": 15573,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15547,
											"end": 15573,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15547,
											"end": 15573,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15583,
											"end": 15654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "601"
										},
										{
											"begin": 15651,
											"end": 15652,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15640,
											"end": 15649,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 15653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15627,
											"end": 15633,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15583,
											"end": 15654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 15583,
											"end": 15654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15583,
											"end": 15654,
											"name": "tag",
											"source": 8,
											"value": "601"
										},
										{
											"begin": 15583,
											"end": 15654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15664,
											"end": 15736,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 15732,
											"end": 15734,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15721,
											"end": 15730,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15717,
											"end": 15735,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15708,
											"end": 15714,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15664,
											"end": 15736,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 15664,
											"end": 15736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15664,
											"end": 15736,
											"name": "tag",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 15664,
											"end": 15736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15746,
											"end": 15818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 15814,
											"end": 15816,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15803,
											"end": 15812,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15799,
											"end": 15817,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15790,
											"end": 15796,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15746,
											"end": 15818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 15746,
											"end": 15818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15746,
											"end": 15818,
											"name": "tag",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 15746,
											"end": 15818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15383,
											"end": 15825,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 15383,
											"end": 15825,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 15383,
											"end": 15825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15383,
											"end": 15825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15383,
											"end": 15825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15383,
											"end": 15825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15383,
											"end": 15825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15831,
											"end": 15921,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 15831,
											"end": 15921,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15865,
											"end": 15872,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15908,
											"end": 15913,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15901,
											"end": 15914,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15894,
											"end": 15915,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15883,
											"end": 15915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15883,
											"end": 15915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15831,
											"end": 15921,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15831,
											"end": 15921,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15831,
											"end": 15921,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15831,
											"end": 15921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15927,
											"end": 16043,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 15927,
											"end": 16043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15997,
											"end": 16018,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 16012,
											"end": 16017,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15997,
											"end": 16018,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 15997,
											"end": 16018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15997,
											"end": 16018,
											"name": "tag",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 15997,
											"end": 16018,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15990,
											"end": 15995,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15987,
											"end": 16019,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 15977,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 15977,
											"end": 16037,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16033,
											"end": 16034,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16030,
											"end": 16031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16023,
											"end": 16035,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15977,
											"end": 16037,
											"name": "tag",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 15977,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15927,
											"end": 16043,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15927,
											"end": 16043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16049,
											"end": 16186,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 16049,
											"end": 16186,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16103,
											"end": 16108,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16134,
											"end": 16140,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16128,
											"end": 16141,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16119,
											"end": 16141,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16119,
											"end": 16141,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16150,
											"end": 16180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 16174,
											"end": 16179,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16150,
											"end": 16180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 16150,
											"end": 16180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16150,
											"end": 16180,
											"name": "tag",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 16150,
											"end": 16180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16049,
											"end": 16186,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16049,
											"end": 16186,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16049,
											"end": 16186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16049,
											"end": 16186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16049,
											"end": 16186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16192,
											"end": 16537,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 16192,
											"end": 16537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16259,
											"end": 16265,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16308,
											"end": 16310,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16296,
											"end": 16305,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16287,
											"end": 16294,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16306,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16279,
											"end": 16311,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 16276,
											"end": 16395,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16276,
											"end": 16395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 16276,
											"end": 16395,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16314,
											"end": 16393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 16314,
											"end": 16393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 16314,
											"end": 16393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16314,
											"end": 16393,
											"name": "tag",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 16314,
											"end": 16393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16276,
											"end": 16395,
											"name": "tag",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 16276,
											"end": 16395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16435,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16459,
											"end": 16520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 16512,
											"end": 16519,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16503,
											"end": 16509,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16492,
											"end": 16501,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16488,
											"end": 16510,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16459,
											"end": 16520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 16459,
											"end": 16520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16459,
											"end": 16520,
											"name": "tag",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 16459,
											"end": 16520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16449,
											"end": 16520,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16449,
											"end": 16520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16405,
											"end": 16530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16192,
											"end": 16537,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16192,
											"end": 16537,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16192,
											"end": 16537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16192,
											"end": 16537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16192,
											"end": 16537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16772,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 16543,
											"end": 16772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16683,
											"end": 16717,
											"name": "PUSH",
											"source": 8,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 16679,
											"end": 16680,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16671,
											"end": 16677,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16667,
											"end": 16681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16660,
											"end": 16718,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16752,
											"end": 16764,
											"name": "PUSH",
											"source": 8,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 16747,
											"end": 16749,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16739,
											"end": 16745,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16735,
											"end": 16750,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16728,
											"end": 16765,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16778,
											"end": 17144,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 16778,
											"end": 17144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16920,
											"end": 16923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16941,
											"end": 17008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 17005,
											"end": 17007,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 17000,
											"end": 17003,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16941,
											"end": 17008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 16941,
											"end": 17008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16941,
											"end": 17008,
											"name": "tag",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 16941,
											"end": 17008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16934,
											"end": 17008,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16934,
											"end": 17008,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 17106,
											"end": 17109,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 17017,
											"end": 17110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17110,
											"name": "tag",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 17017,
											"end": 17110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17135,
											"end": 17137,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17130,
											"end": 17133,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17126,
											"end": 17138,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17119,
											"end": 17138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17119,
											"end": 17138,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16778,
											"end": 17144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16778,
											"end": 17144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16778,
											"end": 17144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16778,
											"end": 17144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17150,
											"end": 17569,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 17150,
											"end": 17569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17316,
											"end": 17320,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17354,
											"end": 17356,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17343,
											"end": 17352,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17339,
											"end": 17357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17331,
											"end": 17357,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17331,
											"end": 17357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17403,
											"end": 17412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17397,
											"end": 17401,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17393,
											"end": 17413,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17389,
											"end": 17390,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17378,
											"end": 17387,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17374,
											"end": 17391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17367,
											"end": 17414,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17431,
											"end": 17562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 17557,
											"end": 17561,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17431,
											"end": 17562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 17431,
											"end": 17562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17431,
											"end": 17562,
											"name": "tag",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 17431,
											"end": 17562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17423,
											"end": 17562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17423,
											"end": 17562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17150,
											"end": 17569,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17150,
											"end": 17569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17150,
											"end": 17569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17150,
											"end": 17569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17575,
											"end": 17800,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 17575,
											"end": 17800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17715,
											"end": 17749,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 17711,
											"end": 17712,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17703,
											"end": 17709,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17699,
											"end": 17713,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17692,
											"end": 17750,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17784,
											"end": 17792,
											"name": "PUSH",
											"source": 8,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17779,
											"end": 17781,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17771,
											"end": 17777,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17767,
											"end": 17782,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17760,
											"end": 17793,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17575,
											"end": 17800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17575,
											"end": 17800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17806,
											"end": 18172,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 17806,
											"end": 18172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17948,
											"end": 17951,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17969,
											"end": 18036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 18033,
											"end": 18035,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 18028,
											"end": 18031,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17969,
											"end": 18036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 17969,
											"end": 18036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17969,
											"end": 18036,
											"name": "tag",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 17969,
											"end": 18036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17962,
											"end": 18036,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17962,
											"end": 18036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18045,
											"end": 18138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 18134,
											"end": 18137,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18045,
											"end": 18138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 18045,
											"end": 18138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18045,
											"end": 18138,
											"name": "tag",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 18045,
											"end": 18138,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18163,
											"end": 18165,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18158,
											"end": 18161,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18154,
											"end": 18166,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18147,
											"end": 18166,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18147,
											"end": 18166,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17806,
											"end": 18172,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17806,
											"end": 18172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17806,
											"end": 18172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17806,
											"end": 18172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18178,
											"end": 18597,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 18178,
											"end": 18597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18344,
											"end": 18348,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18382,
											"end": 18384,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18371,
											"end": 18380,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18367,
											"end": 18385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18359,
											"end": 18385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18359,
											"end": 18385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18431,
											"end": 18440,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18425,
											"end": 18429,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18421,
											"end": 18441,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18417,
											"end": 18418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18406,
											"end": 18415,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18402,
											"end": 18419,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18395,
											"end": 18442,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18459,
											"end": 18590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 18585,
											"end": 18589,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18459,
											"end": 18590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 18459,
											"end": 18590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18459,
											"end": 18590,
											"name": "tag",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 18459,
											"end": 18590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18451,
											"end": 18590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18451,
											"end": 18590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18178,
											"end": 18597,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18178,
											"end": 18597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18178,
											"end": 18597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18178,
											"end": 18597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18603,
											"end": 18701,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 18603,
											"end": 18701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18654,
											"end": 18660,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18688,
											"end": 18693,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18682,
											"end": 18694,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18672,
											"end": 18694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18672,
											"end": 18694,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18603,
											"end": 18701,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18603,
											"end": 18701,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18603,
											"end": 18701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18603,
											"end": 18701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18707,
											"end": 18854,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 18707,
											"end": 18854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18808,
											"end": 18819,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18845,
											"end": 18848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18830,
											"end": 18848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18830,
											"end": 18848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18707,
											"end": 18854,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18707,
											"end": 18854,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18707,
											"end": 18854,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18707,
											"end": 18854,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18707,
											"end": 18854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18860,
											"end": 19106,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 18860,
											"end": 19106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18941,
											"end": 18942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18951,
											"end": 19064,
											"name": "tag",
											"source": 8,
											"value": "629"
										},
										{
											"begin": 18951,
											"end": 19064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18965,
											"end": 18971,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18962,
											"end": 18963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18959,
											"end": 18972,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18951,
											"end": 19064,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18951,
											"end": 19064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 18951,
											"end": 19064,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19050,
											"end": 19051,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19045,
											"end": 19048,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19041,
											"end": 19052,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19035,
											"end": 19053,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 19031,
											"end": 19032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19026,
											"end": 19029,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19022,
											"end": 19033,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19015,
											"end": 19054,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18987,
											"end": 18989,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18984,
											"end": 18985,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18980,
											"end": 18990,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18975,
											"end": 18990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18975,
											"end": 18990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18951,
											"end": 19064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "629"
										},
										{
											"begin": 18951,
											"end": 19064,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18951,
											"end": 19064,
											"name": "tag",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 18951,
											"end": 19064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19098,
											"end": 19099,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19089,
											"end": 19095,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19084,
											"end": 19087,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19080,
											"end": 19096,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19073,
											"end": 19100,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18922,
											"end": 19106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18860,
											"end": 19106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18860,
											"end": 19106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18860,
											"end": 19106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18860,
											"end": 19106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19112,
											"end": 19498,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 19112,
											"end": 19498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19216,
											"end": 19219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19244,
											"end": 19282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 19276,
											"end": 19281,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19244,
											"end": 19282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 19244,
											"end": 19282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19244,
											"end": 19282,
											"name": "tag",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 19244,
											"end": 19282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19298,
											"end": 19386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 19379,
											"end": 19385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19374,
											"end": 19377,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19298,
											"end": 19386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 19298,
											"end": 19386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19298,
											"end": 19386,
											"name": "tag",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 19298,
											"end": 19386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19291,
											"end": 19386,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 19291,
											"end": 19386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19395,
											"end": 19460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 19453,
											"end": 19459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19448,
											"end": 19451,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19441,
											"end": 19445,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19434,
											"end": 19439,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 19430,
											"end": 19446,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19395,
											"end": 19460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 19395,
											"end": 19460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19395,
											"end": 19460,
											"name": "tag",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 19395,
											"end": 19460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19485,
											"end": 19491,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19480,
											"end": 19483,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19476,
											"end": 19492,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19469,
											"end": 19492,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19469,
											"end": 19492,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19220,
											"end": 19498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19112,
											"end": 19498,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19112,
											"end": 19498,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19112,
											"end": 19498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19112,
											"end": 19498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19112,
											"end": 19498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19504,
											"end": 19775,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 19504,
											"end": 19775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19634,
											"end": 19637,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19656,
											"end": 19749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "637"
										},
										{
											"begin": 19745,
											"end": 19748,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19736,
											"end": 19742,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19656,
											"end": 19749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 19656,
											"end": 19749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19656,
											"end": 19749,
											"name": "tag",
											"source": 8,
											"value": "637"
										},
										{
											"begin": 19656,
											"end": 19749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19649,
											"end": 19749,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19649,
											"end": 19749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19766,
											"end": 19769,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19504,
											"end": 19775,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19504,
											"end": 19775,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19504,
											"end": 19775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19504,
											"end": 19775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19504,
											"end": 19775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19781,
											"end": 19960,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 19781,
											"end": 19960,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19921,
											"end": 19952,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 19917,
											"end": 19918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19909,
											"end": 19915,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19905,
											"end": 19919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19898,
											"end": 19953,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19781,
											"end": 19960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19781,
											"end": 19960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19966,
											"end": 20332,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 19966,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20108,
											"end": 20111,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20129,
											"end": 20196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 20193,
											"end": 20195,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 20188,
											"end": 20191,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20129,
											"end": 20196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 20129,
											"end": 20196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20129,
											"end": 20196,
											"name": "tag",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 20129,
											"end": 20196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20122,
											"end": 20196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20122,
											"end": 20196,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20205,
											"end": 20298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 20294,
											"end": 20297,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20205,
											"end": 20298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 20205,
											"end": 20298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20205,
											"end": 20298,
											"name": "tag",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 20205,
											"end": 20298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20323,
											"end": 20325,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20318,
											"end": 20321,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20314,
											"end": 20326,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20307,
											"end": 20326,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20307,
											"end": 20326,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19966,
											"end": 20332,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19966,
											"end": 20332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19966,
											"end": 20332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19966,
											"end": 20332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20338,
											"end": 20757,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 20338,
											"end": 20757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20504,
											"end": 20508,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20542,
											"end": 20544,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20531,
											"end": 20540,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20527,
											"end": 20545,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20519,
											"end": 20545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20519,
											"end": 20545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20591,
											"end": 20600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20585,
											"end": 20589,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20581,
											"end": 20601,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20577,
											"end": 20578,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20566,
											"end": 20575,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20562,
											"end": 20579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20555,
											"end": 20602,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20619,
											"end": 20750,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 20745,
											"end": 20749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20619,
											"end": 20750,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 20619,
											"end": 20750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20619,
											"end": 20750,
											"name": "tag",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 20619,
											"end": 20750,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20611,
											"end": 20750,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20611,
											"end": 20750,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20338,
											"end": 20757,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20338,
											"end": 20757,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20338,
											"end": 20757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20338,
											"end": 20757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20763,
											"end": 20862,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 20763,
											"end": 20862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20815,
											"end": 20821,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20849,
											"end": 20854,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20843,
											"end": 20855,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20833,
											"end": 20855,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20833,
											"end": 20855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20763,
											"end": 20862,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20763,
											"end": 20862,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20763,
											"end": 20862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20763,
											"end": 20862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20868,
											"end": 20970,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 20868,
											"end": 20970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20909,
											"end": 20915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20960,
											"end": 20962,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 20956,
											"end": 20963,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 20951,
											"end": 20953,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 20944,
											"end": 20949,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20940,
											"end": 20954,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20936,
											"end": 20964,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20926,
											"end": 20964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20926,
											"end": 20964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20868,
											"end": 20970,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20868,
											"end": 20970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20868,
											"end": 20970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20868,
											"end": 20970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20976,
											"end": 21353,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 20976,
											"end": 21353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21064,
											"end": 21067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21092,
											"end": 21131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 21125,
											"end": 21130,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21092,
											"end": 21131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 21092,
											"end": 21131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21092,
											"end": 21131,
											"name": "tag",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 21092,
											"end": 21131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21147,
											"end": 21218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 21211,
											"end": 21217,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21206,
											"end": 21209,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21147,
											"end": 21218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 21147,
											"end": 21218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21147,
											"end": 21218,
											"name": "tag",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 21147,
											"end": 21218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21140,
											"end": 21218,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 21140,
											"end": 21218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21227,
											"end": 21292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 21285,
											"end": 21291,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21280,
											"end": 21283,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21273,
											"end": 21277,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21266,
											"end": 21271,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21262,
											"end": 21278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21227,
											"end": 21292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 21227,
											"end": 21292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21227,
											"end": 21292,
											"name": "tag",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 21227,
											"end": 21292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21317,
											"end": 21346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "650"
										},
										{
											"begin": 21339,
											"end": 21345,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21317,
											"end": 21346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 21317,
											"end": 21346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21317,
											"end": 21346,
											"name": "tag",
											"source": 8,
											"value": "650"
										},
										{
											"begin": 21317,
											"end": 21346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21312,
											"end": 21315,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21308,
											"end": 21347,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21301,
											"end": 21347,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21301,
											"end": 21347,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21068,
											"end": 21353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20976,
											"end": 21353,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20976,
											"end": 21353,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20976,
											"end": 21353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20976,
											"end": 21353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20976,
											"end": 21353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21359,
											"end": 21672,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 21359,
											"end": 21672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21472,
											"end": 21476,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21510,
											"end": 21512,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21499,
											"end": 21508,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21487,
											"end": 21513,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21487,
											"end": 21513,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21559,
											"end": 21568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21553,
											"end": 21557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21549,
											"end": 21569,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21545,
											"end": 21546,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21534,
											"end": 21543,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21530,
											"end": 21547,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21523,
											"end": 21570,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21587,
											"end": 21665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "652"
										},
										{
											"begin": 21660,
											"end": 21664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21651,
											"end": 21657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21587,
											"end": 21665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 21587,
											"end": 21665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21587,
											"end": 21665,
											"name": "tag",
											"source": 8,
											"value": "652"
										},
										{
											"begin": 21587,
											"end": 21665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21579,
											"end": 21665,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21579,
											"end": 21665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21359,
											"end": 21672,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21359,
											"end": 21672,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21359,
											"end": 21672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21359,
											"end": 21672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21359,
											"end": 21672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Stack.sol",
								"interfaces/IBEP20.sol",
								"interfaces/IMigratorChef.sol",
								"libraries/SafeBEP20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BASE()": "ec342ad0",
							"BONUS_MULTIPLIER()": "8aa28550",
							"DENOMINATOR()": "918f8674",
							"DENOMINATOR_TEST()": "e3d0b2bf",
							"aadd()": "14d20dc2",
							"add(uint256,uint256)": "771602f7",
							"calculateReward(uint256,address)": "a18f07a0",
							"deposit(uint256,uint256)": "e2bbb158",
							"getMultiplier(uint256,uint256)": "8dbb1e3a",
							"getPoolInfo(uint256)": "2f380b35",
							"migrator()": "7cd07e47",
							"owner()": "8da5cb5b",
							"para()": "3e3cca90",
							"pendingReward(uint256,address)": "98969e82",
							"poolLength()": "081e3eda",
							"renounceOwnership()": "715018a6",
							"set(uint256,uint256)": "1ab06ee5",
							"setMigrator(address)": "23cf3118",
							"transferOwnership(address)": "f2fde38b",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"_para\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DENOMINATOR_TEST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aadd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getPoolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"apr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct LPMining.AprInfo[]\",\"name\":\"aprs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LPMining.PoolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"para\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apr\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockStartTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"add(uint256,uint256)\":{\"details\":\"Add a new lp to the pool. Can only be called by the owner. XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\"},\"deposit(uint256,uint256)\":{\"details\":\"Deposit LP tokens to LPMining for bfly allocation.\"},\"getMultiplier(uint256,uint256)\":{\"details\":\"Return reward multiplier over the given _from to _to block.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingReward(uint256,address)\":{\"details\":\"View function to see pending rewards on frontend.\"},\"poolLength()\":{\"details\":\"Number of the pools\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"set(uint256,uint256)\":{\"details\":\"Update the given pool's BFLY allocation point. Can only be called by the owner.\"},\"setMigrator(address)\":{\"details\":\"Set migrator's address\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256,uint256)\":{\"details\":\"Withdraw LP tokens from MasterChef.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,uint256,uint256)\":{\"notice\":\"The block number when mining starts.\"}},\"kind\":\"user\",\"methods\":{\"BONUS_MULTIPLIER()\":{\"notice\":\"Bonus muliplier for early ARC makers.\"},\"migrator()\":{\"notice\":\"The migrator contract. It has a lot of power. Can only be set through governance (owner).\"},\"para()\":{\"notice\":\"The reward token!\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Stack.sol\":\"LPMining\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Stack.sol\":{\"keccak256\":\"0x603a1ad6b6bccfc28722de9dfee602724793d0a6d06ddcb2ba9c69625ec9d043\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bd00c10a1665b2d9f30af1fe5a6ea2d066c360d87bc1b0f027f577faa63130f\",\"dweb:/ipfs/QmS47An4rjC3bd4HGHffD55FRHh1V2ny61ZpfEYfa4iu1K\"]},\"interfaces/IBEP20.sol\":{\"keccak256\":\"0xf36c35eca28d777110537c36ce958e6e1cba1b63e81c6db425063a9a8070b8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51a5d4ed4a94421d08abdd3c2f4df8387a17d17e89f30181e215fc72d835dc73\",\"dweb:/ipfs/QmTaw8PKYx4p9LLSjU3eaS5DM5WDGtBGKPdT5cms6k23W9\"]},\"interfaces/IMigratorChef.sol\":{\"keccak256\":\"0x88555d8ff0bf432e2795033c7cd13932343387c3a2f51d81ac498946c7d2d68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0b6c4c534187e135e5ac3cca284c9297f2df7ea1a534e0df25136cb2e6ef6d7\",\"dweb:/ipfs/QmPeNTJoSa5xyYSD8wDWAznTA5r6LNZbyQymUDFvHW82cU\"]},\"libraries/SafeBEP20.sol\":{\"keccak256\":\"0xf0273c9b6c17cde2082d82836ffe196aef2b3d80a08359ebcf2f982074efd6ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://353692949012e08e5d1b86c6a9b17c11029ad18748c37e55e34d10e07eb22c4a\",\"dweb:/ipfs/QmbyRELSAZaeajhiFKBBcreCpLYUeEQYUrEbjs9bwZn4r9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Stack.sol:LPMining",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 825,
								"contract": "Stack.sol:LPMining",
								"label": "poolInfos",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(PoolInfo)821_storage)dyn_storage"
							},
							{
								"astId": 832,
								"contract": "Stack.sol:LPMining",
								"label": "userInfo",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)809_storage))"
							},
							{
								"astId": 836,
								"contract": "Stack.sol:LPMining",
								"label": "para",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IBEP20)1913"
							},
							{
								"astId": 840,
								"contract": "Stack.sol:LPMining",
								"label": "BONUS_MULTIPLIER",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 844,
								"contract": "Stack.sol:LPMining",
								"label": "migrator",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMigratorChef)1926"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(AprInfo)814_storage)dyn_storage": {
								"base": "t_struct(AprInfo)814_storage",
								"encoding": "dynamic_array",
								"label": "struct LPMining.AprInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(PoolInfo)821_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)821_storage",
								"encoding": "dynamic_array",
								"label": "struct LPMining.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_contract(IBEP20)1913": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_contract(IMigratorChef)1926": {
								"encoding": "inplace",
								"label": "contract IMigratorChef",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)809_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct LPMining.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)809_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)809_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct LPMining.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)809_storage)"
							},
							"t_struct(AprInfo)814_storage": {
								"encoding": "inplace",
								"label": "struct LPMining.AprInfo",
								"members": [
									{
										"astId": 811,
										"contract": "Stack.sol:LPMining",
										"label": "apr",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 813,
										"contract": "Stack.sol:LPMining",
										"label": "time",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(PoolInfo)821_storage": {
								"encoding": "inplace",
								"label": "struct LPMining.PoolInfo",
								"members": [
									{
										"astId": 816,
										"contract": "Stack.sol:LPMining",
										"label": "duration",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 820,
										"contract": "Stack.sol:LPMining",
										"label": "aprs",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(AprInfo)814_storage)dyn_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserInfo)809_storage": {
								"encoding": "inplace",
								"label": "struct LPMining.UserInfo",
								"members": [
									{
										"astId": 804,
										"contract": "Stack.sol:LPMining",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 806,
										"contract": "Stack.sol:LPMining",
										"label": "offset",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 808,
										"contract": "Stack.sol:LPMining",
										"label": "lockStartTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Deposit(address,uint256,uint256)": {
								"notice": "The block number when mining starts."
							}
						},
						"kind": "user",
						"methods": {
							"BONUS_MULTIPLIER()": {
								"notice": "Bonus muliplier for early ARC makers."
							},
							"migrator()": {
								"notice": "The migrator contract. It has a lot of power. Can only be set through governance (owner)."
							},
							"para()": {
								"notice": "The reward token!"
							}
						},
						"version": 1
					}
				}
			},
			"interfaces/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IBEP20.sol\":{\"keccak256\":\"0xf36c35eca28d777110537c36ce958e6e1cba1b63e81c6db425063a9a8070b8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51a5d4ed4a94421d08abdd3c2f4df8387a17d17e89f30181e215fc72d835dc73\",\"dweb:/ipfs/QmTaw8PKYx4p9LLSjU3eaS5DM5WDGtBGKPdT5cms6k23W9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IMigratorChef.sol": {
				"IMigratorChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IBEP20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "migrate",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"migrate(address)": "ce5494bb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IMigratorChef.sol\":\"IMigratorChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IBEP20.sol\":{\"keccak256\":\"0xf36c35eca28d777110537c36ce958e6e1cba1b63e81c6db425063a9a8070b8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51a5d4ed4a94421d08abdd3c2f4df8387a17d17e89f30181e215fc72d835dc73\",\"dweb:/ipfs/QmTaw8PKYx4p9LLSjU3eaS5DM5WDGtBGKPdT5cms6k23W9\"]},\"interfaces/IMigratorChef.sol\":{\"keccak256\":\"0x88555d8ff0bf432e2795033c7cd13932343387c3a2f51d81ac498946c7d2d68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0b6c4c534187e135e5ac3cca284c9297f2df7ea1a534e0df25136cb2e6ef6d7\",\"dweb:/ipfs/QmPeNTJoSa5xyYSD8wDWAznTA5r6LNZbyQymUDFvHW82cU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeBEP20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/SafeBEP20.sol\":679:4059  library SafeBEP20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/SafeBEP20.sol\":679:4059  library SafeBEP20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fdf2543ff5183358619f52ff8847ab907400d47dbbc9a344ea77f0a66d6693ae64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdf2543ff5183358619f52ff8847ab907400d47dbbc9a344ea77f0a66d6693ae64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT CALLCODE SLOAD EXTCODEHASH CREATE2 XOR CALLER PC PUSH2 0x9F52 SELFDESTRUCT DUP9 SELFBALANCE 0xAB SWAP1 PUSH21 0xD47DBBC9A344EA77F0A66D6693AE64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "679:3380:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdf2543ff5183358619f52ff8847ab907400d47dbbc9a344ea77f0a66d6693ae64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT CALLCODE SLOAD EXTCODEHASH CREATE2 XOR CALLER PC PUSH2 0x9F52 SELFDESTRUCT DUP9 SELFBALANCE 0xAB SWAP1 PUSH21 0xD47DBBC9A344EA77F0A66D6693AE64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "679:3380:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fdf2543ff5183358619f52ff8847ab907400d47dbbc9a344ea77f0a66d6693ae64736f6c63430008110033",
									".code": [
										{
											"begin": 679,
											"end": 4059,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Stack.sol",
								"interfaces/IBEP20.sol",
								"interfaces/IMigratorChef.sol",
								"libraries/SafeBEP20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeBEP20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"interfaces/IBEP20.sol\":{\"keccak256\":\"0xf36c35eca28d777110537c36ce958e6e1cba1b63e81c6db425063a9a8070b8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51a5d4ed4a94421d08abdd3c2f4df8387a17d17e89f30181e215fc72d835dc73\",\"dweb:/ipfs/QmTaw8PKYx4p9LLSjU3eaS5DM5WDGtBGKPdT5cms6k23W9\"]},\"libraries/SafeBEP20.sol\":{\"keccak256\":\"0xf0273c9b6c17cde2082d82836ffe196aef2b3d80a08359ebcf2f982074efd6ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://353692949012e08e5d1b86c6a9b17c11029ad18748c37e55e34d10e07eb22c4a\",\"dweb:/ipfs/QmbyRELSAZaeajhiFKBBcreCpLYUeEQYUrEbjs9bwZn4r9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							464
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 465,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 464,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								464
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							442
						]
					},
					"id": 443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 442,
							"linearizedBaseContracts": [
								442
							],
							"name": "Address",
							"nameLocation": "202:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1241:254:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 123,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "1465:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 122,
												"id": 128,
												"nodeType": "Return",
												"src": "1458:30:1"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1195:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:1"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1235:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 120,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:1"
									},
									"scope": 442,
									"src": "1175:320:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "2483:241:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 141,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$442",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$442",
																				"typeString": "library Address"
																			}
																		],
																		"id": 140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 139,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 144,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "2526:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:1"
											},
											{
												"assignments": [
													150,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 163,
														"src": "2578:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 157,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 151,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "2596:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 153,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "2618:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 159,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "2647:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "2431:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "2458:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:1"
									},
									"scope": 442,
									"src": "2412:312:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "3555:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "3594:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 176,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "3602:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 174,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															222,
															266
														],
														"referencedDeclaration": 266,
														"src": "3572:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 173,
												"id": 180,
												"nodeType": "Return",
												"src": "3565:79:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "3488:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "3504:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 168,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "3541:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 171,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:1"
									},
									"scope": 442,
									"src": "3466:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "4020:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 195,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "4059:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 196,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "4067:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 198,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "4076:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 194,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															222,
															266
														],
														"referencedDeclaration": 266,
														"src": "4037:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 193,
												"id": 200,
												"nodeType": "Return",
												"src": "4030:59:1"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3904:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3928:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3955:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "4006:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 191,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:1"
									},
									"scope": 442,
									"src": "3873:223:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "4601:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "4640:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "4648:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 217,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "4654:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 214,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															222,
															266
														],
														"referencedDeclaration": 266,
														"src": "4618:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 213,
												"id": 220,
												"nodeType": "Return",
												"src": "4611:94:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4498:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4522:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 206,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4549:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:1"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4587:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:1"
									},
									"scope": 442,
									"src": "4458:254:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "5139:267:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 239,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$442",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$442",
																				"typeString": "library Address"
																			}
																		],
																		"id": 238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 237,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 242,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "5182:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:1"
											},
											{
												"assignments": [
													248,
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 265,
														"src": "5241:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 250,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 265,
														"src": "5255:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 249,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 257,
												"initialValue": {
													"arguments": [
														{
															"id": 255,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "5308:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 251,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "5282:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 253,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "5301:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 259,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "5357:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 260,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "5365:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 261,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "5374:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 262,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "5386:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 258,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "5330:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 235,
												"id": 264,
												"nodeType": "Return",
												"src": "5323:76:1"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5024:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5074:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 230,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5125:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:1"
									},
									"scope": 442,
									"src": "4960:446:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "5683:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 277,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "5719:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 278,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "5727:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 276,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															283,
															312
														],
														"referencedDeclaration": 312,
														"src": "5700:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 275,
												"id": 281,
												"nodeType": "Return",
												"src": "5693:80:1"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "5611:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "5627:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:1"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "5669:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:1"
									},
									"scope": 442,
									"src": "5583:197:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "6122:168:1",
										"statements": [
											{
												"assignments": [
													296,
													298
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "6133:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 295,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "6147:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 297,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 303,
												"initialValue": {
													"arguments": [
														{
															"id": 301,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "6192:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 299,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "6174:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:1",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "6241:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 306,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "6249:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 307,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "6258:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 308,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "6270:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 304,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "6214:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 294,
												"id": 310,
												"nodeType": "Return",
												"src": "6207:76:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "6001:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "6025:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "6052:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:1"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "6108:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 292,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:1"
									},
									"scope": 442,
									"src": "5964:326:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "6566:101:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 323,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6604:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 324,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "6612:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 322,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															329,
															358
														],
														"referencedDeclaration": 358,
														"src": "6583:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 321,
												"id": 327,
												"nodeType": "Return",
												"src": "6576:84:1"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6499:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6515:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6552:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:1"
									},
									"scope": 442,
									"src": "6469:198:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "7008:170:1",
										"statements": [
											{
												"assignments": [
													342,
													344
												],
												"declarations": [
													{
														"constant": false,
														"id": 342,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 357,
														"src": "7019:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 341,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 357,
														"src": "7033:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 343,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 349,
												"initialValue": {
													"arguments": [
														{
															"id": 347,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "7080:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 345,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "7060:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:1",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 351,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "7129:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 352,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "7137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 353,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "7146:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 354,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "7158:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 350,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "7102:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 340,
												"id": 356,
												"nodeType": "Return",
												"src": "7095:76:1"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "6892:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "6916:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 333,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "6943:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:1"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "6994:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:1"
									},
									"scope": 442,
									"src": "6853:325:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "7660:434:1",
										"statements": [
											{
												"condition": {
													"id": 372,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 363,
													"src": "7674:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 394,
													"nodeType": "Block",
													"src": "8030:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 390,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "8052:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 391,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "8064:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 389,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "8044:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 393,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:1"
														}
													]
												},
												"id": 395,
												"nodeType": "IfStatement",
												"src": "7670:418:1",
												"trueBody": {
													"id": 388,
													"nodeType": "Block",
													"src": "7683:341:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 373,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "7701:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 385,
															"nodeType": "IfStatement",
															"src": "7697:286:1",
															"trueBody": {
																"id": 384,
																"nodeType": "Block",
																"src": "7725:258:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 379,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 361,
																							"src": "7927:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 378,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 130,
																						"src": "7916:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 380,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 381,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 377,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 383,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 386,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "8003:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 371,
															"id": 387,
															"nodeType": "Return",
															"src": "7996:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:1",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "7511:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "7535:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "7557:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 364,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "7590:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 366,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:1"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "7646:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:1"
									},
									"scope": 442,
									"src": "7466:628:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "8475:135:1",
										"statements": [
											{
												"condition": {
													"id": 409,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 400,
													"src": "8489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 418,
													"nodeType": "Block",
													"src": "8546:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 414,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "8568:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 415,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "8580:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 413,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "8560:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 417,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:1"
														}
													]
												},
												"id": 419,
												"nodeType": "IfStatement",
												"src": "8485:119:1",
												"trueBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "8498:42:1",
													"statements": [
														{
															"expression": {
																"id": 410,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "8519:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 408,
															"id": 411,
															"nodeType": "Return",
															"src": "8512:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:1",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "8350:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "8372:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 401,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "8405:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 403,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "8461:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:1"
									},
									"scope": 442,
									"src": "8315:295:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "8699:457:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 428,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "8775:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "9105:45:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 435,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "9126:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 434,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:1"
														}
													]
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "8771:379:1",
												"trueBody": {
													"id": 433,
													"nodeType": "Block",
													"src": "8798:301:1",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:1"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:1",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:1"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:1"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 423,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:1",
																	"valueSize": 1
																},
																{
																	"declaration": 423,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:1",
																	"valueSize": 1
																}
															],
															"id": 432,
															"nodeType": "InlineAssembly",
															"src": "8947:142:1"
														}
													]
												}
											}
										]
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "8633:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 422,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "8658:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 424,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:1"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:1"
									},
									"scope": 442,
									"src": "8616:540:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 443,
							"src": "194:8964:1",
							"usedErrors": []
						}
					],
					"src": "101:9058:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							464
						]
					},
					"id": 465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 445,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 464,
							"linearizedBaseContracts": [
								464
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 450,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 449,
												"id": 452,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 464,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 459,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 458,
												"id": 461,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 456,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 464,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 465,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							776
						]
					},
					"id": 777,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 466,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 467,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 776,
							"linearizedBaseContracts": [
								776
							],
							"name": "SafeMath",
							"nameLocation": "490:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "717:140:3",
										"statements": [
											{
												"id": 497,
												"nodeType": "UncheckedBlock",
												"src": "727:124:3",
												"statements": [
													{
														"assignments": [
															480
														],
														"declarations": [
															{
																"constant": false,
																"id": 480,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 497,
																"src": "751:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 479,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 484,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 481,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "763:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 482,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "767:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "786:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 486,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "790:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 492,
														"nodeType": "IfStatement",
														"src": "782:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 478,
															"id": 491,
															"nodeType": "Return",
															"src": "793:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 494,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "838:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 495,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 478,
														"id": 496,
														"nodeType": "Return",
														"src": "824:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "657:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "668:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:3"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "702:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 474,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "708:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:3"
									},
									"scope": 776,
									"src": "641:216:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "1078:113:3",
										"statements": [
											{
												"id": 525,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 511,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "1116:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 512,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "1120:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 518,
														"nodeType": "IfStatement",
														"src": "1112:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 516,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 510,
															"id": 517,
															"nodeType": "Return",
															"src": "1123:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 520,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 502,
																		"src": "1168:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 521,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "1172:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 523,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 510,
														"id": 524,
														"nodeType": "Return",
														"src": "1154:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:3",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "1018:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "1029:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:3"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "1063:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "1069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:3"
									},
									"scope": 776,
									"src": "1002:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "1415:417:3",
										"statements": [
											{
												"id": 567,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 539,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "1683:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 546,
														"nodeType": "IfStatement",
														"src": "1679:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 544,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 538,
															"id": 545,
															"nodeType": "Return",
															"src": "1691:16:3"
														}
													},
													{
														"assignments": [
															548
														],
														"declarations": [
															{
																"constant": false,
																"id": 548,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 567,
																"src": "1721:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 547,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 552,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 549,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "1733:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 550,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "1737:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 553,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "1756:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 554,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "1760:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 556,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "1765:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 562,
														"nodeType": "IfStatement",
														"src": "1752:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 560,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 538,
															"id": 561,
															"nodeType": "Return",
															"src": "1768:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 564,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "1813:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 565,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 538,
														"id": 566,
														"nodeType": "Return",
														"src": "1799:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1355:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1366:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:3"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1400:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 534,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1406:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:3"
									},
									"scope": 776,
									"src": "1339:493:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "2057:114:3",
										"statements": [
											{
												"id": 595,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 581,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "2095:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 588,
														"nodeType": "IfStatement",
														"src": "2091:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 586,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 580,
															"id": 587,
															"nodeType": "Return",
															"src": "2103:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 590,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "2148:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 591,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "2152:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 593,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 580,
														"id": 594,
														"nodeType": "Return",
														"src": "2134:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1997:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "2008:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:3"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "2042:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 576,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "2048:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:3"
									},
									"scope": 776,
									"src": "1981:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "2406:114:3",
										"statements": [
											{
												"id": 623,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 609,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "2444:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 616,
														"nodeType": "IfStatement",
														"src": "2440:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 614,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 608,
															"id": 615,
															"nodeType": "Return",
															"src": "2452:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 618,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "2497:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 619,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "2501:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 621,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 608,
														"id": 622,
														"nodeType": "Return",
														"src": "2483:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2346:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2357:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:3"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2391:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 604,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2397:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:3"
									},
									"scope": 776,
									"src": "2330:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "2822:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 635,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "2839:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 636,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2843:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 634,
												"id": 638,
												"nodeType": "Return",
												"src": "2832:12:3"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2768:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2779:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:3"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2813:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:3"
									},
									"scope": 776,
									"src": "2755:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "3189:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 650,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "3206:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 651,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "3210:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 653,
												"nodeType": "Return",
												"src": "3199:12:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "3135:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "3146:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "3180:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:3"
									},
									"scope": 776,
									"src": "3122:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "3532:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 665,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "3549:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 666,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "3553:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 664,
												"id": 668,
												"nodeType": "Return",
												"src": "3542:12:3"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "3478:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "3489:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:3"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "3523:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:3"
									},
									"scope": 776,
									"src": "3465:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "3917:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 680,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "3934:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 681,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "3938:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 679,
												"id": 683,
												"nodeType": "Return",
												"src": "3927:12:3"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "3863:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "3874:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:3"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "3908:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:3"
									},
									"scope": 776,
									"src": "3850:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "4466:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 695,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "4483:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 696,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "4487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 694,
												"id": 698,
												"nodeType": "Return",
												"src": "4476:12:3"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "4412:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "4423:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:3"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "4457:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:3"
									},
									"scope": 776,
									"src": "4399:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "5084:106:3",
										"statements": [
											{
												"id": 723,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 713,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 705,
																		"src": "5126:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 714,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 703,
																		"src": "5131:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 716,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "5134:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 712,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 718,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 719,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 703,
																"src": "5168:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 720,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "5172:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 711,
														"id": 722,
														"nodeType": "Return",
														"src": "5161:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "4981:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5000:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5019:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 706,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5075:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:3"
									},
									"scope": 776,
									"src": "4959:231:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "5799:105:3",
										"statements": [
											{
												"id": 748,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 738,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "5841:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 741,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "5848:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 737,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 743,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 744,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "5882:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 745,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5886:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 736,
														"id": 747,
														"nodeType": "Return",
														"src": "5875:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5696:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5715:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5734:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 731,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:3"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5790:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:3"
									},
									"scope": 776,
									"src": "5674:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "6675:105:3",
										"statements": [
											{
												"id": 773,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 763,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "6717:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 766,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "6724:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 762,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 768,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 769,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 753,
																"src": "6758:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 770,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "6762:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 761,
														"id": 772,
														"nodeType": "Return",
														"src": "6751:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6572:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6591:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6610:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 756,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:3"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6666:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:3"
									},
									"scope": 776,
									"src": "6550:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 777,
							"src": "482:6300:3",
							"usedErrors": []
						}
					],
					"src": "107:6676:3"
				},
				"id": 3
			},
			"Stack.sol": {
				"ast": {
					"absolutePath": "Stack.sol",
					"exportedSymbols": {
						"Address": [
							442
						],
						"Context": [
							464
						],
						"IBEP20": [
							1913
						],
						"IMigratorChef": [
							1926
						],
						"LPMining": [
							1812
						],
						"Ownable": [
							112
						],
						"SafeBEP20": [
							2145
						],
						"SafeMath": [
							776
						]
					},
					"id": 1813,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 778,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 779,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 777,
							"src": "60:57:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 443,
							"src": "119:51:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 781,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 113,
							"src": "172:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IBEP20.sol",
							"file": "./interfaces/IBEP20.sol",
							"id": 782,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 1914,
							"src": "230:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IMigratorChef.sol",
							"file": "./interfaces/IMigratorChef.sol",
							"id": 783,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 1927,
							"src": "265:40:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/SafeBEP20.sol",
							"file": "./libraries/SafeBEP20.sol",
							"id": 784,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 2146,
							"src": "307:35:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 785,
										"name": "Ownable",
										"nameLocations": [
											"369:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "369:7:4"
									},
									"id": 786,
									"nodeType": "InheritanceSpecifier",
									"src": "369:7:4"
								}
							],
							"canonicalName": "LPMining",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1812,
							"linearizedBaseContracts": [
								1812,
								112,
								464
							],
							"name": "LPMining",
							"nameLocation": "357:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 789,
									"libraryName": {
										"id": 787,
										"name": "SafeMath",
										"nameLocations": [
											"446:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 776,
										"src": "446:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "440:27:4",
									"typeName": {
										"id": 788,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "459:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 793,
									"libraryName": {
										"id": 790,
										"name": "SafeBEP20",
										"nameLocations": [
											"543:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2145,
										"src": "543:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "537:27:4",
									"typeName": {
										"id": 792,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 791,
											"name": "IBEP20",
											"nameLocations": [
												"557:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1913,
											"src": "557:6:4"
										},
										"referencedDeclaration": 1913,
										"src": "557:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$1913",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "918f8674",
									"id": 796,
									"mutability": "constant",
									"name": "DENOMINATOR",
									"nameLocation": "596:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "572:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 794,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "572:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 795,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "610:8:4",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ec342ad0",
									"id": 799,
									"mutability": "constant",
									"name": "BASE",
									"nameLocation": "653:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "629:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 797,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "629:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 798,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "660:3:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e3d0b2bf",
									"id": 802,
									"mutability": "constant",
									"name": "DENOMINATOR_TEST",
									"nameLocation": "696:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "672:52:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 800,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "672:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 801,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "715:9:4",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LPMining.UserInfo",
									"id": 809,
									"members": [
										{
											"constant": false,
											"id": 804,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1521:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 809,
											"src": "1513:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 803,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1513:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 806,
											"mutability": "mutable",
											"name": "offset",
											"nameLocation": "1595:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 809,
											"src": "1587:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 805,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 808,
											"mutability": "mutable",
											"name": "lockStartTime",
											"nameLocation": "1659:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 809,
											"src": "1651:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 807,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1651:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "1493:8:4",
									"nodeType": "StructDefinition",
									"scope": 1812,
									"src": "1486:194:4",
									"visibility": "public"
								},
								{
									"canonicalName": "LPMining.AprInfo",
									"id": 814,
									"members": [
										{
											"constant": false,
											"id": 811,
											"mutability": "mutable",
											"name": "apr",
											"nameLocation": "1722:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 814,
											"src": "1714:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 810,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1714:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 813,
											"mutability": "mutable",
											"name": "time",
											"nameLocation": "1744:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 814,
											"src": "1736:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 812,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1736:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AprInfo",
									"nameLocation": "1695:7:4",
									"nodeType": "StructDefinition",
									"scope": 1812,
									"src": "1688:68:4",
									"visibility": "public"
								},
								{
									"canonicalName": "LPMining.PoolInfo",
									"id": 821,
									"members": [
										{
											"constant": false,
											"id": 816,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "1800:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 821,
											"src": "1792:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 815,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1792:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 820,
											"mutability": "mutable",
											"name": "aprs",
											"nameLocation": "1829:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 821,
											"src": "1819:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage_ptr",
												"typeString": "struct LPMining.AprInfo[]"
											},
											"typeName": {
												"baseType": {
													"id": 818,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 817,
														"name": "AprInfo",
														"nameLocations": [
															"1819:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 814,
														"src": "1819:7:4"
													},
													"referencedDeclaration": 814,
													"src": "1819:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AprInfo_$814_storage_ptr",
														"typeString": "struct LPMining.AprInfo"
													}
												},
												"id": 819,
												"nodeType": "ArrayTypeName",
												"src": "1819:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage_ptr",
													"typeString": "struct LPMining.AprInfo[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "1773:8:4",
									"nodeType": "StructDefinition",
									"scope": 1812,
									"src": "1766:75:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 825,
									"mutability": "mutable",
									"name": "poolInfos",
									"nameLocation": "1860:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "1849:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$821_storage_$dyn_storage",
										"typeString": "struct LPMining.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 823,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 822,
												"name": "PoolInfo",
												"nameLocations": [
													"1849:8:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 821,
												"src": "1849:8:4"
											},
											"referencedDeclaration": 821,
											"src": "1849:8:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
												"typeString": "struct LPMining.PoolInfo"
											}
										},
										"id": 824,
										"nodeType": "ArrayTypeName",
										"src": "1849:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$821_storage_$dyn_storage_ptr",
											"typeString": "struct LPMining.PoolInfo[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 832,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "1936:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "1878:66:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$809_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct LPMining.UserInfo))"
									},
									"typeName": {
										"id": 831,
										"keyType": {
											"id": 826,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1887:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1878:50:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$809_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct LPMining.UserInfo))"
										},
										"valueType": {
											"id": 830,
											"keyType": {
												"id": 827,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1907:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1898:29:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$809_storage_$",
												"typeString": "mapping(address => struct LPMining.UserInfo)"
											},
											"valueType": {
												"id": 829,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 828,
													"name": "UserInfo",
													"nameLocations": [
														"1918:8:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 809,
													"src": "1918:8:4"
												},
												"referencedDeclaration": 809,
												"src": "1918:8:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
													"typeString": "struct LPMining.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "2451:38:4",
										"text": " The reward token!"
									},
									"functionSelector": "3e3cca90",
									"id": 836,
									"mutability": "mutable",
									"name": "para",
									"nameLocation": "2509:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "2495:18:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$1913",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 835,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 834,
											"name": "IBEP20",
											"nameLocations": [
												"2495:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1913,
											"src": "2495:6:4"
										},
										"referencedDeclaration": 1913,
										"src": "2495:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$1913",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "2610:58:4",
										"text": " Bonus muliplier for early ARC makers."
									},
									"functionSelector": "8aa28550",
									"id": 840,
									"mutability": "mutable",
									"name": "BONUS_MULTIPLIER",
									"nameLocation": "2689:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "2674:35:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 838,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2674:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 839,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2708:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "2718:110:4",
										"text": " The migrator contract. It has a lot of power. Can only be set through governance (owner)."
									},
									"functionSelector": "7cd07e47",
									"id": 844,
									"mutability": "mutable",
									"name": "migrator",
									"nameLocation": "2855:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "2834:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMigratorChef_$1926",
										"typeString": "contract IMigratorChef"
									},
									"typeName": {
										"id": 843,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 842,
											"name": "IMigratorChef",
											"nameLocations": [
												"2834:13:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1926,
											"src": "2834:13:4"
										},
										"referencedDeclaration": 1926,
										"src": "2834:13:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMigratorChef_$1926",
											"typeString": "contract IMigratorChef"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "3034:57:4",
										"text": " The block number when mining starts."
									},
									"eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
									"id": 853,
									"name": "Deposit",
									"nameLocation": "3140:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3164:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "3148:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3148:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "3186:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "3170:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3170:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3199:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "3191:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3147:59:4"
									},
									"src": "3134:73:4"
								},
								{
									"anonymous": false,
									"eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
									"id": 861,
									"name": "Withdraw",
									"nameLocation": "3219:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3244:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "3228:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3228:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "3266:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "3250:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3250:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3279:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "3271:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3271:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3227:59:4"
									},
									"src": "3213:74:4"
								},
								{
									"anonymous": false,
									"eventSelector": "bb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595",
									"id": 869,
									"name": "EmergencyWithdraw",
									"nameLocation": "3299:17:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3333:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "3317:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3317:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "3355:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "3339:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3339:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3368:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "3360:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3360:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3316:59:4"
									},
									"src": "3293:83:4"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "3492:526:4",
										"statements": [
											{
												"expression": {
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 875,
														"name": "para",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "3503:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$1913",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 876,
														"name": "_para",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "3510:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$1913",
															"typeString": "contract IBEP20"
														}
													},
													"src": "3503:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1913",
														"typeString": "contract IBEP20"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "3503:12:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 879,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "3997:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3997:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "3997:13:4"
											}
										]
									},
									"id": 883,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "_para",
												"nameLocation": "3413:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "3406:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1913",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 871,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 870,
														"name": "IBEP20",
														"nameLocations": [
															"3406:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1913,
														"src": "3406:6:4"
													},
													"referencedDeclaration": 1913,
													"src": "3406:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1913",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3395:96:4"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3492:0:4"
									},
									"scope": 1812,
									"src": "3384:634:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "4071:35:4",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4089:9:4",
													"subdenomination": "minutes",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													"value": "1"
												},
												"functionReturnParameters": 887,
												"id": 889,
												"nodeType": "Return",
												"src": "4082:16:4"
											}
										]
									},
									"functionSelector": "14d20dc2",
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "aadd",
									"nameLocation": "4037:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4041:2:4"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4063:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4062:9:4"
									},
									"scope": 1812,
									"src": "4028:78:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "4184:39:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 899,
														"name": "poolInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "4202:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$821_storage_$dyn_storage",
															"typeString": "struct LPMining.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 901,
													"indexExpression": {
														"id": 900,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "4212:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4202:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$821_storage",
														"typeString": "struct LPMining.PoolInfo storage ref"
													}
												},
												"functionReturnParameters": 898,
												"id": 902,
												"nodeType": "Return",
												"src": "4195:20:4"
											}
										]
									},
									"functionSelector": "2f380b35",
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolInfo",
									"nameLocation": "4123:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4143:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "4135:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4134:12:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "4167:15:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolInfo_$821_memory_ptr",
													"typeString": "struct LPMining.PoolInfo"
												},
												"typeName": {
													"id": 896,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 895,
														"name": "PoolInfo",
														"nameLocations": [
															"4167:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 821,
														"src": "4167:8:4"
													},
													"referencedDeclaration": 821,
													"src": "4167:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
														"typeString": "struct LPMining.PoolInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4166:17:4"
									},
									"scope": 1812,
									"src": "4114:109:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "4261:677:4",
										"statements": [
											{
												"assignments": [
													909
												],
												"declarations": [
													{
														"constant": false,
														"id": 909,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "4331:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 932,
														"src": "4314:18:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
															"typeString": "struct LPMining.PoolInfo"
														},
														"typeName": {
															"id": 908,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 907,
																"name": "PoolInfo",
																"nameLocations": [
																	"4314:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 821,
																"src": "4314:8:4"
															},
															"referencedDeclaration": 821,
															"src": "4314:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																"typeString": "struct LPMining.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 913,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 910,
															"name": "poolInfos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "4335:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$821_storage_$dyn_storage",
																"typeString": "struct LPMining.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4345:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4335:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$821_storage_$dyn_storage_ptr_$returns$_t_struct$_PoolInfo_$821_storage_$bound_to$_t_array$_t_struct$_PoolInfo_$821_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LPMining.PoolInfo storage ref[] storage pointer) returns (struct LPMining.PoolInfo storage ref)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4335:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$821_storage",
														"typeString": "struct LPMining.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4314:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "3230",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4384:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																{
																	"expression": {
																		"id": 921,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4388:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4394:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4388:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 919,
																"name": "AprInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "4376:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_AprInfo_$814_storage_ptr_$",
																	"typeString": "type(struct LPMining.AprInfo storage pointer)"
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4376:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AprInfo_$814_memory_ptr",
																"typeString": "struct LPMining.AprInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AprInfo_$814_memory_ptr",
																"typeString": "struct LPMining.AprInfo memory"
															}
														],
														"expression": {
															"expression": {
																"id": 914,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "4364:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																	"typeString": "struct LPMining.PoolInfo storage pointer"
																}
															},
															"id": 917,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4366:4:4",
															"memberName": "aprs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 820,
															"src": "4364:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
															}
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4371:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4364:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage_ptr_$_t_struct$_AprInfo_$814_storage_$returns$__$bound_to$_t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LPMining.AprInfo storage ref[] storage pointer,struct LPMining.AprInfo storage ref)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4364:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 925,
												"nodeType": "ExpressionStatement",
												"src": "4364:41:4"
											},
											{
												"expression": {
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 926,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "4416:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																"typeString": "struct LPMining.PoolInfo storage pointer"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4418:8:4",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 816,
														"src": "4416:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35",
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4429:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "4416:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 931,
												"nodeType": "ExpressionStatement",
												"src": "4416:14:4"
											}
										]
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialized",
									"nameLocation": "4240:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4251:2:4"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4261:0:4"
									},
									"scope": 1812,
									"src": "4231:707:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "5251:42:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 939,
														"name": "poolInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "5269:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$821_storage_$dyn_storage",
															"typeString": "struct LPMining.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5279:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5269:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 938,
												"id": 941,
												"nodeType": "Return",
												"src": "5262:23:4"
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "5146:45:4",
										"text": " @dev Number of the pools"
									},
									"functionSelector": "081e3eda",
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "5206:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5216:2:4"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "5242:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5242:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5241:9:4"
									},
									"scope": 1812,
									"src": "5197:96:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "5551:387:4",
										"statements": [
											{
												"assignments": [
													955
												],
												"declarations": [
													{
														"constant": false,
														"id": 955,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "5583:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 978,
														"src": "5566:18:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
															"typeString": "struct LPMining.PoolInfo"
														},
														"typeName": {
															"id": 954,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 953,
																"name": "PoolInfo",
																"nameLocations": [
																	"5566:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 821,
																"src": "5566:8:4"
															},
															"referencedDeclaration": 821,
															"src": "5566:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																"typeString": "struct LPMining.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 959,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 956,
															"name": "poolInfos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "5587:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$821_storage_$dyn_storage",
																"typeString": "struct LPMining.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5597:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5587:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$821_storage_$dyn_storage_ptr_$returns$_t_struct$_PoolInfo_$821_storage_$bound_to$_t_array$_t_struct$_PoolInfo_$821_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LPMining.PoolInfo storage ref[] storage pointer) returns (struct LPMining.PoolInfo storage ref)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5587:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$821_storage",
														"typeString": "struct LPMining.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5566:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 966,
																	"name": "_apr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "5636:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 967,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5642:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5648:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5642:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 965,
																"name": "AprInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "5628:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_AprInfo_$814_storage_ptr_$",
																	"typeString": "type(struct LPMining.AprInfo storage pointer)"
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5628:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AprInfo_$814_memory_ptr",
																"typeString": "struct LPMining.AprInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AprInfo_$814_memory_ptr",
																"typeString": "struct LPMining.AprInfo memory"
															}
														],
														"expression": {
															"expression": {
																"id": 960,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "5616:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																	"typeString": "struct LPMining.PoolInfo storage pointer"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5618:4:4",
															"memberName": "aprs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 820,
															"src": "5616:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
															}
														},
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5623:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5616:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage_ptr_$_t_struct$_AprInfo_$814_storage_$returns$__$bound_to$_t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LPMining.AprInfo storage ref[] storage pointer,struct LPMining.AprInfo storage ref)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5616:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "5616:43:4"
											},
											{
												"expression": {
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 972,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "5670:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																"typeString": "struct LPMining.PoolInfo storage pointer"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5672:8:4",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 816,
														"src": "5670:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 975,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "5683:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5670:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "5670:22:4"
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "5301:178:4",
										"text": " @dev Add a new lp to the pool. Can only be called by the owner.\n XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do."
									},
									"functionSelector": "771602f7",
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 951,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 950,
												"name": "onlyOwner",
												"nameLocations": [
													"5541:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5541:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5541:9:4"
										}
									],
									"name": "add",
									"nameLocation": "5494:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "_apr",
												"nameLocation": "5506:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "5498:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5498:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "5520:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "5512:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5512:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5497:33:4"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5551:0:4"
									},
									"scope": 1812,
									"src": "5485:453:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "6115:167:4",
										"statements": [
											{
												"assignments": [
													991
												],
												"declarations": [
													{
														"constant": false,
														"id": 991,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "6143:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1008,
														"src": "6126:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
															"typeString": "struct LPMining.PoolInfo"
														},
														"typeName": {
															"id": 990,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 989,
																"name": "PoolInfo",
																"nameLocations": [
																	"6126:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 821,
																"src": "6126:8:4"
															},
															"referencedDeclaration": 821,
															"src": "6126:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																"typeString": "struct LPMining.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"baseExpression": {
														"id": 992,
														"name": "poolInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "6150:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$821_storage_$dyn_storage",
															"typeString": "struct LPMining.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 994,
													"indexExpression": {
														"id": 993,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "6160:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6150:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$821_storage",
														"typeString": "struct LPMining.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6126:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1002,
																	"name": "_apr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "6218:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1003,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6242:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6248:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6242:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1001,
																"name": "AprInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "6191:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_AprInfo_$814_storage_ptr_$",
																	"typeString": "type(struct LPMining.AprInfo storage pointer)"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"6214:3:4",
																"6237:4:4"
															],
															"names": [
																"apr",
																"time"
															],
															"nodeType": "FunctionCall",
															"src": "6191:82:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AprInfo_$814_memory_ptr",
																"typeString": "struct LPMining.AprInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AprInfo_$814_memory_ptr",
																"typeString": "struct LPMining.AprInfo memory"
															}
														],
														"expression": {
															"expression": {
																"id": 996,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 991,
																"src": "6176:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																	"typeString": "struct LPMining.PoolInfo storage pointer"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6181:4:4",
															"memberName": "aprs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 820,
															"src": "6176:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
															}
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6186:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6176:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage_ptr_$_t_struct$_AprInfo_$814_storage_$returns$__$bound_to$_t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LPMining.AprInfo storage ref[] storage pointer,struct LPMining.AprInfo storage ref)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6176:98:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "6176:98:4"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "5946:105:4",
										"text": " @dev Update the given pool's BFLY allocation point. Can only be called by the owner."
									},
									"functionSelector": "1ab06ee5",
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 987,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 986,
												"name": "onlyOwner",
												"nameLocations": [
													"6105:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6105:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "6105:9:4"
										}
									],
									"name": "set",
									"nameLocation": "6066:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "6078:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "6070:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6070:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "_apr",
												"nameLocation": "6092:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "6084:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6084:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6069:28:4"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6115:0:4"
									},
									"scope": 1812,
									"src": "6057:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "6409:39:4",
										"statements": [
											{
												"expression": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1018,
														"name": "migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "6420:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$1926",
															"typeString": "contract IMigratorChef"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1019,
														"name": "_migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "6431:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$1926",
															"typeString": "contract IMigratorChef"
														}
													},
													"src": "6420:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$1926",
														"typeString": "contract IMigratorChef"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "6420:20:4"
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "6292:48:4",
										"text": " @dev Set migrator's address"
									},
									"functionSelector": "23cf3118",
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1016,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1015,
												"name": "onlyOwner",
												"nameLocations": [
													"6399:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6399:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "6399:9:4"
										}
									],
									"name": "setMigrator",
									"nameLocation": "6355:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "_migrator",
												"nameLocation": "6381:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "6367:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMigratorChef_$1926",
													"typeString": "contract IMigratorChef"
												},
												"typeName": {
													"id": 1012,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1011,
														"name": "IMigratorChef",
														"nameLocations": [
															"6367:13:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1926,
														"src": "6367:13:4"
													},
													"referencedDeclaration": 1926,
													"src": "6367:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$1926",
														"typeString": "contract IMigratorChef"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6366:25:4"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6409:0:4"
									},
									"scope": 1812,
									"src": "6346:102:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "6630:40:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1035,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "6656:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1033,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "6648:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:3:4",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 655,
														"src": "6648:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6648:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1032,
												"id": 1037,
												"nodeType": "Return",
												"src": "6641:21:4"
											}
										]
									},
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "6458:85:4",
										"text": " @dev Return reward multiplier over the given _from to _to block."
									},
									"functionSelector": "8dbb1e3a",
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nameLocation": "6558:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "6580:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "6572:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6595:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "6587:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6587:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6571:28:4"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "6621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:9:4"
									},
									"scope": 1812,
									"src": "6549:121:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "6850:1287:4",
										"statements": [
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "6878:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1258,
														"src": "6861:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
															"typeString": "struct LPMining.PoolInfo"
														},
														"typeName": {
															"id": 1050,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1049,
																"name": "PoolInfo",
																"nameLocations": [
																	"6861:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 821,
																"src": "6861:8:4"
															},
															"referencedDeclaration": 821,
															"src": "6861:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																"typeString": "struct LPMining.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1055,
												"initialValue": {
													"baseExpression": {
														"id": 1052,
														"name": "poolInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "6885:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$821_storage_$dyn_storage",
															"typeString": "struct LPMining.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1054,
													"indexExpression": {
														"id": 1053,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "6895:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6885:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$821_storage",
														"typeString": "struct LPMining.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6861:39:4"
											},
											{
												"assignments": [
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1058,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "6928:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1258,
														"src": "6911:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
															"typeString": "struct LPMining.UserInfo"
														},
														"typeName": {
															"id": 1057,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1056,
																"name": "UserInfo",
																"nameLocations": [
																	"6911:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 809,
																"src": "6911:8:4"
															},
															"referencedDeclaration": 809,
															"src": "6911:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																"typeString": "struct LPMining.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1059,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "6935:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$809_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct LPMining.UserInfo storage ref))"
															}
														},
														"id": 1061,
														"indexExpression": {
															"id": 1060,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "6944:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6935:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$809_storage_$",
															"typeString": "mapping(address => struct LPMining.UserInfo storage ref)"
														}
													},
													"id": 1063,
													"indexExpression": {
														"id": 1062,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "6950:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6935:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$809_storage",
														"typeString": "struct LPMining.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6911:45:4"
											},
											{
												"assignments": [
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "6975:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 1258,
														"src": "6967:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1065,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6967:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1070,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 1067,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "6981:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																"typeString": "struct LPMining.PoolInfo storage pointer"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6986:4:4",
														"memberName": "aprs",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 820,
														"src": "6981:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
															"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6991:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6981:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6967:30:4"
											},
											{
												"assignments": [
													1072
												],
												"declarations": [
													{
														"constant": false,
														"id": 1072,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "7016:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1258,
														"src": "7008:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1071,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7008:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1073,
												"nodeType": "VariableDeclarationStatement",
												"src": "7008:18:4"
											},
											{
												"assignments": [
													1075
												],
												"declarations": [
													{
														"constant": false,
														"id": 1075,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "7042:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1258,
														"src": "7037:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1074,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7037:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1076,
												"nodeType": "VariableDeclarationStatement",
												"src": "7037:9:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 1077,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "7061:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																		"typeString": "struct LPMining.PoolInfo storage pointer"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7066:4:4",
																"memberName": "aprs",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 820,
																"src": "7061:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																	"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																}
															},
															"id": 1082,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1079,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "7071:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7075:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7071:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7061:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																"typeString": "struct LPMining.AprInfo storage ref"
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7078:4:4",
														"memberName": "time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 813,
														"src": "7061:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1084,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "7085:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																"typeString": "struct LPMining.UserInfo storage pointer"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7090:13:4",
														"memberName": "lockStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 808,
														"src": "7085:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7061:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1126,
												"nodeType": "IfStatement",
												"src": "7057:302:4",
												"trueBody": {
													"id": 1125,
													"nodeType": "Block",
													"src": "7104:255:4",
													"statements": [
														{
															"expression": {
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1087,
																	"name": "multiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "7119:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1089,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1058,
																				"src": "7146:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																					"typeString": "struct LPMining.UserInfo storage pointer"
																				}
																			},
																			"id": 1090,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7151:13:4",
																			"memberName": "lockStartTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 808,
																			"src": "7146:18:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1091,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "7165:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7171:9:4",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "7165:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1088,
																		"name": "getMultiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1039,
																		"src": "7132:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:49:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7119:62:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1095,
															"nodeType": "ExpressionStatement",
															"src": "7119:62:4"
														},
														{
															"expression": {
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1096,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "7196:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1108,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1058,
																				"src": "7246:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																					"typeString": "struct LPMining.UserInfo storage pointer"
																				}
																			},
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7251:6:4",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 804,
																			"src": "7246:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"expression": {
																								"id": 1099,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1051,
																								"src": "7220:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																									"typeString": "struct LPMining.PoolInfo storage pointer"
																								}
																							},
																							"id": 1100,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7225:4:4",
																							"memberName": "aprs",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 820,
																							"src": "7220:9:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																								"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																							}
																						},
																						"id": 1104,
																						"indexExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1103,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1101,
																								"name": "len",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1066,
																								"src": "7230:3:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 1102,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "7234:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "7230:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7220:16:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																							"typeString": "struct LPMining.AprInfo storage ref"
																						}
																					},
																					"id": 1105,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "7237:3:4",
																					"memberName": "apr",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 811,
																					"src": "7220:20:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1097,
																					"name": "multiplier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1072,
																					"src": "7205:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1098,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7216:3:4",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 670,
																				"src": "7205:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7205:36:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7242:3:4",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 670,
																		"src": "7205:40:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7205:53:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7196:62:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1112,
															"nodeType": "ExpressionStatement",
															"src": "7196:62:4"
														},
														{
															"expression": {
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1113,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "7273:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 1119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7315:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1116,
																					"name": "DENOMINATOR_TEST",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 802,
																					"src": "7293:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1114,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1047,
																					"src": "7282:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7289:3:4",
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 685,
																				"src": "7282:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7282:28:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7311:3:4",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 685,
																		"src": "7282:32:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7282:37:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7273:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1122,
															"nodeType": "ExpressionStatement",
															"src": "7273:46:4"
														},
														{
															"expression": {
																"id": 1123,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "7341:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1048,
															"id": 1124,
															"nodeType": "Return",
															"src": "7334:13:4"
														}
													]
												}
											},
											{
												"body": {
													"id": 1220,
													"nodeType": "Block",
													"src": "7410:532:4",
													"statements": [
														{
															"condition": {
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "7431:5:4",
																"subExpression": {
																	"id": 1140,
																	"name": "flag",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "7432:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1177,
															"nodeType": "IfStatement",
															"src": "7427:247:4",
															"trueBody": {
																"id": 1176,
																"nodeType": "Block",
																"src": "7437:237:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1142,
																				"name": "multiplier",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1072,
																				"src": "7456:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1144,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1058,
																							"src": "7483:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																								"typeString": "struct LPMining.UserInfo storage pointer"
																							}
																						},
																						"id": 1145,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "7488:13:4",
																						"memberName": "lockStartTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 808,
																						"src": "7483:18:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"expression": {
																									"id": 1146,
																									"name": "pool",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1051,
																									"src": "7503:4:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																										"typeString": "struct LPMining.PoolInfo storage pointer"
																									}
																								},
																								"id": 1147,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "7508:4:4",
																								"memberName": "aprs",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 820,
																								"src": "7503:9:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																									"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																								}
																							},
																							"id": 1151,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1150,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1148,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1128,
																									"src": "7513:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1149,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "7515:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "7513:3:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "7503:14:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																								"typeString": "struct LPMining.AprInfo storage ref"
																							}
																						},
																						"id": 1152,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "7518:4:4",
																						"memberName": "time",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 813,
																						"src": "7503:19:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1143,
																					"name": "getMultiplier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1039,
																					"src": "7469:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7469:54:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7456:67:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1155,
																		"nodeType": "ExpressionStatement",
																		"src": "7456:67:4"
																	},
																	{
																		"expression": {
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1156,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1047,
																				"src": "7542:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1166,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1058,
																							"src": "7588:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																								"typeString": "struct LPMining.UserInfo storage pointer"
																							}
																						},
																						"id": 1167,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "7593:6:4",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 804,
																						"src": "7588:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"baseExpression": {
																										"expression": {
																											"id": 1159,
																											"name": "pool",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1051,
																											"src": "7566:4:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																												"typeString": "struct LPMining.PoolInfo storage pointer"
																											}
																										},
																										"id": 1160,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "7571:4:4",
																										"memberName": "aprs",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 820,
																										"src": "7566:9:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																											"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																										}
																									},
																									"id": 1162,
																									"indexExpression": {
																										"id": 1161,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1128,
																										"src": "7576:1:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "7566:12:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																										"typeString": "struct LPMining.AprInfo storage ref"
																									}
																								},
																								"id": 1163,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "7579:3:4",
																								"memberName": "apr",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 811,
																								"src": "7566:16:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1157,
																								"name": "multiplier",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1072,
																								"src": "7551:10:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1158,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7562:3:4",
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 670,
																							"src": "7551:14:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1164,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7551:32:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1165,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "7584:3:4",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 670,
																					"src": "7551:36:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7551:49:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:58:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1170,
																		"nodeType": "ExpressionStatement",
																		"src": "7542:58:4"
																	},
																	{
																		"expression": {
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1171,
																				"name": "flag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1075,
																				"src": "7619:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1172,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7626:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "7619:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1174,
																		"nodeType": "ExpressionStatement",
																		"src": "7619:11:4"
																	},
																	{
																		"id": 1175,
																		"nodeType": "Continue",
																		"src": "7649:8:4"
																	}
																]
															}
														},
														{
															"assignments": [
																1179
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1179,
																	"mutability": "mutable",
																	"name": "tempNumber",
																	"nameLocation": "7698:10:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1220,
																	"src": "7690:18:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1178,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7690:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1194,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 1181,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1051,
																					"src": "7725:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																						"typeString": "struct LPMining.PoolInfo storage pointer"
																					}
																				},
																				"id": 1182,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7730:4:4",
																				"memberName": "aprs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 820,
																				"src": "7725:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																					"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1184,
																			"indexExpression": {
																				"id": 1183,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1128,
																				"src": "7735:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7725:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																				"typeString": "struct LPMining.AprInfo storage ref"
																			}
																		},
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7738:4:4",
																		"memberName": "time",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 813,
																		"src": "7725:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 1186,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1051,
																					"src": "7744:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																						"typeString": "struct LPMining.PoolInfo storage pointer"
																					}
																				},
																				"id": 1187,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7749:4:4",
																				"memberName": "aprs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 820,
																				"src": "7744:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																					"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1191,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1188,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1128,
																					"src": "7754:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1189,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7756:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "7754:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7744:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																				"typeString": "struct LPMining.AprInfo storage ref"
																			}
																		},
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7759:4:4",
																		"memberName": "time",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 813,
																		"src": "7744:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1180,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "7711:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7711:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7690:74:4"
														},
														{
															"expression": {
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1195,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "7781:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1207,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1058,
																						"src": "7837:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																							"typeString": "struct LPMining.UserInfo storage pointer"
																						}
																					},
																					"id": 1208,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "7842:6:4",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 804,
																					"src": "7837:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 1200,
																										"name": "pool",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1051,
																										"src": "7815:4:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																											"typeString": "struct LPMining.PoolInfo storage pointer"
																										}
																									},
																									"id": 1201,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "7820:4:4",
																									"memberName": "aprs",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 820,
																									"src": "7815:9:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																										"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																									}
																								},
																								"id": 1203,
																								"indexExpression": {
																									"id": 1202,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1128,
																									"src": "7825:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "7815:12:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																									"typeString": "struct LPMining.AprInfo storage ref"
																								}
																							},
																							"id": 1204,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7828:3:4",
																							"memberName": "apr",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 811,
																							"src": "7815:16:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1198,
																							"name": "tempNumber",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1179,
																							"src": "7800:10:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1199,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "7811:3:4",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 670,
																						"src": "7800:14:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1205,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7800:32:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7833:3:4",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 670,
																				"src": "7800:36:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7800:49:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1196,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "7789:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7796:3:4",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 640,
																		"src": "7789:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7789:61:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7781:69:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1212,
															"nodeType": "ExpressionStatement",
															"src": "7781:69:4"
														},
														{
															"expression": {
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1213,
																	"name": "multiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "7867:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1216,
																			"name": "tempNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1179,
																			"src": "7895:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1214,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1072,
																			"src": "7880:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7891:3:4",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 640,
																		"src": "7880:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7880:26:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7867:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1219,
															"nodeType": "ExpressionStatement",
															"src": "7867:39:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1132,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "7397:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1133,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "7400:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7404:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "7400:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7397:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1221,
												"initializationExpression": {
													"assignments": [
														1128
													],
													"declarations": [
														{
															"constant": false,
															"id": 1128,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7381:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1221,
															"src": "7376:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1127,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "7376:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1131,
													"initialValue": {
														"expression": {
															"id": 1129,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "7385:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																"typeString": "struct LPMining.UserInfo storage pointer"
															}
														},
														"id": 1130,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7390:6:4",
														"memberName": "offset",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 806,
														"src": "7385:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7376:20:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7406:3:4",
														"subExpression": {
															"id": 1137,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "7406:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1139,
													"nodeType": "ExpressionStatement",
													"src": "7406:3:4"
												},
												"nodeType": "ForStatement",
												"src": "7371:571:4"
											},
											{
												"expression": {
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1222,
														"name": "multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "7954:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1224,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "7981:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																				"typeString": "struct LPMining.PoolInfo storage pointer"
																			}
																		},
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7986:4:4",
																		"memberName": "aprs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 820,
																		"src": "7981:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																			"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																		}
																	},
																	"id": 1229,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1226,
																			"name": "len",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "7991:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7995:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "7991:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7981:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																		"typeString": "struct LPMining.AprInfo storage ref"
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7998:4:4",
																"memberName": "time",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 813,
																"src": "7981:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1231,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8004:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8010:6:4",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "8004:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1223,
															"name": "getMultiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "7967:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7967:50:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7954:63:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "7954:63:4"
											},
											{
												"expression": {
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1236,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "8028:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 1250,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "8088:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																				"typeString": "struct LPMining.UserInfo storage pointer"
																			}
																		},
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8093:6:4",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 804,
																		"src": "8088:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1241,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1051,
																							"src": "8062:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																								"typeString": "struct LPMining.PoolInfo storage pointer"
																							}
																						},
																						"id": 1242,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "8067:4:4",
																						"memberName": "aprs",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 820,
																						"src": "8062:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																							"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																						}
																					},
																					"id": 1246,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1245,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1243,
																							"name": "len",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1066,
																							"src": "8072:3:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1244,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8076:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "8072:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8062:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																						"typeString": "struct LPMining.AprInfo storage ref"
																					}
																				},
																				"id": 1247,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8079:3:4",
																				"memberName": "apr",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 811,
																				"src": "8062:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1239,
																				"name": "multiplier",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1072,
																				"src": "8047:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8058:3:4",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 670,
																			"src": "8047:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8047:36:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8084:3:4",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 670,
																	"src": "8047:40:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8047:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1237,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "8036:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8043:3:4",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 640,
															"src": "8036:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8036:65:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8028:73:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "8028:73:4"
											},
											{
												"expression": {
													"id": 1256,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1047,
													"src": "8121:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1048,
												"id": 1257,
												"nodeType": "Return",
												"src": "8114:13:4"
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "6678:75:4",
										"text": " @dev View function to see pending rewards on frontend."
									},
									"functionSelector": "98969e82",
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingReward",
									"nameLocation": "6768:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "6790:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "6782:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6782:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6804:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "6796:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6796:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6781:29:4"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "6842:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "6834:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6834:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6833:16:4"
									},
									"scope": 1812,
									"src": "6759:1378:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "8238:1695:4",
										"statements": [
											{
												"assignments": [
													1270
												],
												"declarations": [
													{
														"constant": false,
														"id": 1270,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "8266:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1510,
														"src": "8249:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
															"typeString": "struct LPMining.PoolInfo"
														},
														"typeName": {
															"id": 1269,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1268,
																"name": "PoolInfo",
																"nameLocations": [
																	"8249:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 821,
																"src": "8249:8:4"
															},
															"referencedDeclaration": 821,
															"src": "8249:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																"typeString": "struct LPMining.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1274,
												"initialValue": {
													"baseExpression": {
														"id": 1271,
														"name": "poolInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "8273:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$821_storage_$dyn_storage",
															"typeString": "struct LPMining.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1273,
													"indexExpression": {
														"id": 1272,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "8283:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8273:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$821_storage",
														"typeString": "struct LPMining.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8249:39:4"
											},
											{
												"assignments": [
													1277
												],
												"declarations": [
													{
														"constant": false,
														"id": 1277,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "8316:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1510,
														"src": "8299:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
															"typeString": "struct LPMining.UserInfo"
														},
														"typeName": {
															"id": 1276,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1275,
																"name": "UserInfo",
																"nameLocations": [
																	"8299:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 809,
																"src": "8299:8:4"
															},
															"referencedDeclaration": 809,
															"src": "8299:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																"typeString": "struct LPMining.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1283,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1278,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "8323:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$809_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct LPMining.UserInfo storage ref))"
															}
														},
														"id": 1280,
														"indexExpression": {
															"id": 1279,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "8332:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8323:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$809_storage_$",
															"typeString": "mapping(address => struct LPMining.UserInfo storage ref)"
														}
													},
													"id": 1282,
													"indexExpression": {
														"id": 1281,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "8338:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8323:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$809_storage",
														"typeString": "struct LPMining.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8299:45:4"
											},
											{
												"assignments": [
													1285
												],
												"declarations": [
													{
														"constant": false,
														"id": 1285,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "8363:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 1510,
														"src": "8355:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1284,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8355:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1289,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 1286,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "8369:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																"typeString": "struct LPMining.PoolInfo storage pointer"
															}
														},
														"id": 1287,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8374:4:4",
														"memberName": "aprs",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 820,
														"src": "8369:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
															"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8379:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "8369:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8355:30:4"
											},
											{
												"assignments": [
													1291
												],
												"declarations": [
													{
														"constant": false,
														"id": 1291,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "8404:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1510,
														"src": "8396:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1290,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8396:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1292,
												"nodeType": "VariableDeclarationStatement",
												"src": "8396:18:4"
											},
											{
												"assignments": [
													1294
												],
												"declarations": [
													{
														"constant": false,
														"id": 1294,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "8430:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1510,
														"src": "8425:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1293,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8425:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1295,
												"nodeType": "VariableDeclarationStatement",
												"src": "8425:9:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 1296,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1270,
																	"src": "8468:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																		"typeString": "struct LPMining.PoolInfo storage pointer"
																	}
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8473:4:4",
																"memberName": "aprs",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 820,
																"src": "8468:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																	"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																}
															},
															"id": 1301,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1298,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1285,
																	"src": "8478:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8482:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8478:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8468:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																"typeString": "struct LPMining.AprInfo storage ref"
															}
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8485:4:4",
														"memberName": "time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 813,
														"src": "8468:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1303,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "8492:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																"typeString": "struct LPMining.UserInfo storage pointer"
															}
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8497:13:4",
														"memberName": "lockStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 808,
														"src": "8492:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8468:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1331,
												"nodeType": "IfStatement",
												"src": "8464:205:4",
												"trueBody": {
													"id": 1330,
													"nodeType": "Block",
													"src": "8511:158:4",
													"statements": [
														{
															"expression": {
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1306,
																	"name": "multiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "8526:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1307,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "8539:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																			"typeString": "struct LPMining.PoolInfo storage pointer"
																		}
																	},
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8544:8:4",
																	"memberName": "duration",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 816,
																	"src": "8539:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8526:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1310,
															"nodeType": "ExpressionStatement",
															"src": "8526:26:4"
														},
														{
															"expression": {
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1311,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "8567:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1323,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1277,
																				"src": "8617:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																					"typeString": "struct LPMining.UserInfo storage pointer"
																				}
																			},
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8622:6:4",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 804,
																			"src": "8617:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"expression": {
																								"id": 1314,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1270,
																								"src": "8591:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																									"typeString": "struct LPMining.PoolInfo storage pointer"
																								}
																							},
																							"id": 1315,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8596:4:4",
																							"memberName": "aprs",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 820,
																							"src": "8591:9:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																								"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																							}
																						},
																						"id": 1319,
																						"indexExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1318,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1316,
																								"name": "len",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1285,
																								"src": "8601:3:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 1317,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8605:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "8601:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8591:16:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																							"typeString": "struct LPMining.AprInfo storage ref"
																						}
																					},
																					"id": 1320,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8608:3:4",
																					"memberName": "apr",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 811,
																					"src": "8591:20:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1312,
																					"name": "multiplier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1291,
																					"src": "8576:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8587:3:4",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 670,
																				"src": "8576:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8576:36:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8613:3:4",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 670,
																		"src": "8576:40:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8576:53:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8567:62:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1327,
															"nodeType": "ExpressionStatement",
															"src": "8567:62:4"
														},
														{
															"expression": {
																"id": 1328,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1266,
																"src": "8651:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1267,
															"id": 1329,
															"nodeType": "Return",
															"src": "8644:13:4"
														}
													]
												}
											},
											{
												"body": {
													"id": 1482,
													"nodeType": "Block",
													"src": "8718:1050:4",
													"statements": [
														{
															"condition": {
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "8739:5:4",
																"subExpression": {
																	"id": 1345,
																	"name": "flag",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "8740:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1406,
															"nodeType": "IfStatement",
															"src": "8735:440:4",
															"trueBody": {
																"id": 1405,
																"nodeType": "Block",
																"src": "8745:430:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1347,
																				"name": "multiplier",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1291,
																				"src": "8764:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1349,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1277,
																							"src": "8791:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																								"typeString": "struct LPMining.UserInfo storage pointer"
																							}
																						},
																						"id": 1350,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "8796:13:4",
																						"memberName": "lockStartTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 808,
																						"src": "8791:18:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"expression": {
																									"id": 1351,
																									"name": "pool",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1270,
																									"src": "8811:4:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																										"typeString": "struct LPMining.PoolInfo storage pointer"
																									}
																								},
																								"id": 1352,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "8816:4:4",
																								"memberName": "aprs",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 820,
																								"src": "8811:9:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																									"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																								}
																							},
																							"id": 1356,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1355,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1353,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1333,
																									"src": "8821:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1354,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "8823:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "8821:3:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "8811:14:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																								"typeString": "struct LPMining.AprInfo storage ref"
																							}
																						},
																						"id": 1357,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "8826:4:4",
																						"memberName": "time",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 813,
																						"src": "8811:19:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1348,
																					"name": "getMultiplier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1039,
																					"src": "8777:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8777:54:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8764:67:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1360,
																		"nodeType": "ExpressionStatement",
																		"src": "8764:67:4"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1361,
																				"name": "multiplier",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1291,
																				"src": "8854:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"id": 1362,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1270,
																					"src": "8867:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																						"typeString": "struct LPMining.PoolInfo storage pointer"
																					}
																				},
																				"id": 1363,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8872:8:4",
																				"memberName": "duration",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 816,
																				"src": "8867:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8854:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1384,
																		"nodeType": "IfStatement",
																		"src": "8850:175:4",
																		"trueBody": {
																			"id": 1383,
																			"nodeType": "Block",
																			"src": "8881:144:4",
																			"statements": [
																				{
																					"expression": {
																						"id": 1379,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1365,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1266,
																							"src": "8904:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 1376,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1277,
																										"src": "8953:4:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																											"typeString": "struct LPMining.UserInfo storage pointer"
																										}
																									},
																									"id": 1377,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "8958:6:4",
																									"memberName": "amount",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 804,
																									"src": "8953:11:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"expression": {
																												"baseExpression": {
																													"expression": {
																														"id": 1369,
																														"name": "pool",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1270,
																														"src": "8931:4:4",
																														"typeDescriptions": {
																															"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																															"typeString": "struct LPMining.PoolInfo storage pointer"
																														}
																													},
																													"id": 1370,
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberLocation": "8936:4:4",
																													"memberName": "aprs",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 820,
																													"src": "8931:9:4",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																														"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																													}
																												},
																												"id": 1372,
																												"indexExpression": {
																													"id": 1371,
																													"name": "i",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1333,
																													"src": "8941:1:4",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "8931:12:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																													"typeString": "struct LPMining.AprInfo storage ref"
																												}
																											},
																											"id": 1373,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "8944:3:4",
																											"memberName": "apr",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 811,
																											"src": "8931:16:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"expression": {
																												"id": 1366,
																												"name": "pool",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1270,
																												"src": "8913:4:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																													"typeString": "struct LPMining.PoolInfo storage pointer"
																												}
																											},
																											"id": 1367,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "8918:8:4",
																											"memberName": "duration",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 816,
																											"src": "8913:13:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1368,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "8927:3:4",
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 670,
																										"src": "8913:17:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1374,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "8913:35:4",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1375,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "8949:3:4",
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 670,
																								"src": "8913:39:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1378,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "8913:52:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8904:61:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1380,
																					"nodeType": "ExpressionStatement",
																					"src": "8904:61:4"
																				},
																				{
																					"expression": {
																						"id": 1381,
																						"name": "reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1266,
																						"src": "8995:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 1267,
																					"id": 1382,
																					"nodeType": "Return",
																					"src": "8988:13:4"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1385,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1266,
																				"src": "9043:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1395,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1277,
																							"src": "9089:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																								"typeString": "struct LPMining.UserInfo storage pointer"
																							}
																						},
																						"id": 1396,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "9094:6:4",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 804,
																						"src": "9089:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"baseExpression": {
																										"expression": {
																											"id": 1388,
																											"name": "pool",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1270,
																											"src": "9067:4:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																												"typeString": "struct LPMining.PoolInfo storage pointer"
																											}
																										},
																										"id": 1389,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "9072:4:4",
																										"memberName": "aprs",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 820,
																										"src": "9067:9:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																											"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																										}
																									},
																									"id": 1391,
																									"indexExpression": {
																										"id": 1390,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1333,
																										"src": "9077:1:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "9067:12:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																										"typeString": "struct LPMining.AprInfo storage ref"
																									}
																								},
																								"id": 1392,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "9080:3:4",
																								"memberName": "apr",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 811,
																								"src": "9067:16:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1386,
																								"name": "multiplier",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1291,
																								"src": "9052:10:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1387,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "9063:3:4",
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 670,
																							"src": "9052:14:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1393,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9052:32:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1394,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9085:3:4",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 670,
																					"src": "9052:36:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9052:49:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9043:58:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1399,
																		"nodeType": "ExpressionStatement",
																		"src": "9043:58:4"
																	},
																	{
																		"expression": {
																			"id": 1402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1400,
																				"name": "flag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1294,
																				"src": "9120:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9127:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "9120:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1403,
																		"nodeType": "ExpressionStatement",
																		"src": "9120:11:4"
																	},
																	{
																		"id": 1404,
																		"nodeType": "Continue",
																		"src": "9150:8:4"
																	}
																]
															}
														},
														{
															"assignments": [
																1408
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1408,
																	"mutability": "mutable",
																	"name": "tempNumber",
																	"nameLocation": "9199:10:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1482,
																	"src": "9191:18:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1407,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9191:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1423,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 1410,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1270,
																					"src": "9226:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																						"typeString": "struct LPMining.PoolInfo storage pointer"
																					}
																				},
																				"id": 1411,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9231:4:4",
																				"memberName": "aprs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 820,
																				"src": "9226:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																					"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1413,
																			"indexExpression": {
																				"id": 1412,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1333,
																				"src": "9236:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9226:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																				"typeString": "struct LPMining.AprInfo storage ref"
																			}
																		},
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9239:4:4",
																		"memberName": "time",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 813,
																		"src": "9226:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 1415,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1270,
																					"src": "9245:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																						"typeString": "struct LPMining.PoolInfo storage pointer"
																					}
																				},
																				"id": 1416,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9250:4:4",
																				"memberName": "aprs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 820,
																				"src": "9245:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																					"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1420,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1417,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1333,
																					"src": "9255:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1418,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9257:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "9255:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9245:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																				"typeString": "struct LPMining.AprInfo storage ref"
																			}
																		},
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9260:4:4",
																		"memberName": "time",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 813,
																		"src": "9245:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1409,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "9212:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9212:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9191:74:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1426,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1291,
																			"src": "9301:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1424,
																			"name": "tempNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1408,
																			"src": "9286:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9297:3:4",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 640,
																		"src": "9286:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9286:26:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1428,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "9315:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																			"typeString": "struct LPMining.PoolInfo storage pointer"
																		}
																	},
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9320:8:4",
																	"memberName": "duration",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 816,
																	"src": "9315:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9286:42:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1456,
															"nodeType": "IfStatement",
															"src": "9282:207:4",
															"trueBody": {
																"id": 1455,
																"nodeType": "Block",
																"src": "9329:160:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1431,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1266,
																				"src": "9348:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"expression": {
																									"id": 1447,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1277,
																									"src": "9424:4:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																										"typeString": "struct LPMining.UserInfo storage pointer"
																									}
																								},
																								"id": 1448,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "9429:6:4",
																								"memberName": "amount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 804,
																								"src": "9424:11:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"baseExpression": {
																												"expression": {
																													"id": 1440,
																													"name": "pool",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1270,
																													"src": "9402:4:4",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																														"typeString": "struct LPMining.PoolInfo storage pointer"
																													}
																												},
																												"id": 1441,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "9407:4:4",
																												"memberName": "aprs",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 820,
																												"src": "9402:9:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																													"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																												}
																											},
																											"id": 1443,
																											"indexExpression": {
																												"id": 1442,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1333,
																												"src": "9412:1:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "9402:12:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																												"typeString": "struct LPMining.AprInfo storage ref"
																											}
																										},
																										"id": 1444,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "9415:3:4",
																										"memberName": "apr",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 811,
																										"src": "9402:16:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"arguments": [
																											{
																												"id": 1437,
																												"name": "multiplier",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1291,
																												"src": "9386:10:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"expression": {
																													"id": 1434,
																													"name": "pool",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1270,
																													"src": "9368:4:4",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																														"typeString": "struct LPMining.PoolInfo storage pointer"
																													}
																												},
																												"id": 1435,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "9373:8:4",
																												"memberName": "duration",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 816,
																												"src": "9368:13:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1436,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "9382:3:4",
																											"memberName": "sub",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 655,
																											"src": "9368:17:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1438,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "9368:29:4",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1439,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "9398:3:4",
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 670,
																									"src": "9368:33:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1445,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "9368:51:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1446,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "9420:3:4",
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 670,
																							"src": "9368:55:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1449,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9368:68:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1432,
																						"name": "reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1266,
																						"src": "9357:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1433,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9364:3:4",
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 640,
																					"src": "9357:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9357:80:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9348:89:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1452,
																		"nodeType": "ExpressionStatement",
																		"src": "9348:89:4"
																	},
																	{
																		"expression": {
																			"id": 1453,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "9463:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1267,
																		"id": 1454,
																		"nodeType": "Return",
																		"src": "9456:13:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1457,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "9621:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1469,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1277,
																						"src": "9677:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																							"typeString": "struct LPMining.UserInfo storage pointer"
																						}
																					},
																					"id": 1470,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9682:6:4",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 804,
																					"src": "9677:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 1462,
																										"name": "pool",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1270,
																										"src": "9655:4:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																											"typeString": "struct LPMining.PoolInfo storage pointer"
																										}
																									},
																									"id": 1463,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "9660:4:4",
																									"memberName": "aprs",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 820,
																									"src": "9655:9:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																										"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																									}
																								},
																								"id": 1465,
																								"indexExpression": {
																									"id": 1464,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1333,
																									"src": "9665:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9655:12:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																									"typeString": "struct LPMining.AprInfo storage ref"
																								}
																							},
																							"id": 1466,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "9668:3:4",
																							"memberName": "apr",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 811,
																							"src": "9655:16:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1460,
																							"name": "tempNumber",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1408,
																							"src": "9640:10:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1461,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "9651:3:4",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 670,
																						"src": "9640:14:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1467,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "9640:32:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9673:3:4",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 670,
																				"src": "9640:36:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9640:49:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1458,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "9629:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9636:3:4",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 640,
																		"src": "9629:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9629:61:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9621:69:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1474,
															"nodeType": "ExpressionStatement",
															"src": "9621:69:4"
														},
														{
															"expression": {
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1475,
																	"name": "multiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "9707:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1478,
																			"name": "tempNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1408,
																			"src": "9735:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1476,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1291,
																			"src": "9720:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9731:3:4",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 640,
																		"src": "9720:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9720:26:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9707:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1481,
															"nodeType": "ExpressionStatement",
															"src": "9707:39:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1337,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "8705:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1338,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "8708:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8712:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8708:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8705:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1483,
												"initializationExpression": {
													"assignments": [
														1333
													],
													"declarations": [
														{
															"constant": false,
															"id": 1333,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8689:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1483,
															"src": "8684:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1332,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "8684:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1336,
													"initialValue": {
														"expression": {
															"id": 1334,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "8693:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																"typeString": "struct LPMining.UserInfo storage pointer"
															}
														},
														"id": 1335,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8698:6:4",
														"memberName": "offset",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 806,
														"src": "8693:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8684:20:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8714:3:4",
														"subExpression": {
															"id": 1342,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "8714:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1344,
													"nodeType": "ExpressionStatement",
													"src": "8714:3:4"
												},
												"nodeType": "ForStatement",
												"src": "8679:1089:4"
											},
											{
												"expression": {
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1484,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "9784:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 1502,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1277,
																			"src": "9864:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																				"typeString": "struct LPMining.UserInfo storage pointer"
																			}
																		},
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9869:6:4",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 804,
																		"src": "9864:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1493,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1270,
																							"src": "9838:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																								"typeString": "struct LPMining.PoolInfo storage pointer"
																							}
																						},
																						"id": 1494,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "9843:4:4",
																						"memberName": "aprs",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 820,
																						"src": "9838:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																							"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																						}
																					},
																					"id": 1498,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1497,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1495,
																							"name": "len",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1285,
																							"src": "9848:3:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1496,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9852:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "9848:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9838:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AprInfo_$814_storage",
																						"typeString": "struct LPMining.AprInfo storage ref"
																					}
																				},
																				"id": 1499,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9855:3:4",
																				"memberName": "apr",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 811,
																				"src": "9838:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1490,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1291,
																						"src": "9822:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1487,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1270,
																							"src": "9804:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																								"typeString": "struct LPMining.PoolInfo storage pointer"
																							}
																						},
																						"id": 1488,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "9809:8:4",
																						"memberName": "duration",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 816,
																						"src": "9804:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1489,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9818:3:4",
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 655,
																					"src": "9804:17:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9804:29:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9834:3:4",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 670,
																			"src": "9804:33:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9804:55:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9860:3:4",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 670,
																	"src": "9804:59:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9804:72:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1485,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1266,
																"src": "9793:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9800:3:4",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 640,
															"src": "9793:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9793:84:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9784:93:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1507,
												"nodeType": "ExpressionStatement",
												"src": "9784:93:4"
											},
											{
												"expression": {
													"id": 1508,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1266,
													"src": "9899:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1267,
												"id": 1509,
												"nodeType": "Return",
												"src": "9892:13:4"
											}
										]
									},
									"functionSelector": "a18f07a0",
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "8156:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "8180:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "8172:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8172:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "8194:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "8186:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8186:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8171:29:4"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "8230:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "8222:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8222:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8221:16:4"
									},
									"scope": 1812,
									"src": "8147:1786:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1726,
										"nodeType": "Block",
										"src": "10078:1792:4",
										"statements": [
											{
												"assignments": [
													1521
												],
												"declarations": [
													{
														"constant": false,
														"id": 1521,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "10106:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "10089:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
															"typeString": "struct LPMining.PoolInfo"
														},
														"typeName": {
															"id": 1520,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1519,
																"name": "PoolInfo",
																"nameLocations": [
																	"10089:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 821,
																"src": "10089:8:4"
															},
															"referencedDeclaration": 821,
															"src": "10089:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																"typeString": "struct LPMining.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1525,
												"initialValue": {
													"baseExpression": {
														"id": 1522,
														"name": "poolInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "10113:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$821_storage_$dyn_storage",
															"typeString": "struct LPMining.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1524,
													"indexExpression": {
														"id": 1523,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "10123:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10113:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$821_storage",
														"typeString": "struct LPMining.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10089:39:4"
											},
											{
												"assignments": [
													1528
												],
												"declarations": [
													{
														"constant": false,
														"id": 1528,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "10156:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "10139:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
															"typeString": "struct LPMining.UserInfo"
														},
														"typeName": {
															"id": 1527,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1526,
																"name": "UserInfo",
																"nameLocations": [
																	"10139:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 809,
																"src": "10139:8:4"
															},
															"referencedDeclaration": 809,
															"src": "10139:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																"typeString": "struct LPMining.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1535,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1529,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "10163:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$809_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct LPMining.UserInfo storage ref))"
															}
														},
														"id": 1531,
														"indexExpression": {
															"id": 1530,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "10172:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10163:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$809_storage_$",
															"typeString": "mapping(address => struct LPMining.UserInfo storage ref)"
														}
													},
													"id": 1534,
													"indexExpression": {
														"expression": {
															"id": 1532,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10178:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10182:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10178:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10163:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$809_storage",
														"typeString": "struct LPMining.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10139:50:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1536,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "10208:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																"typeString": "struct LPMining.UserInfo storage pointer"
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10213:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 804,
														"src": "10208:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10222:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10208:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1724,
													"nodeType": "Block",
													"src": "11454:399:4",
													"statements": [
														{
															"expression": {
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1677,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1528,
																		"src": "11552:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																			"typeString": "struct LPMining.UserInfo storage pointer"
																		}
																	},
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "11557:13:4",
																	"memberName": "lockStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 808,
																	"src": "11552:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1680,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "11573:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11579:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "11573:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11552:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1683,
															"nodeType": "ExpressionStatement",
															"src": "11552:36:4"
														},
														{
															"expression": {
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1684,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1528,
																		"src": "11603:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																			"typeString": "struct LPMining.UserInfo storage pointer"
																		}
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "11608:6:4",
																	"memberName": "offset",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 806,
																	"src": "11603:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1687,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1521,
																				"src": "11617:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																					"typeString": "struct LPMining.PoolInfo storage pointer"
																				}
																			},
																			"id": 1688,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11622:4:4",
																			"memberName": "aprs",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 820,
																			"src": "11617:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																				"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																			}
																		},
																		"id": 1689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11627:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "11617:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11636:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "11617:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11603:34:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1693,
															"nodeType": "ExpressionStatement",
															"src": "11603:34:4"
														},
														{
															"expression": {
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1694,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1528,
																		"src": "11653:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																			"typeString": "struct LPMining.UserInfo storage pointer"
																		}
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "11658:6:4",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 804,
																	"src": "11653:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1697,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1516,
																	"src": "11667:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11653:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1699,
															"nodeType": "ExpressionStatement",
															"src": "11653:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1706,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "11728:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11732:6:4",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "11728:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11720:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1704,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11720:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11720:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1711,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "11749:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_LPMining_$1812",
																					"typeString": "contract LPMining"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_LPMining_$1812",
																					"typeString": "contract LPMining"
																				}
																			],
																			"id": 1710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11741:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11741:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11741:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1713,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1516,
																		"src": "11756:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1701,
																				"name": "para",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 836,
																				"src": "11697:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBEP20_$1913",
																					"typeString": "contract IBEP20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IBEP20_$1913",
																					"typeString": "contract IBEP20"
																				}
																			],
																			"id": 1700,
																			"name": "IBEP20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1913,
																			"src": "11690:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IBEP20_$1913_$",
																				"typeString": "type(contract IBEP20)"
																			}
																		},
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11690:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$1913",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11703:16:4",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1987,
																	"src": "11690:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1913_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$1913_$",
																		"typeString": "function (contract IBEP20,address,address,uint256)"
																	}
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11690:74:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1715,
															"nodeType": "ExpressionStatement",
															"src": "11690:74:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1717,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11792:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11796:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11792:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1719,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1514,
																		"src": "11804:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1720,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1516,
																		"src": "11810:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1716,
																	"name": "Deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "11784:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11784:34:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1722,
															"nodeType": "EmitStatement",
															"src": "11779:39:4"
														},
														{
															"functionReturnParameters": 1518,
															"id": 1723,
															"nodeType": "Return",
															"src": "11833:8:4"
														}
													]
												},
												"id": 1725,
												"nodeType": "IfStatement",
												"src": "10204:1649:4",
												"trueBody": {
													"id": 1676,
													"nodeType": "Block",
													"src": "10224:1225:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1543,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1521,
																				"src": "10279:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																					"typeString": "struct LPMining.PoolInfo storage pointer"
																				}
																			},
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10284:8:4",
																			"memberName": "duration",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 816,
																			"src": "10279:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1540,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1528,
																				"src": "10256:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																					"typeString": "struct LPMining.UserInfo storage pointer"
																				}
																			},
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10261:13:4",
																			"memberName": "lockStartTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 808,
																			"src": "10256:18:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10275:3:4",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 640,
																		"src": "10256:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10256:37:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1546,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10295:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10301:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "10295:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10256:54:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1674,
																"nodeType": "Block",
																"src": "10994:437:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"id": 1629,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "11115:3:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 1630,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11119:6:4",
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "11115:10:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1628,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "11107:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1627,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "11107:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1631,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11107:19:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 1634,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "11136:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_LPMining_$1812",
																								"typeString": "contract LPMining"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_LPMining_$1812",
																								"typeString": "contract LPMining"
																							}
																						],
																						"id": 1633,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "11128:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1632,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "11128:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1635,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11128:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1636,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1516,
																					"src": "11143:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1624,
																							"name": "para",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 836,
																							"src": "11084:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IBEP20_$1913",
																								"typeString": "contract IBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IBEP20_$1913",
																								"typeString": "contract IBEP20"
																							}
																						],
																						"id": 1623,
																						"name": "IBEP20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1913,
																						"src": "11077:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IBEP20_$1913_$",
																							"typeString": "type(contract IBEP20)"
																						}
																					},
																					"id": 1625,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11077:12:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$1913",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 1626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11090:16:4",
																				"memberName": "safeTransferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1987,
																				"src": "11077:29:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1913_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$1913_$",
																					"typeString": "function (contract IBEP20,address,address,uint256)"
																				}
																			},
																			"id": 1637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11077:74:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1638,
																		"nodeType": "ExpressionStatement",
																		"src": "11077:74:4"
																	},
																	{
																		"expression": {
																			"id": 1647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1639,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1528,
																					"src": "11170:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																						"typeString": "struct LPMining.UserInfo storage pointer"
																					}
																				},
																				"id": 1641,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "11175:6:4",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 804,
																				"src": "11170:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1645,
																						"name": "_amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1516,
																						"src": "11200:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1642,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1528,
																							"src": "11184:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																								"typeString": "struct LPMining.UserInfo storage pointer"
																							}
																						},
																						"id": 1643,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "11189:6:4",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 804,
																						"src": "11184:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1644,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11196:3:4",
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 640,
																					"src": "11184:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1646,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11184:24:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11170:38:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1648,
																		"nodeType": "ExpressionStatement",
																		"src": "11170:38:4"
																	},
																	{
																		"expression": {
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1649,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1528,
																					"src": "11241:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																						"typeString": "struct LPMining.UserInfo storage pointer"
																					}
																				},
																				"id": 1651,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "11246:13:4",
																				"memberName": "lockStartTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 808,
																				"src": "11241:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1652,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "11262:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11268:9:4",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "11262:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11241:36:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1655,
																		"nodeType": "ExpressionStatement",
																		"src": "11241:36:4"
																	},
																	{
																		"expression": {
																			"id": 1664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1656,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1528,
																					"src": "11296:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																						"typeString": "struct LPMining.UserInfo storage pointer"
																					}
																				},
																				"id": 1658,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "11301:6:4",
																				"memberName": "offset",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 806,
																				"src": "11296:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1663,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"expression": {
																							"id": 1659,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1521,
																							"src": "11310:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																								"typeString": "struct LPMining.PoolInfo storage pointer"
																							}
																						},
																						"id": 1660,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "11315:4:4",
																						"memberName": "aprs",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 820,
																						"src": "11310:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																							"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																						}
																					},
																					"id": 1661,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11320:6:4",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "11310:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1662,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11329:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "11310:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11296:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1665,
																		"nodeType": "ExpressionStatement",
																		"src": "11296:34:4"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1667,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "11364:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1668,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11368:6:4",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "11364:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1669,
																					"name": "_pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1514,
																					"src": "11376:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1670,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1516,
																					"src": "11382:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1666,
																				"name": "Deposit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 853,
																				"src": "11356:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256)"
																				}
																			},
																			"id": 1671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11356:34:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1672,
																		"nodeType": "EmitStatement",
																		"src": "11351:39:4"
																	},
																	{
																		"functionReturnParameters": 1518,
																		"id": 1673,
																		"nodeType": "Return",
																		"src": "11409:7:4"
																	}
																]
															},
															"id": 1675,
															"nodeType": "IfStatement",
															"src": "10253:1178:4",
															"trueBody": {
																"id": 1622,
																"nodeType": "Block",
																"src": "10311:679:4",
																"statements": [
																	{
																		"assignments": [
																			1550
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1550,
																				"mutability": "mutable",
																				"name": "pending",
																				"nameLocation": "10386:7:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1622,
																				"src": "10378:15:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1549,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10378:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1556,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1552,
																					"name": "_pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1514,
																					"src": "10412:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1553,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "10417:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1554,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10421:6:4",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "10417:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1551,
																				"name": "calculateReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1511,
																				"src": "10396:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (uint256,address) view returns (uint256)"
																				}
																			},
																			"id": 1555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10396:32:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10378:50:4"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1557,
																				"name": "pending",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1550,
																				"src": "10450:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10460:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "10450:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1570,
																		"nodeType": "IfStatement",
																		"src": "10447:105:4",
																		"trueBody": {
																			"id": 1569,
																			"nodeType": "Block",
																			"src": "10463:89:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1564,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "10512:3:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 1565,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "10516:6:4",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "10512:10:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1566,
																								"name": "pending",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1550,
																								"src": "10524:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"id": 1561,
																										"name": "para",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 836,
																										"src": "10493:4:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IBEP20_$1913",
																											"typeString": "contract IBEP20"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_contract$_IBEP20_$1913",
																											"typeString": "contract IBEP20"
																										}
																									],
																									"id": 1560,
																									"name": "IBEP20",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1913,
																									"src": "10486:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IBEP20_$1913_$",
																										"typeString": "type(contract IBEP20)"
																									}
																								},
																								"id": 1562,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "10486:12:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IBEP20_$1913",
																									"typeString": "contract IBEP20"
																								}
																							},
																							"id": 1563,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10499:12:4",
																							"memberName": "safeTransfer",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1961,
																							"src": "10486:25:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1913_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$1913_$",
																								"typeString": "function (contract IBEP20,address,uint256)"
																							}
																						},
																						"id": 1567,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "10486:46:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1568,
																					"nodeType": "ExpressionStatement",
																					"src": "10486:46:4"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"id": 1577,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "10672:3:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 1578,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10676:6:4",
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "10672:10:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1576,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "10664:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1575,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "10664:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1579,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10664:19:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 1582,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "10693:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_LPMining_$1812",
																								"typeString": "contract LPMining"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_LPMining_$1812",
																								"typeString": "contract LPMining"
																							}
																						],
																						"id": 1581,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "10685:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1580,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "10685:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1583,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10685:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1584,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1516,
																					"src": "10700:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1572,
																							"name": "para",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 836,
																							"src": "10641:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IBEP20_$1913",
																								"typeString": "contract IBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IBEP20_$1913",
																								"typeString": "contract IBEP20"
																							}
																						],
																						"id": 1571,
																						"name": "IBEP20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1913,
																						"src": "10634:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IBEP20_$1913_$",
																							"typeString": "type(contract IBEP20)"
																						}
																					},
																					"id": 1573,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10634:12:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$1913",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 1574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10647:16:4",
																				"memberName": "safeTransferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1987,
																				"src": "10634:29:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1913_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$1913_$",
																					"typeString": "function (contract IBEP20,address,address,uint256)"
																				}
																			},
																			"id": 1585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10634:74:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1586,
																		"nodeType": "ExpressionStatement",
																		"src": "10634:74:4"
																	},
																	{
																		"expression": {
																			"id": 1595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1587,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1528,
																					"src": "10727:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																						"typeString": "struct LPMining.UserInfo storage pointer"
																					}
																				},
																				"id": 1589,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "10732:6:4",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 804,
																				"src": "10727:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1593,
																						"name": "_amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1516,
																						"src": "10757:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1590,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1528,
																							"src": "10741:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																								"typeString": "struct LPMining.UserInfo storage pointer"
																							}
																						},
																						"id": 1591,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "10746:6:4",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 804,
																						"src": "10741:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1592,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10753:3:4",
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 640,
																					"src": "10741:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1594,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10741:24:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10727:38:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1596,
																		"nodeType": "ExpressionStatement",
																		"src": "10727:38:4"
																	},
																	{
																		"expression": {
																			"id": 1602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1597,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1528,
																					"src": "10798:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																						"typeString": "struct LPMining.UserInfo storage pointer"
																					}
																				},
																				"id": 1599,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "10803:13:4",
																				"memberName": "lockStartTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 808,
																				"src": "10798:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1600,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "10819:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10825:9:4",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "10819:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10798:36:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1603,
																		"nodeType": "ExpressionStatement",
																		"src": "10798:36:4"
																	},
																	{
																		"expression": {
																			"id": 1612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1604,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1528,
																					"src": "10853:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																						"typeString": "struct LPMining.UserInfo storage pointer"
																					}
																				},
																				"id": 1606,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "10858:6:4",
																				"memberName": "offset",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 806,
																				"src": "10853:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1611,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"expression": {
																							"id": 1607,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1521,
																							"src": "10867:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																								"typeString": "struct LPMining.PoolInfo storage pointer"
																							}
																						},
																						"id": 1608,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "10872:4:4",
																						"memberName": "aprs",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 820,
																						"src": "10867:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_AprInfo_$814_storage_$dyn_storage",
																							"typeString": "struct LPMining.AprInfo storage ref[] storage ref"
																						}
																					},
																					"id": 1609,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10877:6:4",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "10867:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1610,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10886:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "10867:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10853:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1613,
																		"nodeType": "ExpressionStatement",
																		"src": "10853:34:4"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1615,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "10921:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1616,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10925:6:4",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "10921:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1617,
																					"name": "_pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1514,
																					"src": "10933:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1618,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1516,
																					"src": "10939:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1614,
																				"name": "Deposit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 853,
																				"src": "10913:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256)"
																				}
																			},
																			"id": 1619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10913:34:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1620,
																		"nodeType": "EmitStatement",
																		"src": "10908:39:4"
																	},
																	{
																		"functionReturnParameters": 1518,
																		"id": 1621,
																		"nodeType": "Return",
																		"src": "10966:7:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "9941:76:4",
										"text": " @dev Deposit LP tokens to LPMining for bfly allocation."
									},
									"functionSelector": "e2bbb158",
									"id": 1727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "10032:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "10048:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "10040:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10040:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10062:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "10054:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10054:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10039:31:4"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10078:0:4"
									},
									"scope": 1812,
									"src": "10023:1847:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1810,
										"nodeType": "Block",
										"src": "12001:689:4",
										"statements": [
											{
												"assignments": [
													1737
												],
												"declarations": [
													{
														"constant": false,
														"id": 1737,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "12029:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1810,
														"src": "12012:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
															"typeString": "struct LPMining.PoolInfo"
														},
														"typeName": {
															"id": 1736,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1735,
																"name": "PoolInfo",
																"nameLocations": [
																	"12012:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 821,
																"src": "12012:8:4"
															},
															"referencedDeclaration": 821,
															"src": "12012:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																"typeString": "struct LPMining.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1741,
												"initialValue": {
													"baseExpression": {
														"id": 1738,
														"name": "poolInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "12036:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$821_storage_$dyn_storage",
															"typeString": "struct LPMining.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1740,
													"indexExpression": {
														"id": 1739,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "12046:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12036:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$821_storage",
														"typeString": "struct LPMining.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12012:39:4"
											},
											{
												"assignments": [
													1744
												],
												"declarations": [
													{
														"constant": false,
														"id": 1744,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "12079:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1810,
														"src": "12062:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
															"typeString": "struct LPMining.UserInfo"
														},
														"typeName": {
															"id": 1743,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1742,
																"name": "UserInfo",
																"nameLocations": [
																	"12062:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 809,
																"src": "12062:8:4"
															},
															"referencedDeclaration": 809,
															"src": "12062:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																"typeString": "struct LPMining.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1751,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1745,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "12086:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$809_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct LPMining.UserInfo storage ref))"
															}
														},
														"id": 1747,
														"indexExpression": {
															"id": 1746,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "12095:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12086:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$809_storage_$",
															"typeString": "mapping(address => struct LPMining.UserInfo storage ref)"
														}
													},
													"id": 1750,
													"indexExpression": {
														"expression": {
															"id": 1748,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "12101:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12105:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "12101:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12086:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$809_storage",
														"typeString": "struct LPMining.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12062:50:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1753,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "12131:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																		"typeString": "struct LPMining.UserInfo storage pointer"
																	}
																},
																"id": 1754,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12136:6:4",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 804,
																"src": "12131:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1755,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1732,
																"src": "12146:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12131:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42464c593a2053554646494349454e545f42414c414e4345",
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12155:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_876f7f9e4780f33e63eb3317edb660ae4a2d4ec1a87e78bffd7c78916a0979f9",
																"typeString": "literal_string \"BFLY: SUFFICIENT_BALANCE\""
															},
															"value": "BFLY: SUFFICIENT_BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_876f7f9e4780f33e63eb3317edb660ae4a2d4ec1a87e78bffd7c78916a0979f9",
																"typeString": "literal_string \"BFLY: SUFFICIENT_BALANCE\""
															}
														],
														"id": 1752,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12123:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12123:59:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1759,
												"nodeType": "ExpressionStatement",
												"src": "12123:59:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1763,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "12221:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$821_storage_ptr",
																		"typeString": "struct LPMining.PoolInfo storage pointer"
																	}
																},
																"id": 1764,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12226:8:4",
																"memberName": "duration",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 816,
																"src": "12221:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1760,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "12198:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																		"typeString": "struct LPMining.UserInfo storage pointer"
																	}
																},
																"id": 1761,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12203:13:4",
																"memberName": "lockStartTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 808,
																"src": "12198:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12217:3:4",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 640,
															"src": "12198:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12198:37:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1766,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12237:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12243:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "12237:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12198:54:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1792,
												"nodeType": "IfStatement",
												"src": "12195:303:4",
												"trueBody": {
													"id": 1791,
													"nodeType": "Block",
													"src": "12253:245:4",
													"statements": [
														{
															"assignments": [
																1770
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1770,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "12307:7:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1791,
																	"src": "12299:15:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12299:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1776,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1772,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "12333:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1773,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "12338:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12342:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "12338:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1771,
																	"name": "calculateReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1511,
																	"src": "12317:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (uint256,address) view returns (uint256)"
																	}
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12317:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12299:50:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1777,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "12371:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12381:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12371:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1790,
															"nodeType": "IfStatement",
															"src": "12368:105:4",
															"trueBody": {
																"id": 1789,
																"nodeType": "Block",
																"src": "12384:89:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1784,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "12433:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1785,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "12437:6:4",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "12433:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1786,
																					"name": "pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1770,
																					"src": "12445:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1781,
																							"name": "para",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 836,
																							"src": "12414:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IBEP20_$1913",
																								"typeString": "contract IBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IBEP20_$1913",
																								"typeString": "contract IBEP20"
																							}
																						],
																						"id": 1780,
																						"name": "IBEP20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1913,
																						"src": "12407:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IBEP20_$1913_$",
																							"typeString": "type(contract IBEP20)"
																						}
																					},
																					"id": 1782,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12407:12:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$1913",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 1783,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "12420:12:4",
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1961,
																				"src": "12407:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1913_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$1913_$",
																					"typeString": "function (contract IBEP20,address,uint256)"
																				}
																			},
																			"id": 1787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12407:46:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1788,
																		"nodeType": "ExpressionStatement",
																		"src": "12407:46:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1797,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12552:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12556:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12552:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1799,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "12564:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																	"typeString": "struct LPMining.UserInfo storage pointer"
																}
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12569:6:4",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 804,
															"src": "12564:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1794,
																	"name": "para",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "12533:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$1913",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$1913",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 1793,
																"name": "IBEP20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1913,
																"src": "12526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBEP20_$1913_$",
																	"typeString": "type(contract IBEP20)"
																}
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12526:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1913",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12539:12:4",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1961,
														"src": "12526:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1913_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$1913_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12526:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1802,
												"nodeType": "ExpressionStatement",
												"src": "12526:50:4"
											},
											{
												"expression": {
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1803,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "12635:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$809_storage_ptr",
																"typeString": "struct LPMining.UserInfo storage pointer"
															}
														},
														"id": 1805,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12640:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 804,
														"src": "12635:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12649:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12635:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "12635:15:4"
											},
											{
												"functionReturnParameters": 1734,
												"id": 1809,
												"nodeType": "Return",
												"src": "12666:7:4"
											}
										]
									},
									"documentation": {
										"id": 1728,
										"nodeType": "StructuredDocumentation",
										"src": "11878:61:4",
										"text": " @dev Withdraw LP tokens from MasterChef."
									},
									"functionSelector": "441a3e70",
									"id": 1811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "11954:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "11971:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "11963:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11963:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "11985:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "11977:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11977:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11962:31:4"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12001:0:4"
									},
									"scope": 1812,
									"src": "11945:745:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1813,
							"src": "348:13203:4",
							"usedErrors": []
						}
					],
					"src": "33:13518:4"
				},
				"id": 4
			},
			"interfaces/IBEP20.sol": {
				"ast": {
					"absolutePath": "interfaces/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							1913
						]
					},
					"id": 1914,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1814,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1913,
							"linearizedBaseContracts": [
								1913
							],
							"name": "IBEP20",
							"nameLocation": "70:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "84:68:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "167:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:2:5"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "204:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:5"
									},
									"scope": 1913,
									"src": "158:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "221:53:5",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 1826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "289:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "297:2:5"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "323:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1823,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "323:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:7:5"
									},
									"scope": 1913,
									"src": "280:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1827,
										"nodeType": "StructuredDocumentation",
										"src": "338:51:5",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "404:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:2:5"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "436:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "436:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "435:15:5"
									},
									"scope": 1913,
									"src": "395:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "459:49:5",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 1838,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "523:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "527:2:5"
									},
									"returnParameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "553:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1835,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "553:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "552:15:5"
									},
									"scope": 1913,
									"src": "514:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1839,
										"nodeType": "StructuredDocumentation",
										"src": "576:54:5",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 1844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "645:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "653:2:5"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "679:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:9:5"
									},
									"scope": 1913,
									"src": "636:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "696:74:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "785:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "803:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "795:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:17:5"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "835:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:9:5"
									},
									"scope": 1913,
									"src": "776:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "852:215:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1082:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1099:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "1091:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1118:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "1110:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:35:5"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "1144:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1859,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1144:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1143:6:5"
									},
									"scope": 1913,
									"src": "1073:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "1158:270:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1443:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1461:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "1453:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1477:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "1469:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:33:5"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "1509:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:9:5"
									},
									"scope": 1913,
									"src": "1434:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1873,
										"nodeType": "StructuredDocumentation",
										"src": "1526:655:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1882,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2196:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2212:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "2204:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2229:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "2221:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:33:5"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "2255:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1879,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2255:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:6:5"
									},
									"scope": 1913,
									"src": "2187:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "2269:304:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1894,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2588:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2619:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "2611:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2611:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2644:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "2636:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2672:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "2664:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2664:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2600:85:5"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "2704:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1891,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2704:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:6:5"
									},
									"scope": 1913,
									"src": "2579:131:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "2718:163:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1903,
									"name": "Transfer",
									"nameLocation": "2893:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2918:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "2902:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2940:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "2924:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2924:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2952:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "2944:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2944:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2901:57:5"
									},
									"src": "2887:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1904,
										"nodeType": "StructuredDocumentation",
										"src": "2967:151:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1912,
									"name": "Approval",
									"nameLocation": "3130:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3155:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "3139:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1908,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3178:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "3162:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3162:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3195:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "3187:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3187:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3138:63:5"
									},
									"src": "3124:78:5"
								}
							],
							"scope": 1914,
							"src": "60:3145:5",
							"usedErrors": []
						}
					],
					"src": "33:3172:5"
				},
				"id": 5
			},
			"interfaces/IMigratorChef.sol": {
				"ast": {
					"absolutePath": "interfaces/IMigratorChef.sol",
					"exportedSymbols": {
						"IBEP20": [
							1913
						],
						"IMigratorChef": [
							1926
						]
					},
					"id": 1927,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1915,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "interfaces/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 1916,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1927,
							"sourceUnit": 1914,
							"src": "60:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMigratorChef",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1926,
							"linearizedBaseContracts": [
								1926
							],
							"name": "IMigratorChef",
							"nameLocation": "96:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ce5494bb",
									"id": 1925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nameLocation": "647:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "662:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "655:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1913",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1918,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1917,
														"name": "IBEP20",
														"nameLocations": [
															"655:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1913,
														"src": "655:6:6"
													},
													"referencedDeclaration": 1913,
													"src": "655:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1913",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:14:6"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "687:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1913",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1922,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1921,
														"name": "IBEP20",
														"nameLocations": [
															"687:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1913,
														"src": "687:6:6"
													},
													"referencedDeclaration": 1913,
													"src": "687:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1913",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:8:6"
									},
									"scope": 1926,
									"src": "638:57:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1927,
							"src": "86:612:6",
							"usedErrors": []
						}
					],
					"src": "33:665:6"
				},
				"id": 6
			},
			"libraries/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "libraries/SafeBEP20.sol",
					"exportedSymbols": {
						"Address": [
							442
						],
						"IBEP20": [
							1913
						],
						"SafeBEP20": [
							2145
						],
						"SafeMath": [
							776
						]
					},
					"id": 2146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1928,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2146,
							"sourceUnit": 777,
							"src": "60:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1930,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2146,
							"sourceUnit": 443,
							"src": "119:51:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IBEP20.sol",
							"file": "../interfaces/IBEP20.sol",
							"id": 1931,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2146,
							"sourceUnit": 1914,
							"src": "174:34:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeBEP20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1932,
								"nodeType": "StructuredDocumentation",
								"src": "212:465:7",
								"text": " @title SafeBEP20\n @dev Wrappers around BEP20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2145,
							"linearizedBaseContracts": [
								2145
							],
							"name": "SafeBEP20",
							"nameLocation": "687:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1935,
									"libraryName": {
										"id": 1933,
										"name": "SafeMath",
										"nameLocations": [
											"710:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 776,
										"src": "710:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "704:27:7",
									"typeName": {
										"id": 1934,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "723:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1938,
									"libraryName": {
										"id": 1936,
										"name": "Address",
										"nameLocations": [
											"743:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 442,
										"src": "743:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "737:26:7",
									"typeName": {
										"id": 1937,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "755:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1960,
										"nodeType": "Block",
										"src": "877:105:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1949,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "908:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1913",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1952,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1941,
																			"src": "938:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$1913",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "944:8:7",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1862,
																		"src": "938:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "953:8:7",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "938:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1955,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1943,
																	"src": "963:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1956,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1945,
																	"src": "967:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1950,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "915:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "919:18:7",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "915:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "915:58:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$1913",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1948,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2144,
														"src": "888:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1913_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "888:86:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1959,
												"nodeType": "ExpressionStatement",
												"src": "888:86:7"
											}
										]
									},
									"id": 1961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "780:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "810:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "803:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1913",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1940,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1939,
														"name": "IBEP20",
														"nameLocations": [
															"803:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1913,
														"src": "803:6:7"
													},
													"referencedDeclaration": 1913,
													"src": "803:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1913",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "834:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "826:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "855:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "847:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:75:7"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "877:0:7"
									},
									"scope": 2145,
									"src": "771:211:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1986,
										"nodeType": "Block",
										"src": "1123:115:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1974,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1964,
															"src": "1154:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1913",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1977,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1964,
																			"src": "1184:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$1913",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1190:12:7",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1894,
																		"src": "1184:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1203:8:7",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1184:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1980,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1966,
																	"src": "1213:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1981,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1968,
																	"src": "1219:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1982,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1970,
																	"src": "1223:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1975,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1161:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1165:18:7",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1161:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1161:68:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$1913",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1973,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2144,
														"src": "1134:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1913_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:96:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1985,
												"nodeType": "ExpressionStatement",
												"src": "1134:96:7"
											}
										]
									},
									"id": 1987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "999:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1033:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "1026:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1913",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1963,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1962,
														"name": "IBEP20",
														"nameLocations": [
															"1026:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1913,
														"src": "1026:6:7"
													},
													"referencedDeclaration": 1913,
													"src": "1026:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1913",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1057:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "1049:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1080:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "1072:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1101:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "1093:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:98:7"
									},
									"returnParameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:0:7"
									},
									"scope": 2145,
									"src": "990:248:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "1617:560:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1999,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1995,
																			"src": "1925:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1934:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1925:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2002,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1924:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2007,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1965:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$2145",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$2145",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 2006,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1957:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2005,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1957:7:7",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2008,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1957:13:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2009,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1993,
																					"src": "1972:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 2003,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1991,
																					"src": "1941:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$1913",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 2004,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1947:9:7",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1872,
																				"src": "1941:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 2010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1941:39:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1984:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1941:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2013,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1924:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2001:56:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1998,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1902:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1902:166:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "1902:166:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2019,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "2099:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1913",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2022,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1991,
																			"src": "2129:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$1913",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2135:7:7",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1882,
																		"src": "2129:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2143:8:7",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2129:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2025,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1993,
																	"src": "2153:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2026,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1995,
																	"src": "2162:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2020,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2106:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2110:18:7",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2106:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2106:62:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$1913",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2018,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2144,
														"src": "2079:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1913_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2079:90:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2029,
												"nodeType": "ExpressionStatement",
												"src": "2079:90:7"
											}
										]
									},
									"documentation": {
										"id": 1988,
										"nodeType": "StructuredDocumentation",
										"src": "1246:255:7",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1516:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1545:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "1538:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1913",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1990,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1989,
														"name": "IBEP20",
														"nameLocations": [
															"1538:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1913,
														"src": "1538:6:7"
													},
													"referencedDeclaration": 1913,
													"src": "1538:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1913",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1569:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "1561:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1595:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "1587:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1527:80:7"
									},
									"returnParameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1617:0:7"
									},
									"scope": 2145,
									"src": "1507:670:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "2305:200:7",
										"statements": [
											{
												"assignments": [
													2042
												],
												"declarations": [
													{
														"constant": false,
														"id": 2042,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2324:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 2067,
														"src": "2316:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2041,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2316:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2054,
												"initialValue": {
													"arguments": [
														{
															"id": 2052,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "2383:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2047,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2363:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$2145",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$2145",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 2046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2045,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2049,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2036,
																	"src": "2370:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2043,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2034,
																	"src": "2339:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$1913",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 2044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2345:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1872,
																"src": "2339:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2339:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2379:3:7",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 640,
														"src": "2339:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2339:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2316:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2056,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "2420:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1913",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2059,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2034,
																			"src": "2450:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$1913",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2456:7:7",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1882,
																		"src": "2450:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2464:8:7",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2450:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2062,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2036,
																	"src": "2474:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2063,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2042,
																	"src": "2483:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2057,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2427:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2431:18:7",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2427:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2427:69:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$1913",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2055,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2144,
														"src": "2400:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1913_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2400:97:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2066,
												"nodeType": "ExpressionStatement",
												"src": "2400:97:7"
											}
										]
									},
									"id": 2068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2194:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2233:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "2226:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1913",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 2033,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2032,
														"name": "IBEP20",
														"nameLocations": [
															"2226:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1913,
														"src": "2226:6:7"
													},
													"referencedDeclaration": 1913,
													"src": "2226:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1913",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2257:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "2249:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2283:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "2275:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2215:80:7"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2305:0:7"
									},
									"scope": 2145,
									"src": "2185:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2105,
										"nodeType": "Block",
										"src": "2633:258:7",
										"statements": [
											{
												"assignments": [
													2079
												],
												"declarations": [
													{
														"constant": false,
														"id": 2079,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2652:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 2105,
														"src": "2644:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2078,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2644:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2092,
												"initialValue": {
													"arguments": [
														{
															"id": 2089,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2075,
															"src": "2724:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2731:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2084,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2704:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$2145",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$2145",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 2083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2696:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2082,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2696:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2696:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2086,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2073,
																	"src": "2711:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2080,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "2680:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$1913",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2686:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1872,
																"src": "2680:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2680:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2720:3:7",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 725,
														"src": "2680:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2680:95:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2644:131:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2094,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2071,
															"src": "2806:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1913",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2097,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2071,
																			"src": "2836:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$1913",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2842:7:7",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1882,
																		"src": "2836:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2850:8:7",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2836:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2100,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2073,
																	"src": "2860:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2101,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2079,
																	"src": "2869:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2095,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2813:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2096,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2817:18:7",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2813:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2813:69:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$1913",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2093,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2144,
														"src": "2786:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1913_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2786:97:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2104,
												"nodeType": "ExpressionStatement",
												"src": "2786:97:7"
											}
										]
									},
									"id": 2106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2522:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2561:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "2554:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1913",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 2070,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2069,
														"name": "IBEP20",
														"nameLocations": [
															"2554:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1913,
														"src": "2554:6:7"
													},
													"referencedDeclaration": 1913,
													"src": "2554:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1913",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2585:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "2577:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2577:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2611:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "2603:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2543:80:7"
									},
									"returnParameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2633:0:7"
									},
									"scope": 2145,
									"src": "2513:378:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2143,
										"nodeType": "Block",
										"src": "3352:704:7",
										"statements": [
											{
												"assignments": [
													2116
												],
												"declarations": [
													{
														"constant": false,
														"id": 2116,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3719:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 2143,
														"src": "3706:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2115,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3706:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2125,
												"initialValue": {
													"arguments": [
														{
															"id": 2122,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2112,
															"src": "3760:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3766:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2119,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "3740:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$1913",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$1913",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3732:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2117,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3732:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3732:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3747:12:7",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 202,
														"src": "3732:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3732:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3706:95:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2126,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2116,
															"src": "3816:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3827:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3816:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3836:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3816:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2142,
												"nodeType": "IfStatement",
												"src": "3812:237:7",
												"trueBody": {
													"id": 2141,
													"nodeType": "Block",
													"src": "3839:210:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2133,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2116,
																				"src": "3971:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2135,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3984:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2134,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3984:4:7",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2136,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3983:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 2131,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3960:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3964:6:7",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3960:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3960:30:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3992:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 2130,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3952:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3952:85:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2140,
															"nodeType": "ExpressionStatement",
															"src": "3952:85:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2107,
										"nodeType": "StructuredDocumentation",
										"src": "2899:377:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3291:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3318:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "3311:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1913",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 2109,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2108,
														"name": "IBEP20",
														"nameLocations": [
															"3311:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1913,
														"src": "3311:6:7"
													},
													"referencedDeclaration": 1913,
													"src": "3311:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1913",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3338:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "3325:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3325:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3310:33:7"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3352:0:7"
									},
									"scope": 2145,
									"src": "3282:774:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2146,
							"src": "679:3380:7",
							"usedErrors": []
						}
					],
					"src": "33:4026:7"
				},
				"id": 7
			}
		}
	}
}