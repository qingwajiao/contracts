{
	"id": "d696300e3949bddb47bc67f04b359430",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"StackMining.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\n\r\nimport \"./libraries/SafeBEP20.sol\";\r\nimport \"./interfaces/IARCStackMining.sol\";\r\n\r\n\r\ncontract StackMining is IARCStack, Ownable, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeBEP20 for IBEP20;\r\n\r\n    /**\r\n     * @dev The address of the smart chef factory\r\n     */\r\n    address public SMART_CHEF_FACTORY;\r\n\r\n    /**\r\n     * @dev Whether a limit is set for users\r\n     */\r\n    bool public hasUserLimit;\r\n\r\n    /**\r\n     * @dev Whether it is initialized\r\n     */\r\n    bool public isInitialized;\r\n\r\n    /**\r\n     * @dev Accrued token per share\r\n     */\r\n    uint256 public accTokenPerShare;\r\n\r\n    /**\r\n     * @dev The block number when CAKE mining ends.\r\n     */\r\n    uint256 public bonusEndBlock;\r\n\r\n    /**\r\n     * @dev The block number when CAKE mining starts.\r\n     */\r\n    uint256 public startBlock;\r\n\r\n    /**\r\n     * @dev The block number of the last pool update\r\n     */\r\n    uint256 public lastRewardBlock;\r\n\r\n    /**\r\n     * @dev The pool limit (0 if none)\r\n     */\r\n    uint256 public poolLimitPerUser;\r\n\r\n    /**\r\n     * @dev CAKE tokens created per block.\r\n     */\r\n    uint256 public rewardPerBlock;\r\n\r\n    /**\r\n     * @dev The precision factor\r\n     */\r\n    uint256 public PRECISION_FACTOR;\r\n \r\n    /**\r\n     * @dev The reward token\r\n     */\r\n    IBEP20 public rewardToken;\r\n\r\n    /**\r\n     * @dev The staked token\r\n     */\r\n    IBEP20 public stakedToken;\r\n\r\n    /**\r\n     * @dev Info of each user that stakes tokens (stakedToken)\r\n     */\r\n    // mapping(address => UserInfo) public userInfos;\r\n\r\n    struct UserInfo {\r\n        uint256 amount; // How many staked tokens the user has provided\r\n        uint256 rewardDebt; // Reward debt\r\n        uint256 lockStartTime; // lock start time.\r\n    }\r\n\r\n\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        uint256 duration;         // 期间\r\n        uint256 boost;       // How many allocation points assigned to this pool. CAKEs to distribute per block.\r\n        uint256 amount;  // Last block number that CAKEs distribution occurs.\r\n        // uint256 accCakePerShare; // Accumulated CAKEs per share, times 1e12. See below.\r\n    }\r\n\r\n        // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n    // Info of each user that stakes LP tokens.\r\n    mapping (uint256 => mapping (address => UserInfo)) public userInfo;\r\n\r\n    constructor() {\r\n        SMART_CHEF_FACTORY = msg.sender;\r\n    }\r\n\r\n    /*\r\n     * @notice Initialize the contract\r\n     * @param _stakedToken: staked token address\r\n     * @param _rewardToken: reward token address\r\n     * @param _rewardPerBlock: reward per block (in rewardToken)\r\n     * @param _startBlock: start block\r\n     * @param _bonusEndBlock: end block\r\n     * @param _poolLimitPerUser: pool limit per user in stakedToken (if any, else 0)\r\n     * @param _admin: admin address with ownership\r\n     */\r\n    function initialize(\r\n        IBEP20 _stakedToken,\r\n        IBEP20 _rewardToken,\r\n        uint256 _rewardPerBlock,\r\n        uint256 _startBlock,\r\n        uint256 _bonusEndBlock,\r\n        uint256 _poolLimitPerUser,\r\n        address _admin\r\n    ) external {\r\n        require(!isInitialized, \"BFLY: ALREADY_INIT\");\r\n        require(msg.sender == SMART_CHEF_FACTORY, \"BFLY: NOT_FACTORY\");\r\n\r\n        // Make this contract initialized\r\n        isInitialized = true;\r\n\r\n        stakedToken = _stakedToken;\r\n        rewardToken = _rewardToken;\r\n        rewardPerBlock = _rewardPerBlock;\r\n        startBlock = _startBlock;\r\n        bonusEndBlock = _bonusEndBlock;\r\n\r\n        if (_poolLimitPerUser > 0) {\r\n            hasUserLimit = true;\r\n            poolLimitPerUser = _poolLimitPerUser;\r\n        }\r\n\r\n        uint256 decimalsRewardToken = uint256(rewardToken.decimals());\r\n        require(decimalsRewardToken < 30, \"BFLY: Must be inferior to 30\");\r\n\r\n        PRECISION_FACTOR = uint256(10**(uint256(30).sub(decimalsRewardToken)));\r\n\r\n        // Set the lastRewardBlock as the startBlock\r\n        lastRewardBlock = startBlock;\r\n\r\n        // Transfer ownership to the admin address who becomes owner of the contract\r\n        transferOwnership(_admin);\r\n    }\r\n\r\n    /*\r\n     * @notice Deposit staked tokens and collect reward tokens (if any)\r\n     * @param _amount: amount to withdraw (in rewardToken)\r\n     */\r\n    function deposit(uint256 _pid,uint256 _amount) external nonReentrant {\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n\r\n        if (hasUserLimit) {\r\n            require(_amount.add(user.amount) <= poolLimitPerUser, \"BFLY: User amount above limit\");\r\n        }\r\n\r\n        _updatePool();\r\n\r\n        if (user.amount > 0) {\r\n\r\n            if (user.lockStartTime.add(pool.duration) > block.timestamp){\r\n                uint256 pending = user.amount.mul(accTokenPerShare).div(PRECISION_FACTOR).sub(user.rewardDebt);\r\n                if (pending > 0) {\r\n                    rewardToken.safeTransfer(address(msg.sender), pending);\r\n                }\r\n            }\r\n            // 已经存在 则将累加用户amount 重置 lockStartTime\r\n\r\n            user.lockStartTime = block.timestamp;\r\n        }\r\n\r\n        if (_amount > 0) {\r\n            user.amount = user.amount.add(_amount);\r\n            pool.amount = pool.amount.add(_amount);\r\n            stakedToken.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n        }\r\n\r\n        user.rewardDebt = user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR);\r\n\r\n        emit Deposit(msg.sender, _amount);\r\n    }\r\n\r\n    /*\r\n     * @notice Withdraw staked tokens and collect reward tokens\r\n     * @param _amount: amount to withdraw (in rewardToken)\r\n     */\r\n    function withdraw(uint256 _pid, uint256 _amount) external nonReentrant {\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        require(user.amount >= _amount, \"BFLY: Amount to withdraw too high\");\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n\r\n        // 没到解锁时间 只能取本金\r\n        if (user.lockStartTime.add(pool.duration) < block.timestamp){\r\n            emergencyWithdraw(_pid);\r\n        }\r\n\r\n        _updatePool();\r\n\r\n        uint256 pending = user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR).sub(user.rewardDebt);\r\n\r\n        if (_amount > 0) {\r\n            user.amount = user.amount.sub(_amount);\r\n            pool.amount = pool.amount.sub(_amount);\r\n            stakedToken.safeTransfer(address(msg.sender), _amount);\r\n        }\r\n\r\n        if (pending > 0) {\r\n            rewardToken.safeTransfer(address(msg.sender), pending);\r\n        }\r\n\r\n        user.rewardDebt = user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR);\r\n\r\n        emit Withdraw(msg.sender, _amount);\r\n    }\r\n\r\n    /*\r\n     * @notice Withdraw staked tokens without caring about rewards rewards\r\n     * @dev Needs to be for emergency.\r\n     */\r\n    function emergencyWithdraw(uint256 _pid) public nonReentrant {\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 amountToTransfer = user.amount;\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n\r\n        if (amountToTransfer > 0) {\r\n            stakedToken.safeTransfer(address(msg.sender), amountToTransfer);\r\n        }\r\n\r\n        emit EmergencyWithdraw(msg.sender, user.amount);\r\n    }\r\n\r\n    /*\r\n     * @notice Stop rewards\r\n     * @dev Only callable by owner. Needs to be for emergency.\r\n     */\r\n    function emergencyRewardWithdraw(uint256 _amount) external onlyOwner {\r\n        rewardToken.safeTransfer(address(msg.sender), _amount);\r\n    }\r\n\r\n    /**\r\n     * @notice It allows the admin to recover wrong tokens sent to the contract\r\n     * @param _tokenAddress: the address of the token to withdraw\r\n     * @param _tokenAmount: the number of tokens to withdraw\r\n     * @dev This function is only callable by admin.\r\n     */\r\n    function recoverWrongTokens(address _tokenAddress, uint256 _tokenAmount) external onlyOwner {\r\n        require(_tokenAddress != address(stakedToken), \"Cannot be staked token\");\r\n        require(_tokenAddress != address(rewardToken), \"Cannot be reward token\");\r\n\r\n        IBEP20(_tokenAddress).safeTransfer(address(msg.sender), _tokenAmount);\r\n\r\n        emit AdminTokenRecovery(_tokenAddress, _tokenAmount);\r\n    }\r\n\r\n    /*\r\n     * @notice Stop rewards\r\n     * @dev Only callable by owner\r\n     */\r\n    function stopReward() external onlyOwner {\r\n        bonusEndBlock = block.number;\r\n    }\r\n\r\n    /*\r\n     * @notice Update pool limit per user\r\n     * @dev Only callable by owner.\r\n     * @param _hasUserLimit: whether the limit remains forced\r\n     * @param _poolLimitPerUser: new pool limit per user\r\n     */\r\n    function updatePoolLimitPerUser(bool _hasUserLimit, uint256 _poolLimitPerUser) external onlyOwner {\r\n        require(hasUserLimit, \"Must be set\");\r\n        if (_hasUserLimit) {\r\n            require(_poolLimitPerUser > poolLimitPerUser, \"New limit must be higher\");\r\n            poolLimitPerUser = _poolLimitPerUser;\r\n        } else {\r\n            hasUserLimit = _hasUserLimit;\r\n            poolLimitPerUser = 0;\r\n        }\r\n        emit NewPoolLimit(poolLimitPerUser);\r\n    }\r\n\r\n    /*\r\n     * @notice Update reward per block\r\n     * @dev Only callable by owner.\r\n     * @param _rewardPerBlock: the reward per block\r\n     */\r\n    function updateRewardPerBlock(uint256 _rewardPerBlock) external onlyOwner {\r\n        require(block.number < startBlock, \"Pool has started\");\r\n        rewardPerBlock = _rewardPerBlock;\r\n        emit NewRewardPerBlock(_rewardPerBlock);\r\n    }\r\n\r\n    /**\r\n     * @notice It allows the admin to update start and end blocks\r\n     * @dev This function is only callable by owner.\r\n     * @param _startBlock: the new start block\r\n     * @param _bonusEndBlock: the new end block\r\n     */\r\n    function updateStartAndEndBlocks(uint256 _startBlock, uint256 _bonusEndBlock) external onlyOwner {\r\n        require(block.number < startBlock, \"Pool has started\");\r\n        require(_startBlock < _bonusEndBlock, \"New startBlock must be lower than new endBlock\");\r\n        require(block.number < _startBlock, \"New startBlock must be higher than current block\");\r\n\r\n        startBlock = _startBlock;\r\n        bonusEndBlock = _bonusEndBlock;\r\n\r\n        // Set the lastRewardBlock as the startBlock\r\n        lastRewardBlock = startBlock;\r\n\r\n        emit NewStartAndEndBlocks(_startBlock, _bonusEndBlock);\r\n    }\r\n\r\n    /*\r\n     * @notice View function to see pending reward on frontend.\r\n     * @param _user: user address\r\n     * @return Pending reward for a given user\r\n     */\r\n    function pendingReward(uint256 _pid, address _user) external view returns (uint256) {\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        uint256 totalShares = getTotalShares();\r\n        if (block.number > lastRewardBlock && totalShares != 0) {\r\n            uint256 multiplier = _getMultiplier(lastRewardBlock, block.number);\r\n            uint256 cakeReward = multiplier.mul(rewardPerBlock);\r\n            uint256 adjustedTokenPerShare =\r\n                accTokenPerShare.add(cakeReward.mul(PRECISION_FACTOR).div(totalShares));\r\n            return user.amount.mul(pool.boost).mul(adjustedTokenPerShare).div(PRECISION_FACTOR).sub(user.rewardDebt);\r\n        } else {\r\n            return user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR).sub(user.rewardDebt);\r\n        }\r\n    }\r\n\r\n    function getTotalShares()public view returns(uint256 totalShares){\r\n\r\n            for (uint256 pid = 0; pid < poolInfo.length; ++pid){\r\n            totalShares = totalShares.add(poolInfo[pid].amount.mul(poolInfo[pid].boost));\r\n        }\r\n    }\r\n\r\n    /*\r\n     * @notice Update reward variables of the given pool to be up-to-date.\r\n     */\r\n    function _updatePool() internal {\r\n        if (block.number <= lastRewardBlock) {\r\n            return;\r\n        }\r\n\r\n        // uint256 stakedTokenSupply = stakedToken.balanceOf(address(this));\r\n        uint256 totalShares = getTotalShares() ;\r\n        // for (uint256 pid = 0; pid < length; ++pid) {\r\n        \r\n        // for (uint256 pid = 0; pid < poolInfo.length; ++pid){\r\n        //     stakedTokenSupply = stakedTokenSupply.add(poolInfo[pid].amount.mul(poolInfo[pid].boost));\r\n        // }\r\n\r\n        if (totalShares == 0) {\r\n            lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n\r\n        uint256 multiplier = _getMultiplier(lastRewardBlock, block.number);\r\n        uint256 cakeReward = multiplier.mul(rewardPerBlock);\r\n        accTokenPerShare = accTokenPerShare.add(cakeReward.mul(PRECISION_FACTOR).div(totalShares));\r\n        lastRewardBlock = block.number;\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfo.length;\r\n    }\r\n\r\n    /*\r\n     * @notice Return reward multiplier over the given _from to _to block.\r\n     * @param _from: block to start\r\n     * @param _to: block to finish\r\n     */\r\n    function _getMultiplier(uint256 _from, uint256 _to) internal view returns (uint256) {\r\n        if (_to <= bonusEndBlock) {\r\n            return _to.sub(_from);\r\n        } else if (_from >= bonusEndBlock) {\r\n            return 0;\r\n        } else {\r\n            return bonusEndBlock.sub(_from);\r\n        }\r\n    }\r\n}"
			},
			"interfaces/IARCStackMining.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"./IBEP20.sol\";\r\n\r\ninterface IARCStack {\r\n\r\n    event AdminTokenRecovery(address tokenRecovered, uint256 amount);\r\n    event Deposit(address indexed user, uint256 amount);\r\n    event EmergencyWithdraw(address indexed user, uint256 amount);\r\n    event NewStartAndEndBlocks(uint256 startBlock, uint256 endBlock);\r\n    event NewRewardPerBlock(uint256 rewardPerBlock);\r\n    event NewPoolLimit(uint256 poolLimitPerUser);\r\n    event RewardsStop(uint256 blockNumber);\r\n    event Withdraw(address indexed user, uint256 amount);\r\n\r\n    function initialize(\r\n        IBEP20 _stakedToken,\r\n        IBEP20 _rewardToken,\r\n        uint256 _rewardPerBlock,\r\n        uint256 _startBlock,\r\n        uint256 _bonusEndBlock,\r\n        uint256 _poolLimitPerUser,\r\n        address _admin\r\n    ) external;\r\n\r\n    function deposit(uint256 _pid, uint256 _amount) external;\r\n\r\n    function withdraw(uint256 _pid,uint256 _amount) external;\r\n}"
			},
			"libraries/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\n\r\nimport \"../interfaces/IBEP20.sol\";\r\n\r\n/**\r\n * @title SafeBEP20\r\n * @dev Wrappers around BEP20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IBEP20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IBEP20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance =\r\n            token.allowance(address(this), spender).sub(value, \"SafeBEP20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"interfaces/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220289951791995b8e449c901c4b4c2bf03ac7d11a0e0a78d1677050f81215cd7de64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220289951791995b8e449c901c4b4c2bf03ac7d11a0e0a78d1677050f81215cd7de64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SWAP10 MLOAD PUSH26 0x1995B8E449C901C4B4C2BF03AC7D11A0E0A78D1677050F81215C 0xD7 0xDE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8964:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220289951791995b8e449c901c4b4c2bf03ac7d11a0e0a78d1677050f81215cd7de64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SWAP10 MLOAD PUSH26 0x1995B8E449C901C4B4C2BF03AC7D11A0E0A78D1677050F81215C 0xD7 0xDE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8964:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220289951791995b8e449c901c4b4c2bf03ac7d11a0e0a78d1677050f81215cd7de64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"StackMining.sol",
								"interfaces/IARCStackMining.sol",
								"interfaces/IBEP20.sol",
								"libraries/SafeBEP20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220548f30a1065b769b5c48a9ac3b695216c0fce3495ff93bf93102c0cfb68a4b7f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220548f30a1065b769b5c48a9ac3b695216c0fce3495ff93bf93102c0cfb68a4b7f64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD DUP16 ADDRESS LOG1 MOD JUMPDEST PUSH23 0x9B5C48A9AC3B695216C0FCE3495FF93BF93102C0CFB68A 0x4B PUSH32 0x64736F6C63430008110033000000000000000000000000000000000000000000 ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220548f30a1065b769b5c48a9ac3b695216c0fce3495ff93bf93102c0cfb68a4b7f64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD DUP16 ADDRESS LOG1 MOD JUMPDEST PUSH23 0x9B5C48A9AC3B695216C0FCE3495FF93BF93102C0CFB68A 0x4B PUSH32 0x64736F6C63430008110033000000000000000000000000000000000000000000 ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220548f30a1065b769b5c48a9ac3b695216c0fce3495ff93bf93102c0cfb68a4b7f64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"StackMining.sol",
								"interfaces/IARCStackMining.sol",
								"interfaces/IBEP20.sol",
								"libraries/SafeBEP20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"StackMining.sol": {
				"StackMining": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenRecovered",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AdminTokenRecovery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "poolLimitPerUser",
									"type": "uint256"
								}
							],
							"name": "NewPoolLimit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardPerBlock",
									"type": "uint256"
								}
							],
							"name": "NewRewardPerBlock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endBlock",
									"type": "uint256"
								}
							],
							"name": "NewStartAndEndBlocks",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "RewardsStop",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "PRECISION_FACTOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SMART_CHEF_FACTORY",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "accTokenPerShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bonusEndBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "emergencyRewardWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalShares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasUserLimit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IBEP20",
									"name": "_stakedToken",
									"type": "address"
								},
								{
									"internalType": "contract IBEP20",
									"name": "_rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_bonusEndBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_poolLimitPerUser",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRewardBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "boost",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLimitPerUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenAmount",
									"type": "uint256"
								}
							],
							"name": "recoverWrongTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakedToken",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_hasUserLimit",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_poolLimitPerUser",
									"type": "uint256"
								}
							],
							"name": "updatePoolLimitPerUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardPerBlock",
									"type": "uint256"
								}
							],
							"name": "updateRewardPerBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_bonusEndBlock",
									"type": "uint256"
								}
							],
							"name": "updateStartAndEndBlocks",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockStartTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"recoverWrongTokens(address,uint256)": {
								"details": "This function is only callable by admin.",
								"params": {
									"_tokenAddress": ": the address of the token to withdraw",
									"_tokenAmount": ": the number of tokens to withdraw"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateStartAndEndBlocks(uint256,uint256)": {
								"details": "This function is only callable by owner.",
								"params": {
									"_bonusEndBlock": ": the new end block",
									"_startBlock": ": the new start block"
								}
							}
						},
						"stateVariables": {
							"PRECISION_FACTOR": {
								"details": "The precision factor"
							},
							"SMART_CHEF_FACTORY": {
								"details": "The address of the smart chef factory"
							},
							"accTokenPerShare": {
								"details": "Accrued token per share"
							},
							"bonusEndBlock": {
								"details": "The block number when CAKE mining ends."
							},
							"hasUserLimit": {
								"details": "Whether a limit is set for users"
							},
							"isInitialized": {
								"details": "Whether it is initialized"
							},
							"lastRewardBlock": {
								"details": "The block number of the last pool update"
							},
							"poolLimitPerUser": {
								"details": "The pool limit (0 if none)"
							},
							"rewardPerBlock": {
								"details": "CAKE tokens created per block."
							},
							"rewardToken": {
								"details": "The reward token"
							},
							"stakedToken": {
								"details": "The staked token"
							},
							"startBlock": {
								"details": "The block number when CAKE mining starts."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"StackMining.sol\":377:13507  contract StackMining is IARCStack, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"StackMining.sol\":2606:2670  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"StackMining.sol\":2631:2649  SMART_CHEF_FACTORY */\n  0x02\n    /* \"StackMining.sol\":2631:2662  SMART_CHEF_FACTORY = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"StackMining.sol\":2652:2662  msg.sender */\n  caller\n    /* \"StackMining.sol\":2631:2662  SMART_CHEF_FACTORY = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"StackMining.sol\":377:13507  contract StackMining is IARCStack, Ownable, ReentrancyGuard {... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"StackMining.sol\":377:13507  contract StackMining is IARCStack, Ownable, ReentrancyGuard {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"StackMining.sol\":377:13507  contract StackMining is IARCStack, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xa9f8d181\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xd5002f2e\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xd5002f2e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xa9f8d181\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xbd617191\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xcc7a262e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xccd34cd5\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x93f1a40b\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x9513997f\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x98969e82\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa0b40905\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8f662915\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x92e8990e\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x441a3e70\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x80dc0672\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x83a5041c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8ae39cac\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x441a3e70\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x66fe9f8a\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x1aed6553\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x1aed6553\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3279beab\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x392e53cd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f138d4b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x01f8a976\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081e3eda\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"StackMining.sol\":9549:9789  function updateRewardPerBlock(uint256 _rewardPerBlock) external onlyOwner {... */\n    tag_3:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"StackMining.sol\":12926:13021  function poolLength() external view returns (uint256) {... */\n    tag_4:\n        /* \"StackMining.sol\":12998:13006  poolInfo */\n      0x0c\n        /* \"StackMining.sol\":12998:13013  poolInfo.length */\n      sload\n        /* \"StackMining.sol\":12926:13021  function poolLength() external view returns (uint256) {... */\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"StackMining.sol\":12926:13021  function poolLength() external view returns (uint256) {... */\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StackMining.sol\":2449:2475  PoolInfo[] public poolInfo */\n    tag_5:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":583:608   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":639:641   */\n      0x20\n        /* \"#utility.yul\":624:642   */\n      dup5\n      add\n        /* \"#utility.yul\":617:651   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":667:685   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":660:694   */\n      mstore\n        /* \"#utility.yul\":571:573   */\n      0x60\n        /* \"#utility.yul\":556:574   */\n      add\n        /* \"StackMining.sol\":2449:2475  PoolInfo[] public poolInfo */\n      tag_46\n        /* \"#utility.yul\":381:700   */\n      jump\n        /* \"StackMining.sol\":977:1005  uint256 public bonusEndBlock */\n    tag_6:\n      tag_44\n      sload(0x04)\n      dup2\n      jump\n        /* \"StackMining.sol\":7670:7812  function emergencyRewardWithdraw(uint256 _amount) external onlyOwner {... */\n    tag_7:\n      tag_40\n      tag_57\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"StackMining.sol\":777:802  bool public isInitialized */\n    tag_8:\n      sload(0x02)\n      tag_59\n      swap1\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_59:\n      mload(0x40)\n        /* \"#utility.yul\":870:884   */\n      swap1\n      iszero\n        /* \"#utility.yul\":863:885   */\n      iszero\n        /* \"#utility.yul\":845:886   */\n      dup2\n      mstore\n        /* \"#utility.yul\":833:835   */\n      0x20\n        /* \"#utility.yul\":818:836   */\n      add\n        /* \"StackMining.sol\":777:802  bool public isInitialized */\n      tag_46\n        /* \"#utility.yul\":705:892   */\n      jump\n        /* \"StackMining.sol\":8102:8515  function recoverWrongTokens(address _tokenAddress, uint256 _tokenAmount) external onlyOwner {... */\n    tag_9:\n      tag_40\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"StackMining.sol\":5927:6988  function withdraw(uint256 _pid, uint256 _amount) external nonReentrant {... */\n    tag_10:\n      tag_40\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"StackMining.sol\":1087:1112  uint256 public startBlock */\n    tag_11:\n      tag_44\n      sload(0x05)\n      dup2\n      jump\n        /* \"StackMining.sol\":7129:7552  function emergencyWithdraw(uint256 _pid) public nonReentrant {... */\n    tag_12:\n      tag_40\n      tag_75\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"StackMining.sol\":1290:1321  uint256 public poolLimitPerUser */\n    tag_13:\n      tag_44\n      sload(0x07)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_40\n      tag_81\n      jump\t// in\n        /* \"StackMining.sol\":8605:8693  function stopReward() external onlyOwner {... */\n    tag_15:\n      tag_40\n      tag_83\n      jump\t// in\n        /* \"StackMining.sol\":3120:4370  function initialize(... */\n    tag_16:\n      tag_40\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"StackMining.sol\":1392:1421  uint256 public rewardPerBlock */\n    tag_17:\n      tag_44\n      sload(0x08)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_91:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2610:2642   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2592:2643   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2580:2582   */\n      0x20\n        /* \"#utility.yul\":2565:2583   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_46\n        /* \"#utility.yul\":2446:2649   */\n      jump\n        /* \"StackMining.sol\":866:897  uint256 public accTokenPerShare */\n    tag_19:\n      tag_44\n      sload(0x03)\n      dup2\n      jump\n        /* \"StackMining.sol\":687:711  bool public hasUserLimit */\n    tag_20:\n      sload(0x02)\n      tag_59\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"StackMining.sol\":2531:2597  mapping (uint256 => mapping (address => UserInfo)) public userInfo */\n    tag_21:\n      tag_48\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      0x0d\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\n        /* \"StackMining.sol\":10033:10639  function updateStartAndEndBlocks(uint256 _startBlock, uint256 _bonusEndBlock) external onlyOwner {... */\n    tag_22:\n      tag_40\n      tag_107\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"StackMining.sol\":10812:11669  function pendingReward(uint256 _pid, address _user) external view returns (uint256) {... */\n    tag_23:\n      tag_44\n      tag_110\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"StackMining.sol\":8919:9394  function updatePoolLimitPerUser(bool _hasUserLimit, uint256 _poolLimitPerUser) external onlyOwner {... */\n    tag_24:\n      tag_40\n      tag_114\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n        /* \"StackMining.sol\":1193:1223  uint256 public lastRewardBlock */\n    tag_25:\n      tag_44\n      sload(0x06)\n      dup2\n      jump\n        /* \"StackMining.sol\":581:614  address public SMART_CHEF_FACTORY */\n    tag_26:\n      sload(0x02)\n      tag_91\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"StackMining.sol\":1653:1678  IBEP20 public stakedToken */\n    tag_27:\n      sload(0x0b)\n      tag_91\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"StackMining.sol\":1482:1513  uint256 public PRECISION_FACTOR */\n    tag_28:\n      tag_44\n      sload(0x09)\n      dup2\n      jump\n        /* \"StackMining.sol\":11677:11920  function getTotalShares()public view returns(uint256 totalShares){... */\n    tag_29:\n      tag_44\n      tag_131\n      jump\t// in\n        /* \"StackMining.sol\":4528:5777  function deposit(uint256 _pid,uint256 _amount) external nonReentrant {... */\n    tag_30:\n      tag_40\n      tag_134\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n      tag_40\n      tag_137\n      calldatasize\n      0x04\n      tag_138\n      jump\t// in\n    tag_137:\n      tag_139\n      jump\t// in\n        /* \"StackMining.sol\":1571:1596  IBEP20 public rewardToken */\n    tag_32:\n      sload(0x0a)\n      tag_91\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"StackMining.sol\":9549:9789  function updateRewardPerBlock(uint256 _rewardPerBlock) external onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"StackMining.sol\":9657:9667  startBlock */\n      sload(0x05)\n        /* \"StackMining.sol\":9642:9654  block.number */\n      number\n        /* \"StackMining.sol\":9642:9667  block.number < startBlock */\n      lt\n        /* \"StackMining.sol\":9634:9688  require(block.number < startBlock, \"Pool has started\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4088:4090   */\n      0x20\n        /* \"StackMining.sol\":9634:9688  require(block.number < startBlock, \"Pool has started\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4070:4091   */\n      mstore\n        /* \"#utility.yul\":4127:4129   */\n      0x10\n        /* \"#utility.yul\":4107:4125   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4100:4130   */\n      mstore\n      shl(0x82, 0x141bdbdb081a185cc81cdd185c9d1959)\n        /* \"#utility.yul\":4146:4164   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4139:4185   */\n      mstore\n        /* \"#utility.yul\":4202:4220   */\n      0x64\n      add\n        /* \"StackMining.sol\":9634:9688  require(block.number < startBlock, \"Pool has started\") */\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"StackMining.sol\":9699:9713  rewardPerBlock */\n      0x08\n        /* \"StackMining.sol\":9699:9731  rewardPerBlock = _rewardPerBlock */\n      dup2\n      swap1\n      sstore\n        /* \"StackMining.sol\":9747:9781  NewRewardPerBlock(_rewardPerBlock) */\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      dup2\n      dup2\n      mstore\n        /* \"StackMining.sol\":9747:9781  NewRewardPerBlock(_rewardPerBlock) */\n      0x0c4d677eef92893ac7ec52faf8140fc6c851ab4736302b4f3a89dfb20696a0df\n      swap1\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"StackMining.sol\":9747:9781  NewRewardPerBlock(_rewardPerBlock) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"StackMining.sol\":9549:9789  function updateRewardPerBlock(uint256 _rewardPerBlock) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"StackMining.sol\":2449:2475  PoolInfo[] public poolInfo */\n    tag_50:\n      0x0c\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap3\n      pop\n      dup4\n      jump\t// out\n        /* \"StackMining.sol\":7670:7812  function emergencyRewardWithdraw(uint256 _amount) external onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_155:\n        /* \"StackMining.sol\":7750:7761  rewardToken */\n      sload(0x0a)\n        /* \"StackMining.sol\":7750:7804  rewardToken.safeTransfer(address(msg.sender), _amount) */\n      tag_157\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StackMining.sol\":7750:7761  rewardToken */\n      and\n        /* \"StackMining.sol\":7783:7793  msg.sender */\n      caller\n        /* \"StackMining.sol\":7796:7803  _amount */\n      dup4\n        /* \"StackMining.sol\":7750:7774  rewardToken.safeTransfer */\n      tag_158\n        /* \"StackMining.sol\":7750:7804  rewardToken.safeTransfer(address(msg.sender), _amount) */\n      jump\t// in\n    tag_157:\n        /* \"StackMining.sol\":7670:7812  function emergencyRewardWithdraw(uint256 _amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"StackMining.sol\":8102:8515  function recoverWrongTokens(address _tokenAddress, uint256 _tokenAmount) external onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_160:\n        /* \"StackMining.sol\":8238:8249  stakedToken */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"StackMining.sol\":8213:8250  _tokenAddress != address(stakedToken) */\n      swap1\n      dup4\n      and\n      sub\n        /* \"StackMining.sol\":8205:8277  require(_tokenAddress != address(stakedToken), \"Cannot be staked token\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4433:4435   */\n      0x20\n        /* \"StackMining.sol\":8205:8277  require(_tokenAddress != address(stakedToken), \"Cannot be staked token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4415:4436   */\n      mstore\n        /* \"#utility.yul\":4472:4474   */\n      0x16\n        /* \"#utility.yul\":4452:4470   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4445:4475   */\n      mstore\n      shl(0x51, 0x21b0b73737ba1031329039ba30b5b2b2103a37b5b2b7)\n        /* \"#utility.yul\":4491:4509   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4484:4536   */\n      mstore\n        /* \"#utility.yul\":4553:4571   */\n      0x64\n      add\n        /* \"StackMining.sol\":8205:8277  require(_tokenAddress != address(stakedToken), \"Cannot be staked token\") */\n      tag_148\n        /* \"#utility.yul\":4231:4577   */\n      jump\n        /* \"StackMining.sol\":8205:8277  require(_tokenAddress != address(stakedToken), \"Cannot be staked token\") */\n    tag_162:\n        /* \"StackMining.sol\":8321:8332  rewardToken */\n      sload(0x0a)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"StackMining.sol\":8296:8333  _tokenAddress != address(rewardToken) */\n      swap1\n      dup4\n      and\n      sub\n        /* \"StackMining.sol\":8288:8360  require(_tokenAddress != address(rewardToken), \"Cannot be reward token\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4784:4786   */\n      0x20\n        /* \"StackMining.sol\":8288:8360  require(_tokenAddress != address(rewardToken), \"Cannot be reward token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4766:4787   */\n      mstore\n        /* \"#utility.yul\":4823:4825   */\n      0x16\n        /* \"#utility.yul\":4803:4821   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4796:4826   */\n      mstore\n      shl(0x51, 0x21b0b73737ba103132903932bbb0b932103a37b5b2b7)\n        /* \"#utility.yul\":4842:4860   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4835:4887   */\n      mstore\n        /* \"#utility.yul\":4904:4922   */\n      0x64\n      add\n        /* \"StackMining.sol\":8288:8360  require(_tokenAddress != address(rewardToken), \"Cannot be reward token\") */\n      tag_148\n        /* \"#utility.yul\":4582:4928   */\n      jump\n        /* \"StackMining.sol\":8288:8360  require(_tokenAddress != address(rewardToken), \"Cannot be reward token\") */\n    tag_165:\n        /* \"StackMining.sol\":8373:8442  IBEP20(_tokenAddress).safeTransfer(address(msg.sender), _tokenAmount) */\n      tag_168\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StackMining.sol\":8373:8407  IBEP20(_tokenAddress).safeTransfer */\n      dup4\n      and\n        /* \"StackMining.sol\":8416:8426  msg.sender */\n      caller\n        /* \"StackMining.sol\":8429:8441  _tokenAmount */\n      dup4\n        /* \"StackMining.sol\":8373:8407  IBEP20(_tokenAddress).safeTransfer */\n      tag_158\n        /* \"StackMining.sol\":8373:8442  IBEP20(_tokenAddress).safeTransfer(address(msg.sender), _tokenAmount) */\n      jump\t// in\n    tag_168:\n        /* \"StackMining.sol\":8460:8507  AdminTokenRecovery(_tokenAddress, _tokenAmount) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5125:5157   */\n      dup5\n      and\n        /* \"#utility.yul\":5107:5158   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5174:5192   */\n      dup2\n      add\n        /* \"#utility.yul\":5167:5201   */\n      dup4\n      swap1\n      mstore\n        /* \"StackMining.sol\":8460:8507  AdminTokenRecovery(_tokenAddress, _tokenAmount) */\n      0x74545154aac348a3eac92596bd1971957ca94795f4e954ec5f613b55fab78129\n      swap2\n        /* \"#utility.yul\":5080:5098   */\n      add\n        /* \"StackMining.sol\":8460:8507  AdminTokenRecovery(_tokenAddress, _tokenAmount) */\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"StackMining.sol\":8102:8515  function recoverWrongTokens(address _tokenAddress, uint256 _tokenAmount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"StackMining.sol\":5927:6988  function withdraw(uint256 _pid, uint256 _amount) external nonReentrant {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_172\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_173\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_172:\n        /* \"StackMining.sol\":6009:6030  UserInfo storage user */\n      0x00\n        /* \"StackMining.sol\":6033:6047  userInfo[_pid] */\n      dup3\n      dup2\n      mstore\n        /* \"StackMining.sol\":6033:6041  userInfo */\n      0x0d\n        /* \"StackMining.sol\":6033:6047  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"StackMining.sol\":6048:6058  msg.sender */\n      caller\n        /* \"StackMining.sol\":6033:6059  userInfo[_pid][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"StackMining.sol\":6078:6089  user.amount */\n      dup1\n      sload\n        /* \"StackMining.sol\":6078:6100  user.amount >= _amount */\n      dup3\n      gt\n      iszero\n        /* \"StackMining.sol\":6070:6138  require(user.amount >= _amount, \"BFLY: Amount to withdraw too high\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5414:5416   */\n      0x20\n        /* \"StackMining.sol\":6070:6138  require(user.amount >= _amount, \"BFLY: Amount to withdraw too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5396:5417   */\n      mstore\n        /* \"#utility.yul\":5453:5455   */\n      0x21\n        /* \"#utility.yul\":5433:5451   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5426:5456   */\n      mstore\n        /* \"#utility.yul\":5492:5526   */\n      0x42464c593a20416d6f756e7420746f20776974686472617720746f6f20686967\n        /* \"#utility.yul\":5472:5490   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5465:5527   */\n      mstore\n      shl(0xfb, 0x0d)\n        /* \"#utility.yul\":5543:5561   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5536:5567   */\n      mstore\n        /* \"#utility.yul\":5584:5603   */\n      0x84\n      add\n        /* \"StackMining.sol\":6070:6138  require(user.amount >= _amount, \"BFLY: Amount to withdraw too high\") */\n      tag_148\n        /* \"#utility.yul\":5212:5609   */\n      jump\n        /* \"StackMining.sol\":6070:6138  require(user.amount >= _amount, \"BFLY: Amount to withdraw too high\") */\n    tag_175:\n        /* \"StackMining.sol\":6149:6170  PoolInfo storage pool */\n      0x00\n        /* \"StackMining.sol\":6173:6181  poolInfo */\n      0x0c\n        /* \"StackMining.sol\":6182:6186  _pid */\n      dup5\n        /* \"StackMining.sol\":6173:6187  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_179\n      jumpi\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"StackMining.sol\":6149:6187  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"StackMining.sol\":6291:6306  block.timestamp */\n      timestamp\n        /* \"StackMining.sol\":6251:6288  user.lockStartTime.add(pool.duration) */\n      tag_182\n        /* \"StackMining.sol\":6274:6278  pool */\n      dup3\n        /* \"StackMining.sol\":6274:6287  pool.duration */\n      0x00\n      add\n      sload\n        /* \"StackMining.sol\":6251:6255  user */\n      dup5\n        /* \"StackMining.sol\":6251:6269  user.lockStartTime */\n      0x02\n      add\n      sload\n        /* \"StackMining.sol\":6251:6273  user.lockStartTime.add */\n      tag_183\n      swap1\n        /* \"StackMining.sol\":6251:6288  user.lockStartTime.add(pool.duration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_182:\n        /* \"StackMining.sol\":6251:6306  user.lockStartTime.add(pool.duration) < block.timestamp */\n      lt\n        /* \"StackMining.sol\":6247:6357  if (user.lockStartTime.add(pool.duration) < block.timestamp){... */\n      iszero\n      tag_185\n      jumpi\n        /* \"StackMining.sol\":6322:6345  emergencyWithdraw(_pid) */\n      tag_185\n        /* \"StackMining.sol\":6340:6344  _pid */\n      dup5\n        /* \"StackMining.sol\":6322:6339  emergencyWithdraw */\n      tag_76\n        /* \"StackMining.sol\":6322:6345  emergencyWithdraw(_pid) */\n      jump\t// in\n    tag_185:\n        /* \"StackMining.sol\":6369:6382  _updatePool() */\n      tag_186\n        /* \"StackMining.sol\":6369:6380  _updatePool */\n      tag_187\n        /* \"StackMining.sol\":6369:6382  _updatePool() */\n      jump\t// in\n    tag_186:\n        /* \"StackMining.sol\":6395:6410  uint256 pending */\n      0x00\n        /* \"StackMining.sol\":6413:6505  user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR).sub(user.rewardDebt) */\n      tag_188\n        /* \"StackMining.sol\":6489:6493  user */\n      dup4\n        /* \"StackMining.sol\":6489:6504  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"StackMining.sol\":6413:6484  user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR) */\n      tag_189\n        /* \"StackMining.sol\":6467:6483  PRECISION_FACTOR */\n      sload(0x09)\n        /* \"StackMining.sol\":6413:6462  user.amount.mul(pool.boost).mul(accTokenPerShare) */\n      tag_190\n        /* \"StackMining.sol\":6445:6461  accTokenPerShare */\n      sload(0x03)\n        /* \"StackMining.sol\":6413:6440  user.amount.mul(pool.boost) */\n      tag_191\n        /* \"StackMining.sol\":6429:6433  pool */\n      dup9\n        /* \"StackMining.sol\":6429:6439  pool.boost */\n      0x01\n      add\n      sload\n        /* \"StackMining.sol\":6413:6417  user */\n      dup11\n        /* \"StackMining.sol\":6413:6424  user.amount */\n      0x00\n      add\n      sload\n        /* \"StackMining.sol\":6413:6428  user.amount.mul */\n      tag_192\n      swap1\n        /* \"StackMining.sol\":6413:6440  user.amount.mul(pool.boost) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"StackMining.sol\":6413:6444  user.amount.mul(pool.boost).mul */\n      swap1\n      tag_192\n        /* \"StackMining.sol\":6413:6462  user.amount.mul(pool.boost).mul(accTokenPerShare) */\n      jump\t// in\n    tag_190:\n        /* \"StackMining.sol\":6413:6466  user.amount.mul(pool.boost).mul(accTokenPerShare).div */\n      swap1\n      tag_193\n        /* \"StackMining.sol\":6413:6484  user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR) */\n      jump\t// in\n    tag_189:\n        /* \"StackMining.sol\":6413:6488  user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR).sub */\n      swap1\n      tag_194\n        /* \"StackMining.sol\":6413:6505  user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR).sub(user.rewardDebt) */\n      jump\t// in\n    tag_188:\n        /* \"StackMining.sol\":6395:6505  uint256 pending = user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"StackMining.sol\":6522:6533  _amount > 0 */\n      dup4\n      iszero\n        /* \"StackMining.sol\":6518:6722  if (_amount > 0) {... */\n      tag_198\n      jumpi\n        /* \"StackMining.sol\":6564:6575  user.amount */\n      dup3\n      sload\n        /* \"StackMining.sol\":6564:6588  user.amount.sub(_amount) */\n      tag_196\n      swap1\n        /* \"StackMining.sol\":6580:6587  _amount */\n      dup6\n        /* \"StackMining.sol\":6564:6579  user.amount.sub */\n      tag_194\n        /* \"StackMining.sol\":6564:6588  user.amount.sub(_amount) */\n      jump\t// in\n    tag_196:\n        /* \"StackMining.sol\":6550:6588  user.amount = user.amount.sub(_amount) */\n      dup4\n      sstore\n        /* \"StackMining.sol\":6617:6628  pool.amount */\n      0x02\n      dup3\n      add\n      sload\n        /* \"StackMining.sol\":6617:6641  pool.amount.sub(_amount) */\n      tag_197\n      swap1\n        /* \"StackMining.sol\":6633:6640  _amount */\n      dup6\n        /* \"StackMining.sol\":6617:6632  pool.amount.sub */\n      tag_194\n        /* \"StackMining.sol\":6617:6641  pool.amount.sub(_amount) */\n      jump\t// in\n    tag_197:\n        /* \"StackMining.sol\":6603:6614  pool.amount */\n      0x02\n      dup4\n      add\n        /* \"StackMining.sol\":6603:6641  pool.amount = pool.amount.sub(_amount) */\n      sstore\n        /* \"StackMining.sol\":6656:6667  stakedToken */\n      sload(0x0b)\n        /* \"StackMining.sol\":6656:6710  stakedToken.safeTransfer(address(msg.sender), _amount) */\n      tag_198\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StackMining.sol\":6656:6667  stakedToken */\n      and\n        /* \"StackMining.sol\":6689:6699  msg.sender */\n      caller\n        /* \"StackMining.sol\":6702:6709  _amount */\n      dup7\n        /* \"StackMining.sol\":6656:6680  stakedToken.safeTransfer */\n      tag_158\n        /* \"StackMining.sol\":6656:6710  stakedToken.safeTransfer(address(msg.sender), _amount) */\n      jump\t// in\n    tag_198:\n        /* \"StackMining.sol\":6738:6749  pending > 0 */\n      dup1\n      iszero\n        /* \"StackMining.sol\":6734:6832  if (pending > 0) {... */\n      tag_200\n      jumpi\n        /* \"StackMining.sol\":6766:6777  rewardToken */\n      sload(0x0a)\n        /* \"StackMining.sol\":6766:6820  rewardToken.safeTransfer(address(msg.sender), pending) */\n      tag_200\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StackMining.sol\":6766:6777  rewardToken */\n      and\n        /* \"StackMining.sol\":6799:6809  msg.sender */\n      caller\n        /* \"StackMining.sol\":6812:6819  pending */\n      dup4\n        /* \"StackMining.sol\":6766:6790  rewardToken.safeTransfer */\n      tag_158\n        /* \"StackMining.sol\":6766:6820  rewardToken.safeTransfer(address(msg.sender), pending) */\n      jump\t// in\n    tag_200:\n        /* \"StackMining.sol\":6862:6933  user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR) */\n      tag_201\n        /* \"StackMining.sol\":6916:6932  PRECISION_FACTOR */\n      sload(0x09)\n        /* \"StackMining.sol\":6862:6911  user.amount.mul(pool.boost).mul(accTokenPerShare) */\n      tag_190\n        /* \"StackMining.sol\":6894:6910  accTokenPerShare */\n      sload(0x03)\n        /* \"StackMining.sol\":6862:6889  user.amount.mul(pool.boost) */\n      tag_191\n        /* \"StackMining.sol\":6878:6882  pool */\n      dup7\n        /* \"StackMining.sol\":6878:6888  pool.boost */\n      0x01\n      add\n      sload\n        /* \"StackMining.sol\":6862:6866  user */\n      dup9\n        /* \"StackMining.sol\":6862:6873  user.amount */\n      0x00\n      add\n      sload\n        /* \"StackMining.sol\":6862:6877  user.amount.mul */\n      tag_192\n      swap1\n        /* \"StackMining.sol\":6862:6889  user.amount.mul(pool.boost) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"StackMining.sol\":6862:6933  user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR) */\n    tag_201:\n        /* \"StackMining.sol\":6844:6859  user.rewardDebt */\n      0x01\n      dup5\n      add\n        /* \"StackMining.sol\":6844:6933  user.rewardDebt = user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR) */\n      sstore\n        /* \"StackMining.sol\":6951:6980  Withdraw(msg.sender, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      dup5\n      dup2\n      mstore\n        /* \"StackMining.sol\":6960:6970  msg.sender */\n      caller\n      swap1\n        /* \"StackMining.sol\":6951:6980  Withdraw(msg.sender, _amount) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n      swap1\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"StackMining.sol\":6951:6980  Withdraw(msg.sender, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"StackMining.sol\":5998:6988  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_205\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_205:\n        /* \"StackMining.sol\":5927:6988  function withdraw(uint256 _pid, uint256 _amount) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"StackMining.sol\":7129:7552  function emergencyWithdraw(uint256 _pid) public nonReentrant {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_208\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_173\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_208:\n        /* \"StackMining.sol\":7201:7222  UserInfo storage user */\n      0x00\n        /* \"StackMining.sol\":7225:7239  userInfo[_pid] */\n      dup2\n      dup2\n      mstore\n        /* \"StackMining.sol\":7225:7233  userInfo */\n      0x0d\n        /* \"StackMining.sol\":7225:7239  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"StackMining.sol\":7240:7250  msg.sender */\n      caller\n        /* \"StackMining.sol\":7225:7251  userInfo[_pid][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"StackMining.sol\":7289:7300  user.amount */\n      dup1\n      sload\n        /* \"StackMining.sol\":7311:7326  user.amount = 0 */\n      dup3\n      dup3\n      sstore\n      0x01\n        /* \"StackMining.sol\":7337:7352  user.rewardDebt */\n      dup3\n      add\n        /* \"StackMining.sol\":7337:7356  user.rewardDebt = 0 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"StackMining.sol\":7225:7251  userInfo[_pid][msg.sender] */\n      swap1\n        /* \"StackMining.sol\":7373:7393  amountToTransfer > 0 */\n      dup1\n      iszero\n        /* \"StackMining.sol\":7369:7485  if (amountToTransfer > 0) {... */\n      tag_211\n      jumpi\n        /* \"StackMining.sol\":7410:7421  stakedToken */\n      sload(0x0b)\n        /* \"StackMining.sol\":7410:7473  stakedToken.safeTransfer(address(msg.sender), amountToTransfer) */\n      tag_211\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StackMining.sol\":7410:7421  stakedToken */\n      and\n        /* \"StackMining.sol\":7443:7453  msg.sender */\n      caller\n        /* \"StackMining.sol\":7456:7472  amountToTransfer */\n      dup4\n        /* \"StackMining.sol\":7410:7434  stakedToken.safeTransfer */\n      tag_158\n        /* \"StackMining.sol\":7410:7473  stakedToken.safeTransfer(address(msg.sender), amountToTransfer) */\n      jump\t// in\n    tag_211:\n        /* \"StackMining.sol\":7532:7543  user.amount */\n      dup2\n      sload\n        /* \"StackMining.sol\":7502:7544  EmergencyWithdraw(msg.sender, user.amount) */\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"StackMining.sol\":7520:7530  msg.sender */\n      caller\n      swap1\n        /* \"StackMining.sol\":7502:7544  EmergencyWithdraw(msg.sender, user.amount) */\n      0x5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695\n      swap1\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"StackMining.sol\":7502:7544  EmergencyWithdraw(msg.sender, user.amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"StackMining.sol\":7190:7552  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_157\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"StackMining.sol\":8605:8693  function stopReward() external onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_220:\n        /* \"StackMining.sol\":8673:8685  block.number */\n      number\n        /* \"StackMining.sol\":8657:8670  bonusEndBlock */\n      0x04\n        /* \"StackMining.sol\":8657:8685  bonusEndBlock = block.number */\n      sstore\n        /* \"StackMining.sol\":8605:8693  function stopReward() external onlyOwner {... */\n      jump\t// out\n        /* \"StackMining.sol\":3120:4370  function initialize(... */\n    tag_87:\n        /* \"StackMining.sol\":3394:3407  isInitialized */\n      sload(0x02)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"StackMining.sol\":3393:3407  !isInitialized */\n      iszero\n        /* \"StackMining.sol\":3385:3430  require(!isInitialized, \"BFLY: ALREADY_INIT\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5948:5950   */\n      0x20\n        /* \"StackMining.sol\":3385:3430  require(!isInitialized, \"BFLY: ALREADY_INIT\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5930:5951   */\n      mstore\n        /* \"#utility.yul\":5987:5989   */\n      0x12\n        /* \"#utility.yul\":5967:5985   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5960:5990   */\n      mstore\n      shl(0x72, 0x109193164e881053149150511657d2539255)\n        /* \"#utility.yul\":6006:6024   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5999:6047   */\n      mstore\n        /* \"#utility.yul\":6064:6082   */\n      0x64\n      add\n        /* \"StackMining.sol\":3385:3430  require(!isInitialized, \"BFLY: ALREADY_INIT\") */\n      tag_148\n        /* \"#utility.yul\":5746:6088   */\n      jump\n        /* \"StackMining.sol\":3385:3430  require(!isInitialized, \"BFLY: ALREADY_INIT\") */\n    tag_223:\n        /* \"StackMining.sol\":3463:3481  SMART_CHEF_FACTORY */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"StackMining.sol\":3449:3459  msg.sender */\n      caller\n        /* \"StackMining.sol\":3449:3481  msg.sender == SMART_CHEF_FACTORY */\n      eq\n        /* \"StackMining.sol\":3441:3503  require(msg.sender == SMART_CHEF_FACTORY, \"BFLY: NOT_FACTORY\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6295:6297   */\n      0x20\n        /* \"StackMining.sol\":3441:3503  require(msg.sender == SMART_CHEF_FACTORY, \"BFLY: NOT_FACTORY\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6277:6298   */\n      mstore\n        /* \"#utility.yul\":6334:6336   */\n      0x11\n        /* \"#utility.yul\":6314:6332   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6307:6337   */\n      mstore\n      shl(0x78, 0x42464c593a204e4f545f464143544f5259)\n        /* \"#utility.yul\":6353:6371   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6346:6393   */\n      mstore\n        /* \"#utility.yul\":6410:6428   */\n      0x64\n      add\n        /* \"StackMining.sol\":3441:3503  require(msg.sender == SMART_CHEF_FACTORY, \"BFLY: NOT_FACTORY\") */\n      tag_148\n        /* \"#utility.yul\":6093:6434   */\n      jump\n        /* \"StackMining.sol\":3441:3503  require(msg.sender == SMART_CHEF_FACTORY, \"BFLY: NOT_FACTORY\") */\n    tag_226:\n        /* \"StackMining.sol\":3559:3572  isInitialized */\n      0x02\n        /* \"StackMining.sol\":3559:3579  isInitialized = true */\n      dup1\n      sload\n      not(shl(0xa8, 0xff))\n      and\n      shl(0xa8, 0x01)\n      or\n      swap1\n      sstore\n        /* \"StackMining.sol\":3592:3603  stakedToken */\n      0x0b\n        /* \"StackMining.sol\":3592:3618  stakedToken = _stakedToken */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup11\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"StackMining.sol\":3629:3640  rewardToken */\n      0x0a\n        /* \"StackMining.sol\":3629:3655  rewardToken = _rewardToken */\n      dup1\n      sload\n      swap3\n      dup10\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"StackMining.sol\":3666:3680  rewardPerBlock */\n      0x08\n        /* \"StackMining.sol\":3666:3698  rewardPerBlock = _rewardPerBlock */\n      dup6\n      swap1\n      sstore\n        /* \"StackMining.sol\":3709:3719  startBlock */\n      0x05\n        /* \"StackMining.sol\":3709:3733  startBlock = _startBlock */\n      dup5\n      swap1\n      sstore\n        /* \"StackMining.sol\":3744:3757  bonusEndBlock */\n      0x04\n        /* \"StackMining.sol\":3744:3774  bonusEndBlock = _bonusEndBlock */\n      dup4\n      swap1\n      sstore\n        /* \"StackMining.sol\":3791:3812  _poolLimitPerUser > 0 */\n      dup2\n      iszero\n        /* \"StackMining.sol\":3787:3911  if (_poolLimitPerUser > 0) {... */\n      tag_229\n      jumpi\n        /* \"StackMining.sol\":3829:3841  hasUserLimit */\n      0x02\n        /* \"StackMining.sol\":3829:3848  hasUserLimit = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"StackMining.sol\":3863:3879  poolLimitPerUser */\n      0x07\n        /* \"StackMining.sol\":3863:3899  poolLimitPerUser = _poolLimitPerUser */\n      dup3\n      swap1\n      sstore\n        /* \"StackMining.sol\":3787:3911  if (_poolLimitPerUser > 0) {... */\n    tag_229:\n        /* \"StackMining.sol\":3961:3972  rewardToken */\n      sload(0x0a)\n        /* \"StackMining.sol\":3961:3983  rewardToken.decimals() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"StackMining.sol\":3923:3950  uint256 decimalsRewardToken */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StackMining.sol\":3961:3972  rewardToken */\n      and\n      swap2\n        /* \"StackMining.sol\":3961:3981  rewardToken.decimals */\n      0x313ce567\n      swap2\n        /* \"StackMining.sol\":3961:3983  rewardToken.decimals() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"StackMining.sol\":3961:3972  rewardToken */\n      dup7\n        /* \"StackMining.sol\":3961:3983  rewardToken.decimals() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_231:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"StackMining.sol\":3953:3984  uint256(rewardToken.decimals()) */\n      0xff\n      and\n        /* \"StackMining.sol\":3923:3984  uint256 decimalsRewardToken = uint256(rewardToken.decimals()) */\n      swap1\n      pop\n        /* \"StackMining.sol\":4025:4027  30 */\n      0x1e\n        /* \"StackMining.sol\":4003:4022  decimalsRewardToken */\n      dup2\n        /* \"StackMining.sol\":4003:4027  decimalsRewardToken < 30 */\n      lt\n        /* \"StackMining.sol\":3995:4060  require(decimalsRewardToken < 30, \"BFLY: Must be inferior to 30\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6919:6921   */\n      0x20\n        /* \"StackMining.sol\":3995:4060  require(decimalsRewardToken < 30, \"BFLY: Must be inferior to 30\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6901:6922   */\n      mstore\n        /* \"#utility.yul\":6958:6960   */\n      0x1c\n        /* \"#utility.yul\":6938:6956   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6931:6961   */\n      mstore\n        /* \"#utility.yul\":6997:7027   */\n      0x42464c593a204d75737420626520696e666572696f7220746f20333000000000\n        /* \"#utility.yul\":6977:6995   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6970:7028   */\n      mstore\n        /* \"#utility.yul\":7045:7063   */\n      0x64\n      add\n        /* \"StackMining.sol\":3995:4060  require(decimalsRewardToken < 30, \"BFLY: Must be inferior to 30\") */\n      tag_148\n        /* \"#utility.yul\":6717:7069   */\n      jump\n        /* \"StackMining.sol\":3995:4060  require(decimalsRewardToken < 30, \"BFLY: Must be inferior to 30\") */\n    tag_234:\n        /* \"StackMining.sol\":4105:4141  uint256(30).sub(decimalsRewardToken) */\n      tag_237\n        /* \"StackMining.sol\":4113:4115  30 */\n      0x1e\n        /* \"StackMining.sol\":4121:4140  decimalsRewardToken */\n      dup3\n        /* \"StackMining.sol\":4105:4120  uint256(30).sub */\n      tag_194\n        /* \"StackMining.sol\":4105:4141  uint256(30).sub(decimalsRewardToken) */\n      jump\t// in\n    tag_237:\n        /* \"StackMining.sol\":4100:4142  10**(uint256(30).sub(decimalsRewardToken)) */\n      tag_238\n      swap1\n        /* \"StackMining.sol\":4100:4102  10 */\n      0x0a\n        /* \"StackMining.sol\":4100:4142  10**(uint256(30).sub(decimalsRewardToken)) */\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"StackMining.sol\":4073:4089  PRECISION_FACTOR */\n      0x09\n        /* \"StackMining.sol\":4073:4143  PRECISION_FACTOR = uint256(10**(uint256(30).sub(decimalsRewardToken))) */\n      sstore\n        /* \"StackMining.sol\":4228:4238  startBlock */\n      sload(0x05)\n        /* \"StackMining.sol\":4210:4225  lastRewardBlock */\n      0x06\n        /* \"StackMining.sol\":4210:4238  lastRewardBlock = startBlock */\n      sstore\n        /* \"StackMining.sol\":4337:4362  transferOwnership(_admin) */\n      tag_240\n        /* \"StackMining.sol\":4355:4361  _admin */\n      dup3\n        /* \"StackMining.sol\":4337:4354  transferOwnership */\n      tag_139\n        /* \"StackMining.sol\":4337:4362  transferOwnership(_admin) */\n      jump\t// in\n    tag_240:\n        /* \"StackMining.sol\":3374:4370  {... */\n      pop\n        /* \"StackMining.sol\":3120:4370  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"StackMining.sol\":10033:10639  function updateStartAndEndBlocks(uint256 _startBlock, uint256 _bonusEndBlock) external onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_243:\n        /* \"StackMining.sol\":10164:10174  startBlock */\n      sload(0x05)\n        /* \"StackMining.sol\":10149:10161  block.number */\n      number\n        /* \"StackMining.sol\":10149:10174  block.number < startBlock */\n      lt\n        /* \"StackMining.sol\":10141:10195  require(block.number < startBlock, \"Pool has started\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4088:4090   */\n      0x20\n        /* \"StackMining.sol\":10141:10195  require(block.number < startBlock, \"Pool has started\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4070:4091   */\n      mstore\n        /* \"#utility.yul\":4127:4129   */\n      0x10\n        /* \"#utility.yul\":4107:4125   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4100:4130   */\n      mstore\n      shl(0x82, 0x141bdbdb081a185cc81cdd185c9d1959)\n        /* \"#utility.yul\":4146:4164   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4139:4185   */\n      mstore\n        /* \"#utility.yul\":4202:4220   */\n      0x64\n      add\n        /* \"StackMining.sol\":10141:10195  require(block.number < startBlock, \"Pool has started\") */\n      tag_148\n        /* \"#utility.yul\":3886:4226   */\n      jump\n        /* \"StackMining.sol\":10141:10195  require(block.number < startBlock, \"Pool has started\") */\n    tag_245:\n        /* \"StackMining.sol\":10228:10242  _bonusEndBlock */\n      dup1\n        /* \"StackMining.sol\":10214:10225  _startBlock */\n      dup3\n        /* \"StackMining.sol\":10214:10242  _startBlock < _bonusEndBlock */\n      lt\n        /* \"StackMining.sol\":10206:10293  require(_startBlock < _bonusEndBlock, \"New startBlock must be lower than new endBlock\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8782:8784   */\n      0x20\n        /* \"StackMining.sol\":10206:10293  require(_startBlock < _bonusEndBlock, \"New startBlock must be lower than new endBlock\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8764:8785   */\n      mstore\n        /* \"#utility.yul\":8821:8823   */\n      0x2e\n        /* \"#utility.yul\":8801:8819   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8794:8824   */\n      mstore\n        /* \"#utility.yul\":8860:8894   */\n      0x4e6577207374617274426c6f636b206d757374206265206c6f77657220746861\n        /* \"#utility.yul\":8840:8858   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8833:8895   */\n      mstore\n      shl(0x90, 0x6e206e657720656e64426c6f636b)\n        /* \"#utility.yul\":8911:8929   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8904:8948   */\n      mstore\n        /* \"#utility.yul\":8965:8984   */\n      0x84\n      add\n        /* \"StackMining.sol\":10206:10293  require(_startBlock < _bonusEndBlock, \"New startBlock must be lower than new endBlock\") */\n      tag_148\n        /* \"#utility.yul\":8580:8990   */\n      jump\n        /* \"StackMining.sol\":10206:10293  require(_startBlock < _bonusEndBlock, \"New startBlock must be lower than new endBlock\") */\n    tag_247:\n        /* \"StackMining.sol\":10327:10338  _startBlock */\n      dup2\n        /* \"StackMining.sol\":10312:10324  block.number */\n      number\n        /* \"StackMining.sol\":10312:10338  block.number < _startBlock */\n      lt\n        /* \"StackMining.sol\":10304:10391  require(block.number < _startBlock, \"New startBlock must be higher than current block\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9197:9199   */\n      0x20\n        /* \"StackMining.sol\":10304:10391  require(block.number < _startBlock, \"New startBlock must be higher than current block\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9179:9200   */\n      mstore\n        /* \"#utility.yul\":9236:9238   */\n      0x30\n        /* \"#utility.yul\":9216:9234   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9209:9239   */\n      mstore\n        /* \"#utility.yul\":9275:9309   */\n      0x4e6577207374617274426c6f636b206d75737420626520686967686572207468\n        /* \"#utility.yul\":9255:9273   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9248:9310   */\n      mstore\n      shl(0x80, 0x616e2063757272656e7420626c6f636b)\n        /* \"#utility.yul\":9326:9344   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9319:9365   */\n      mstore\n        /* \"#utility.yul\":9382:9401   */\n      0x84\n      add\n        /* \"StackMining.sol\":10304:10391  require(block.number < _startBlock, \"New startBlock must be higher than current block\") */\n      tag_148\n        /* \"#utility.yul\":8995:9407   */\n      jump\n        /* \"StackMining.sol\":10304:10391  require(block.number < _startBlock, \"New startBlock must be higher than current block\") */\n    tag_250:\n        /* \"StackMining.sol\":10404:10414  startBlock */\n      0x05\n        /* \"StackMining.sol\":10404:10428  startBlock = _startBlock */\n      dup3\n      swap1\n      sstore\n        /* \"StackMining.sol\":10439:10452  bonusEndBlock */\n      0x04\n        /* \"StackMining.sol\":10439:10469  bonusEndBlock = _bonusEndBlock */\n      dup2\n      swap1\n      sstore\n        /* \"StackMining.sol\":10536:10551  lastRewardBlock */\n      0x06\n        /* \"StackMining.sol\":10536:10564  lastRewardBlock = startBlock */\n      dup3\n      swap1\n      sstore\n        /* \"StackMining.sol\":10582:10631  NewStartAndEndBlocks(_startBlock, _bonusEndBlock) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9586:9611   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":9642:9644   */\n      0x20\n        /* \"#utility.yul\":9627:9645   */\n      dup2\n      add\n        /* \"#utility.yul\":9620:9654   */\n      dup4\n      swap1\n      mstore\n        /* \"StackMining.sol\":10582:10631  NewStartAndEndBlocks(_startBlock, _bonusEndBlock) */\n      0x7cd0ab87d19036f3dfadadb232c78aa4879dda3f0c994a9d637532410ee2ce06\n      swap2\n        /* \"#utility.yul\":9559:9577   */\n      add\n        /* \"StackMining.sol\":10582:10631  NewStartAndEndBlocks(_startBlock, _bonusEndBlock) */\n      tag_169\n        /* \"#utility.yul\":9412:9660   */\n      jump\n        /* \"StackMining.sol\":10812:11669  function pendingReward(uint256 _pid, address _user) external view returns (uint256) {... */\n    tag_111:\n        /* \"StackMining.sol\":10887:10894  uint256 */\n      0x00\n        /* \"StackMining.sol\":10931:10945  userInfo[_pid] */\n      dup3\n      dup2\n      mstore\n        /* \"StackMining.sol\":10931:10939  userInfo */\n      0x0d\n        /* \"StackMining.sol\":10931:10945  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StackMining.sol\":10931:10952  userInfo[_pid][_user] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"StackMining.sol\":10987:10995  poolInfo */\n      0x0c\n        /* \"StackMining.sol\":10987:11001  poolInfo[_pid] */\n      dup1\n      sload\n        /* \"StackMining.sol\":10887:10894  uint256 */\n      dup4\n      swap2\n        /* \"StackMining.sol\":10987:10995  poolInfo */\n      swap1\n        /* \"StackMining.sol\":10940:10944  _pid */\n      dup7\n      swap1\n        /* \"StackMining.sol\":10987:11001  poolInfo[_pid] */\n      dup2\n      lt\n      tag_257\n      jumpi\n      tag_257\n      tag_180\n      jump\t// in\n    tag_257:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"StackMining.sol\":10963:11001  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"StackMining.sol\":11012:11031  uint256 totalShares */\n      0x00\n        /* \"StackMining.sol\":11034:11050  getTotalShares() */\n      tag_259\n        /* \"StackMining.sol\":11034:11048  getTotalShares */\n      tag_131\n        /* \"StackMining.sol\":11034:11050  getTotalShares() */\n      jump\t// in\n    tag_259:\n        /* \"StackMining.sol\":11012:11050  uint256 totalShares = getTotalShares() */\n      swap1\n      pop\n        /* \"StackMining.sol\":11080:11095  lastRewardBlock */\n      sload(0x06)\n        /* \"StackMining.sol\":11065:11077  block.number */\n      number\n        /* \"StackMining.sol\":11065:11095  block.number > lastRewardBlock */\n      gt\n        /* \"StackMining.sol\":11065:11115  block.number > lastRewardBlock && totalShares != 0 */\n      dup1\n      iszero\n      tag_260\n      jumpi\n      pop\n        /* \"StackMining.sol\":11099:11115  totalShares != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"StackMining.sol\":11065:11115  block.number > lastRewardBlock && totalShares != 0 */\n    tag_260:\n        /* \"StackMining.sol\":11061:11662  if (block.number > lastRewardBlock && totalShares != 0) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"StackMining.sol\":11132:11150  uint256 multiplier */\n      0x00\n        /* \"StackMining.sol\":11153:11198  _getMultiplier(lastRewardBlock, block.number) */\n      tag_262\n        /* \"StackMining.sol\":11168:11183  lastRewardBlock */\n      sload(0x06)\n        /* \"StackMining.sol\":11185:11197  block.number */\n      number\n        /* \"StackMining.sol\":11153:11167  _getMultiplier */\n      tag_263\n        /* \"StackMining.sol\":11153:11198  _getMultiplier(lastRewardBlock, block.number) */\n      jump\t// in\n    tag_262:\n        /* \"StackMining.sol\":11132:11198  uint256 multiplier = _getMultiplier(lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"StackMining.sol\":11213:11231  uint256 cakeReward */\n      0x00\n        /* \"StackMining.sol\":11234:11264  multiplier.mul(rewardPerBlock) */\n      tag_264\n        /* \"StackMining.sol\":11249:11263  rewardPerBlock */\n      sload(0x08)\n        /* \"StackMining.sol\":11234:11244  multiplier */\n      dup4\n        /* \"StackMining.sol\":11234:11248  multiplier.mul */\n      tag_192\n      swap1\n        /* \"StackMining.sol\":11234:11264  multiplier.mul(rewardPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"StackMining.sol\":11213:11264  uint256 cakeReward = multiplier.mul(rewardPerBlock) */\n      swap1\n      pop\n        /* \"StackMining.sol\":11279:11308  uint256 adjustedTokenPerShare */\n      0x00\n        /* \"StackMining.sol\":11328:11399  accTokenPerShare.add(cakeReward.mul(PRECISION_FACTOR).div(totalShares)) */\n      tag_265\n        /* \"StackMining.sol\":11349:11398  cakeReward.mul(PRECISION_FACTOR).div(totalShares) */\n      tag_266\n        /* \"StackMining.sol\":11386:11397  totalShares */\n      dup6\n        /* \"StackMining.sol\":11349:11381  cakeReward.mul(PRECISION_FACTOR) */\n      tag_190\n        /* \"StackMining.sol\":11364:11380  PRECISION_FACTOR */\n      sload(0x09)\n        /* \"StackMining.sol\":11349:11359  cakeReward */\n      dup7\n        /* \"StackMining.sol\":11349:11363  cakeReward.mul */\n      tag_192\n      swap1\n        /* \"StackMining.sol\":11349:11381  cakeReward.mul(PRECISION_FACTOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"StackMining.sol\":11349:11398  cakeReward.mul(PRECISION_FACTOR).div(totalShares) */\n    tag_266:\n        /* \"StackMining.sol\":11328:11344  accTokenPerShare */\n      sload(0x03)\n      swap1\n        /* \"StackMining.sol\":11328:11348  accTokenPerShare.add */\n      tag_183\n        /* \"StackMining.sol\":11328:11399  accTokenPerShare.add(cakeReward.mul(PRECISION_FACTOR).div(totalShares)) */\n      jump\t// in\n    tag_265:\n        /* \"StackMining.sol\":11279:11399  uint256 adjustedTokenPerShare =... */\n      swap1\n      pop\n        /* \"StackMining.sol\":11421:11518  user.amount.mul(pool.boost).mul(adjustedTokenPerShare).div(PRECISION_FACTOR).sub(user.rewardDebt) */\n      tag_268\n        /* \"StackMining.sol\":11502:11506  user */\n      dup7\n        /* \"StackMining.sol\":11502:11517  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"StackMining.sol\":11421:11497  user.amount.mul(pool.boost).mul(adjustedTokenPerShare).div(PRECISION_FACTOR) */\n      tag_189\n        /* \"StackMining.sol\":11480:11496  PRECISION_FACTOR */\n      sload(0x09)\n        /* \"StackMining.sol\":11421:11475  user.amount.mul(pool.boost).mul(adjustedTokenPerShare) */\n      tag_190\n        /* \"StackMining.sol\":11453:11474  adjustedTokenPerShare */\n      dup6\n        /* \"StackMining.sol\":11421:11448  user.amount.mul(pool.boost) */\n      tag_191\n        /* \"StackMining.sol\":11437:11441  pool */\n      dup12\n        /* \"StackMining.sol\":11437:11447  pool.boost */\n      0x01\n      add\n      sload\n        /* \"StackMining.sol\":11421:11425  user */\n      dup14\n        /* \"StackMining.sol\":11421:11432  user.amount */\n      0x00\n      add\n      sload\n        /* \"StackMining.sol\":11421:11436  user.amount.mul */\n      tag_192\n      swap1\n        /* \"StackMining.sol\":11421:11448  user.amount.mul(pool.boost) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"StackMining.sol\":11421:11518  user.amount.mul(pool.boost).mul(adjustedTokenPerShare).div(PRECISION_FACTOR).sub(user.rewardDebt) */\n    tag_268:\n        /* \"StackMining.sol\":11414:11518  return user.amount.mul(pool.boost).mul(adjustedTokenPerShare).div(PRECISION_FACTOR).sub(user.rewardDebt) */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_255)\n        /* \"StackMining.sol\":11061:11662  if (block.number > lastRewardBlock && totalShares != 0) {... */\n    tag_261:\n        /* \"StackMining.sol\":11558:11650  user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR).sub(user.rewardDebt) */\n      tag_273\n        /* \"StackMining.sol\":11634:11638  user */\n      dup4\n        /* \"StackMining.sol\":11634:11649  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"StackMining.sol\":11558:11629  user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR) */\n      tag_189\n        /* \"StackMining.sol\":11612:11628  PRECISION_FACTOR */\n      sload(0x09)\n        /* \"StackMining.sol\":11558:11607  user.amount.mul(pool.boost).mul(accTokenPerShare) */\n      tag_190\n        /* \"StackMining.sol\":11590:11606  accTokenPerShare */\n      sload(0x03)\n        /* \"StackMining.sol\":11558:11585  user.amount.mul(pool.boost) */\n      tag_191\n        /* \"StackMining.sol\":11574:11578  pool */\n      dup9\n        /* \"StackMining.sol\":11574:11584  pool.boost */\n      0x01\n      add\n      sload\n        /* \"StackMining.sol\":11558:11562  user */\n      dup11\n        /* \"StackMining.sol\":11558:11569  user.amount */\n      0x00\n      add\n      sload\n        /* \"StackMining.sol\":11558:11573  user.amount.mul */\n      tag_192\n      swap1\n        /* \"StackMining.sol\":11558:11585  user.amount.mul(pool.boost) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"StackMining.sol\":11558:11650  user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR).sub(user.rewardDebt) */\n    tag_273:\n        /* \"StackMining.sol\":11551:11650  return user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR).sub(user.rewardDebt) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"StackMining.sol\":10812:11669  function pendingReward(uint256 _pid, address _user) external view returns (uint256) {... */\n    tag_255:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"StackMining.sol\":8919:9394  function updatePoolLimitPerUser(bool _hasUserLimit, uint256 _poolLimitPerUser) external onlyOwner {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_278\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_278:\n        /* \"StackMining.sol\":9036:9048  hasUserLimit */\n      sload(0x02)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"StackMining.sol\":9028:9064  require(hasUserLimit, \"Must be set\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9867:9869   */\n      0x20\n        /* \"StackMining.sol\":9028:9064  require(hasUserLimit, \"Must be set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9849:9870   */\n      mstore\n        /* \"#utility.yul\":9906:9908   */\n      0x0b\n        /* \"#utility.yul\":9886:9904   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9879:9909   */\n      mstore\n      shl(0xaa, 0x135d5cdd081899481cd95d)\n        /* \"#utility.yul\":9925:9943   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9918:9959   */\n      mstore\n        /* \"#utility.yul\":9976:9994   */\n      0x64\n      add\n        /* \"StackMining.sol\":9028:9064  require(hasUserLimit, \"Must be set\") */\n      tag_148\n        /* \"#utility.yul\":9665:10000   */\n      jump\n        /* \"StackMining.sol\":9028:9064  require(hasUserLimit, \"Must be set\") */\n    tag_280:\n        /* \"StackMining.sol\":9079:9092  _hasUserLimit */\n      dup2\n        /* \"StackMining.sol\":9075:9341  if (_hasUserLimit) {... */\n      iszero\n      tag_283\n      jumpi\n        /* \"StackMining.sol\":9137:9153  poolLimitPerUser */\n      sload(0x07)\n        /* \"StackMining.sol\":9117:9134  _poolLimitPerUser */\n      dup2\n        /* \"StackMining.sol\":9117:9153  _poolLimitPerUser > poolLimitPerUser */\n      gt\n        /* \"StackMining.sol\":9109:9182  require(_poolLimitPerUser > poolLimitPerUser, \"New limit must be higher\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10207:10209   */\n      0x20\n        /* \"StackMining.sol\":9109:9182  require(_poolLimitPerUser > poolLimitPerUser, \"New limit must be higher\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10189:10210   */\n      mstore\n        /* \"#utility.yul\":10246:10248   */\n      0x18\n        /* \"#utility.yul\":10226:10244   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10219:10249   */\n      mstore\n        /* \"#utility.yul\":10285:10311   */\n      0x4e6577206c696d6974206d757374206265206869676865720000000000000000\n        /* \"#utility.yul\":10265:10283   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10258:10312   */\n      mstore\n        /* \"#utility.yul\":10329:10347   */\n      0x64\n      add\n        /* \"StackMining.sol\":9109:9182  require(_poolLimitPerUser > poolLimitPerUser, \"New limit must be higher\") */\n      tag_148\n        /* \"#utility.yul\":10005:10353   */\n      jump\n        /* \"StackMining.sol\":9109:9182  require(_poolLimitPerUser > poolLimitPerUser, \"New limit must be higher\") */\n    tag_284:\n        /* \"StackMining.sol\":9197:9213  poolLimitPerUser */\n      0x07\n        /* \"StackMining.sol\":9197:9233  poolLimitPerUser = _poolLimitPerUser */\n      dup2\n      swap1\n      sstore\n        /* \"StackMining.sol\":9075:9341  if (_hasUserLimit) {... */\n      jump(tag_287)\n    tag_283:\n        /* \"StackMining.sol\":9266:9278  hasUserLimit */\n      0x02\n        /* \"StackMining.sol\":9266:9294  hasUserLimit = _hasUserLimit */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      dup5\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      0x00\n        /* \"StackMining.sol\":9309:9325  poolLimitPerUser */\n      0x07\n        /* \"StackMining.sol\":9309:9329  poolLimitPerUser = 0 */\n      sstore\n        /* \"StackMining.sol\":9075:9341  if (_hasUserLimit) {... */\n    tag_287:\n        /* \"StackMining.sol\":9356:9386  NewPoolLimit(poolLimitPerUser) */\n      0x241f67ee5f41b7a5cabf911367329be7215900f602ebfc47f89dce2a6bcd847c\n        /* \"StackMining.sol\":9369:9385  poolLimitPerUser */\n      sload(0x07)\n        /* \"StackMining.sol\":9356:9386  NewPoolLimit(poolLimitPerUser) */\n      mload(0x40)\n      tag_169\n      swap2\n        /* \"#utility.yul\":345:370   */\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n      swap1\n        /* \"#utility.yul\":199:376   */\n      jump\n        /* \"StackMining.sol\":11677:11920  function getTotalShares()public view returns(uint256 totalShares){... */\n    tag_131:\n        /* \"StackMining.sol\":11722:11741  uint256 totalShares */\n      0x00\n      dup1\n        /* \"StackMining.sol\":11759:11913  for (uint256 pid = 0; pid < poolInfo.length; ++pid){... */\n    tag_290:\n        /* \"StackMining.sol\":11787:11795  poolInfo */\n      0x0c\n        /* \"StackMining.sol\":11787:11802  poolInfo.length */\n      sload\n        /* \"StackMining.sol\":11781:11802  pid < poolInfo.length */\n      dup2\n      lt\n        /* \"StackMining.sol\":11759:11913  for (uint256 pid = 0; pid < poolInfo.length; ++pid){... */\n      iszero\n      tag_291\n      jumpi\n        /* \"StackMining.sol\":11839:11901  totalShares.add(poolInfo[pid].amount.mul(poolInfo[pid].boost)) */\n      tag_293\n        /* \"StackMining.sol\":11855:11900  poolInfo[pid].amount.mul(poolInfo[pid].boost) */\n      tag_294\n        /* \"StackMining.sol\":11880:11888  poolInfo */\n      0x0c\n        /* \"StackMining.sol\":11889:11892  pid */\n      dup4\n        /* \"StackMining.sol\":11880:11893  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_296\n      jumpi\n      tag_296\n      tag_180\n      jump\t// in\n    tag_296:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"StackMining.sol\":11880:11899  poolInfo[pid].boost */\n      0x01\n      add\n      sload\n        /* \"StackMining.sol\":11855:11863  poolInfo */\n      0x0c\n        /* \"StackMining.sol\":11864:11867  pid */\n      dup5\n        /* \"StackMining.sol\":11855:11868  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_299\n      jumpi\n      tag_299\n      tag_180\n      jump\t// in\n    tag_299:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"StackMining.sol\":11855:11875  poolInfo[pid].amount */\n      0x02\n      add\n      sload\n        /* \"StackMining.sol\":11855:11879  poolInfo[pid].amount.mul */\n      tag_192\n      swap1\n        /* \"StackMining.sol\":11855:11900  poolInfo[pid].amount.mul(poolInfo[pid].boost) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_294:\n        /* \"StackMining.sol\":11839:11850  totalShares */\n      dup4\n      swap1\n        /* \"StackMining.sol\":11839:11854  totalShares.add */\n      tag_183\n        /* \"StackMining.sol\":11839:11901  totalShares.add(poolInfo[pid].amount.mul(poolInfo[pid].boost)) */\n      jump\t// in\n    tag_293:\n        /* \"StackMining.sol\":11825:11901  totalShares = totalShares.add(poolInfo[pid].amount.mul(poolInfo[pid].boost)) */\n      swap2\n      pop\n        /* \"StackMining.sol\":11804:11809  ++pid */\n      tag_301\n      dup2\n      tag_302\n      jump\t// in\n    tag_301:\n      swap1\n      pop\n        /* \"StackMining.sol\":11759:11913  for (uint256 pid = 0; pid < poolInfo.length; ++pid){... */\n      jump(tag_290)\n    tag_291:\n      pop\n        /* \"StackMining.sol\":11677:11920  function getTotalShares()public view returns(uint256 totalShares){... */\n      swap1\n      jump\t// out\n        /* \"StackMining.sol\":4528:5777  function deposit(uint256 _pid,uint256 _amount) external nonReentrant {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_304\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_173\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_304:\n        /* \"StackMining.sol\":4608:4629  UserInfo storage user */\n      0x00\n        /* \"StackMining.sol\":4632:4646  userInfo[_pid] */\n      dup3\n      dup2\n      mstore\n        /* \"StackMining.sol\":4632:4640  userInfo */\n      0x0d\n        /* \"StackMining.sol\":4632:4646  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"StackMining.sol\":4647:4657  msg.sender */\n      caller\n        /* \"StackMining.sol\":4632:4658  userInfo[_pid][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"StackMining.sol\":4693:4701  poolInfo */\n      0x0c\n        /* \"StackMining.sol\":4693:4707  poolInfo[_pid] */\n      dup1\n      sload\n        /* \"StackMining.sol\":4632:4658  userInfo[_pid][msg.sender] */\n      swap2\n      swap3\n        /* \"StackMining.sol\":4608:4629  UserInfo storage user */\n      swap2\n        /* \"StackMining.sol\":4641:4645  _pid */\n      dup6\n      swap1\n        /* \"StackMining.sol\":4693:4707  poolInfo[_pid] */\n      dup2\n      lt\n      tag_307\n      jumpi\n      tag_307\n      tag_180\n      jump\t// in\n    tag_307:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"StackMining.sol\":4669:4707  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"StackMining.sol\":4724:4736  hasUserLimit */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"StackMining.sol\":4720:4851  if (hasUserLimit) {... */\n      iszero\n      tag_311\n      jumpi\n        /* \"StackMining.sol\":4789:4805  poolLimitPerUser */\n      sload(0x07)\n        /* \"StackMining.sol\":4773:4784  user.amount */\n      dup3\n      sload\n        /* \"StackMining.sol\":4761:4785  _amount.add(user.amount) */\n      tag_310\n      swap1\n        /* \"StackMining.sol\":4761:4768  _amount */\n      dup6\n      swap1\n        /* \"StackMining.sol\":4761:4772  _amount.add */\n      tag_183\n        /* \"StackMining.sol\":4761:4785  _amount.add(user.amount) */\n      jump\t// in\n    tag_310:\n        /* \"StackMining.sol\":4761:4805  _amount.add(user.amount) <= poolLimitPerUser */\n      gt\n      iszero\n        /* \"StackMining.sol\":4753:4839  require(_amount.add(user.amount) <= poolLimitPerUser, \"BFLY: User amount above limit\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10700:10702   */\n      0x20\n        /* \"StackMining.sol\":4753:4839  require(_amount.add(user.amount) <= poolLimitPerUser, \"BFLY: User amount above limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10682:10703   */\n      mstore\n        /* \"#utility.yul\":10739:10741   */\n      0x1d\n        /* \"#utility.yul\":10719:10737   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10712:10742   */\n      mstore\n        /* \"#utility.yul\":10778:10809   */\n      0x42464c593a205573657220616d6f756e742061626f7665206c696d6974000000\n        /* \"#utility.yul\":10758:10776   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10751:10810   */\n      mstore\n        /* \"#utility.yul\":10827:10845   */\n      0x64\n      add\n        /* \"StackMining.sol\":4753:4839  require(_amount.add(user.amount) <= poolLimitPerUser, \"BFLY: User amount above limit\") */\n      tag_148\n        /* \"#utility.yul\":10498:10851   */\n      jump\n        /* \"StackMining.sol\":4753:4839  require(_amount.add(user.amount) <= poolLimitPerUser, \"BFLY: User amount above limit\") */\n    tag_311:\n        /* \"StackMining.sol\":4863:4876  _updatePool() */\n      tag_314\n        /* \"StackMining.sol\":4863:4874  _updatePool */\n      tag_187\n        /* \"StackMining.sol\":4863:4876  _updatePool() */\n      jump\t// in\n    tag_314:\n        /* \"StackMining.sol\":4893:4904  user.amount */\n      dup2\n      sload\n        /* \"StackMining.sol\":4893:4908  user.amount > 0 */\n      iszero\n        /* \"StackMining.sol\":4889:5387  if (user.amount > 0) {... */\n      tag_315\n      jumpi\n        /* \"StackMining.sol\":4954:4967  pool.duration */\n      dup1\n      sload\n        /* \"StackMining.sol\":4931:4949  user.lockStartTime */\n      0x02\n      dup4\n      add\n      sload\n        /* \"StackMining.sol\":4971:4986  block.timestamp */\n      timestamp\n      swap2\n        /* \"StackMining.sol\":4931:4968  user.lockStartTime.add(pool.duration) */\n      tag_316\n      swap2\n        /* \"StackMining.sol\":4931:4949  user.lockStartTime */\n      swap1\n        /* \"StackMining.sol\":4931:4953  user.lockStartTime.add */\n      tag_183\n        /* \"StackMining.sol\":4931:4968  user.lockStartTime.add(pool.duration) */\n      jump\t// in\n    tag_316:\n        /* \"StackMining.sol\":4931:4986  user.lockStartTime.add(pool.duration) > block.timestamp */\n      gt\n        /* \"StackMining.sol\":4927:5248  if (user.lockStartTime.add(pool.duration) > block.timestamp){... */\n      iszero\n      tag_317\n      jumpi\n        /* \"StackMining.sol\":5006:5021  uint256 pending */\n      0x00\n        /* \"StackMining.sol\":5024:5100  user.amount.mul(accTokenPerShare).div(PRECISION_FACTOR).sub(user.rewardDebt) */\n      tag_318\n        /* \"StackMining.sol\":5084:5088  user */\n      dup4\n        /* \"StackMining.sol\":5084:5099  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"StackMining.sol\":5024:5079  user.amount.mul(accTokenPerShare).div(PRECISION_FACTOR) */\n      tag_189\n        /* \"StackMining.sol\":5062:5078  PRECISION_FACTOR */\n      sload(0x09)\n        /* \"StackMining.sol\":5024:5057  user.amount.mul(accTokenPerShare) */\n      tag_190\n        /* \"StackMining.sol\":5040:5056  accTokenPerShare */\n      sload(0x03)\n        /* \"StackMining.sol\":5024:5028  user */\n      dup9\n        /* \"StackMining.sol\":5024:5035  user.amount */\n      0x00\n      add\n      sload\n        /* \"StackMining.sol\":5024:5039  user.amount.mul */\n      tag_192\n      swap1\n        /* \"StackMining.sol\":5024:5057  user.amount.mul(accTokenPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"StackMining.sol\":5024:5100  user.amount.mul(accTokenPerShare).div(PRECISION_FACTOR).sub(user.rewardDebt) */\n    tag_318:\n        /* \"StackMining.sol\":5006:5100  uint256 pending = user.amount.mul(accTokenPerShare).div(PRECISION_FACTOR).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"StackMining.sol\":5123:5134  pending > 0 */\n      dup1\n      iszero\n        /* \"StackMining.sol\":5119:5233  if (pending > 0) {... */\n      tag_322\n      jumpi\n        /* \"StackMining.sol\":5159:5170  rewardToken */\n      sload(0x0a)\n        /* \"StackMining.sol\":5159:5213  rewardToken.safeTransfer(address(msg.sender), pending) */\n      tag_322\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StackMining.sol\":5159:5170  rewardToken */\n      and\n        /* \"StackMining.sol\":5192:5202  msg.sender */\n      caller\n        /* \"StackMining.sol\":5205:5212  pending */\n      dup4\n        /* \"StackMining.sol\":5159:5183  rewardToken.safeTransfer */\n      tag_158\n        /* \"StackMining.sol\":5159:5213  rewardToken.safeTransfer(address(msg.sender), pending) */\n      jump\t// in\n    tag_322:\n        /* \"StackMining.sol\":4987:5248  {... */\n      pop\n        /* \"StackMining.sol\":4927:5248  if (user.lockStartTime.add(pool.duration) > block.timestamp){... */\n    tag_317:\n        /* \"StackMining.sol\":5360:5375  block.timestamp */\n      timestamp\n        /* \"StackMining.sol\":5339:5357  user.lockStartTime */\n      0x02\n      dup4\n      add\n        /* \"StackMining.sol\":5339:5375  user.lockStartTime = block.timestamp */\n      sstore\n        /* \"StackMining.sol\":4889:5387  if (user.amount > 0) {... */\n    tag_315:\n        /* \"StackMining.sol\":5403:5414  _amount > 0 */\n      dup3\n      iszero\n        /* \"StackMining.sol\":5399:5622  if (_amount > 0) {... */\n      tag_326\n      jumpi\n        /* \"StackMining.sol\":5445:5456  user.amount */\n      dup2\n      sload\n        /* \"StackMining.sol\":5445:5469  user.amount.add(_amount) */\n      tag_324\n      swap1\n        /* \"StackMining.sol\":5461:5468  _amount */\n      dup5\n        /* \"StackMining.sol\":5445:5460  user.amount.add */\n      tag_183\n        /* \"StackMining.sol\":5445:5469  user.amount.add(_amount) */\n      jump\t// in\n    tag_324:\n        /* \"StackMining.sol\":5431:5469  user.amount = user.amount.add(_amount) */\n      dup3\n      sstore\n        /* \"StackMining.sol\":5498:5509  pool.amount */\n      0x02\n      dup2\n      add\n      sload\n        /* \"StackMining.sol\":5498:5522  pool.amount.add(_amount) */\n      tag_325\n      swap1\n        /* \"StackMining.sol\":5514:5521  _amount */\n      dup5\n        /* \"StackMining.sol\":5498:5513  pool.amount.add */\n      tag_183\n        /* \"StackMining.sol\":5498:5522  pool.amount.add(_amount) */\n      jump\t// in\n    tag_325:\n        /* \"StackMining.sol\":5484:5495  pool.amount */\n      0x02\n      dup3\n      add\n        /* \"StackMining.sol\":5484:5522  pool.amount = pool.amount.add(_amount) */\n      sstore\n        /* \"StackMining.sol\":5537:5548  stakedToken */\n      sload(0x0b)\n        /* \"StackMining.sol\":5537:5610  stakedToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_326\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StackMining.sol\":5537:5548  stakedToken */\n      and\n        /* \"StackMining.sol\":5574:5584  msg.sender */\n      caller\n        /* \"StackMining.sol\":5595:5599  this */\n      address\n        /* \"StackMining.sol\":5602:5609  _amount */\n      dup7\n        /* \"StackMining.sol\":5537:5565  stakedToken.safeTransferFrom */\n      tag_327\n        /* \"StackMining.sol\":5537:5610  stakedToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      jump\t// in\n    tag_326:\n        /* \"StackMining.sol\":5652:5723  user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR) */\n      tag_328\n        /* \"StackMining.sol\":5706:5722  PRECISION_FACTOR */\n      sload(0x09)\n        /* \"StackMining.sol\":5652:5701  user.amount.mul(pool.boost).mul(accTokenPerShare) */\n      tag_190\n        /* \"StackMining.sol\":5684:5700  accTokenPerShare */\n      sload(0x03)\n        /* \"StackMining.sol\":5652:5679  user.amount.mul(pool.boost) */\n      tag_191\n        /* \"StackMining.sol\":5668:5672  pool */\n      dup6\n        /* \"StackMining.sol\":5668:5678  pool.boost */\n      0x01\n      add\n      sload\n        /* \"StackMining.sol\":5652:5656  user */\n      dup8\n        /* \"StackMining.sol\":5652:5663  user.amount */\n      0x00\n      add\n      sload\n        /* \"StackMining.sol\":5652:5667  user.amount.mul */\n      tag_192\n      swap1\n        /* \"StackMining.sol\":5652:5679  user.amount.mul(pool.boost) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"StackMining.sol\":5652:5723  user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR) */\n    tag_328:\n        /* \"StackMining.sol\":5634:5649  user.rewardDebt */\n      0x01\n      dup4\n      add\n        /* \"StackMining.sol\":5634:5723  user.rewardDebt = user.amount.mul(pool.boost).mul(accTokenPerShare).div(PRECISION_FACTOR) */\n      sstore\n        /* \"StackMining.sol\":5741:5769  Deposit(msg.sender, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      dup4\n      dup2\n      mstore\n        /* \"StackMining.sol\":5749:5759  msg.sender */\n      caller\n      swap1\n        /* \"StackMining.sol\":5741:5769  Deposit(msg.sender, _amount) */\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n      swap1\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"StackMining.sol\":5741:5769  Deposit(msg.sender, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"StackMining.sol\":4597:5777  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_205\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_334\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_334:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11058:11060   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11040:11061   */\n      mstore\n        /* \"#utility.yul\":11097:11099   */\n      0x26\n        /* \"#utility.yul\":11077:11095   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11070:11100   */\n      mstore\n        /* \"#utility.yul\":11136:11170   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11116:11134   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11109:11171   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":11187:11205   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11180:11216   */\n      mstore\n        /* \"#utility.yul\":11233:11252   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_148\n        /* \"#utility.yul\":10856:11258   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_336:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11465:11467   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11447:11468   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11484:11502   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11477:11507   */\n      mstore\n        /* \"#utility.yul\":11543:11577   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11523:11541   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11516:11578   */\n      mstore\n        /* \"#utility.yul\":11595:11613   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_148\n        /* \"#utility.yul\":11263:11619   */\n      jump\n        /* \"libraries/SafeBEP20.sol\":771:982  function safeTransfer(... */\n    tag_158:\n        /* \"libraries/SafeBEP20.sol\":915:973  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5125:5157   */\n      dup4\n      and\n        /* \"libraries/SafeBEP20.sol\":915:973  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5107:5158   */\n      mstore\n        /* \"#utility.yul\":5174:5192   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5167:5201   */\n      dup3\n      swap1\n      mstore\n        /* \"libraries/SafeBEP20.sol\":888:974  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_348\n      swap1\n        /* \"libraries/SafeBEP20.sol\":908:913  token */\n      dup5\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"libraries/SafeBEP20.sol\":938:961  token.transfer.selector */\n      swap1\n        /* \"#utility.yul\":5080:5098   */\n      0x64\n      add\n        /* \"libraries/SafeBEP20.sol\":915:973  abi.encodeWithSelector(token.transfer.selector, to, value) */\n    tag_349:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"libraries/SafeBEP20.sol\":888:907  _callOptionalReturn */\n      tag_350\n        /* \"libraries/SafeBEP20.sol\":888:974  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_348:\n        /* \"libraries/SafeBEP20.sol\":771:982  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_352\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11826:11828   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11808:11829   */\n      mstore\n        /* \"#utility.yul\":11865:11867   */\n      0x1f\n        /* \"#utility.yul\":11845:11863   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11838:11868   */\n      mstore\n        /* \"#utility.yul\":11904:11937   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":11884:11902   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11877:11938   */\n      mstore\n        /* \"#utility.yul\":11955:11973   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_148\n        /* \"#utility.yul\":11624:11979   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_352:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_356\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_357\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"StackMining.sol\":12021:12918  function _updatePool() internal {... */\n    tag_187:\n        /* \"StackMining.sol\":12084:12099  lastRewardBlock */\n      sload(0x06)\n        /* \"StackMining.sol\":12068:12080  block.number */\n      number\n        /* \"StackMining.sol\":12068:12099  block.number <= lastRewardBlock */\n      gt\n        /* \"StackMining.sol\":12064:12134  if (block.number <= lastRewardBlock) {... */\n      tag_359\n      jumpi\n        /* \"StackMining.sol\":12021:12918  function _updatePool() internal {... */\n      jump\t// out\n        /* \"StackMining.sol\":12064:12134  if (block.number <= lastRewardBlock) {... */\n    tag_359:\n        /* \"StackMining.sol\":12224:12243  uint256 totalShares */\n      0x00\n        /* \"StackMining.sol\":12246:12262  getTotalShares() */\n      tag_360\n        /* \"StackMining.sol\":12246:12260  getTotalShares */\n      tag_131\n        /* \"StackMining.sol\":12246:12262  getTotalShares() */\n      jump\t// in\n    tag_360:\n        /* \"StackMining.sol\":12224:12262  uint256 totalShares = getTotalShares() */\n      swap1\n      pop\n        /* \"StackMining.sol\":12532:12543  totalShares */\n      dup1\n        /* \"StackMining.sol\":12547:12548  0 */\n      0x00\n        /* \"StackMining.sol\":12532:12548  totalShares == 0 */\n      sub\n        /* \"StackMining.sol\":12528:12628  if (totalShares == 0) {... */\n      tag_361\n      jumpi\n      pop\n        /* \"StackMining.sol\":12583:12595  block.number */\n      number\n        /* \"StackMining.sol\":12565:12580  lastRewardBlock */\n      0x06\n        /* \"StackMining.sol\":12565:12595  lastRewardBlock = block.number */\n      sstore\n        /* \"StackMining.sol\":12021:12918  function _updatePool() internal {... */\n      jump\t// out\n        /* \"StackMining.sol\":12528:12628  if (totalShares == 0) {... */\n    tag_361:\n        /* \"StackMining.sol\":12640:12658  uint256 multiplier */\n      0x00\n        /* \"StackMining.sol\":12661:12706  _getMultiplier(lastRewardBlock, block.number) */\n      tag_362\n        /* \"StackMining.sol\":12676:12691  lastRewardBlock */\n      sload(0x06)\n        /* \"StackMining.sol\":12693:12705  block.number */\n      number\n        /* \"StackMining.sol\":12661:12675  _getMultiplier */\n      tag_263\n        /* \"StackMining.sol\":12661:12706  _getMultiplier(lastRewardBlock, block.number) */\n      jump\t// in\n    tag_362:\n        /* \"StackMining.sol\":12640:12706  uint256 multiplier = _getMultiplier(lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"StackMining.sol\":12717:12735  uint256 cakeReward */\n      0x00\n        /* \"StackMining.sol\":12738:12768  multiplier.mul(rewardPerBlock) */\n      tag_363\n        /* \"StackMining.sol\":12753:12767  rewardPerBlock */\n      sload(0x08)\n        /* \"StackMining.sol\":12738:12748  multiplier */\n      dup4\n        /* \"StackMining.sol\":12738:12752  multiplier.mul */\n      tag_192\n      swap1\n        /* \"StackMining.sol\":12738:12768  multiplier.mul(rewardPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_363:\n        /* \"StackMining.sol\":12717:12768  uint256 cakeReward = multiplier.mul(rewardPerBlock) */\n      swap1\n      pop\n        /* \"StackMining.sol\":12798:12869  accTokenPerShare.add(cakeReward.mul(PRECISION_FACTOR).div(totalShares)) */\n      tag_364\n        /* \"StackMining.sol\":12819:12868  cakeReward.mul(PRECISION_FACTOR).div(totalShares) */\n      tag_266\n        /* \"StackMining.sol\":12856:12867  totalShares */\n      dup5\n        /* \"StackMining.sol\":12819:12851  cakeReward.mul(PRECISION_FACTOR) */\n      tag_190\n        /* \"StackMining.sol\":12834:12850  PRECISION_FACTOR */\n      sload(0x09)\n        /* \"StackMining.sol\":12819:12829  cakeReward */\n      dup6\n        /* \"StackMining.sol\":12819:12833  cakeReward.mul */\n      tag_192\n      swap1\n        /* \"StackMining.sol\":12819:12851  cakeReward.mul(PRECISION_FACTOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"StackMining.sol\":12798:12869  accTokenPerShare.add(cakeReward.mul(PRECISION_FACTOR).div(totalShares)) */\n    tag_364:\n        /* \"StackMining.sol\":12779:12795  accTokenPerShare */\n      0x03\n        /* \"StackMining.sol\":12779:12869  accTokenPerShare = accTokenPerShare.add(cakeReward.mul(PRECISION_FACTOR).div(totalShares)) */\n      sstore\n      pop\n      pop\n        /* \"StackMining.sol\":12898:12910  block.number */\n      number\n        /* \"StackMining.sol\":12880:12895  lastRewardBlock */\n      0x06\n        /* \"StackMining.sol\":12880:12910  lastRewardBlock = block.number */\n      sstore\n      pop\n        /* \"StackMining.sol\":12021:12918  function _updatePool() internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_356\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_369\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_356\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_372\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_356\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_375\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"StackMining.sol\":13195:13504  function _getMultiplier(uint256 _from, uint256 _to) internal view returns (uint256) {... */\n    tag_263:\n        /* \"StackMining.sol\":13270:13277  uint256 */\n      0x00\n        /* \"StackMining.sol\":13301:13314  bonusEndBlock */\n      sload(0x04)\n        /* \"StackMining.sol\":13294:13297  _to */\n      dup3\n        /* \"StackMining.sol\":13294:13314  _to <= bonusEndBlock */\n      gt\n        /* \"StackMining.sol\":13290:13497  if (_to <= bonusEndBlock) {... */\n      tag_379\n      jumpi\n        /* \"StackMining.sol\":13338:13352  _to.sub(_from) */\n      tag_380\n        /* \"StackMining.sol\":13338:13341  _to */\n      dup3\n        /* \"StackMining.sol\":13346:13351  _from */\n      dup5\n        /* \"StackMining.sol\":13338:13345  _to.sub */\n      tag_194\n        /* \"StackMining.sol\":13338:13352  _to.sub(_from) */\n      jump\t// in\n    tag_380:\n        /* \"StackMining.sol\":13331:13352  return _to.sub(_from) */\n      swap1\n      pop\n      jump(tag_255)\n        /* \"StackMining.sol\":13290:13497  if (_to <= bonusEndBlock) {... */\n    tag_379:\n        /* \"StackMining.sol\":13383:13396  bonusEndBlock */\n      sload(0x04)\n        /* \"StackMining.sol\":13374:13379  _from */\n      dup4\n        /* \"StackMining.sol\":13374:13396  _from >= bonusEndBlock */\n      lt\n        /* \"StackMining.sol\":13370:13497  if (_from >= bonusEndBlock) {... */\n      tag_382\n      jumpi\n      pop\n        /* \"StackMining.sol\":13420:13421  0 */\n      0x00\n        /* \"StackMining.sol\":13413:13421  return 0 */\n      jump(tag_255)\n        /* \"StackMining.sol\":13370:13497  if (_from >= bonusEndBlock) {... */\n    tag_382:\n        /* \"StackMining.sol\":13461:13474  bonusEndBlock */\n      sload(0x04)\n        /* \"StackMining.sol\":13461:13485  bonusEndBlock.sub(_from) */\n      tag_380\n      swap1\n        /* \"StackMining.sol\":13479:13484  _from */\n      dup5\n        /* \"StackMining.sol\":13461:13478  bonusEndBlock.sub */\n      tag_194\n        /* \"StackMining.sol\":13461:13485  bonusEndBlock.sub(_from) */\n      jump\t// in\n        /* \"libraries/SafeBEP20.sol\":990:1238  function safeTransferFrom(... */\n    tag_327:\n        /* \"libraries/SafeBEP20.sol\":1161:1229  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12900:12915   */\n      dup1\n      dup6\n      and\n        /* \"libraries/SafeBEP20.sol\":1161:1229  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":12882:12916   */\n      mstore\n        /* \"#utility.yul\":12952:12967   */\n      dup4\n      and\n        /* \"#utility.yul\":12932:12950   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12925:12968   */\n      mstore\n        /* \"#utility.yul\":12984:13002   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":12977:13011   */\n      dup3\n      swap1\n      mstore\n        /* \"libraries/SafeBEP20.sol\":1134:1230  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_386\n      swap1\n        /* \"libraries/SafeBEP20.sol\":1154:1159  token */\n      dup6\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"libraries/SafeBEP20.sol\":1184:1211  token.transferFrom.selector */\n      swap1\n        /* \"#utility.yul\":12817:12835   */\n      0x84\n      add\n        /* \"libraries/SafeBEP20.sol\":1161:1229  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      tag_349\n        /* \"#utility.yul\":12642:13017   */\n      jump\n        /* \"libraries/SafeBEP20.sol\":1134:1230  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n    tag_386:\n        /* \"libraries/SafeBEP20.sol\":990:1238  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeBEP20.sol\":3282:4056  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n    tag_350:\n        /* \"libraries/SafeBEP20.sol\":3706:3729  bytes memory returndata */\n      0x00\n        /* \"libraries/SafeBEP20.sol\":3732:3801  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_391\n        /* \"libraries/SafeBEP20.sol\":3760:3764  data */\n      dup3\n        /* \"libraries/SafeBEP20.sol\":3732:3801  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"libraries/SafeBEP20.sol\":3740:3745  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"libraries/SafeBEP20.sol\":3732:3759  address(token).functionCall */\n      and\n      tag_392\n      swap1\n        /* \"libraries/SafeBEP20.sol\":3732:3801  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_391:\n        /* \"libraries/SafeBEP20.sol\":3816:3833  returndata.length */\n      dup1\n      mload\n        /* \"libraries/SafeBEP20.sol\":3706:3801  bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"libraries/SafeBEP20.sol\":3816:3837  returndata.length > 0 */\n      iszero\n        /* \"libraries/SafeBEP20.sol\":3812:4049  if (returndata.length > 0) {... */\n      tag_348\n      jumpi\n        /* \"libraries/SafeBEP20.sol\":3971:3981  returndata */\n      dup1\n        /* \"libraries/SafeBEP20.sol\":3960:3990  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_394\n      swap2\n      swap1\n      tag_395\n      jump\t// in\n    tag_394:\n        /* \"libraries/SafeBEP20.sol\":3952:4037  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13474:13476   */\n      0x20\n        /* \"libraries/SafeBEP20.sol\":3952:4037  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13456:13477   */\n      mstore\n        /* \"#utility.yul\":13513:13515   */\n      0x2a\n        /* \"#utility.yul\":13493:13511   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13486:13516   */\n      mstore\n        /* \"#utility.yul\":13552:13586   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":13532:13550   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13525:13587   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":13603:13621   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13596:13636   */\n      mstore\n        /* \"#utility.yul\":13653:13672   */\n      0x84\n      add\n        /* \"libraries/SafeBEP20.sol\":3952:4037  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_148\n        /* \"#utility.yul\":13272:13678   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n    tag_392:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4006:4018  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_400\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4059:4065  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4067:4071  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4073:4074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4076:4088  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4058  functionCallWithValue */\n      tag_401\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_400:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4030:4089  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n    tag_401:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5125:5137  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5182:5187  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5178  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5187  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_403\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13885:13887   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13867:13888   */\n      mstore\n        /* \"#utility.yul\":13924:13926   */\n      0x26\n        /* \"#utility.yul\":13904:13922   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13897:13927   */\n      mstore\n        /* \"#utility.yul\":13963:13997   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":13943:13961   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13936:13998   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":14014:14032   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14007:14043   */\n      mstore\n        /* \"#utility.yul\":14060:14079   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_148\n        /* \"#utility.yul\":13683:14085   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_403:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5241:5253  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5255:5278  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5288  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5293  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5301:5306  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5308:5312  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5313  target.call{value: value}(data) */\n      mload(0x40)\n      tag_406\n      swap2\n      swap1\n      tag_407\n      jump\t// in\n    tag_406:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_410\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_409)\n    tag_410:\n      0x60\n      swap2\n      pop\n    tag_409:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5240:5313  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_411\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5357:5363  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5365:5372  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5374:5384  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5386:5398  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5356  verifyCallResultFromTarget */\n      tag_412\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_411:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5323:5399  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_412:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7646:7658  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7674:7681  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n      iszero\n      tag_414\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7711  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7718  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7723  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7723  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n      tag_418\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_418\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14839:14841   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14821:14842   */\n      mstore\n        /* \"#utility.yul\":14878:14880   */\n      0x1d\n        /* \"#utility.yul\":14858:14876   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14851:14881   */\n      mstore\n        /* \"#utility.yul\":14917:14948   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":14897:14915   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14890:14949   */\n      mstore\n        /* \"#utility.yul\":14966:14984   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_148\n        /* \"#utility.yul\":14637:14990   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n    tag_418:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8003:8013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7996:8013  return returndata */\n      jump(tag_400)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n    tag_414:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      tag_400\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8052:8062  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8076  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8792  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8796  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n      tag_426\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9003:9013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8997:9014  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9059:9074  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9046:9056  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9042:9044  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9038:9057  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9031:9075  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n    tag_426:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9126:9138  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9119:9139  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap2\n      swap1\n      tag_429\n      jump\t// in\n        /* \"#utility.yul\":14:194   */\n    tag_42:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_438:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1028   */\n    tag_430:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":972:1003   */\n      dup2\n      and\n        /* \"#utility.yul\":962:1004   */\n      dup2\n      eq\n        /* \"#utility.yul\":952:1022   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1018:1019   */\n      0x00\n        /* \"#utility.yul\":1015:1016   */\n      dup1\n        /* \"#utility.yul\":1008:1020   */\n      revert\n        /* \"#utility.yul\":1033:1348   */\n    tag_65:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1109:1115   */\n      dup1\n        /* \"#utility.yul\":1162:1164   */\n      0x40\n        /* \"#utility.yul\":1150:1159   */\n      dup4\n        /* \"#utility.yul\":1141:1148   */\n      dup6\n        /* \"#utility.yul\":1137:1160   */\n      sub\n        /* \"#utility.yul\":1133:1165   */\n      slt\n        /* \"#utility.yul\":1130:1182   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":1178:1179   */\n      0x00\n        /* \"#utility.yul\":1175:1176   */\n      dup1\n        /* \"#utility.yul\":1168:1180   */\n      revert\n        /* \"#utility.yul\":1130:1182   */\n    tag_445:\n        /* \"#utility.yul\":1217:1226   */\n      dup3\n        /* \"#utility.yul\":1204:1227   */\n      calldataload\n        /* \"#utility.yul\":1236:1267   */\n      tag_446\n        /* \"#utility.yul\":1261:1266   */\n      dup2\n        /* \"#utility.yul\":1236:1267   */\n      tag_430\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":1286:1291   */\n      swap5\n        /* \"#utility.yul\":1338:1340   */\n      0x20\n        /* \"#utility.yul\":1323:1341   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1310:1342   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1033:1348   */\n      jump\t// out\n        /* \"#utility.yul\":1353:1601   */\n    tag_69:\n        /* \"#utility.yul\":1421:1427   */\n      0x00\n        /* \"#utility.yul\":1429:1435   */\n      dup1\n        /* \"#utility.yul\":1482:1484   */\n      0x40\n        /* \"#utility.yul\":1470:1479   */\n      dup4\n        /* \"#utility.yul\":1461:1468   */\n      dup6\n        /* \"#utility.yul\":1457:1480   */\n      sub\n        /* \"#utility.yul\":1453:1485   */\n      slt\n        /* \"#utility.yul\":1450:1502   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":1498:1499   */\n      0x00\n        /* \"#utility.yul\":1495:1496   */\n      dup1\n        /* \"#utility.yul\":1488:1500   */\n      revert\n        /* \"#utility.yul\":1450:1502   */\n    tag_448:\n      pop\n      pop\n        /* \"#utility.yul\":1521:1544   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1591:1593   */\n      0x20\n        /* \"#utility.yul\":1576:1594   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1563:1595   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1353:1601   */\n      jump\t// out\n        /* \"#utility.yul\":1606:2441   */\n    tag_86:\n        /* \"#utility.yul\":1749:1755   */\n      0x00\n        /* \"#utility.yul\":1757:1763   */\n      dup1\n        /* \"#utility.yul\":1765:1771   */\n      0x00\n        /* \"#utility.yul\":1773:1779   */\n      dup1\n        /* \"#utility.yul\":1781:1787   */\n      0x00\n        /* \"#utility.yul\":1789:1795   */\n      dup1\n        /* \"#utility.yul\":1797:1803   */\n      0x00\n        /* \"#utility.yul\":1850:1853   */\n      0xe0\n        /* \"#utility.yul\":1838:1847   */\n      dup9\n        /* \"#utility.yul\":1829:1836   */\n      dup11\n        /* \"#utility.yul\":1825:1848   */\n      sub\n        /* \"#utility.yul\":1821:1854   */\n      slt\n        /* \"#utility.yul\":1818:1871   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":1867:1868   */\n      0x00\n        /* \"#utility.yul\":1864:1865   */\n      dup1\n        /* \"#utility.yul\":1857:1869   */\n      revert\n        /* \"#utility.yul\":1818:1871   */\n    tag_450:\n        /* \"#utility.yul\":1906:1915   */\n      dup8\n        /* \"#utility.yul\":1893:1916   */\n      calldataload\n        /* \"#utility.yul\":1925:1956   */\n      tag_451\n        /* \"#utility.yul\":1950:1955   */\n      dup2\n        /* \"#utility.yul\":1925:1956   */\n      tag_430\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":1975:1980   */\n      swap7\n      pop\n        /* \"#utility.yul\":2032:2034   */\n      0x20\n        /* \"#utility.yul\":2017:2035   */\n      dup9\n      add\n        /* \"#utility.yul\":2004:2036   */\n      calldataload\n        /* \"#utility.yul\":2045:2078   */\n      tag_452\n        /* \"#utility.yul\":2004:2036   */\n      dup2\n        /* \"#utility.yul\":2045:2078   */\n      tag_430\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":2097:2104   */\n      swap6\n      pop\n        /* \"#utility.yul\":2151:2153   */\n      0x40\n        /* \"#utility.yul\":2136:2154   */\n      dup9\n      add\n        /* \"#utility.yul\":2123:2155   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":2202:2204   */\n      0x60\n        /* \"#utility.yul\":2187:2205   */\n      dup9\n      add\n        /* \"#utility.yul\":2174:2206   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":2253:2256   */\n      0x80\n        /* \"#utility.yul\":2238:2257   */\n      dup9\n      add\n        /* \"#utility.yul\":2225:2258   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":2305:2308   */\n      0xa0\n        /* \"#utility.yul\":2290:2309   */\n      dup9\n      add\n        /* \"#utility.yul\":2277:2310   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2362:2365   */\n      0xc0\n        /* \"#utility.yul\":2347:2366   */\n      dup9\n      add\n        /* \"#utility.yul\":2334:2367   */\n      calldataload\n        /* \"#utility.yul\":2376:2409   */\n      tag_453\n        /* \"#utility.yul\":2334:2367   */\n      dup2\n        /* \"#utility.yul\":2376:2409   */\n      tag_430\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":2428:2435   */\n      dup1\n        /* \"#utility.yul\":2418:2435   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1606:2441   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2654:2969   */\n    tag_103:\n        /* \"#utility.yul\":2722:2728   */\n      0x00\n        /* \"#utility.yul\":2730:2736   */\n      dup1\n        /* \"#utility.yul\":2783:2785   */\n      0x40\n        /* \"#utility.yul\":2771:2780   */\n      dup4\n        /* \"#utility.yul\":2762:2769   */\n      dup6\n        /* \"#utility.yul\":2758:2781   */\n      sub\n        /* \"#utility.yul\":2754:2786   */\n      slt\n        /* \"#utility.yul\":2751:2803   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":2799:2800   */\n      0x00\n        /* \"#utility.yul\":2796:2797   */\n      dup1\n        /* \"#utility.yul\":2789:2801   */\n      revert\n        /* \"#utility.yul\":2751:2803   */\n    tag_456:\n        /* \"#utility.yul\":2835:2844   */\n      dup3\n        /* \"#utility.yul\":2822:2845   */\n      calldataload\n        /* \"#utility.yul\":2812:2845   */\n      swap2\n      pop\n        /* \"#utility.yul\":2895:2897   */\n      0x20\n        /* \"#utility.yul\":2884:2893   */\n      dup4\n        /* \"#utility.yul\":2880:2898   */\n      add\n        /* \"#utility.yul\":2867:2899   */\n      calldataload\n        /* \"#utility.yul\":2908:2939   */\n      tag_457\n        /* \"#utility.yul\":2933:2938   */\n      dup2\n        /* \"#utility.yul\":2908:2939   */\n      tag_430\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":2958:2963   */\n      dup1\n        /* \"#utility.yul\":2948:2963   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2654:2969   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2974:3092   */\n    tag_431:\n        /* \"#utility.yul\":3060:3065   */\n      dup1\n        /* \"#utility.yul\":3053:3066   */\n      iszero\n        /* \"#utility.yul\":3046:3067   */\n      iszero\n        /* \"#utility.yul\":3039:3044   */\n      dup2\n        /* \"#utility.yul\":3036:3068   */\n      eq\n        /* \"#utility.yul\":3026:3086   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":3082:3083   */\n      0x00\n        /* \"#utility.yul\":3079:3080   */\n      dup1\n        /* \"#utility.yul\":3072:3084   */\n      revert\n        /* \"#utility.yul\":3097:3406   */\n    tag_115:\n        /* \"#utility.yul\":3162:3168   */\n      0x00\n        /* \"#utility.yul\":3170:3176   */\n      dup1\n        /* \"#utility.yul\":3223:3225   */\n      0x40\n        /* \"#utility.yul\":3211:3220   */\n      dup4\n        /* \"#utility.yul\":3202:3209   */\n      dup6\n        /* \"#utility.yul\":3198:3221   */\n      sub\n        /* \"#utility.yul\":3194:3226   */\n      slt\n        /* \"#utility.yul\":3191:3243   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":3239:3240   */\n      0x00\n        /* \"#utility.yul\":3236:3237   */\n      dup1\n        /* \"#utility.yul\":3229:3241   */\n      revert\n        /* \"#utility.yul\":3191:3243   */\n    tag_461:\n        /* \"#utility.yul\":3278:3287   */\n      dup3\n        /* \"#utility.yul\":3265:3288   */\n      calldataload\n        /* \"#utility.yul\":3297:3325   */\n      tag_446\n        /* \"#utility.yul\":3319:3324   */\n      dup2\n        /* \"#utility.yul\":3297:3325   */\n      tag_431\n      jump\t// in\n        /* \"#utility.yul\":3634:3881   */\n    tag_138:\n        /* \"#utility.yul\":3693:3699   */\n      0x00\n        /* \"#utility.yul\":3746:3748   */\n      0x20\n        /* \"#utility.yul\":3734:3743   */\n      dup3\n        /* \"#utility.yul\":3725:3732   */\n      dup5\n        /* \"#utility.yul\":3721:3744   */\n      sub\n        /* \"#utility.yul\":3717:3749   */\n      slt\n        /* \"#utility.yul\":3714:3766   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":3762:3763   */\n      0x00\n        /* \"#utility.yul\":3759:3760   */\n      dup1\n        /* \"#utility.yul\":3752:3764   */\n      revert\n        /* \"#utility.yul\":3714:3766   */\n    tag_465:\n        /* \"#utility.yul\":3801:3810   */\n      dup2\n        /* \"#utility.yul\":3788:3811   */\n      calldataload\n        /* \"#utility.yul\":3820:3851   */\n      tag_356\n        /* \"#utility.yul\":3845:3850   */\n      dup2\n        /* \"#utility.yul\":3820:3851   */\n      tag_430\n      jump\t// in\n        /* \"#utility.yul\":5614:5741   */\n    tag_180:\n        /* \"#utility.yul\":5675:5685   */\n      0x4e487b71\n        /* \"#utility.yul\":5670:5673   */\n      0xe0\n        /* \"#utility.yul\":5666:5686   */\n      shl\n        /* \"#utility.yul\":5663:5664   */\n      0x00\n        /* \"#utility.yul\":5656:5687   */\n      mstore\n        /* \"#utility.yul\":5706:5710   */\n      0x32\n        /* \"#utility.yul\":5703:5704   */\n      0x04\n        /* \"#utility.yul\":5696:5711   */\n      mstore\n        /* \"#utility.yul\":5730:5734   */\n      0x24\n        /* \"#utility.yul\":5727:5728   */\n      0x00\n        /* \"#utility.yul\":5720:5735   */\n      revert\n        /* \"#utility.yul\":6439:6712   */\n    tag_233:\n        /* \"#utility.yul\":6507:6513   */\n      0x00\n        /* \"#utility.yul\":6560:6562   */\n      0x20\n        /* \"#utility.yul\":6548:6557   */\n      dup3\n        /* \"#utility.yul\":6539:6546   */\n      dup5\n        /* \"#utility.yul\":6535:6558   */\n      sub\n        /* \"#utility.yul\":6531:6563   */\n      slt\n        /* \"#utility.yul\":6528:6580   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":6576:6577   */\n      0x00\n        /* \"#utility.yul\":6573:6574   */\n      dup1\n        /* \"#utility.yul\":6566:6578   */\n      revert\n        /* \"#utility.yul\":6528:6580   */\n    tag_476:\n        /* \"#utility.yul\":6608:6617   */\n      dup2\n        /* \"#utility.yul\":6602:6618   */\n      mload\n        /* \"#utility.yul\":6658:6662   */\n      0xff\n        /* \"#utility.yul\":6651:6656   */\n      dup2\n        /* \"#utility.yul\":6647:6663   */\n      and\n        /* \"#utility.yul\":6640:6645   */\n      dup2\n        /* \"#utility.yul\":6637:6664   */\n      eq\n        /* \"#utility.yul\":6627:6682   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":6678:6679   */\n      0x00\n        /* \"#utility.yul\":6675:6676   */\n      dup1\n        /* \"#utility.yul\":6668:6680   */\n      revert\n        /* \"#utility.yul\":7074:7201   */\n    tag_432:\n        /* \"#utility.yul\":7135:7145   */\n      0x4e487b71\n        /* \"#utility.yul\":7130:7133   */\n      0xe0\n        /* \"#utility.yul\":7126:7146   */\n      shl\n        /* \"#utility.yul\":7123:7124   */\n      0x00\n        /* \"#utility.yul\":7116:7147   */\n      mstore\n        /* \"#utility.yul\":7166:7170   */\n      0x11\n        /* \"#utility.yul\":7163:7164   */\n      0x04\n        /* \"#utility.yul\":7156:7171   */\n      mstore\n        /* \"#utility.yul\":7190:7194   */\n      0x24\n        /* \"#utility.yul\":7187:7188   */\n      0x00\n        /* \"#utility.yul\":7180:7195   */\n      revert\n        /* \"#utility.yul\":7206:7628   */\n    tag_433:\n        /* \"#utility.yul\":7295:7296   */\n      0x01\n        /* \"#utility.yul\":7338:7343   */\n      dup2\n        /* \"#utility.yul\":7295:7296   */\n      dup2\n        /* \"#utility.yul\":7352:7622   */\n    tag_481:\n        /* \"#utility.yul\":7373:7380   */\n      dup1\n        /* \"#utility.yul\":7363:7371   */\n      dup6\n        /* \"#utility.yul\":7360:7381   */\n      gt\n        /* \"#utility.yul\":7352:7622   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":7432:7436   */\n      dup2\n        /* \"#utility.yul\":7428:7429   */\n      0x00\n        /* \"#utility.yul\":7424:7430   */\n      not\n        /* \"#utility.yul\":7420:7437   */\n      div\n        /* \"#utility.yul\":7414:7418   */\n      dup3\n        /* \"#utility.yul\":7411:7438   */\n      gt\n        /* \"#utility.yul\":7408:7461   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":7441:7459   */\n      tag_485\n      tag_432\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":7491:7498   */\n      dup1\n        /* \"#utility.yul\":7481:7489   */\n      dup6\n        /* \"#utility.yul\":7477:7499   */\n      and\n        /* \"#utility.yul\":7474:7529   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":7511:7527   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":7474:7529   */\n    tag_486:\n        /* \"#utility.yul\":7590:7612   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":7550:7565   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":7352:7622   */\n      jump(tag_481)\n    tag_483:\n        /* \"#utility.yul\":7356:7359   */\n      pop\n        /* \"#utility.yul\":7206:7628   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7633:8439   */\n    tag_434:\n        /* \"#utility.yul\":7682:7687   */\n      0x00\n        /* \"#utility.yul\":7712:7720   */\n      dup3\n        /* \"#utility.yul\":7702:7782   */\n      tag_488\n      jumpi\n      pop\n        /* \"#utility.yul\":7753:7754   */\n      0x01\n        /* \"#utility.yul\":7767:7772   */\n      jump(tag_255)\n        /* \"#utility.yul\":7702:7782   */\n    tag_488:\n        /* \"#utility.yul\":7801:7805   */\n      dup2\n        /* \"#utility.yul\":7791:7867   */\n      tag_489\n      jumpi\n      pop\n        /* \"#utility.yul\":7838:7839   */\n      0x00\n        /* \"#utility.yul\":7852:7857   */\n      jump(tag_255)\n        /* \"#utility.yul\":7791:7867   */\n    tag_489:\n        /* \"#utility.yul\":7883:7887   */\n      dup2\n        /* \"#utility.yul\":7901:7902   */\n      0x01\n        /* \"#utility.yul\":7896:7955   */\n      dup2\n      eq\n      tag_491\n      jumpi\n        /* \"#utility.yul\":7969:7970   */\n      0x02\n        /* \"#utility.yul\":7964:8094   */\n      dup2\n      eq\n      tag_492\n      jumpi\n        /* \"#utility.yul\":7876:8094   */\n      jump(tag_490)\n        /* \"#utility.yul\":7896:7955   */\n    tag_491:\n        /* \"#utility.yul\":7926:7927   */\n      0x01\n        /* \"#utility.yul\":7917:7927   */\n      swap2\n      pop\n        /* \"#utility.yul\":7940:7945   */\n      pop\n      jump(tag_255)\n        /* \"#utility.yul\":7964:8094   */\n    tag_492:\n        /* \"#utility.yul\":8001:8004   */\n      0xff\n        /* \"#utility.yul\":7991:7999   */\n      dup5\n        /* \"#utility.yul\":7988:8005   */\n      gt\n        /* \"#utility.yul\":7985:8028   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":8008:8026   */\n      tag_494\n      tag_432\n      jump\t// in\n    tag_494:\n      pop\n      pop\n        /* \"#utility.yul\":8064:8065   */\n      0x01\n        /* \"#utility.yul\":8050:8066   */\n      dup3\n      shl\n        /* \"#utility.yul\":8079:8084   */\n      jump(tag_255)\n        /* \"#utility.yul\":7876:8094   */\n    tag_490:\n      pop\n        /* \"#utility.yul\":8178:8180   */\n      0x20\n        /* \"#utility.yul\":8168:8176   */\n      dup4\n        /* \"#utility.yul\":8165:8181   */\n      lt\n        /* \"#utility.yul\":8159:8162   */\n      0x0133\n        /* \"#utility.yul\":8153:8157   */\n      dup4\n        /* \"#utility.yul\":8150:8163   */\n      lt\n        /* \"#utility.yul\":8146:8182   */\n      and\n        /* \"#utility.yul\":8140:8142   */\n      0x4e\n        /* \"#utility.yul\":8130:8138   */\n      dup5\n        /* \"#utility.yul\":8127:8143   */\n      lt\n        /* \"#utility.yul\":8122:8124   */\n      0x0b\n        /* \"#utility.yul\":8116:8120   */\n      dup5\n        /* \"#utility.yul\":8113:8125   */\n      lt\n        /* \"#utility.yul\":8109:8144   */\n      and\n        /* \"#utility.yul\":8106:8183   */\n      or\n        /* \"#utility.yul\":8103:8262   */\n      iszero\n      tag_495\n      jumpi\n      pop\n        /* \"#utility.yul\":8215:8234   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":8247:8252   */\n      jump(tag_255)\n        /* \"#utility.yul\":8103:8262   */\n    tag_495:\n        /* \"#utility.yul\":8294:8328   */\n      tag_496\n        /* \"#utility.yul\":8319:8327   */\n      dup4\n        /* \"#utility.yul\":8313:8317   */\n      dup4\n        /* \"#utility.yul\":8294:8328   */\n      tag_433\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":8364:8370   */\n      dup1\n        /* \"#utility.yul\":8360:8361   */\n      0x00\n        /* \"#utility.yul\":8356:8362   */\n      not\n        /* \"#utility.yul\":8352:8371   */\n      div\n        /* \"#utility.yul\":8343:8350   */\n      dup3\n        /* \"#utility.yul\":8340:8372   */\n      gt\n        /* \"#utility.yul\":8337:8395   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":8375:8393   */\n      tag_498\n      tag_432\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":8413:8433   */\n      mul\n      swap4\n        /* \"#utility.yul\":7633:8439   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8444:8575   */\n    tag_239:\n        /* \"#utility.yul\":8504:8509   */\n      0x00\n        /* \"#utility.yul\":8533:8569   */\n      tag_356\n        /* \"#utility.yul\":8560:8568   */\n      dup4\n        /* \"#utility.yul\":8554:8558   */\n      dup4\n        /* \"#utility.yul\":8533:8569   */\n      tag_434\n      jump\t// in\n        /* \"#utility.yul\":10358:10493   */\n    tag_302:\n        /* \"#utility.yul\":10397:10400   */\n      0x00\n        /* \"#utility.yul\":10418:10435   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10415:10458   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":10438:10456   */\n      tag_508\n      tag_432\n      jump\t// in\n    tag_508:\n      pop\n        /* \"#utility.yul\":10485:10486   */\n      0x01\n        /* \"#utility.yul\":10474:10487   */\n      add\n      swap1\n        /* \"#utility.yul\":10358:10493   */\n      jump\t// out\n        /* \"#utility.yul\":11984:12109   */\n    tag_357:\n        /* \"#utility.yul\":12049:12058   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12070:12080   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":12067:12103   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":12083:12101   */\n      tag_255\n      tag_432\n      jump\t// in\n        /* \"#utility.yul\":12114:12282   */\n    tag_369:\n        /* \"#utility.yul\":12187:12196   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":12218:12227   */\n      dup2\n      iszero\n        /* \"#utility.yul\":12235:12250   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":12229:12251   */\n      dup5\n      eq\n        /* \"#utility.yul\":12215:12252   */\n      or\n        /* \"#utility.yul\":12205:12276   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":12256:12274   */\n      tag_255\n      tag_432\n      jump\t// in\n        /* \"#utility.yul\":12287:12504   */\n    tag_372:\n        /* \"#utility.yul\":12327:12328   */\n      0x00\n        /* \"#utility.yul\":12353:12354   */\n      dup3\n        /* \"#utility.yul\":12343:12475   */\n      tag_520\n      jumpi\n        /* \"#utility.yul\":12397:12407   */\n      0x4e487b71\n        /* \"#utility.yul\":12392:12395   */\n      0xe0\n        /* \"#utility.yul\":12388:12408   */\n      shl\n        /* \"#utility.yul\":12385:12386   */\n      0x00\n        /* \"#utility.yul\":12378:12409   */\n      mstore\n        /* \"#utility.yul\":12432:12436   */\n      0x12\n        /* \"#utility.yul\":12429:12430   */\n      0x04\n        /* \"#utility.yul\":12422:12437   */\n      mstore\n        /* \"#utility.yul\":12460:12464   */\n      0x24\n        /* \"#utility.yul\":12457:12458   */\n      0x00\n        /* \"#utility.yul\":12450:12465   */\n      revert\n        /* \"#utility.yul\":12343:12475   */\n    tag_520:\n      pop\n        /* \"#utility.yul\":12489:12498   */\n      div\n      swap1\n        /* \"#utility.yul\":12287:12504   */\n      jump\t// out\n        /* \"#utility.yul\":12509:12637   */\n    tag_375:\n        /* \"#utility.yul\":12576:12585   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":12597:12608   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":12594:12631   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":12611:12629   */\n      tag_255\n      tag_432\n      jump\t// in\n        /* \"#utility.yul\":13022:13267   */\n    tag_395:\n        /* \"#utility.yul\":13089:13095   */\n      0x00\n        /* \"#utility.yul\":13142:13144   */\n      0x20\n        /* \"#utility.yul\":13130:13139   */\n      dup3\n        /* \"#utility.yul\":13121:13128   */\n      dup5\n        /* \"#utility.yul\":13117:13140   */\n      sub\n        /* \"#utility.yul\":13113:13145   */\n      slt\n        /* \"#utility.yul\":13110:13162   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":13158:13159   */\n      0x00\n        /* \"#utility.yul\":13155:13156   */\n      dup1\n        /* \"#utility.yul\":13148:13160   */\n      revert\n        /* \"#utility.yul\":13110:13162   */\n    tag_526:\n        /* \"#utility.yul\":13190:13199   */\n      dup2\n        /* \"#utility.yul\":13184:13200   */\n      mload\n        /* \"#utility.yul\":13209:13237   */\n      tag_356\n        /* \"#utility.yul\":13231:13236   */\n      dup2\n        /* \"#utility.yul\":13209:13237   */\n      tag_431\n      jump\t// in\n        /* \"#utility.yul\":14090:14340   */\n    tag_435:\n        /* \"#utility.yul\":14175:14176   */\n      0x00\n        /* \"#utility.yul\":14185:14298   */\n    tag_531:\n        /* \"#utility.yul\":14199:14205   */\n      dup4\n        /* \"#utility.yul\":14196:14197   */\n      dup2\n        /* \"#utility.yul\":14193:14206   */\n      lt\n        /* \"#utility.yul\":14185:14298   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":14275:14286   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":14269:14287   */\n      mload\n        /* \"#utility.yul\":14256:14267   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":14249:14288   */\n      mstore\n        /* \"#utility.yul\":14221:14223   */\n      0x20\n        /* \"#utility.yul\":14214:14224   */\n      add\n        /* \"#utility.yul\":14185:14298   */\n      jump(tag_531)\n    tag_533:\n      pop\n      pop\n        /* \"#utility.yul\":14332:14333   */\n      0x00\n        /* \"#utility.yul\":14314:14330   */\n      swap2\n      add\n        /* \"#utility.yul\":14307:14334   */\n      mstore\n        /* \"#utility.yul\":14090:14340   */\n      jump\t// out\n        /* \"#utility.yul\":14345:14632   */\n    tag_407:\n        /* \"#utility.yul\":14474:14477   */\n      0x00\n        /* \"#utility.yul\":14512:14518   */\n      dup3\n        /* \"#utility.yul\":14506:14519   */\n      mload\n        /* \"#utility.yul\":14528:14594   */\n      tag_535\n        /* \"#utility.yul\":14587:14593   */\n      dup2\n        /* \"#utility.yul\":14582:14585   */\n      dup5\n        /* \"#utility.yul\":14575:14579   */\n      0x20\n        /* \"#utility.yul\":14567:14573   */\n      dup8\n        /* \"#utility.yul\":14563:14580   */\n      add\n        /* \"#utility.yul\":14528:14594   */\n      tag_435\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":14610:14626   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":14345:14632   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14995:15391   */\n    tag_429:\n        /* \"#utility.yul\":15144:15146   */\n      0x20\n        /* \"#utility.yul\":15133:15142   */\n      dup2\n        /* \"#utility.yul\":15126:15147   */\n      mstore\n        /* \"#utility.yul\":15107:15111   */\n      0x00\n        /* \"#utility.yul\":15176:15182   */\n      dup3\n        /* \"#utility.yul\":15170:15183   */\n      mload\n        /* \"#utility.yul\":15219:15225   */\n      dup1\n        /* \"#utility.yul\":15214:15216   */\n      0x20\n        /* \"#utility.yul\":15203:15212   */\n      dup5\n        /* \"#utility.yul\":15199:15217   */\n      add\n        /* \"#utility.yul\":15192:15226   */\n      mstore\n        /* \"#utility.yul\":15235:15314   */\n      tag_538\n        /* \"#utility.yul\":15307:15313   */\n      dup2\n        /* \"#utility.yul\":15302:15304   */\n      0x40\n        /* \"#utility.yul\":15291:15300   */\n      dup6\n        /* \"#utility.yul\":15287:15305   */\n      add\n        /* \"#utility.yul\":15282:15284   */\n      0x20\n        /* \"#utility.yul\":15274:15280   */\n      dup8\n        /* \"#utility.yul\":15270:15285   */\n      add\n        /* \"#utility.yul\":15235:15314   */\n      tag_435\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":15375:15377   */\n      0x1f\n        /* \"#utility.yul\":15354:15369   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":15350:15379   */\n      and\n        /* \"#utility.yul\":15335:15380   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":15382:15384   */\n      0x40\n        /* \"#utility.yul\":15331:15385   */\n      add\n      swap3\n        /* \"#utility.yul\":14995:15391   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208f036a249aef3603b7c4a983188cb40fda32ac6efb53d4e2a528ad4d9408dfa764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_923": {
									"entryPoint": null,
									"id": 923,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_508": {
									"entryPoint": null,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 53,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x35 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x85 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x19EF DUP1 PUSH2 0x94 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA9F8D181 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD5002F2E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5002F2E EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9F8D181 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xBD617191 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xCC7A262E EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xCCD34CD5 EQ PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x93F1A40B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x9513997F EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x98969E82 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xA0B40905 EQ PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x8F662915 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x92E8990E EQ PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x80DC0672 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x83A5041C EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x8AE39CAC EQ PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x66FE9F8A EQ PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1AED6553 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x3279BEAB EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x3F138D4B EQ PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F8A976 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x20B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x160B JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST STOP JUMPDEST PUSH1 0xC SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x160B JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x160B JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x269 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0x4FF JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x160B JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x898 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1687 JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x269 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1737 JUMP JUMPDEST PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x10A2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x426 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x5 SLOAD NUMBER LT PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x141BDBDB081A185CC81CDD185C9D1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xC4D677EEF92893AC7EC52FAF8140FC6C851AB4736302B4F3A89DFB20696A0DF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH2 0x4E5 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x4FC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x1172 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x507 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x55E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B73737BA1031329039BA30B5B2B2103A37B5B2B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B73737BA103132903932BBB0B932103A37B5B2B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0x5C9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x74545154AAC348A3EAC92596BD1971957CA94795F4E954EC5F613B55FAB78129 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x618 PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD DUP3 GT ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42464C593A20416D6F756E7420746F20776974686472617720746F6F20686967 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xFB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6A1 JUMPI PUSH2 0x6A1 PUSH2 0x1772 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP TIMESTAMP PUSH2 0x6CD DUP3 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x1233 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x6DC JUMPI PUSH2 0x6DC DUP5 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x6E4 PUSH2 0x1246 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x727 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x721 PUSH1 0x9 SLOAD PUSH2 0x71B PUSH1 0x3 SLOAD PUSH2 0x715 DUP9 PUSH1 0x1 ADD SLOAD DUP11 PUSH1 0x0 ADD SLOAD PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x12BD JUMP JUMPDEST SWAP1 PUSH2 0x12C9 JUMP JUMPDEST SWAP1 PUSH2 0x12D5 JUMP JUMPDEST SWAP1 POP DUP4 ISZERO PUSH2 0x768 JUMPI DUP3 SLOAD PUSH2 0x73B SWAP1 DUP6 PUSH2 0x12D5 JUMP JUMPDEST DUP4 SSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH2 0x74C SWAP1 DUP6 PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0xB SLOAD PUSH2 0x768 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP7 PUSH2 0x1172 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x785 JUMPI PUSH1 0xA SLOAD PUSH2 0x785 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x7AC PUSH1 0x9 SLOAD PUSH2 0x71B PUSH1 0x3 SLOAD PUSH2 0x715 DUP7 PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x7F2 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7FE PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP3 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 DUP1 ISZERO PUSH2 0x842 JUMPI PUSH1 0xB SLOAD PUSH2 0x842 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x1172 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x4FC PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x88C PUSH2 0x1118 JUMP JUMPDEST PUSH2 0x896 PUSH1 0x0 PUSH2 0x12E1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0x1118 JUMP JUMPDEST NUMBER PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x109193164E881053149150511657D2539255 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x943 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x42464C593A204E4F545F464143544F5259 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xA DUP1 SLOAD SWAP3 DUP10 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8 DUP6 SWAP1 SSTORE PUSH1 0x5 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x7 DUP3 SWAP1 SSTORE JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA22 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x1E DUP2 LT PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42464C593A204D75737420626520696E666572696F7220746F20333000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0xA82 PUSH1 0x1E DUP3 PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0xA8D SWAP1 PUSH1 0xA PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x5 SLOAD PUSH1 0x6 SSTORE PUSH2 0xA9F DUP3 PUSH2 0x10A2 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAB1 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x5 SLOAD NUMBER LT PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x141BDBDB081A185CC81CDD185C9D1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST DUP1 DUP3 LT PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577207374617274426C6F636B206D757374206265206C6F77657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6E206E657720656E64426C6F636B PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST DUP2 NUMBER LT PUSH2 0xBC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577207374617274426C6F636B206D75737420626520686967686572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x616E2063757272656E7420626C6F636B PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x5 DUP3 SWAP1 SSTORE PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x6 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x7CD0AB87D19036F3DFADADB232C78AA4879DDA3F0C994A9D637532410EE2CE06 SWAP2 ADD PUSH2 0x604 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0xC DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xC41 JUMPI PUSH2 0xC41 PUSH2 0x1772 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0xC5B PUSH2 0xE39 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xC6D JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xCFE JUMPI PUSH1 0x0 PUSH2 0xC80 PUSH1 0x6 SLOAD NUMBER PUSH2 0x1331 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC99 PUSH1 0x8 SLOAD DUP4 PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCC2 PUSH2 0xCB9 DUP6 PUSH2 0x71B PUSH1 0x9 SLOAD DUP7 PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP PUSH2 0xCF1 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x721 PUSH1 0x9 SLOAD PUSH2 0x71B DUP6 PUSH2 0x715 DUP12 PUSH1 0x1 ADD SLOAD DUP14 PUSH1 0x0 ADD SLOAD PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0xD33 JUMP JUMPDEST PUSH2 0xD2D DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x721 PUSH1 0x9 SLOAD PUSH2 0x71B PUSH1 0x3 SLOAD PUSH2 0x715 DUP9 PUSH1 0x1 ADD SLOAD DUP11 PUSH1 0x0 ADD SLOAD PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD41 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x135D5CDD081899481CD95D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xDE9 JUMPI PUSH1 0x7 SLOAD DUP2 GT PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577206C696D6974206D757374206265206869676865720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP5 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x7 SSTORE JUMPDEST PUSH32 0x241F67EE5F41B7A5CABF911367329BE7215900F602EBFC47F89DCE2A6BCD847C PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH2 0x604 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0xEBE JUMPI PUSH2 0xEAC PUSH2 0xEA5 PUSH1 0xC DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xE60 JUMPI PUSH2 0xE60 PUSH2 0x1772 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0xC DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xE85 JUMPI PUSH2 0xE85 PUSH2 0x1772 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x1233 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB7 DUP2 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 POP PUSH2 0xE3D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xECA PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0xC DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0xEFA JUMPI PUSH2 0xEFA PUSH2 0x1772 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF7D JUMPI PUSH1 0x7 SLOAD DUP3 SLOAD PUSH2 0xF2F SWAP1 DUP6 SWAP1 PUSH2 0x1233 JUMP JUMPDEST GT ISZERO PUSH2 0xF7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42464C593A205573657220616D6F756E742061626F7665206C696D6974000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0xF85 PUSH2 0x1246 JUMP JUMPDEST DUP2 SLOAD ISZERO PUSH2 0xFF6 JUMPI DUP1 SLOAD PUSH1 0x2 DUP4 ADD SLOAD TIMESTAMP SWAP2 PUSH2 0xF9F SWAP2 SWAP1 PUSH2 0x1233 JUMP JUMPDEST GT ISZERO PUSH2 0xFEF JUMPI PUSH1 0x0 PUSH2 0xFCE DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x721 PUSH1 0x9 SLOAD PUSH2 0x71B PUSH1 0x3 SLOAD DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xFED JUMPI PUSH1 0xA SLOAD PUSH2 0xFED SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x1172 JUMP JUMPDEST POP JUMPDEST TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST DUP3 ISZERO PUSH2 0x1036 JUMPI DUP2 SLOAD PUSH2 0x1008 SWAP1 DUP5 PUSH2 0x1233 JUMP JUMPDEST DUP3 SSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x1019 SWAP1 DUP5 PUSH2 0x1233 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0xB SLOAD PUSH2 0x1036 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x136B JUMP JUMPDEST PUSH2 0x105D PUSH1 0x9 SLOAD PUSH2 0x71B PUSH1 0x3 SLOAD PUSH2 0x715 DUP6 PUSH1 0x1 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x7F2 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x10AA PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x110F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0x4FC DUP2 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x11D5 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x13A9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x122C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123F DUP3 DUP5 PUSH2 0x18CA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD NUMBER GT PUSH2 0x1251 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH2 0x125B PUSH2 0xE39 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x126C JUMPI POP NUMBER PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x127A PUSH1 0x6 SLOAD NUMBER PUSH2 0x1331 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1293 PUSH1 0x8 SLOAD DUP4 PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x12B1 PUSH2 0xCB9 DUP5 PUSH2 0x71B PUSH1 0x9 SLOAD DUP6 PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SSTORE POP POP NUMBER PUSH1 0x6 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123F DUP3 DUP5 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123F DUP3 DUP5 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123F DUP3 DUP5 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 GT PUSH2 0x134D JUMPI PUSH2 0x1346 DUP3 DUP5 PUSH2 0x12D5 JUMP JUMPDEST SWAP1 POP PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP4 LT PUSH2 0x135E JUMPI POP PUSH1 0x0 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1346 SWAP1 DUP5 PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x13A3 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x119E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x147B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x11D5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x141C SWAP2 SWAP1 PUSH2 0x1929 JUMP JUMPDEST PUSH2 0x11D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x148A DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1492 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x14F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x150F SWAP2 SWAP1 PUSH2 0x196A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x154C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1562 DUP8 DUP4 DUP4 DUP8 PUSH2 0x156D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x15DC JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x15D5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x15D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST POP DUP2 PUSH2 0x148A JUMP JUMPDEST PUSH2 0x148A DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x15F1 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x164C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1657 DUP2 PUSH2 0x1624 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x16A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x16AD DUP2 PUSH2 0x1624 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x16BD DUP2 PUSH2 0x1624 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH2 0x16E9 DUP2 PUSH2 0x1624 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x171E DUP2 PUSH2 0x1624 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x174A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1657 DUP2 PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x123F DUP2 PUSH2 0x1624 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x123F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x17FC JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x17E2 JUMPI PUSH2 0x17E2 PUSH2 0x17AB JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x17EF JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x17C6 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1813 JUMPI POP PUSH1 0x1 PUSH2 0xD33 JUMP JUMPDEST DUP2 PUSH2 0x1820 JUMPI POP PUSH1 0x0 PUSH2 0xD33 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1836 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1840 JUMPI PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xD33 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1851 JUMPI PUSH2 0x1851 PUSH2 0x17AB JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xD33 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x187F JUMPI POP DUP2 DUP2 EXP PUSH2 0xD33 JUMP JUMPDEST PUSH2 0x1889 DUP4 DUP4 PUSH2 0x17C1 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x189D JUMPI PUSH2 0x189D PUSH2 0x17AB JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123F DUP4 DUP4 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x18C3 JUMPI PUSH2 0x18C3 PUSH2 0x17AB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xD33 JUMPI PUSH2 0xD33 PUSH2 0x17AB JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xD33 JUMPI PUSH2 0xD33 PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1911 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xD33 JUMPI PUSH2 0xD33 PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x193B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x123F DUP2 PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1961 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1949 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x197C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1946 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x19A5 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1946 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 SUB PUSH11 0x249AEF3603B7C4A983188C 0xB4 0xF 0xDA ORIGIN 0xAC PUSH15 0xFB53D4E2A528AD4D9408DFA764736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "377:13130:5:-:0;;;2606:64;;;;;;;;;-1:-1:-1;936:32:0;719:10:3;936:18:0;:32::i;:::-;1716:1:1;1821:22;;2631:18:5;:31;;-1:-1:-1;;;;;;2631:31:5;2652:10;2631:31;;;377:13130;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;377:13130:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@PRECISION_FACTOR_881": {
									"entryPoint": null,
									"id": 881,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SMART_CHEF_FACTORY_854": {
									"entryPoint": null,
									"id": 854,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_2236": {
									"entryPoint": 5033,
									"id": 2236,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 4376,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getMultiplier_1837": {
									"entryPoint": 4913,
									"id": 1837,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_508": {
									"entryPoint": null,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_165": {
									"entryPoint": null,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_157": {
									"entryPoint": 4570,
									"id": 157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_495": {
									"entryPoint": null,
									"id": 495,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 4833,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updatePool_1795": {
									"entryPoint": 4678,
									"id": 1795,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@accTokenPerShare_863": {
									"entryPoint": null,
									"id": 863,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_694": {
									"entryPoint": 4659,
									"id": 694,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@bonusEndBlock_866": {
									"entryPoint": null,
									"id": 866,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1196": {
									"entryPoint": 3778,
									"id": 1196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@div_739": {
									"entryPoint": 4809,
									"id": 739,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@emergencyRewardWithdraw_1420": {
									"entryPoint": 1245,
									"id": 1420,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@emergencyWithdraw_1401": {
									"entryPoint": 2038,
									"id": 1401,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_320": {
									"entryPoint": 5266,
									"id": 320,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_256": {
									"entryPoint": 5243,
									"id": 256,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getTotalShares_1735": {
									"entryPoint": 3641,
									"id": 1735,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasUserLimit_857": {
									"entryPoint": null,
									"id": 857,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_1034": {
									"entryPoint": 2214,
									"id": 1034,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@isContract_184": {
									"entryPoint": null,
									"id": 184,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isInitialized_860": {
									"entryPoint": null,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastRewardBlock_872": {
									"entryPoint": null,
									"id": 872,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_724": {
									"entryPoint": 4797,
									"id": 724,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingReward_1700": {
									"entryPoint": 3080,
									"id": 1700,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolInfo_907": {
									"entryPoint": 1194,
									"id": 907,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_1804": {
									"entryPoint": null,
									"id": 1804,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@poolLimitPerUser_875": {
									"entryPoint": null,
									"id": 875,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@recoverWrongTokens_1468": {
									"entryPoint": 1279,
									"id": 1468,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 2180,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerBlock_878": {
									"entryPoint": null,
									"id": 878,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_885": {
									"entryPoint": null,
									"id": 885,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_2079": {
									"entryPoint": 4971,
									"id": 2079,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_2053": {
									"entryPoint": 4466,
									"id": 2053,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stakedToken_889": {
									"entryPoint": null,
									"id": 889,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startBlock_869": {
									"entryPoint": null,
									"id": 869,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stopReward_1479": {
									"entryPoint": 2200,
									"id": 1479,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_709": {
									"entryPoint": 4821,
									"id": 709,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 4258,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePoolLimitPerUser_1521": {
									"entryPoint": 3385,
									"id": 1521,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateRewardPerBlock_1545": {
									"entryPoint": 1054,
									"id": 1545,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateStartAndEndBlocks_1596": {
									"entryPoint": 2729,
									"id": 1596,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@userInfo_914": {
									"entryPoint": null,
									"id": 914,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_451": {
									"entryPoint": 5485,
									"id": 451,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdraw_1343": {
									"entryPoint": 1552,
									"id": 1343,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_boolt_uint256": {
									"entryPoint": 5943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IBEP20_$2018t_contract$_IBEP20_$2018t_uint256t_uint256t_uint256t_uint256t_address": {
									"entryPoint": 5767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 5881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 6024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$2018__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3064331463f63d46b77f5f0f10bf66b3e44d7211e89e334f395ddc2d5053297a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b4200f8d86c3e338d1b555a53bcb25f604be25f2131e5fbbf99dc4c751d9029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4591ee946b4279a8461ba00d6b3db3a64c51105af5c5dd739b8aeabd4a2d348c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55e8b512461165150226d7fb62af16288a660c0fc1f35821ba4ad8ad658a0bb0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5a78d252a9e808d4db4574440c3bd05d3510a0e4d43e41774d004779197eb31b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7625d2df74beb626e58f53f97a24b008f624d4ec69a00a6a1fe794b60cdbacd0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ddaf6510efec06eaa5007f0744244862092545bc763e566e2661c53c8ff3a7e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9d359e0630a0e50f510c3d55ac7e78402c8c17a210cbb7d33e871025c8bfed92__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a50272db75196303ab05dd1527b8eedc85d0e0a35bbfb74ce5bb179db7dfc938__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bb0945b2cc28e110c8e42f96160023890f56812cde8454ceca52de1636c6331c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd9c8ebedd5fa8d04818598c011edbb5d5f75d02fe6639bf68cf95fd4baa83fb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2234c59bb9b24bd9eea0d80dd308fa837e87d8c6a3de9b68b0a40a73104da8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 6081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 6309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 6148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6470,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 6321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6059,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6002,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 5668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 5929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15393:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:9"
															},
															"nodeType": "YulIf",
															"src": "94:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:9",
														"type": ""
													}
												],
												"src": "14:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:9",
														"type": ""
													}
												],
												"src": "199:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "538:162:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "548:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "560:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "571:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "556:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "548:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "590:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "601:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "583:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "583:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "583:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "628:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "639:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "624:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "624:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "644:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "671:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "682:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "667:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "667:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "687:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "660:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "660:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "491:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "502:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "510:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "518:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "529:4:9",
														"type": ""
													}
												],
												"src": "381:319:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "800:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "810:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "822:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "818:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "810:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "877:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "870:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "870:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "863:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "863:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "845:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "769:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "780:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "791:4:9",
														"type": ""
													}
												],
												"src": "705:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "942:86:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1006:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1015:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1018:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1008:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1008:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1008:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "965:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "976:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "991:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "996:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "987:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "987:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1000:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "983:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "983:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "972:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "972:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "962:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "962:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "955:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "955:50:9"
															},
															"nodeType": "YulIf",
															"src": "952:70:9"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "931:5:9",
														"type": ""
													}
												],
												"src": "897:131:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1120:228:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1166:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1175:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1178:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1168:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1168:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1168:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1141:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1150:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1137:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1162:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1133:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1133:32:9"
															},
															"nodeType": "YulIf",
															"src": "1130:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1191:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1217:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1204:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1204:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1195:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1261:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1236:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1236:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1236:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1276:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1286:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1276:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1300:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1327:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1338:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1323:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1323:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1310:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1300:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1109:6:9",
														"type": ""
													}
												],
												"src": "1033:315:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1440:161:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1486:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1495:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1498:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1488:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1488:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1488:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1461:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1470:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1457:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1457:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1482:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1453:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1453:32:9"
															},
															"nodeType": "YulIf",
															"src": "1450:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1511:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1534:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1521:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1521:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1511:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1580:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1591:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1576:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1563:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1398:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1409:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1421:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1429:6:9",
														"type": ""
													}
												],
												"src": "1353:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:633:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1855:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1867:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1857:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1857:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1857:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1829:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1838:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1825:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1825:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1850:3:9",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1821:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:33:9"
															},
															"nodeType": "YulIf",
															"src": "1818:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1880:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1906:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1893:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1893:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1884:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1950:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1925:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1925:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1925:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1965:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1975:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1965:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1989:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2021:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2032:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2017:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2017:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2004:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:32:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1993:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2070:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2045:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2045:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2045:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2087:17:9",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2097:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2113:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2140:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2151:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2136:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2136:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2123:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2123:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2113:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2164:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2191:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2202:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2187:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2187:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2174:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2174:32:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2215:43:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2242:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2253:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2238:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2238:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2225:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2225:33:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2267:43:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2294:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2305:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2290:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2290:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2277:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:33:9"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "2267:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2319:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2351:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2362:3:9",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2347:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2347:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2334:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2334:33:9"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "2323:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "2401:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2376:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2376:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2376:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2418:17:9",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "2428:7:9"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "2418:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IBEP20_$2018t_contract$_IBEP20_$2018t_uint256t_uint256t_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1726:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1737:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1749:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1757:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1765:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1773:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1781:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1789:6:9",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "1797:6:9",
														"type": ""
													}
												],
												"src": "1606:835:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2547:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2557:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2569:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2580:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2565:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2565:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2557:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2599:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2614:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2630:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2635:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2626:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2626:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2639:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2622:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2622:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2610:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2610:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2592:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2592:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2516:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2527:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2538:4:9",
														"type": ""
													}
												],
												"src": "2446:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2741:228:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2787:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2796:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2799:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2789:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2789:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2789:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2762:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2771:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2758:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2758:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2783:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2754:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2754:32:9"
															},
															"nodeType": "YulIf",
															"src": "2751:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2812:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2835:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2822:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2822:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2854:45:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2884:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2895:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2880:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2867:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2867:32:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2858:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2933:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2908:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2908:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2948:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2958:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2948:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2699:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2710:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2722:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2730:6:9",
														"type": ""
													}
												],
												"src": "2654:315:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3016:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3070:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3079:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3082:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3072:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3072:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3072:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3039:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3060:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3053:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3053:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3046:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3046:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3036:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3036:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3029:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3029:40:9"
															},
															"nodeType": "YulIf",
															"src": "3026:60:9"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3005:5:9",
														"type": ""
													}
												],
												"src": "2974:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3181:225:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3227:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3236:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3239:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3229:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3229:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3229:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3202:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3211:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3198:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3198:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3223:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3194:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3194:32:9"
															},
															"nodeType": "YulIf",
															"src": "3191:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3252:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3278:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3265:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3265:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3256:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3319:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3297:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3297:28:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3297:28:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3334:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3344:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3334:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3358:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3385:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3396:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3381:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3381:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3368:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3358:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3139:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3150:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3162:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3170:6:9",
														"type": ""
													}
												],
												"src": "3097:309:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3527:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3537:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3549:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3560:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3545:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3537:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3579:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3594:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3610:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3615:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3606:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3606:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3619:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3602:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3602:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3590:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3590:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3572:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$2018__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3496:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3507:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3518:4:9",
														"type": ""
													}
												],
												"src": "3411:218:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3704:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3750:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3759:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3762:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3752:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3752:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3752:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3725:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3734:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3721:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3721:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3746:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3717:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3717:32:9"
															},
															"nodeType": "YulIf",
															"src": "3714:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3775:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3801:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3788:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3788:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3779:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3845:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3820:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3860:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3870:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3670:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3681:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3693:6:9",
														"type": ""
													}
												],
												"src": "3634:247:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4060:166:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4077:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4088:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4070:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4070:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4070:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4111:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4122:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4107:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4107:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4127:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4100:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4100:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4100:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4150:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4161:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4146:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4146:18:9"
																	},
																	{
																		"hexValue": "506f6f6c206861732073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4166:18:9",
																		"type": "",
																		"value": "Pool has started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4139:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4139:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4139:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4194:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4206:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4217:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4202:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4202:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4194:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3064331463f63d46b77f5f0f10bf66b3e44d7211e89e334f395ddc2d5053297a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4037:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4051:4:9",
														"type": ""
													}
												],
												"src": "3886:340:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4405:172:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4422:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4433:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4415:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4415:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4415:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4456:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4467:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4452:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4452:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4472:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4445:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4445:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4445:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4495:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4506:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4491:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4491:18:9"
																	},
																	{
																		"hexValue": "43616e6e6f74206265207374616b656420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4511:24:9",
																		"type": "",
																		"value": "Cannot be staked token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4484:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4484:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4484:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4545:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4557:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4568:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4553:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4553:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4545:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2234c59bb9b24bd9eea0d80dd308fa837e87d8c6a3de9b68b0a40a73104da8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4382:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4396:4:9",
														"type": ""
													}
												],
												"src": "4231:346:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4756:172:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4773:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4784:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4766:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4766:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4766:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4807:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4818:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4803:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4803:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4823:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4796:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4796:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4796:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4846:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4857:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4842:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4842:18:9"
																	},
																	{
																		"hexValue": "43616e6e6f742062652072657761726420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4862:24:9",
																		"type": "",
																		"value": "Cannot be reward token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4835:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4835:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4835:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4896:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4908:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4919:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4904:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4904:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4896:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd9c8ebedd5fa8d04818598c011edbb5d5f75d02fe6639bf68cf95fd4baa83fb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4733:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4747:4:9",
														"type": ""
													}
												],
												"src": "4582:346:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5062:145:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5072:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5084:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5095:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5080:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5080:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5072:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5114:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5129:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5145:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5150:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5141:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5141:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5154:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5137:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5137:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5125:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5125:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5107:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5107:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5107:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5178:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5189:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5174:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5174:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5194:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5167:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5167:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5167:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5023:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5034:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5042:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5053:4:9",
														"type": ""
													}
												],
												"src": "4933:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5386:223:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5403:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5414:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5396:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5396:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5396:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5437:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5448:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5433:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5433:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5453:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5426:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5426:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5426:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5476:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5487:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5472:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5472:18:9"
																	},
																	{
																		"hexValue": "42464c593a20416d6f756e7420746f20776974686472617720746f6f20686967",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5492:34:9",
																		"type": "",
																		"value": "BFLY: Amount to withdraw too hig"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5465:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5465:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5465:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5547:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5558:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5543:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5543:18:9"
																	},
																	{
																		"hexValue": "68",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5563:3:9",
																		"type": "",
																		"value": "h"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5536:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5536:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5536:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5576:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5588:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5599:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5584:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5584:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5576:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4591ee946b4279a8461ba00d6b3db3a64c51105af5c5dd739b8aeabd4a2d348c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5363:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5377:4:9",
														"type": ""
													}
												],
												"src": "5212:397:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5646:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5663:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5670:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5675:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5666:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5666:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5656:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5656:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5656:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5703:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5706:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5696:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5696:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5696:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5727:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5730:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5720:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5720:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5614:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5920:168:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5937:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5948:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5930:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5930:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5930:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5971:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5982:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5967:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5967:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5987:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5960:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5960:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5960:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6010:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6021:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6006:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6006:18:9"
																	},
																	{
																		"hexValue": "42464c593a20414c52454144595f494e4954",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6026:20:9",
																		"type": "",
																		"value": "BFLY: ALREADY_INIT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5999:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5999:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5999:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6056:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6068:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6079:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6064:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6064:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6056:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7625d2df74beb626e58f53f97a24b008f624d4ec69a00a6a1fe794b60cdbacd0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5897:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5911:4:9",
														"type": ""
													}
												],
												"src": "5746:342:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6267:167:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6284:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6295:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6277:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6277:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6277:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6318:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6329:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6314:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6314:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6334:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6307:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6307:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6307:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6357:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6368:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6353:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6353:18:9"
																	},
																	{
																		"hexValue": "42464c593a204e4f545f464143544f5259",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6373:19:9",
																		"type": "",
																		"value": "BFLY: NOT_FACTORY"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6346:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6346:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6346:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6402:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6414:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6425:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6410:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6410:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6402:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5a78d252a9e808d4db4574440c3bd05d3510a0e4d43e41774d004779197eb31b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6244:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6258:4:9",
														"type": ""
													}
												],
												"src": "6093:341:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6518:194:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6564:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6573:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6576:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6566:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6566:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6566:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6539:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6548:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6535:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6535:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6560:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6531:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6531:32:9"
															},
															"nodeType": "YulIf",
															"src": "6528:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6589:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6608:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6602:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6602:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6593:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6666:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6675:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6678:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6668:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6668:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6668:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6640:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6651:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6658:4:9",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6647:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6647:16:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6637:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6637:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6630:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6630:35:9"
															},
															"nodeType": "YulIf",
															"src": "6627:55:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6691:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6701:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6691:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6484:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6495:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6507:6:9",
														"type": ""
													}
												],
												"src": "6439:273:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6891:178:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6908:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6919:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6901:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6901:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6901:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6942:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6953:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6938:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6938:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6958:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6931:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6931:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6931:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6981:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6992:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6977:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6977:18:9"
																	},
																	{
																		"hexValue": "42464c593a204d75737420626520696e666572696f7220746f203330",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6997:30:9",
																		"type": "",
																		"value": "BFLY: Must be inferior to 30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6970:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6970:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6970:58:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7037:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7049:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7060:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7045:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7045:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7037:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bb0945b2cc28e110c8e42f96160023890f56812cde8454ceca52de1636c6331c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6868:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6882:4:9",
														"type": ""
													}
												],
												"src": "6717:352:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7106:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7123:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7130:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7135:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7126:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7126:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7116:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7116:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7116:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7163:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7156:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7156:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7156:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7187:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7190:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7180:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7180:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7180:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7074:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7270:358:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7280:16:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7295:1:9",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "7284:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7305:16:9",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "7314:7:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7305:5:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7330:13:9",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "7338:5:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7330:4:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7394:228:9",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7439:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "7441:16:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7441:18:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7441:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7414:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7428:1:9",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7424:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7424:6:9"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "7432:4:9"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "7420:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7420:17:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "7411:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7411:27:9"
																		},
																		"nodeType": "YulIf",
																		"src": "7408:53:9"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7500:29:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7502:25:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "7515:5:9"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "7522:4:9"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "7511:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7511:16:9"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "7502:5:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7481:8:9"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "7491:7:9"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7477:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7477:22:9"
																		},
																		"nodeType": "YulIf",
																		"src": "7474:55:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7542:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7554:4:9"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7560:4:9"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "7550:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7550:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "7542:4:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7578:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "7594:7:9"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7603:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "7590:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7590:22:9"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "7578:8:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7363:8:9"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "7373:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7360:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7360:21:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7382:3:9",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7356:3:9",
																"statements": []
															},
															"src": "7352:270:9"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "7234:5:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7241:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7254:5:9",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7261:4:9",
														"type": ""
													}
												],
												"src": "7206:422:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7692:747:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7730:52:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7744:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7753:1:9",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7744:5:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7767:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7712:8:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7705:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7705:16:9"
															},
															"nodeType": "YulIf",
															"src": "7702:80:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7815:52:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7829:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7838:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7829:5:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7852:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7801:4:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7794:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:12:9"
															},
															"nodeType": "YulIf",
															"src": "7791:76:9"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7903:52:9",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "7917:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7926:1:9",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "7917:5:9"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7940:5:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7896:59:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7901:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7971:123:9",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8006:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "8008:16:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8008:18:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8008:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "7991:8:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8001:3:9",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "7988:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7988:17:9"
																				},
																				"nodeType": "YulIf",
																				"src": "7985:43:9"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "8041:25:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "8054:8:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8064:1:9",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8050:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8050:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "8041:5:9"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "8079:5:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7964:130:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7969:1:9",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "7883:4:9"
															},
															"nodeType": "YulSwitch",
															"src": "7876:218:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8192:70:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8206:28:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "8219:4:9"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "8225:8:9"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "8215:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8215:19:9"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "8206:5:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "8247:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "8116:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8122:2:9",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8113:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8113:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "8130:8:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8140:2:9",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8127:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8127:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8109:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8109:35:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "8153:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8159:3:9",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8150:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8150:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "8168:8:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8178:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8165:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8165:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8146:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8146:36:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8106:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8106:77:9"
															},
															"nodeType": "YulIf",
															"src": "8103:159:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8271:57:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8313:4:9"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8319:8:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "8294:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8294:34:9"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "8275:7:9",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "8284:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8373:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8375:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8375:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8375:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "8343:7:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8360:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "8356:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8356:6:9"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "8364:6:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "8352:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8352:19:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8340:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8340:32:9"
															},
															"nodeType": "YulIf",
															"src": "8337:58:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8404:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "8417:7:9"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "8426:6:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8413:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8413:20:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8404:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7663:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7669:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7682:5:9",
														"type": ""
													}
												],
												"src": "7633:806:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8514:61:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8524:45:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8554:4:9"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8560:8:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "8533:20:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8533:36:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8524:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "8485:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "8491:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "8504:5:9",
														"type": ""
													}
												],
												"src": "8444:131:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8754:236:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8771:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8782:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8764:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8764:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8764:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8805:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8816:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8801:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8801:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8821:2:9",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8794:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8794:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8794:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8844:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8855:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8840:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8840:18:9"
																	},
																	{
																		"hexValue": "4e6577207374617274426c6f636b206d757374206265206c6f77657220746861",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8860:34:9",
																		"type": "",
																		"value": "New startBlock must be lower tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8833:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8833:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8833:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8915:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8926:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8911:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8911:18:9"
																	},
																	{
																		"hexValue": "6e206e657720656e64426c6f636b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8931:16:9",
																		"type": "",
																		"value": "n new endBlock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8904:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8904:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8904:44:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8957:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8969:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8980:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8965:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8965:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8957:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55e8b512461165150226d7fb62af16288a660c0fc1f35821ba4ad8ad658a0bb0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8731:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8745:4:9",
														"type": ""
													}
												],
												"src": "8580:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9169:238:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9186:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9197:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9179:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9179:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9179:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9220:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9231:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9216:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9216:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9236:2:9",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9209:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9209:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9209:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9259:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9270:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9255:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9255:18:9"
																	},
																	{
																		"hexValue": "4e6577207374617274426c6f636b206d75737420626520686967686572207468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9275:34:9",
																		"type": "",
																		"value": "New startBlock must be higher th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9248:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9248:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9248:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9330:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9341:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9326:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9326:18:9"
																	},
																	{
																		"hexValue": "616e2063757272656e7420626c6f636b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9346:18:9",
																		"type": "",
																		"value": "an current block"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9319:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9319:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9319:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9374:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9386:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9397:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9382:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9382:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9374:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ddaf6510efec06eaa5007f0744244862092545bc763e566e2661c53c8ff3a7e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9146:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9160:4:9",
														"type": ""
													}
												],
												"src": "8995:412:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9541:119:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9551:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9563:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9574:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9559:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9559:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9551:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9593:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9604:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9586:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9586:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9586:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9631:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9642:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9627:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9627:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9647:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9620:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9620:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9620:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9502:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9513:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9521:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9532:4:9",
														"type": ""
													}
												],
												"src": "9412:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9839:161:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9856:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9867:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9849:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9849:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9849:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9890:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9901:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9886:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9886:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9906:2:9",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9879:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9879:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9879:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9929:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9940:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9925:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9925:18:9"
																	},
																	{
																		"hexValue": "4d75737420626520736574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9945:13:9",
																		"type": "",
																		"value": "Must be set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9918:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9918:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9918:41:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9968:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9980:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9991:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9976:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9976:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9968:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9d359e0630a0e50f510c3d55ac7e78402c8c17a210cbb7d33e871025c8bfed92__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9816:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9830:4:9",
														"type": ""
													}
												],
												"src": "9665:335:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10179:174:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10196:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10207:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10189:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10189:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10189:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10230:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10241:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10226:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10226:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10246:2:9",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10219:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10219:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10219:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10269:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10280:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10265:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10265:18:9"
																	},
																	{
																		"hexValue": "4e6577206c696d6974206d75737420626520686967686572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10285:26:9",
																		"type": "",
																		"value": "New limit must be higher"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10258:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10258:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10258:54:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10321:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10333:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10344:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10329:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10329:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10321:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a50272db75196303ab05dd1527b8eedc85d0e0a35bbfb74ce5bb179db7dfc938__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10156:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10170:4:9",
														"type": ""
													}
												],
												"src": "10005:348:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10405:88:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10436:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10438:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10438:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10438:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10421:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10432:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10428:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10428:6:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10418:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10418:17:9"
															},
															"nodeType": "YulIf",
															"src": "10415:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10467:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10478:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10485:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10474:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10474:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10467:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10387:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10397:3:9",
														"type": ""
													}
												],
												"src": "10358:135:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10672:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10689:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10700:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10682:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10682:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10682:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10723:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10734:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10719:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10719:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10739:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10712:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10712:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10712:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10762:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10773:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10758:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10758:18:9"
																	},
																	{
																		"hexValue": "42464c593a205573657220616d6f756e742061626f7665206c696d6974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10778:31:9",
																		"type": "",
																		"value": "BFLY: User amount above limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10751:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10751:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10751:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10819:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10831:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10842:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10827:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10827:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10819:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b4200f8d86c3e338d1b555a53bcb25f604be25f2131e5fbbf99dc4c751d9029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10649:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10663:4:9",
														"type": ""
													}
												],
												"src": "10498:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11030:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11047:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11058:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11040:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11040:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11040:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11081:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11092:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11077:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11077:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11097:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11070:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11070:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11070:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11120:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11131:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11116:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11116:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11136:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11109:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11109:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11109:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11191:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11202:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11187:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11187:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11207:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11180:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11180:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11180:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11225:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11237:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11248:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11233:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11233:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11225:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11007:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11021:4:9",
														"type": ""
													}
												],
												"src": "10856:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11437:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11454:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11465:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11447:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11447:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11447:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11488:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11499:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11484:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11484:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11504:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11477:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11477:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11477:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11527:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11538:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11523:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11523:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11543:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11516:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11516:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11516:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11587:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11599:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11610:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11595:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11595:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11587:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11414:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11428:4:9",
														"type": ""
													}
												],
												"src": "11263:356:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11798:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11815:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11826:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11808:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11808:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11808:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11849:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11860:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11845:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11845:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11865:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11838:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11838:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11838:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11888:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11899:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11884:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11884:18:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11904:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11877:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11877:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11877:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11947:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11959:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11970:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11955:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11955:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11947:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11775:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11789:4:9",
														"type": ""
													}
												],
												"src": "11624:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12032:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12042:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12053:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12056:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12049:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12049:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12042:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12081:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12083:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12083:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12083:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12073:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "12076:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12070:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12070:10:9"
															},
															"nodeType": "YulIf",
															"src": "12067:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12015:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12018:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12024:3:9",
														"type": ""
													}
												],
												"src": "11984:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12166:116:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12176:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12191:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12194:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12187:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12187:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12176:7:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12254:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12256:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12256:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12256:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12225:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12218:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12218:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12232:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "12239:7:9"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "12248:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "12235:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12235:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "12229:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12229:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "12215:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12215:37:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12208:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12208:45:9"
															},
															"nodeType": "YulIf",
															"src": "12205:71:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12145:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12148:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12154:7:9",
														"type": ""
													}
												],
												"src": "12114:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12333:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12364:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12385:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12392:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12397:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "12388:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12388:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12378:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12378:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12378:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12429:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12432:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12422:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12422:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12422:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12457:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12460:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12450:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12450:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12450:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12353:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12346:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12346:9:9"
															},
															"nodeType": "YulIf",
															"src": "12343:132:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12484:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12493:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12496:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12489:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12489:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12484:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12318:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12321:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12327:1:9",
														"type": ""
													}
												],
												"src": "12287:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12558:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12568:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12580:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12583:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12576:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12576:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12568:4:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12609:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12611:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12611:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12611:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "12600:4:9"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12606:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12597:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12597:11:9"
															},
															"nodeType": "YulIf",
															"src": "12594:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12540:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12543:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12549:4:9",
														"type": ""
													}
												],
												"src": "12509:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12799:218:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12809:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12821:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12832:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12817:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12817:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12809:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12844:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12862:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12867:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12858:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12858:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12871:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12854:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12854:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12848:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12889:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12904:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12912:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12900:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12900:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12882:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12882:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12882:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12936:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12947:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12932:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12932:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12956:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12964:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12952:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12952:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12925:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12925:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12925:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12988:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12999:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12984:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12984:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13004:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12977:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12977:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12977:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12752:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12763:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12771:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12779:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12790:4:9",
														"type": ""
													}
												],
												"src": "12642:375:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13100:167:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13146:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13155:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13158:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13148:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13148:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13148:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13121:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13130:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13117:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13117:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13142:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13113:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13113:32:9"
															},
															"nodeType": "YulIf",
															"src": "13110:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13171:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13190:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13184:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13184:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13175:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13231:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "13209:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13209:28:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13209:28:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13246:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13256:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "13246:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13066:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13077:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13089:6:9",
														"type": ""
													}
												],
												"src": "13022:245:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13446:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13463:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13474:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13456:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13456:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13456:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13497:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13508:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13493:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13493:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13513:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13486:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13486:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13486:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13536:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13547:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13532:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13532:18:9"
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13552:34:9",
																		"type": "",
																		"value": "SafeBEP20: BEP20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13525:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13525:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13525:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13607:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13618:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13603:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13603:18:9"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13623:12:9",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13596:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13596:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13596:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13645:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13657:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13668:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13653:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13653:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13645:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13423:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13437:4:9",
														"type": ""
													}
												],
												"src": "13272:406:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13857:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13874:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13885:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13867:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13867:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13867:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13908:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13919:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13904:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13904:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13924:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13897:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13897:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13897:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13947:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13958:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13943:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13943:18:9"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13963:34:9",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13936:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13936:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13936:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14018:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14029:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14014:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14014:18:9"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14034:8:9",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14007:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14007:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14007:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14052:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14064:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14075:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14060:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14060:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14052:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13834:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13848:4:9",
														"type": ""
													}
												],
												"src": "13683:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14156:184:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14166:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14175:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14170:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14235:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14260:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14265:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14256:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14256:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14279:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14284:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14275:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14275:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14269:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14269:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14249:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14249:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14249:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14196:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14199:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14193:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14193:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14207:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14209:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14218:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14221:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14214:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14214:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14209:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14189:3:9",
																"statements": []
															},
															"src": "14185:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "14318:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14323:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14314:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14314:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14332:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14307:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14307:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14307:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14134:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14139:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14144:6:9",
														"type": ""
													}
												],
												"src": "14090:250:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14482:150:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14492:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14512:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14506:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14506:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14496:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14567:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14575:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14563:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14563:17:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14582:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14587:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "14528:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14528:66:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14528:66:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14603:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14614:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14619:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14610:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14610:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14603:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14458:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14463:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14474:3:9",
														"type": ""
													}
												],
												"src": "14345:287:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14811:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14828:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14839:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14821:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14821:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14821:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14862:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14873:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14858:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14858:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14878:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14851:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14851:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14851:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14901:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14912:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14897:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14897:18:9"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14917:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14890:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14890:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14890:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14958:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14970:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14981:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14966:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14966:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14958:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14788:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14802:4:9",
														"type": ""
													}
												],
												"src": "14637:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15116:275:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15133:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15144:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15126:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15126:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15126:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15156:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15176:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15170:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15170:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15160:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15203:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15214:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15199:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15199:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15219:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15192:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15192:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15192:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15274:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15282:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15270:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15270:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15291:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15302:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15287:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15287:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15307:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "15235:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15235:79:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15235:79:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15323:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15339:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "15358:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15366:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "15354:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15354:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15375:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "15371:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15371:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "15350:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15350:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15335:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15335:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15382:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15331:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15331:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15323:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15085:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15096:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15107:4:9",
														"type": ""
													}
												],
												"src": "14995:396:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_contract$_IBEP20_$2018t_contract$_IBEP20_$2018t_uint256t_uint256t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        let value_2 := calldataload(add(headStart, 192))\n        validator_revert_address(value_2)\n        value6 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_boolt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IBEP20_$2018__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_3064331463f63d46b77f5f0f10bf66b3e44d7211e89e334f395ddc2d5053297a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pool has started\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d2234c59bb9b24bd9eea0d80dd308fa837e87d8c6a3de9b68b0a40a73104da8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Cannot be staked token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bd9c8ebedd5fa8d04818598c011edbb5d5f75d02fe6639bf68cf95fd4baa83fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Cannot be reward token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_4591ee946b4279a8461ba00d6b3db3a64c51105af5c5dd739b8aeabd4a2d348c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"BFLY: Amount to withdraw too hig\")\n        mstore(add(headStart, 96), \"h\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_7625d2df74beb626e58f53f97a24b008f624d4ec69a00a6a1fe794b60cdbacd0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"BFLY: ALREADY_INIT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5a78d252a9e808d4db4574440c3bd05d3510a0e4d43e41774d004779197eb31b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"BFLY: NOT_FACTORY\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_bb0945b2cc28e110c8e42f96160023890f56812cde8454ceca52de1636c6331c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"BFLY: Must be inferior to 30\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function abi_encode_tuple_t_stringliteral_55e8b512461165150226d7fb62af16288a660c0fc1f35821ba4ad8ad658a0bb0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"New startBlock must be lower tha\")\n        mstore(add(headStart, 96), \"n new endBlock\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ddaf6510efec06eaa5007f0744244862092545bc763e566e2661c53c8ff3a7e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"New startBlock must be higher th\")\n        mstore(add(headStart, 96), \"an current block\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9d359e0630a0e50f510c3d55ac7e78402c8c17a210cbb7d33e871025c8bfed92__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Must be set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a50272db75196303ab05dd1527b8eedc85d0e0a35bbfb74ce5bb179db7dfc938__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"New limit must be higher\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_3b4200f8d86c3e338d1b555a53bcb25f604be25f2131e5fbbf99dc4c751d9029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"BFLY: User amount above limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeBEP20: BEP20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA9F8D181 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD5002F2E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5002F2E EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9F8D181 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xBD617191 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xCC7A262E EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xCCD34CD5 EQ PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x93F1A40B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x9513997F EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x98969E82 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xA0B40905 EQ PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x8F662915 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x92E8990E EQ PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x80DC0672 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x83A5041C EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x8AE39CAC EQ PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x66FE9F8A EQ PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1AED6553 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x3279BEAB EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x3F138D4B EQ PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F8A976 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x20B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x160B JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST STOP JUMPDEST PUSH1 0xC SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x160B JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x160B JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x269 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0x4FF JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x160B JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x898 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1687 JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x269 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1737 JUMP JUMPDEST PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x10A2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x426 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x5 SLOAD NUMBER LT PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x141BDBDB081A185CC81CDD185C9D1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xC4D677EEF92893AC7EC52FAF8140FC6C851AB4736302B4F3A89DFB20696A0DF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH2 0x4E5 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x4FC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x1172 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x507 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x55E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B73737BA1031329039BA30B5B2B2103A37B5B2B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B73737BA103132903932BBB0B932103A37B5B2B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0x5C9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x74545154AAC348A3EAC92596BD1971957CA94795F4E954EC5F613B55FAB78129 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x618 PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD DUP3 GT ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42464C593A20416D6F756E7420746F20776974686472617720746F6F20686967 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xFB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6A1 JUMPI PUSH2 0x6A1 PUSH2 0x1772 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP TIMESTAMP PUSH2 0x6CD DUP3 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x1233 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x6DC JUMPI PUSH2 0x6DC DUP5 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x6E4 PUSH2 0x1246 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x727 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x721 PUSH1 0x9 SLOAD PUSH2 0x71B PUSH1 0x3 SLOAD PUSH2 0x715 DUP9 PUSH1 0x1 ADD SLOAD DUP11 PUSH1 0x0 ADD SLOAD PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x12BD JUMP JUMPDEST SWAP1 PUSH2 0x12C9 JUMP JUMPDEST SWAP1 PUSH2 0x12D5 JUMP JUMPDEST SWAP1 POP DUP4 ISZERO PUSH2 0x768 JUMPI DUP3 SLOAD PUSH2 0x73B SWAP1 DUP6 PUSH2 0x12D5 JUMP JUMPDEST DUP4 SSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH2 0x74C SWAP1 DUP6 PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0xB SLOAD PUSH2 0x768 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP7 PUSH2 0x1172 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x785 JUMPI PUSH1 0xA SLOAD PUSH2 0x785 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x7AC PUSH1 0x9 SLOAD PUSH2 0x71B PUSH1 0x3 SLOAD PUSH2 0x715 DUP7 PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x7F2 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7FE PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP3 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 DUP1 ISZERO PUSH2 0x842 JUMPI PUSH1 0xB SLOAD PUSH2 0x842 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x1172 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x4FC PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x88C PUSH2 0x1118 JUMP JUMPDEST PUSH2 0x896 PUSH1 0x0 PUSH2 0x12E1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0x1118 JUMP JUMPDEST NUMBER PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x109193164E881053149150511657D2539255 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x943 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x42464C593A204E4F545F464143544F5259 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xA DUP1 SLOAD SWAP3 DUP10 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8 DUP6 SWAP1 SSTORE PUSH1 0x5 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x7 DUP3 SWAP1 SSTORE JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA22 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x1E DUP2 LT PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42464C593A204D75737420626520696E666572696F7220746F20333000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0xA82 PUSH1 0x1E DUP3 PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0xA8D SWAP1 PUSH1 0xA PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x5 SLOAD PUSH1 0x6 SSTORE PUSH2 0xA9F DUP3 PUSH2 0x10A2 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAB1 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x5 SLOAD NUMBER LT PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x141BDBDB081A185CC81CDD185C9D1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST DUP1 DUP3 LT PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577207374617274426C6F636B206D757374206265206C6F77657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6E206E657720656E64426C6F636B PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST DUP2 NUMBER LT PUSH2 0xBC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577207374617274426C6F636B206D75737420626520686967686572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x616E2063757272656E7420626C6F636B PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x5 DUP3 SWAP1 SSTORE PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x6 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x7CD0AB87D19036F3DFADADB232C78AA4879DDA3F0C994A9D637532410EE2CE06 SWAP2 ADD PUSH2 0x604 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0xC DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xC41 JUMPI PUSH2 0xC41 PUSH2 0x1772 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0xC5B PUSH2 0xE39 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xC6D JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xCFE JUMPI PUSH1 0x0 PUSH2 0xC80 PUSH1 0x6 SLOAD NUMBER PUSH2 0x1331 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC99 PUSH1 0x8 SLOAD DUP4 PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCC2 PUSH2 0xCB9 DUP6 PUSH2 0x71B PUSH1 0x9 SLOAD DUP7 PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP PUSH2 0xCF1 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x721 PUSH1 0x9 SLOAD PUSH2 0x71B DUP6 PUSH2 0x715 DUP12 PUSH1 0x1 ADD SLOAD DUP14 PUSH1 0x0 ADD SLOAD PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0xD33 JUMP JUMPDEST PUSH2 0xD2D DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x721 PUSH1 0x9 SLOAD PUSH2 0x71B PUSH1 0x3 SLOAD PUSH2 0x715 DUP9 PUSH1 0x1 ADD SLOAD DUP11 PUSH1 0x0 ADD SLOAD PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD41 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x135D5CDD081899481CD95D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xDE9 JUMPI PUSH1 0x7 SLOAD DUP2 GT PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577206C696D6974206D757374206265206869676865720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP5 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x7 SSTORE JUMPDEST PUSH32 0x241F67EE5F41B7A5CABF911367329BE7215900F602EBFC47F89DCE2A6BCD847C PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH2 0x604 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0xEBE JUMPI PUSH2 0xEAC PUSH2 0xEA5 PUSH1 0xC DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xE60 JUMPI PUSH2 0xE60 PUSH2 0x1772 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0xC DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xE85 JUMPI PUSH2 0xE85 PUSH2 0x1772 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x1233 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB7 DUP2 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 POP PUSH2 0xE3D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xECA PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0xC DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0xEFA JUMPI PUSH2 0xEFA PUSH2 0x1772 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF7D JUMPI PUSH1 0x7 SLOAD DUP3 SLOAD PUSH2 0xF2F SWAP1 DUP6 SWAP1 PUSH2 0x1233 JUMP JUMPDEST GT ISZERO PUSH2 0xF7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42464C593A205573657220616D6F756E742061626F7665206C696D6974000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0xF85 PUSH2 0x1246 JUMP JUMPDEST DUP2 SLOAD ISZERO PUSH2 0xFF6 JUMPI DUP1 SLOAD PUSH1 0x2 DUP4 ADD SLOAD TIMESTAMP SWAP2 PUSH2 0xF9F SWAP2 SWAP1 PUSH2 0x1233 JUMP JUMPDEST GT ISZERO PUSH2 0xFEF JUMPI PUSH1 0x0 PUSH2 0xFCE DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x721 PUSH1 0x9 SLOAD PUSH2 0x71B PUSH1 0x3 SLOAD DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xFED JUMPI PUSH1 0xA SLOAD PUSH2 0xFED SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x1172 JUMP JUMPDEST POP JUMPDEST TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST DUP3 ISZERO PUSH2 0x1036 JUMPI DUP2 SLOAD PUSH2 0x1008 SWAP1 DUP5 PUSH2 0x1233 JUMP JUMPDEST DUP3 SSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x1019 SWAP1 DUP5 PUSH2 0x1233 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0xB SLOAD PUSH2 0x1036 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x136B JUMP JUMPDEST PUSH2 0x105D PUSH1 0x9 SLOAD PUSH2 0x71B PUSH1 0x3 SLOAD PUSH2 0x715 DUP6 PUSH1 0x1 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x7F2 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x10AA PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x110F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0x4FC DUP2 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x11D5 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x13A9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x122C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123F DUP3 DUP5 PUSH2 0x18CA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD NUMBER GT PUSH2 0x1251 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH2 0x125B PUSH2 0xE39 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x126C JUMPI POP NUMBER PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x127A PUSH1 0x6 SLOAD NUMBER PUSH2 0x1331 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1293 PUSH1 0x8 SLOAD DUP4 PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x12B1 PUSH2 0xCB9 DUP5 PUSH2 0x71B PUSH1 0x9 SLOAD DUP6 PUSH2 0x12BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SSTORE POP POP NUMBER PUSH1 0x6 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123F DUP3 DUP5 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123F DUP3 DUP5 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123F DUP3 DUP5 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 GT PUSH2 0x134D JUMPI PUSH2 0x1346 DUP3 DUP5 PUSH2 0x12D5 JUMP JUMPDEST SWAP1 POP PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP4 LT PUSH2 0x135E JUMPI POP PUSH1 0x0 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1346 SWAP1 DUP5 PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x13A3 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x119E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x147B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x11D5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x141C SWAP2 SWAP1 PUSH2 0x1929 JUMP JUMPDEST PUSH2 0x11D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x148A DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1492 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x14F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x150F SWAP2 SWAP1 PUSH2 0x196A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x154C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1562 DUP8 DUP4 DUP4 DUP8 PUSH2 0x156D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x15DC JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x15D5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x15D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST POP DUP2 PUSH2 0x148A JUMP JUMPDEST PUSH2 0x148A DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x15F1 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x164C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1657 DUP2 PUSH2 0x1624 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x16A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x16AD DUP2 PUSH2 0x1624 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x16BD DUP2 PUSH2 0x1624 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH2 0x16E9 DUP2 PUSH2 0x1624 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x171E DUP2 PUSH2 0x1624 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x174A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1657 DUP2 PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x123F DUP2 PUSH2 0x1624 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x123F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x17FC JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x17E2 JUMPI PUSH2 0x17E2 PUSH2 0x17AB JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x17EF JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x17C6 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1813 JUMPI POP PUSH1 0x1 PUSH2 0xD33 JUMP JUMPDEST DUP2 PUSH2 0x1820 JUMPI POP PUSH1 0x0 PUSH2 0xD33 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1836 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1840 JUMPI PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xD33 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1851 JUMPI PUSH2 0x1851 PUSH2 0x17AB JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xD33 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x187F JUMPI POP DUP2 DUP2 EXP PUSH2 0xD33 JUMP JUMPDEST PUSH2 0x1889 DUP4 DUP4 PUSH2 0x17C1 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x189D JUMPI PUSH2 0x189D PUSH2 0x17AB JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123F DUP4 DUP4 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x18C3 JUMPI PUSH2 0x18C3 PUSH2 0x17AB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xD33 JUMPI PUSH2 0xD33 PUSH2 0x17AB JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xD33 JUMPI PUSH2 0xD33 PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1911 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xD33 JUMPI PUSH2 0xD33 PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x193B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x123F DUP2 PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1961 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1949 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x197C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1946 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x19A5 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1946 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 SUB PUSH11 0x249AEF3603B7C4A983188C 0xB4 0xF 0xDA ORIGIN 0xAC PUSH15 0xFB53D4E2A528AD4D9408DFA764736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "377:13130:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9549:240;;;;;;:::i;:::-;;:::i;:::-;;12926:95;12998:8;:15;12926:95;;;345:25:9;;;333:2;318:18;12926:95:5;;;;;;;;2449:26;;;;;;:::i;:::-;;:::i;:::-;;;;583:25:9;;;639:2;624:18;;617:34;;;;667:18;;;660:34;571:2;556:18;2449:26:5;381:319:9;977:28:5;;;;;;7670:142;;;;;;:::i;:::-;;:::i;777:25::-;;;;;-1:-1:-1;;;777:25:5;;;;;;;;;870:14:9;;863:22;845:41;;833:2;818:18;777:25:5;705:187:9;8102:413:5;;;;;;:::i;:::-;;:::i;5927:1061::-;;;;;;:::i;:::-;;:::i;1087:25::-;;;;;;7129:423;;;;;;:::i;:::-;;:::i;1290:31::-;;;;;;1831:101:0;;;:::i;8605:88:5:-;;;:::i;3120:1250::-;;;;;;:::i;:::-;;:::i;1392:29::-;;;;;;1201:85:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;;-1:-1:-1;;;;;2610:32:9;;;2592:51;;2580:2;2565:18;1201:85:0;2446:203:9;866:31:5;;;;;;687:24;;;;;-1:-1:-1;;;687:24:5;;;;;;2531:66;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10033:606;;;;;;:::i;:::-;;:::i;10812:857::-;;;;;;:::i;:::-;;:::i;8919:475::-;;;;;;:::i;:::-;;:::i;1193:30::-;;;;;;581:33;;;;;-1:-1:-1;;;;;581:33:5;;;1653:25;;;;;-1:-1:-1;;;;;1653:25:5;;;1482:31;;;;;;11677:243;;;:::i;4528:1249::-;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;1571:25:5:-;;;;;-1:-1:-1;;;;;1571:25:5;;;9549:240;1094:13:0;:11;:13::i;:::-;9657:10:5::1;;9642:12;:25;9634:54;;;::::0;-1:-1:-1;;;9634:54:5;;4088:2:9;9634:54:5::1;::::0;::::1;4070:21:9::0;4127:2;4107:18;;;4100:30;-1:-1:-1;;;4146:18:9;;;4139:46;4202:18;;9634:54:5::1;;;;;;;;;9699:14;:32:::0;;;9747:34:::1;::::0;345:25:9;;;9747:34:5::1;::::0;333:2:9;318:18;9747:34:5::1;;;;;;;9549:240:::0;:::o;2449:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2449:26:5;:::o;7670:142::-;1094:13:0;:11;:13::i;:::-;7750:11:5::1;::::0;:54:::1;::::0;-1:-1:-1;;;;;7750:11:5::1;7783:10;7796:7:::0;7750:24:::1;:54::i;:::-;7670:142:::0;:::o;8102:413::-;1094:13:0;:11;:13::i;:::-;8238:11:5::1;::::0;-1:-1:-1;;;;;8238:11:5;;::::1;8213:37:::0;;::::1;::::0;8205:72:::1;;;::::0;-1:-1:-1;;;8205:72:5;;4433:2:9;8205:72:5::1;::::0;::::1;4415:21:9::0;4472:2;4452:18;;;4445:30;-1:-1:-1;;;4491:18:9;;;4484:52;4553:18;;8205:72:5::1;4231:346:9::0;8205:72:5::1;8321:11;::::0;-1:-1:-1;;;;;8321:11:5;;::::1;8296:37:::0;;::::1;::::0;8288:72:::1;;;::::0;-1:-1:-1;;;8288:72:5;;4784:2:9;8288:72:5::1;::::0;::::1;4766:21:9::0;4823:2;4803:18;;;4796:30;-1:-1:-1;;;4842:18:9;;;4835:52;4904:18;;8288:72:5::1;4582:346:9::0;8288:72:5::1;8373:69;-1:-1:-1::0;;;;;8373:34:5;::::1;8416:10;8429:12:::0;8373:34:::1;:69::i;:::-;8460:47;::::0;;-1:-1:-1;;;;;5125:32:9;;5107:51;;5189:2;5174:18;;5167:34;;;8460:47:5::1;::::0;5080:18:9;8460:47:5::1;;;;;;;;8102:413:::0;;:::o;5927:1061::-;2261:21:1;:19;:21::i;:::-;6009::5::1;6033:14:::0;;;:8:::1;:14;::::0;;;;;;;6048:10:::1;6033:26:::0;;;;;;;6078:11;;:22;-1:-1:-1;6078:22:5::1;6070:68;;;::::0;-1:-1:-1;;;6070:68:5;;5414:2:9;6070:68:5::1;::::0;::::1;5396:21:9::0;5453:2;5433:18;;;5426:30;5492:34;5472:18;;;5465:62;-1:-1:-1;;;5543:18:9;;;5536:31;5584:19;;6070:68:5::1;5212:397:9::0;6070:68:5::1;6149:21;6173:8;6182:4;6173:14;;;;;;;;:::i;:::-;;;;;;;;;;;6149:38;;6291:15;6251:37;6274:4;:13;;;6251:4;:18;;;:22;;:37;;;;:::i;:::-;:55;6247:110;;;6322:23;6340:4;6322:17;:23::i;:::-;6369:13;:11;:13::i;:::-;6395:15;6413:92;6489:4;:15;;;6413:71;6467:16;;6413:49;6445:16;;6413:27;6429:4;:10;;;6413:4;:11;;;:15;;:27;;;;:::i;:::-;:31:::0;::::1;:49::i;:::-;:53:::0;::::1;:71::i;:::-;:75:::0;::::1;:92::i;:::-;6395:110:::0;-1:-1:-1;6522:11:5;;6518:204:::1;;6564:11:::0;;:24:::1;::::0;6580:7;6564:15:::1;:24::i;:::-;6550:38:::0;;6617:11:::1;::::0;::::1;::::0;:24:::1;::::0;6633:7;6617:15:::1;:24::i;:::-;6603:11;::::0;::::1;:38:::0;6656:11:::1;::::0;:54:::1;::::0;-1:-1:-1;;;;;6656:11:5::1;6689:10;6702:7:::0;6656:24:::1;:54::i;:::-;6738:11:::0;;6734:98:::1;;6766:11;::::0;:54:::1;::::0;-1:-1:-1;;;;;6766:11:5::1;6799:10;6812:7:::0;6766:24:::1;:54::i;:::-;6862:71;6916:16;;6862:49;6894:16;;6862:27;6878:4;:10;;;6862:4;:11;;;:15;;:27;;;;:::i;:71::-;6844:15;::::0;::::1;:89:::0;6951:29:::1;::::0;345:25:9;;;6960:10:5::1;::::0;6951:29:::1;::::0;333:2:9;318:18;6951:29:5::1;;;;;;;5998:990;;;2303:20:1::0;1716:1;2809:22;;2629:209;2303:20;5927:1061:5;;:::o;7129:423::-;2261:21:1;:19;:21::i;:::-;7201::5::1;7225:14:::0;;;:8:::1;:14;::::0;;;;;;;7240:10:::1;7225:26:::0;;;;;;;7289:11;;7311:15;;;-1:-1:-1;7337:15:5;::::1;:19:::0;;;;7225:26;7373:20;;7369:116:::1;;7410:11;::::0;:63:::1;::::0;-1:-1:-1;;;;;7410:11:5::1;7443:10;7456:16:::0;7410:24:::1;:63::i;:::-;7532:11:::0;;7502:42:::1;::::0;345:25:9;;;7520:10:5::1;::::0;7502:42:::1;::::0;333:2:9;318:18;7502:42:5::1;;;;;;;7190:362;;2303:20:1::0;1716:1;2809:22;;2629:209;1831:101:0;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;8605:88:5:-;1094:13:0;:11;:13::i;:::-;8673:12:5::1;8657:13;:28:::0;8605:88::o;3120:1250::-;3394:13;;-1:-1:-1;;;3394:13:5;;;;3393:14;3385:45;;;;-1:-1:-1;;;3385:45:5;;5948:2:9;3385:45:5;;;5930:21:9;5987:2;5967:18;;;5960:30;-1:-1:-1;;;6006:18:9;;;5999:48;6064:18;;3385:45:5;5746:342:9;3385:45:5;3463:18;;-1:-1:-1;;;;;3463:18:5;3449:10;:32;3441:62;;;;-1:-1:-1;;;3441:62:5;;6295:2:9;3441:62:5;;;6277:21:9;6334:2;6314:18;;;6307:30;-1:-1:-1;;;6353:18:9;;;6346:47;6410:18;;3441:62:5;6093:341:9;3441:62:5;3559:13;:20;;-1:-1:-1;;;;3559:20:5;-1:-1:-1;;;3559:20:5;;;3592:11;:26;;-1:-1:-1;;;;;3592:26:5;;;-1:-1:-1;;;;;;3592:26:5;;;;;;;3629:11;:26;;;;;;;;;;;;;;;3666:14;:32;;;3709:10;:24;;;3744:13;:30;;;3791:21;;3787:124;;3829:12;:19;;-1:-1:-1;;;;3829:19:5;-1:-1:-1;;;3829:19:5;;;3863:16;:36;;;3787:124;3961:11;;:22;;;-1:-1:-1;;;3961:22:5;;;;3923:27;;-1:-1:-1;;;;;3961:11:5;;:20;;:22;;;;;;;;;;;;;;:11;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3953:31;;3923:61;;4025:2;4003:19;:24;3995:65;;;;-1:-1:-1;;;3995:65:5;;6919:2:9;3995:65:5;;;6901:21:9;6958:2;6938:18;;;6931:30;6997;6977:18;;;6970:58;7045:18;;3995:65:5;6717:352:9;3995:65:5;4105:36;4113:2;4121:19;4105:15;:36::i;:::-;4100:42;;:2;:42;:::i;:::-;4073:16;:70;4228:10;;4210:15;:28;4337:25;4355:6;4337:17;:25::i;:::-;3374:996;3120:1250;;;;;;;:::o;10033:606::-;1094:13:0;:11;:13::i;:::-;10164:10:5::1;;10149:12;:25;10141:54;;;::::0;-1:-1:-1;;;10141:54:5;;4088:2:9;10141:54:5::1;::::0;::::1;4070:21:9::0;4127:2;4107:18;;;4100:30;-1:-1:-1;;;4146:18:9;;;4139:46;4202:18;;10141:54:5::1;3886:340:9::0;10141:54:5::1;10228:14;10214:11;:28;10206:87;;;::::0;-1:-1:-1;;;10206:87:5;;8782:2:9;10206:87:5::1;::::0;::::1;8764:21:9::0;8821:2;8801:18;;;8794:30;8860:34;8840:18;;;8833:62;-1:-1:-1;;;8911:18:9;;;8904:44;8965:19;;10206:87:5::1;8580:410:9::0;10206:87:5::1;10327:11;10312:12;:26;10304:87;;;::::0;-1:-1:-1;;;10304:87:5;;9197:2:9;10304:87:5::1;::::0;::::1;9179:21:9::0;9236:2;9216:18;;;9209:30;9275:34;9255:18;;;9248:62;-1:-1:-1;;;9326:18:9;;;9319:46;9382:19;;10304:87:5::1;8995:412:9::0;10304:87:5::1;10404:10;:24:::0;;;10439:13:::1;:30:::0;;;10536:15:::1;:28:::0;;;10582:49:::1;::::0;;9586:25:9;;;9642:2;9627:18;;9620:34;;;10582:49:5::1;::::0;9559:18:9;10582:49:5::1;9412:248:9::0;10812:857:5;10887:7;10931:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;10931:21:5;;;;;;;;;10987:8;:14;;10887:7;;10987:8;10940:4;;10987:14;;;;;;:::i;:::-;;;;;;;;;;;10963:38;;11012:19;11034:16;:14;:16::i;:::-;11012:38;;11080:15;;11065:12;:30;:50;;;;-1:-1:-1;11099:16:5;;;11065:50;11061:601;;;11132:18;11153:45;11168:15;;11185:12;11153:14;:45::i;:::-;11132:66;;11213:18;11234:30;11249:14;;11234:10;:14;;:30;;;;:::i;:::-;11213:51;;11279:29;11328:71;11349:49;11386:11;11349:32;11364:16;;11349:10;:14;;:32;;;;:::i;:49::-;11328:16;;;:20;:71::i;:::-;11279:120;;11421:97;11502:4;:15;;;11421:76;11480:16;;11421:54;11453:21;11421:27;11437:4;:10;;;11421:4;:11;;;:15;;:27;;;;:::i;:97::-;11414:104;;;;;;;;;;11061:601;11558:92;11634:4;:15;;;11558:71;11612:16;;11558:49;11590:16;;11558:27;11574:4;:10;;;11558:4;:11;;;:15;;:27;;;;:::i;:92::-;11551:99;;;;;10812:857;;;;;:::o;8919:475::-;1094:13:0;:11;:13::i;:::-;9036:12:5::1;::::0;-1:-1:-1;;;9036:12:5;::::1;;;9028:36;;;::::0;-1:-1:-1;;;9028:36:5;;9867:2:9;9028:36:5::1;::::0;::::1;9849:21:9::0;9906:2;9886:18;;;9879:30;-1:-1:-1;;;9925:18:9;;;9918:41;9976:18;;9028:36:5::1;9665:335:9::0;9028:36:5::1;9079:13;9075:266;;;9137:16;;9117:17;:36;9109:73;;;::::0;-1:-1:-1;;;9109:73:5;;10207:2:9;9109:73:5::1;::::0;::::1;10189:21:9::0;10246:2;10226:18;;;10219:30;10285:26;10265:18;;;10258:54;10329:18;;9109:73:5::1;10005:348:9::0;9109:73:5::1;9197:16;:36:::0;;;9075:266:::1;;;9266:12;:28:::0;;-1:-1:-1;;;;9266:28:5::1;-1:-1:-1::0;;;9266:28:5;::::1;;;;::::0;;-1:-1:-1;9309:16:5::1;:20:::0;9075:266:::1;9356:30;9369:16;;9356:30;;;;345:25:9::0;;333:2;318:18;;199:177;11677:243:5;11722:19;;11759:154;11787:8;:15;11781:21;;11759:154;;;11839:62;11855:45;11880:8;11889:3;11880:13;;;;;;;;:::i;:::-;;;;;;;;;;;:19;;;11855:8;11864:3;11855:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;:24;;:45;;;;:::i;:::-;11839:11;;:15;:62::i;:::-;11825:76;-1:-1:-1;11804:5:5;;;:::i;:::-;;;11759:154;;;;11677:243;:::o;4528:1249::-;2261:21:1;:19;:21::i;:::-;4608::5::1;4632:14:::0;;;:8:::1;:14;::::0;;;;;;;4647:10:::1;4632:26:::0;;;;;;;4693:8:::1;:14:::0;;4632:26;;4608:21;4641:4;;4693:14;::::1;;;;;:::i;:::-;;;;;;;;;;;4669:38;;4724:12;;;;;;;;;;;4720:131;;;4789:16;::::0;4773:11;;4761:24:::1;::::0;:7;;:11:::1;:24::i;:::-;:44;;4753:86;;;::::0;-1:-1:-1;;;4753:86:5;;10700:2:9;4753:86:5::1;::::0;::::1;10682:21:9::0;10739:2;10719:18;;;10712:30;10778:31;10758:18;;;10751:59;10827:18;;4753:86:5::1;10498:353:9::0;4753:86:5::1;4863:13;:11;:13::i;:::-;4893:11:::0;;:15;4889:498:::1;;4954:13:::0;;4931:18:::1;::::0;::::1;::::0;4971:15:::1;::::0;4931:37:::1;::::0;:18;:22:::1;:37::i;:::-;:55;4927:321;;;5006:15;5024:76;5084:4;:15;;;5024:55;5062:16;;5024:33;5040:16;;5024:4;:11;;;:15;;:33;;;;:::i;:76::-;5006:94:::0;-1:-1:-1;5123:11:5;;5119:114:::1;;5159:11;::::0;:54:::1;::::0;-1:-1:-1;;;;;5159:11:5::1;5192:10;5205:7:::0;5159:24:::1;:54::i;:::-;4987:261;4927:321;5360:15;5339:18;::::0;::::1;:36:::0;4889:498:::1;5403:11:::0;;5399:223:::1;;5445:11:::0;;:24:::1;::::0;5461:7;5445:15:::1;:24::i;:::-;5431:38:::0;;5498:11:::1;::::0;::::1;::::0;:24:::1;::::0;5514:7;5498:15:::1;:24::i;:::-;5484:11;::::0;::::1;:38:::0;5537:11:::1;::::0;:73:::1;::::0;-1:-1:-1;;;;;5537:11:5::1;5574:10;5595:4;5602:7:::0;5537:28:::1;:73::i;:::-;5652:71;5706:16;;5652:49;5684:16;;5652:27;5668:4;:10;;;5652:4;:11;;;:15;;:27;;;;:::i;:71::-;5634:15;::::0;::::1;:89:::0;5741:28:::1;::::0;345:25:9;;;5749:10:5::1;::::0;5741:28:::1;::::0;333:2:9;318:18;5741:28:5::1;;;;;;;4597:1180;;2303:20:1::0;1716:1;2809:22;;2629:209;2081:198:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;11058:2:9;2161:73:0::1;::::0;::::1;11040:21:9::0;11097:2;11077:18;;;11070:30;11136:34;11116:18;;;11109:62;-1:-1:-1;;;11187:18:9;;;11180:36;11233:19;;2161:73:0::1;10856:402:9::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;1359:130::-:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:3;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;11465:2:9;1414:68:0;;;11447:21:9;;;11484:18;;;11477:30;11543:34;11523:18;;;11516:62;11595:18;;1414:68:0;11263:356:9;771:211:8;915:58;;-1:-1:-1;;;;;5125:32:9;;915:58:8;;;5107:51:9;5174:18;;;5167:34;;;888:86:8;;908:5;;-1:-1:-1;;;938:23:8;5080:18:9;;915:58:8;;;;-1:-1:-1;;915:58:8;;;;;;;;;;;;;;-1:-1:-1;;;;;915:58:8;-1:-1:-1;;;;;;915:58:8;;;;;;;;;;888:19;:86::i;:::-;771:211;;;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:1;;11826:2:9;2460:63:1;;;11808:21:9;11865:2;11845:18;;;11838:30;11904:33;11884:18;;;11877:61;11955:18;;2460:63:1;11624:355:9;2460:63:1;1759:1;2598:7;:18;2336:287::o;2755:96:4:-;2813:7;2839:5;2843:1;2839;:5;:::i;:::-;2832:12;2755:96;-1:-1:-1;;;2755:96:4:o;12021:897:5:-;12084:15;;12068:12;:31;12064:70;;12021:897::o;12064:70::-;12224:19;12246:16;:14;:16::i;:::-;12224:38;;12532:11;12547:1;12532:16;12528:100;;-1:-1:-1;12583:12:5;12565:15;:30;12021:897::o;12528:100::-;12640:18;12661:45;12676:15;;12693:12;12661:14;:45::i;:::-;12640:66;;12717:18;12738:30;12753:14;;12738:10;:14;;:30;;;;:::i;:::-;12717:51;;12798:71;12819:49;12856:11;12819:32;12834:16;;12819:10;:14;;:32;;;;:::i;12798:71::-;12779:16;:90;-1:-1:-1;;12898:12:5;12880:15;:30;-1:-1:-1;12021:897:5:o;3465:96:4:-;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;3122:96::-;3180:7;3206:5;3210:1;3206;:5;:::i;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;13195:309:5:-;13270:7;13301:13;;13294:3;:20;13290:207;;13338:14;:3;13346:5;13338:7;:14::i;:::-;13331:21;;;;13290:207;13383:13;;13374:5;:22;13370:127;;-1:-1:-1;13420:1:5;13413:8;;13370:127;13461:13;;:24;;13479:5;13461:17;:24::i;990:248:8:-;1161:68;;-1:-1:-1;;;;;12900:15:9;;;1161:68:8;;;12882:34:9;12952:15;;12932:18;;;12925:43;12984:18;;;12977:34;;;1134:96:8;;1154:5;;-1:-1:-1;;;1184:27:8;12817:18:9;;1161:68:8;12642:375:9;1134:96:8;990:248;;;;:::o;3282:774::-;3706:23;3732:69;3760:4;3732:69;;;;;;;;;;;;;;;;;3740:5;-1:-1:-1;;;;;3732:27:8;;;:69;;;;;:::i;:::-;3816:17;;3706:95;;-1:-1:-1;3816:21:8;3812:237;;3971:10;3960:30;;;;;;;;;;;;:::i;:::-;3952:85;;;;-1:-1:-1;;;3952:85:8;;13474:2:9;3952:85:8;;;13456:21:9;13513:2;13493:18;;;13486:30;13552:34;13532:18;;;13525:62;-1:-1:-1;;;13603:18:9;;;13596:40;13653:19;;3952:85:8;13272:406:9;3873:223:2;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:2:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:2;;13885:2:9;5149:81:2;;;13867:21:9;13924:2;13904:18;;;13897:30;13963:34;13943:18;;;13936:62;-1:-1:-1;;;14014:18:9;;;14007:36;14060:19;;5149:81:2;13683:402:9;5149:81:2;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:2;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:2:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:2;;;7908:60;;;;-1:-1:-1;;;7908:60:2;;14839:2:9;7908:60:2;;;14821:21:9;14878:2;14858:18;;;14851:30;14917:31;14897:18;;;14890:59;14966:18;;7908:60:2;14637:353:9;7908:60:2;-1:-1:-1;8003:10:2;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:2;;;;;;;;:::i;14:180:9:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:9;;14:180;-1:-1:-1;14:180:9:o;897:131::-;-1:-1:-1;;;;;972:31:9;;962:42;;952:70;;1018:1;1015;1008:12;1033:315;1101:6;1109;1162:2;1150:9;1141:7;1137:23;1133:32;1130:52;;;1178:1;1175;1168:12;1130:52;1217:9;1204:23;1236:31;1261:5;1236:31;:::i;:::-;1286:5;1338:2;1323:18;;;;1310:32;;-1:-1:-1;;;1033:315:9:o;1353:248::-;1421:6;1429;1482:2;1470:9;1461:7;1457:23;1453:32;1450:52;;;1498:1;1495;1488:12;1450:52;-1:-1:-1;;1521:23:9;;;1591:2;1576:18;;;1563:32;;-1:-1:-1;1353:248:9:o;1606:835::-;1749:6;1757;1765;1773;1781;1789;1797;1850:3;1838:9;1829:7;1825:23;1821:33;1818:53;;;1867:1;1864;1857:12;1818:53;1906:9;1893:23;1925:31;1950:5;1925:31;:::i;:::-;1975:5;-1:-1:-1;2032:2:9;2017:18;;2004:32;2045:33;2004:32;2045:33;:::i;:::-;2097:7;-1:-1:-1;2151:2:9;2136:18;;2123:32;;-1:-1:-1;2202:2:9;2187:18;;2174:32;;-1:-1:-1;2253:3:9;2238:19;;2225:33;;-1:-1:-1;2305:3:9;2290:19;;2277:33;;-1:-1:-1;2362:3:9;2347:19;;2334:33;2376;2334;2376;:::i;:::-;2428:7;2418:17;;;1606:835;;;;;;;;;;:::o;2654:315::-;2722:6;2730;2783:2;2771:9;2762:7;2758:23;2754:32;2751:52;;;2799:1;2796;2789:12;2751:52;2835:9;2822:23;2812:33;;2895:2;2884:9;2880:18;2867:32;2908:31;2933:5;2908:31;:::i;:::-;2958:5;2948:15;;;2654:315;;;;;:::o;2974:118::-;3060:5;3053:13;3046:21;3039:5;3036:32;3026:60;;3082:1;3079;3072:12;3097:309;3162:6;3170;3223:2;3211:9;3202:7;3198:23;3194:32;3191:52;;;3239:1;3236;3229:12;3191:52;3278:9;3265:23;3297:28;3319:5;3297:28;:::i;3634:247::-;3693:6;3746:2;3734:9;3725:7;3721:23;3717:32;3714:52;;;3762:1;3759;3752:12;3714:52;3801:9;3788:23;3820:31;3845:5;3820:31;:::i;5614:127::-;5675:10;5670:3;5666:20;5663:1;5656:31;5706:4;5703:1;5696:15;5730:4;5727:1;5720:15;6439:273;6507:6;6560:2;6548:9;6539:7;6535:23;6531:32;6528:52;;;6576:1;6573;6566:12;6528:52;6608:9;6602:16;6658:4;6651:5;6647:16;6640:5;6637:27;6627:55;;6678:1;6675;6668:12;7074:127;7135:10;7130:3;7126:20;7123:1;7116:31;7166:4;7163:1;7156:15;7190:4;7187:1;7180:15;7206:422;7295:1;7338:5;7295:1;7352:270;7373:7;7363:8;7360:21;7352:270;;;7432:4;7428:1;7424:6;7420:17;7414:4;7411:27;7408:53;;;7441:18;;:::i;:::-;7491:7;7481:8;7477:22;7474:55;;;7511:16;;;;7474:55;7590:22;;;;7550:15;;;;7352:270;;;7356:3;7206:422;;;;;:::o;7633:806::-;7682:5;7712:8;7702:80;;-1:-1:-1;7753:1:9;7767:5;;7702:80;7801:4;7791:76;;-1:-1:-1;7838:1:9;7852:5;;7791:76;7883:4;7901:1;7896:59;;;;7969:1;7964:130;;;;7876:218;;7896:59;7926:1;7917:10;;7940:5;;;7964:130;8001:3;7991:8;7988:17;7985:43;;;8008:18;;:::i;:::-;-1:-1:-1;;8064:1:9;8050:16;;8079:5;;7876:218;;8178:2;8168:8;8165:16;8159:3;8153:4;8150:13;8146:36;8140:2;8130:8;8127:16;8122:2;8116:4;8113:12;8109:35;8106:77;8103:159;;;-1:-1:-1;8215:19:9;;;8247:5;;8103:159;8294:34;8319:8;8313:4;8294:34;:::i;:::-;8364:6;8360:1;8356:6;8352:19;8343:7;8340:32;8337:58;;;8375:18;;:::i;:::-;8413:20;;7633:806;-1:-1:-1;;;7633:806:9:o;8444:131::-;8504:5;8533:36;8560:8;8554:4;8533:36;:::i;10358:135::-;10397:3;10418:17;;;10415:43;;10438:18;;:::i;:::-;-1:-1:-1;10485:1:9;10474:13;;10358:135::o;11984:125::-;12049:9;;;12070:10;;;12067:36;;;12083:18;;:::i;12114:168::-;12187:9;;;12218;;12235:15;;;12229:22;;12215:37;12205:71;;12256:18;;:::i;12287:217::-;12327:1;12353;12343:132;;12397:10;12392:3;12388:20;12385:1;12378:31;12432:4;12429:1;12422:15;12460:4;12457:1;12450:15;12343:132;-1:-1:-1;12489:9:9;;12287:217::o;12509:128::-;12576:9;;;12597:11;;;12594:37;;;12611:18;;:::i;13022:245::-;13089:6;13142:2;13130:9;13121:7;13117:23;13113:32;13110:52;;;13158:1;13155;13148:12;13110:52;13190:9;13184:16;13209:28;13231:5;13209:28;:::i;14090:250::-;14175:1;14185:113;14199:6;14196:1;14193:13;14185:113;;;14275:11;;;14269:18;14256:11;;;14249:39;14221:2;14214:10;14185:113;;;-1:-1:-1;;14332:1:9;14314:16;;14307:27;14090:250::o;14345:287::-;14474:3;14512:6;14506:13;14528:66;14587:6;14582:3;14575:4;14567:6;14563:17;14528:66;:::i;:::-;14610:16;;;;;14345:287;-1:-1:-1;;14345:287:9:o;14995:396::-;15144:2;15133:9;15126:21;15107:4;15176:6;15170:13;15219:6;15214:2;15203:9;15199:18;15192:34;15235:79;15307:6;15302:2;15291:9;15287:18;15282:2;15274:6;15270:15;15235:79;:::i;:::-;15375:2;15354:15;-1:-1:-1;;15350:29:9;15335:45;;;;15382:2;15331:54;;14995:396;-1:-1:-1;;14995:396:9:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1327800",
								"executionCost": "73565",
								"totalCost": "1401365"
							},
							"external": {
								"PRECISION_FACTOR()": "2395",
								"SMART_CHEF_FACTORY()": "2404",
								"accTokenPerShare()": "2352",
								"bonusEndBlock()": "2330",
								"deposit(uint256,uint256)": "infinite",
								"emergencyRewardWithdraw(uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"getTotalShares()": "infinite",
								"hasUserLimit()": "2417",
								"initialize(address,address,uint256,uint256,uint256,uint256,address)": "infinite",
								"isInitialized()": "2417",
								"lastRewardBlock()": "2329",
								"owner()": "2366",
								"pendingReward(uint256,address)": "infinite",
								"poolInfo(uint256)": "8949",
								"poolLength()": "2339",
								"poolLimitPerUser()": "2396",
								"recoverWrongTokens(address,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"rewardPerBlock()": "2395",
								"rewardToken()": "2447",
								"stakedToken()": "2426",
								"startBlock()": "2352",
								"stopReward()": "24480",
								"transferOwnership(address)": "infinite",
								"updatePoolLimitPerUser(bool,uint256)": "37173",
								"updateRewardPerBlock(uint256)": "27722",
								"updateStartAndEndBlocks(uint256,uint256)": "72319",
								"userInfo(uint256,address)": "6936",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"_getMultiplier(uint256,uint256)": "infinite",
								"_updatePool()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 377,
									"end": 13507,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 377,
									"end": 13507,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 377,
									"end": 13507,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2606,
									"end": 2670,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 2606,
									"end": 2670,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2606,
									"end": 2670,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2606,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2606,
									"end": 2670,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2606,
									"end": 2670,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2606,
									"end": 2670,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2606,
									"end": 2670,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2606,
									"end": 2670,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2606,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2631,
									"end": 2649,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2631,
									"end": 2662,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2631,
									"end": 2662,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2631,
									"end": 2662,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2652,
									"end": 2662,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 2631,
									"end": 2662,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2631,
									"end": 2662,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2631,
									"end": 2662,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 377,
									"end": 13507,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 377,
									"end": 13507,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 377,
									"end": 13507,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 377,
									"end": 13507,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 377,
									"end": 13507,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 13507,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 377,
									"end": 13507,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 13507,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 13507,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 377,
									"end": 13507,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 13507,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f036a249aef3603b7c4a983188cb40fda32ac6efb53d4e2a528ad4d9408dfa764736f6c63430008110033",
									".code": [
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "A9F8D181"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "D5002F2E"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "D5002F2E"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "E2BBB158"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "F7C618C1"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "A9F8D181"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "BD617191"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "CC7A262E"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "CCD34CD5"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "93F1A40B"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "93F1A40B"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "9513997F"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "98969E82"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "A0B40905"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "8F662915"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "92E8990E"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "441A3E70"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "80DC0672"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "83A5041C"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "8AE39CAC"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "441A3E70"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "48CD4CB1"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "5312EA8E"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "66FE9F8A"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "1AED6553"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "1AED6553"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "3279BEAB"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "392E53CD"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "3F138D4B"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "1F8A976"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "81E3EDA"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "1526FE27"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 13507,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9789,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9549,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9549,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 9549,
											"end": 9789,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9789,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9549,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 9549,
											"end": 9789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9789,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 9549,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 9549,
											"end": 9789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9789,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9549,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9789,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 12926,
											"end": 13021,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12926,
											"end": 13021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12998,
											"end": 13006,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 12998,
											"end": 13013,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12926,
											"end": 13021,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 12926,
											"end": 13021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12926,
											"end": 13021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12926,
											"end": 13021,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12926,
											"end": 13021,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 12926,
											"end": 13021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12926,
											"end": 13021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12926,
											"end": 13021,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12926,
											"end": 13021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12926,
											"end": 13021,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12926,
											"end": 13021,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12926,
											"end": 13021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12926,
											"end": 13021,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2449,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2449,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 583,
											"end": 608,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 583,
											"end": 608,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 583,
											"end": 608,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 639,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 642,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 624,
											"end": 642,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 617,
											"end": 651,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 617,
											"end": 651,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 617,
											"end": 651,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 617,
											"end": 651,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 667,
											"end": 685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 685,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 667,
											"end": 685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 660,
											"end": 694,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 571,
											"end": 573,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 556,
											"end": 574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 381,
											"end": 700,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1005,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 977,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 977,
											"end": 1005,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 977,
											"end": 1005,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1005,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 7812,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 7670,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 7670,
											"end": 7812,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 7812,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7670,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 7670,
											"end": 7812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 7812,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 7670,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 7670,
											"end": 7812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 777,
											"end": 802,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 777,
											"end": 802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 777,
											"end": 802,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 777,
											"end": 802,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 777,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 777,
											"end": 802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 777,
											"end": 802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 777,
											"end": 802,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 777,
											"end": 802,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 777,
											"end": 802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 777,
											"end": 802,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 777,
											"end": 802,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 777,
											"end": 802,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 777,
											"end": 802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 777,
											"end": 802,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 802,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 870,
											"end": 884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 870,
											"end": 884,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 863,
											"end": 885,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 845,
											"end": 886,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 845,
											"end": 886,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 833,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 836,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 777,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 705,
											"end": 892,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8102,
											"end": 8515,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 8102,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8102,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8102,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 8102,
											"end": 8515,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 8102,
											"end": 8515,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8102,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 8102,
											"end": 8515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8102,
											"end": 8515,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 8102,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8102,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 8102,
											"end": 8515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 6988,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 5927,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5927,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5927,
											"end": 6988,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 6988,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5927,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 5927,
											"end": 6988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 6988,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5927,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 5927,
											"end": 6988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1112,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1087,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1087,
											"end": 1112,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1087,
											"end": 1112,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1112,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1112,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7552,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 7129,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7129,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 7129,
											"end": 7552,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7552,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7129,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 7129,
											"end": 7552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7552,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 7129,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 7129,
											"end": 7552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1321,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1290,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1290,
											"end": 1321,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1290,
											"end": 1321,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1321,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1321,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8605,
											"end": 8693,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 8605,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8605,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8605,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 8605,
											"end": 8693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3120,
											"end": 4370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3120,
											"end": 4370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1392,
											"end": 1421,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1392,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1392,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1392,
											"end": 1421,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1392,
											"end": 1421,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1392,
											"end": 1421,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1392,
											"end": 1421,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2643,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2643,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2582,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2583,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2446,
											"end": 2649,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 866,
											"end": 897,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 866,
											"end": 897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 866,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 866,
											"end": 897,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 866,
											"end": 897,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 866,
											"end": 897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 866,
											"end": 897,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 687,
											"end": 711,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 687,
											"end": 711,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 687,
											"end": 711,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 687,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 687,
											"end": 711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 687,
											"end": 711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 687,
											"end": 711,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 687,
											"end": 711,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 687,
											"end": 711,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 687,
											"end": 711,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 687,
											"end": 711,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2531,
											"end": 2597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2597,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10033,
											"end": 10639,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 10033,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10033,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10033,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 10033,
											"end": 10639,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 10033,
											"end": 10639,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10033,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 10033,
											"end": 10639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10033,
											"end": 10639,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 10033,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10033,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 10033,
											"end": 10639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 10812,
											"end": 11669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 10812,
											"end": 11669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8919,
											"end": 9394,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8919,
											"end": 9394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8919,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8919,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 8919,
											"end": 9394,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 8919,
											"end": 9394,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8919,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 8919,
											"end": 9394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8919,
											"end": 9394,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 8919,
											"end": 9394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8919,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 8919,
											"end": 9394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1223,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1193,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1193,
											"end": 1223,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1193,
											"end": 1223,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1223,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1223,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 614,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 581,
											"end": 614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 581,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 581,
											"end": 614,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 581,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 581,
											"end": 614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 581,
											"end": 614,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 581,
											"end": 614,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 581,
											"end": 614,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1678,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1653,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1678,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 1653,
											"end": 1678,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1653,
											"end": 1678,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1653,
											"end": 1678,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1678,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1678,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1513,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1482,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 1513,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1482,
											"end": 1513,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1513,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11677,
											"end": 11920,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 11677,
											"end": 11920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11677,
											"end": 11920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 11677,
											"end": 11920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 11677,
											"end": 11920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 5777,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 4528,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4528,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4528,
											"end": 5777,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 5777,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4528,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 4528,
											"end": 5777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 5777,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4528,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4528,
											"end": 5777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9789,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 9549,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9657,
											"end": 9667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 9657,
											"end": 9667,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9642,
											"end": 9654,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 9642,
											"end": 9667,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 9634,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9634,
											"end": 9688,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9634,
											"end": 9688,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9688,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4088,
											"end": 4090,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9634,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9634,
											"end": 9688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9688,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4070,
											"end": 4091,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 4129,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 4107,
											"end": 4125,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4107,
											"end": 4125,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4107,
											"end": 4125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4130,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "141BDBDB081A185CC81CDD185C9D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4146,
											"end": 4164,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4146,
											"end": 4164,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4164,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4185,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9634,
											"end": 9688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 9634,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9634,
											"end": 9688,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9688,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9688,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9688,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9688,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9688,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 9634,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9699,
											"end": 9713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 9699,
											"end": 9731,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9699,
											"end": 9731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9699,
											"end": 9731,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9747,
											"end": 9781,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9747,
											"end": 9781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "C4D677EEF92893AC7EC52FAF8140FC6C851AB4736302B4F3A89DFB20696A0DF"
										},
										{
											"begin": 9747,
											"end": 9781,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9747,
											"end": 9781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9747,
											"end": 9781,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9781,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9781,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9781,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9747,
											"end": 9781,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9789,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 7812,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 7670,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7750,
											"end": 7761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 7750,
											"end": 7761,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7750,
											"end": 7804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7750,
											"end": 7804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7750,
											"end": 7761,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7783,
											"end": 7793,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7796,
											"end": 7803,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7750,
											"end": 7774,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 7750,
											"end": 7804,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7750,
											"end": 7804,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7750,
											"end": 7804,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 7812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 7812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8102,
											"end": 8515,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 8102,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 8238,
											"end": 8249,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8238,
											"end": 8249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8238,
											"end": 8249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8238,
											"end": 8249,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8213,
											"end": 8250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8213,
											"end": 8250,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8213,
											"end": 8250,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8213,
											"end": 8250,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8205,
											"end": 8277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 8205,
											"end": 8277,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8205,
											"end": 8277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8205,
											"end": 8277,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8205,
											"end": 8277,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8205,
											"end": 8277,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4435,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8205,
											"end": 8277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8205,
											"end": 8277,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8205,
											"end": 8277,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4415,
											"end": 4436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4474,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4475,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21B0B73737BA1031329039BA30B5B2B2103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4491,
											"end": 4509,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4491,
											"end": 4509,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4484,
											"end": 4536,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8205,
											"end": 8277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4231,
											"end": 4577,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8205,
											"end": 8277,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 8205,
											"end": 8277,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8321,
											"end": 8332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 8321,
											"end": 8332,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8321,
											"end": 8332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8321,
											"end": 8332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8321,
											"end": 8332,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8296,
											"end": 8333,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8296,
											"end": 8333,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8296,
											"end": 8333,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8296,
											"end": 8333,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8288,
											"end": 8360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 8288,
											"end": 8360,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8288,
											"end": 8360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8288,
											"end": 8360,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8288,
											"end": 8360,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8288,
											"end": 8360,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4784,
											"end": 4786,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8288,
											"end": 8360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8288,
											"end": 8360,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8288,
											"end": 8360,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4787,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4823,
											"end": 4825,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 4803,
											"end": 4821,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4803,
											"end": 4821,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4803,
											"end": 4821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4796,
											"end": 4826,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21B0B73737BA103132903932BBB0B932103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4842,
											"end": 4860,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4842,
											"end": 4860,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 4860,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4835,
											"end": 4887,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8288,
											"end": 8360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4582,
											"end": 4928,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8288,
											"end": 8360,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 8288,
											"end": 8360,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8373,
											"end": 8407,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8407,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8416,
											"end": 8426,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 8429,
											"end": 8441,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 8373,
											"end": 8442,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8442,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 8373,
											"end": 8442,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8460,
											"end": 8507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8460,
											"end": 8507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8460,
											"end": 8507,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5125,
											"end": 5157,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5157,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5107,
											"end": 5158,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5107,
											"end": 5158,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5167,
											"end": 5201,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5167,
											"end": 5201,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5167,
											"end": 5201,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8460,
											"end": 8507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "74545154AAC348A3EAC92596BD1971957CA94795F4E954EC5F613B55FAB78129"
										},
										{
											"begin": 8460,
											"end": 8507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8460,
											"end": 8507,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 8460,
											"end": 8507,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8460,
											"end": 8507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8460,
											"end": 8507,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8460,
											"end": 8507,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8460,
											"end": 8507,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8460,
											"end": 8507,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8460,
											"end": 8507,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8460,
											"end": 8507,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 8102,
											"end": 8515,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8102,
											"end": 8515,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8102,
											"end": 8515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 6988,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 5927,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6009,
											"end": 6030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6033,
											"end": 6047,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6047,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6047,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 6033,
											"end": 6047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6033,
											"end": 6047,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6047,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6047,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6047,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6033,
											"end": 6047,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6047,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6047,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6048,
											"end": 6058,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6059,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6059,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6059,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6078,
											"end": 6089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6078,
											"end": 6089,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6078,
											"end": 6100,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 6078,
											"end": 6100,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6070,
											"end": 6138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6070,
											"end": 6138,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6070,
											"end": 6138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6070,
											"end": 6138,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6070,
											"end": 6138,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6070,
											"end": 6138,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5414,
											"end": 5416,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6070,
											"end": 6138,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6070,
											"end": 6138,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5396,
											"end": 5417,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5453,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5456,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5526,
											"name": "PUSH",
											"source": 9,
											"value": "42464C593A20416D6F756E7420746F20776974686472617720746F6F20686967"
										},
										{
											"begin": 5472,
											"end": 5490,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5472,
											"end": 5490,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5472,
											"end": 5490,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5527,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5543,
											"end": 5561,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5543,
											"end": 5561,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5543,
											"end": 5561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5567,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5603,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5584,
											"end": 5603,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6070,
											"end": 6138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 5212,
											"end": 5609,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6070,
											"end": 6138,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6070,
											"end": 6138,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6149,
											"end": 6170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6173,
											"end": 6181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 6182,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 6173,
											"end": 6187,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6187,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6149,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6149,
											"end": 6187,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6291,
											"end": 6306,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 6274,
											"end": 6278,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6274,
											"end": 6287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6287,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6274,
											"end": 6287,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6255,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6251,
											"end": 6269,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6269,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6273,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 6251,
											"end": 6273,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6288,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6288,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6251,
											"end": 6288,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6288,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6288,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 6251,
											"end": 6288,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6247,
											"end": 6357,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6247,
											"end": 6357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 6247,
											"end": 6357,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6322,
											"end": 6345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 6340,
											"end": 6344,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6322,
											"end": 6339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 6322,
											"end": 6345,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6322,
											"end": 6345,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 6322,
											"end": 6345,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6369,
											"end": 6382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 6369,
											"end": 6380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 6369,
											"end": 6382,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6369,
											"end": 6382,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 6369,
											"end": 6382,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6395,
											"end": 6410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6413,
											"end": 6505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 6489,
											"end": 6493,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6489,
											"end": 6504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6489,
											"end": 6504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6489,
											"end": 6504,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 6467,
											"end": 6483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 6467,
											"end": 6483,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 6445,
											"end": 6461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6445,
											"end": 6461,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 6429,
											"end": 6433,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6429,
											"end": 6439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6429,
											"end": 6439,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6429,
											"end": 6439,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6417,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6413,
											"end": 6424,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6424,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 6413,
											"end": 6428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6440,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6413,
											"end": 6440,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6440,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 6413,
											"end": 6440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6444,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 6413,
											"end": 6462,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6462,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 6413,
											"end": 6462,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6466,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 6413,
											"end": 6484,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6484,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 6413,
											"end": 6484,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 6413,
											"end": 6505,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6505,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 6413,
											"end": 6505,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6395,
											"end": 6505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6522,
											"end": 6533,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6533,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 6518,
											"end": 6722,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6564,
											"end": 6575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6564,
											"end": 6575,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6564,
											"end": 6588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 6564,
											"end": 6588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6580,
											"end": 6587,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6564,
											"end": 6579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 6564,
											"end": 6588,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6564,
											"end": 6588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 6564,
											"end": 6588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6550,
											"end": 6588,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6550,
											"end": 6588,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6617,
											"end": 6628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6617,
											"end": 6628,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6617,
											"end": 6628,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6617,
											"end": 6628,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6617,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 6617,
											"end": 6641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6617,
											"end": 6632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 6617,
											"end": 6641,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6617,
											"end": 6641,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 6617,
											"end": 6641,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6603,
											"end": 6614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6603,
											"end": 6614,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6603,
											"end": 6641,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6656,
											"end": 6667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 6656,
											"end": 6667,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6656,
											"end": 6710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 6656,
											"end": 6710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6667,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6689,
											"end": 6699,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6702,
											"end": 6709,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6656,
											"end": 6680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 6656,
											"end": 6710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6656,
											"end": 6710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 6656,
											"end": 6710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6738,
											"end": 6749,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6738,
											"end": 6749,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6734,
											"end": 6832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 6734,
											"end": 6832,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 6766,
											"end": 6777,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 6766,
											"end": 6820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6766,
											"end": 6777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6799,
											"end": 6809,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6812,
											"end": 6819,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 6766,
											"end": 6820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 6766,
											"end": 6820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 6933,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 6916,
											"end": 6932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 6916,
											"end": 6932,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 6911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 6894,
											"end": 6910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6894,
											"end": 6910,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 6878,
											"end": 6882,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6878,
											"end": 6888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6878,
											"end": 6888,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6878,
											"end": 6888,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 6866,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 6873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6873,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 6873,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 6877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 6862,
											"end": 6877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 6889,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 6933,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 6862,
											"end": 6933,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6844,
											"end": 6859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6844,
											"end": 6859,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6844,
											"end": 6859,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6844,
											"end": 6933,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 6980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6951,
											"end": 6980,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6960,
											"end": 6970,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6960,
											"end": 6970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 6980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 6951,
											"end": 6980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6951,
											"end": 6980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6951,
											"end": 6980,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 6980,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 6980,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 6980,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 6980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 6980,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5927,
											"end": 6988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 6988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 6988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7552,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 7129,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7239,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 7225,
											"end": 7239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7225,
											"end": 7239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7239,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7239,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7225,
											"end": 7239,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7239,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7239,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7240,
											"end": 7250,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7251,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7251,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7251,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7251,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7289,
											"end": 7300,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7289,
											"end": 7300,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7311,
											"end": 7326,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7311,
											"end": 7326,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7311,
											"end": 7326,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 7337,
											"end": 7352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7337,
											"end": 7352,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7337,
											"end": 7356,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7337,
											"end": 7356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7337,
											"end": 7356,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7337,
											"end": 7356,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7373,
											"end": 7393,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7373,
											"end": 7393,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7369,
											"end": 7485,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7369,
											"end": 7485,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 7410,
											"end": 7421,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7410,
											"end": 7473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7410,
											"end": 7421,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7443,
											"end": 7453,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7456,
											"end": 7472,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7434,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 7410,
											"end": 7473,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7473,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7410,
											"end": 7473,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7532,
											"end": 7543,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7532,
											"end": 7543,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7502,
											"end": 7544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7502,
											"end": 7544,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7520,
											"end": 7530,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7502,
											"end": 7544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695"
										},
										{
											"begin": 7502,
											"end": 7544,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7502,
											"end": 7544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7502,
											"end": 7544,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7502,
											"end": 7544,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7502,
											"end": 7544,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7502,
											"end": 7544,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7502,
											"end": 7544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7502,
											"end": 7544,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7552,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7552,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8605,
											"end": 8693,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 8605,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8685,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 8657,
											"end": 8670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8657,
											"end": 8685,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8605,
											"end": 8693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3393,
											"end": 3407,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 3385,
											"end": 3430,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3430,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3385,
											"end": 3430,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3385,
											"end": 3430,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3430,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5950,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3385,
											"end": 3430,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3385,
											"end": 3430,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3430,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5930,
											"end": 5951,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 5989,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5960,
											"end": 5990,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "109193164E881053149150511657D2539255"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5999,
											"end": 6047,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 5746,
											"end": 6088,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3430,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 3385,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3459,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3481,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6297,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6277,
											"end": 6298,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6334,
											"end": 6336,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6314,
											"end": 6332,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6314,
											"end": 6332,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6314,
											"end": 6332,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6307,
											"end": 6337,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42464C593A204E4F545F464143544F5259"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6353,
											"end": 6371,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6353,
											"end": 6371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6346,
											"end": 6393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 6093,
											"end": 6434,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3441,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3572,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3559,
											"end": 3579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3579,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3559,
											"end": 3579,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3559,
											"end": 3579,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3579,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3579,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 3603,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3640,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3666,
											"end": 3680,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3666,
											"end": 3698,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3666,
											"end": 3698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3666,
											"end": 3698,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3709,
											"end": 3719,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3744,
											"end": 3757,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3744,
											"end": 3774,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3744,
											"end": 3774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3744,
											"end": 3774,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3791,
											"end": 3812,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3791,
											"end": 3812,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 3787,
											"end": 3911,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 3841,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3829,
											"end": 3848,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 3848,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3829,
											"end": 3848,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3829,
											"end": 3848,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 3848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 3848,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3863,
											"end": 3879,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3863,
											"end": 3899,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3863,
											"end": 3899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3863,
											"end": 3899,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 3911,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 3787,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3972,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3961,
											"end": 3972,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3950,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3950,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3961,
											"end": 3972,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3972,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3981,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 3961,
											"end": 3981,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3972,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 3961,
											"end": 3983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 3984,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3953,
											"end": 3984,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4025,
											"end": 4027,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 4003,
											"end": 4022,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4027,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3995,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3995,
											"end": 4060,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3995,
											"end": 4060,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4060,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3995,
											"end": 4060,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3995,
											"end": 4060,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6919,
											"end": 6921,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3995,
											"end": 4060,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3995,
											"end": 4060,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3995,
											"end": 4060,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6901,
											"end": 6922,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6960,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 6938,
											"end": 6956,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6938,
											"end": 6956,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6938,
											"end": 6956,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6931,
											"end": 6961,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7027,
											"name": "PUSH",
											"source": 9,
											"value": "42464C593A204D75737420626520696E666572696F7220746F20333000000000"
										},
										{
											"begin": 6977,
											"end": 6995,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6977,
											"end": 6995,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6977,
											"end": 6995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6970,
											"end": 7028,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7045,
											"end": 7063,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7045,
											"end": 7063,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3995,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 6717,
											"end": 7069,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3995,
											"end": 4060,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3995,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4105,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4113,
											"end": 4115,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4105,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 4105,
											"end": 4141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4105,
											"end": 4141,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4105,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4100,
											"end": 4142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4102,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 4100,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 4100,
											"end": 4142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4142,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4100,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4073,
											"end": 4089,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4073,
											"end": 4143,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4228,
											"end": 4238,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4228,
											"end": 4238,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4210,
											"end": 4225,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4210,
											"end": 4238,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4337,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4362,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 4337,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 4370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 4370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 4370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10033,
											"end": 10639,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 10033,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 10164,
											"end": 10174,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10149,
											"end": 10161,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 10149,
											"end": 10174,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10141,
											"end": 10195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 10141,
											"end": 10195,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10141,
											"end": 10195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10141,
											"end": 10195,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10141,
											"end": 10195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10141,
											"end": 10195,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4088,
											"end": 4090,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10141,
											"end": 10195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10141,
											"end": 10195,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10141,
											"end": 10195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4070,
											"end": 4091,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 4129,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 4107,
											"end": 4125,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4107,
											"end": 4125,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4107,
											"end": 4125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4130,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "141BDBDB081A185CC81CDD185C9D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4146,
											"end": 4164,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4146,
											"end": 4164,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4164,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4185,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10141,
											"end": 10195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3886,
											"end": 4226,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10141,
											"end": 10195,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 10141,
											"end": 10195,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10228,
											"end": 10242,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10214,
											"end": 10225,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10214,
											"end": 10242,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10206,
											"end": 10293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 10206,
											"end": 10293,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10206,
											"end": 10293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10206,
											"end": 10293,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10206,
											"end": 10293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10206,
											"end": 10293,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8782,
											"end": 8784,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10206,
											"end": 10293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10206,
											"end": 10293,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10206,
											"end": 10293,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8764,
											"end": 8785,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8821,
											"end": 8823,
											"name": "PUSH",
											"source": 9,
											"value": "2E"
										},
										{
											"begin": 8801,
											"end": 8819,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8801,
											"end": 8819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8801,
											"end": 8819,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8794,
											"end": 8824,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8860,
											"end": 8894,
											"name": "PUSH",
											"source": 9,
											"value": "4E6577207374617274426C6F636B206D757374206265206C6F77657220746861"
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E206E657720656E64426C6F636B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8904,
											"end": 8948,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8965,
											"end": 8984,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8965,
											"end": 8984,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10206,
											"end": 10293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 8580,
											"end": 8990,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10206,
											"end": 10293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 10206,
											"end": 10293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10327,
											"end": 10338,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10324,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10338,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10304,
											"end": 10391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 10304,
											"end": 10391,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10304,
											"end": 10391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10304,
											"end": 10391,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10304,
											"end": 10391,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10304,
											"end": 10391,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9197,
											"end": 9199,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10304,
											"end": 10391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10304,
											"end": 10391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10304,
											"end": 10391,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9179,
											"end": 9200,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9236,
											"end": 9238,
											"name": "PUSH",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 9216,
											"end": 9234,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9216,
											"end": 9234,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9216,
											"end": 9234,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9209,
											"end": 9239,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9275,
											"end": 9309,
											"name": "PUSH",
											"source": 9,
											"value": "4E6577207374617274426C6F636B206D75737420626520686967686572207468"
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9248,
											"end": 9310,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E2063757272656E7420626C6F636B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9326,
											"end": 9344,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9326,
											"end": 9344,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9326,
											"end": 9344,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9319,
											"end": 9365,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9382,
											"end": 9401,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 9382,
											"end": 9401,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 8995,
											"end": 9407,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10391,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 10304,
											"end": 10391,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10404,
											"end": 10414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 10404,
											"end": 10428,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10404,
											"end": 10428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10404,
											"end": 10428,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10439,
											"end": 10452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10536,
											"end": 10551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 10536,
											"end": 10564,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10536,
											"end": 10564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10536,
											"end": 10564,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10582,
											"end": 10631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10582,
											"end": 10631,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10582,
											"end": 10631,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9586,
											"end": 9611,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9586,
											"end": 9611,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9586,
											"end": 9611,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9642,
											"end": 9644,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9627,
											"end": 9645,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9627,
											"end": 9645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9620,
											"end": 9654,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9620,
											"end": 9654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9620,
											"end": 9654,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10582,
											"end": 10631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7CD0AB87D19036F3DFADADB232C78AA4879DDA3F0C994A9D637532410EE2CE06"
										},
										{
											"begin": 10582,
											"end": 10631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9577,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10582,
											"end": 10631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 9412,
											"end": 9660,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10887,
											"end": 10894,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10931,
											"end": 10945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10945,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10939,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 10931,
											"end": 10945,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10931,
											"end": 10945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10945,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10945,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10931,
											"end": 10945,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10945,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10945,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10931,
											"end": 10952,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10952,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10952,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10952,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10952,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10952,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10952,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 10995,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10887,
											"end": 10894,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10887,
											"end": 10894,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 10995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10940,
											"end": 10944,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10940,
											"end": 10944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 10987,
											"end": 11001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10963,
											"end": 11001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10963,
											"end": 11001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11031,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11034,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 11034,
											"end": 11048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 11034,
											"end": 11050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11034,
											"end": 11050,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 11034,
											"end": 11050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11080,
											"end": 11095,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 11080,
											"end": 11095,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11065,
											"end": 11077,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 11065,
											"end": 11095,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 11065,
											"end": 11115,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11065,
											"end": 11115,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11065,
											"end": 11115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 11065,
											"end": 11115,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11099,
											"end": 11115,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11099,
											"end": 11115,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11099,
											"end": 11115,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11065,
											"end": 11115,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 11065,
											"end": 11115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11061,
											"end": 11662,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11061,
											"end": 11662,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 11061,
											"end": 11662,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11153,
											"end": 11198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11185,
											"end": 11197,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 11153,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 11153,
											"end": 11198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11153,
											"end": 11198,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 11153,
											"end": 11198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11198,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11198,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11213,
											"end": 11231,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11234,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 11249,
											"end": 11263,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 11249,
											"end": 11263,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11234,
											"end": 11244,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11234,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 11234,
											"end": 11248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11234,
											"end": 11264,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11234,
											"end": 11264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11234,
											"end": 11264,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11234,
											"end": 11264,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11234,
											"end": 11264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11234,
											"end": 11264,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 11234,
											"end": 11264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11213,
											"end": 11264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11213,
											"end": 11264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11279,
											"end": 11308,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11328,
											"end": 11399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 11349,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 11386,
											"end": 11397,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11349,
											"end": 11381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 11364,
											"end": 11380,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 11364,
											"end": 11380,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11349,
											"end": 11359,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11349,
											"end": 11363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 11349,
											"end": 11363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11349,
											"end": 11381,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11349,
											"end": 11381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11349,
											"end": 11381,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11349,
											"end": 11381,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11349,
											"end": 11381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11349,
											"end": 11398,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 11349,
											"end": 11398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11328,
											"end": 11344,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 11328,
											"end": 11344,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11328,
											"end": 11344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 11328,
											"end": 11399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11328,
											"end": 11399,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 11328,
											"end": 11399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11279,
											"end": 11399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11279,
											"end": 11399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11421,
											"end": 11518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 11502,
											"end": 11506,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11502,
											"end": 11517,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 11502,
											"end": 11517,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11502,
											"end": 11517,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11421,
											"end": 11497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11421,
											"end": 11475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 11453,
											"end": 11474,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11421,
											"end": 11448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 11437,
											"end": 11441,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 11437,
											"end": 11447,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 11437,
											"end": 11447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11437,
											"end": 11447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11421,
											"end": 11425,
											"name": "DUP14",
											"source": 5
										},
										{
											"begin": 11421,
											"end": 11432,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11421,
											"end": 11432,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11421,
											"end": 11432,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11421,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 11421,
											"end": 11436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11421,
											"end": 11448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11421,
											"end": 11448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11421,
											"end": 11448,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11421,
											"end": 11448,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11421,
											"end": 11448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11421,
											"end": 11518,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 11421,
											"end": 11518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11414,
											"end": 11518,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 11414,
											"end": 11518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11414,
											"end": 11518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11414,
											"end": 11518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11414,
											"end": 11518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11414,
											"end": 11518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11414,
											"end": 11518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11414,
											"end": 11518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11414,
											"end": 11518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 11414,
											"end": 11518,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11061,
											"end": 11662,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 11061,
											"end": 11662,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 11634,
											"end": 11638,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11634,
											"end": 11649,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 11634,
											"end": 11649,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11634,
											"end": 11649,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 11612,
											"end": 11628,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 11612,
											"end": 11628,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 11590,
											"end": 11606,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 11590,
											"end": 11606,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 11574,
											"end": 11578,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 11574,
											"end": 11584,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 11574,
											"end": 11584,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11574,
											"end": 11584,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11562,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11569,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11558,
											"end": 11569,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11569,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 11558,
											"end": 11573,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11585,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11585,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11558,
											"end": 11585,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11650,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 11558,
											"end": 11650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11551,
											"end": 11650,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11551,
											"end": 11650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11551,
											"end": 11650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11551,
											"end": 11650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11551,
											"end": 11650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10812,
											"end": 11669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10812,
											"end": 11669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8919,
											"end": 9394,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 8919,
											"end": 9394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9036,
											"end": 9048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9036,
											"end": 9048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9036,
											"end": 9048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9036,
											"end": 9048,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 9036,
											"end": 9048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 9036,
											"end": 9048,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9028,
											"end": 9064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 9028,
											"end": 9064,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9028,
											"end": 9064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9028,
											"end": 9064,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9028,
											"end": 9064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9028,
											"end": 9064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9867,
											"end": 9869,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9028,
											"end": 9064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9028,
											"end": 9064,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9028,
											"end": 9064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9849,
											"end": 9870,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 9908,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 9886,
											"end": 9904,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9886,
											"end": 9904,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9886,
											"end": 9904,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9879,
											"end": 9909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "135D5CDD081899481CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9925,
											"end": 9943,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9925,
											"end": 9943,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9925,
											"end": 9943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9918,
											"end": 9959,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9028,
											"end": 9064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 9665,
											"end": 10000,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9028,
											"end": 9064,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 9028,
											"end": 9064,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9079,
											"end": 9092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9075,
											"end": 9341,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9075,
											"end": 9341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 9075,
											"end": 9341,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9137,
											"end": 9153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 9137,
											"end": 9153,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9117,
											"end": 9134,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9117,
											"end": 9153,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9109,
											"end": 9182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 9109,
											"end": 9182,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9109,
											"end": 9182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9109,
											"end": 9182,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9109,
											"end": 9182,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9109,
											"end": 9182,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10207,
											"end": 10209,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9109,
											"end": 9182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9109,
											"end": 9182,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9109,
											"end": 9182,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10189,
											"end": 10210,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10246,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 10226,
											"end": 10244,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10226,
											"end": 10244,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10244,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10219,
											"end": 10249,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10285,
											"end": 10311,
											"name": "PUSH",
											"source": 9,
											"value": "4E6577206C696D6974206D757374206265206869676865720000000000000000"
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10258,
											"end": 10312,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10329,
											"end": 10347,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10329,
											"end": 10347,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 10005,
											"end": 10353,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9182,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 9109,
											"end": 9182,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9197,
											"end": 9213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 9197,
											"end": 9233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9197,
											"end": 9233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9197,
											"end": 9233,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9075,
											"end": 9341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 9075,
											"end": 9341,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9075,
											"end": 9341,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 9075,
											"end": 9341,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9266,
											"end": 9278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9266,
											"end": 9294,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9266,
											"end": 9294,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9266,
											"end": 9294,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9266,
											"end": 9294,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9266,
											"end": 9294,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9266,
											"end": 9294,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9266,
											"end": 9294,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9266,
											"end": 9294,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9266,
											"end": 9294,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9266,
											"end": 9294,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9309,
											"end": 9325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9075,
											"end": 9341,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 9075,
											"end": 9341,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "241F67EE5F41B7A5CABF911367329BE7215900F602EBFC47F89DCE2A6BCD847C"
										},
										{
											"begin": 9369,
											"end": 9385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 9369,
											"end": 9385,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9356,
											"end": 9386,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 9356,
											"end": 9386,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 318,
											"end": 336,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 199,
											"end": 376,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11677,
											"end": 11920,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 11677,
											"end": 11920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11722,
											"end": 11741,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11722,
											"end": 11741,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11759,
											"end": 11913,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 11759,
											"end": 11913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11787,
											"end": 11795,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 11787,
											"end": 11802,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11781,
											"end": 11802,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11781,
											"end": 11802,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 11759,
											"end": 11913,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11759,
											"end": 11913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 11759,
											"end": 11913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11839,
											"end": 11901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 11855,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 11880,
											"end": 11888,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 11889,
											"end": 11892,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 11880,
											"end": 11893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 11893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 11899,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 11880,
											"end": 11899,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 11899,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11863,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 11864,
											"end": 11867,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 11855,
											"end": 11868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11875,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 11855,
											"end": 11875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11875,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 11855,
											"end": 11879,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11900,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11855,
											"end": 11900,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11900,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 11855,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11839,
											"end": 11850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11839,
											"end": 11850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11839,
											"end": 11854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 11839,
											"end": 11901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11839,
											"end": 11901,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 11839,
											"end": 11901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11825,
											"end": 11901,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11804,
											"end": 11809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 11804,
											"end": 11809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11804,
											"end": 11809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 11804,
											"end": 11809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11804,
											"end": 11809,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 11804,
											"end": 11809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11804,
											"end": 11809,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11804,
											"end": 11809,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11759,
											"end": 11913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 11759,
											"end": 11913,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11759,
											"end": 11913,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 11759,
											"end": 11913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11759,
											"end": 11913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11677,
											"end": 11920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11677,
											"end": 11920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 5777,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4528,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 4632,
											"end": 4646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4647,
											"end": 4657,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 4693,
											"end": 4707,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4707,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 4629,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4641,
											"end": 4645,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4641,
											"end": 4645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 4693,
											"end": 4707,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4707,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4707,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4707,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4724,
											"end": 4736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 4724,
											"end": 4736,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4736,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4736,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4724,
											"end": 4736,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4736,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4736,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4724,
											"end": 4736,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4851,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 4720,
											"end": 4851,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4789,
											"end": 4805,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4784,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 4761,
											"end": 4785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4768,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 4761,
											"end": 4785,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 4761,
											"end": 4785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4805,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4805,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 4753,
											"end": 4839,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4753,
											"end": 4839,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4753,
											"end": 4839,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4839,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10702,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4753,
											"end": 4839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4753,
											"end": 4839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4839,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10682,
											"end": 10703,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10739,
											"end": 10741,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 10719,
											"end": 10737,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10719,
											"end": 10737,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10719,
											"end": 10737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10712,
											"end": 10742,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10778,
											"end": 10809,
											"name": "PUSH",
											"source": 9,
											"value": "42464C593A205573657220616D6F756E742061626F7665206C696D6974000000"
										},
										{
											"begin": 10758,
											"end": 10776,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10758,
											"end": 10776,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10776,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10751,
											"end": 10810,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4753,
											"end": 4839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 10498,
											"end": 10851,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4753,
											"end": 4839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 4753,
											"end": 4839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4863,
											"end": 4876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 4863,
											"end": 4874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4863,
											"end": 4876,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4863,
											"end": 4876,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 4863,
											"end": 4876,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4904,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4904,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4908,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4889,
											"end": 5387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 4889,
											"end": 5387,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4954,
											"end": 4967,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4954,
											"end": 4967,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4971,
											"end": 4986,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 4971,
											"end": 4986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 4931,
											"end": 4968,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 4931,
											"end": 4968,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4968,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 4931,
											"end": 4968,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4986,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4927,
											"end": 5248,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4927,
											"end": 5248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 4927,
											"end": 5248,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5006,
											"end": 5021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 5084,
											"end": 5088,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5084,
											"end": 5099,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5099,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 5062,
											"end": 5078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5062,
											"end": 5078,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5057,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 5040,
											"end": 5056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5040,
											"end": 5056,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5028,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5035,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5035,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5024,
											"end": 5039,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5057,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5057,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5024,
											"end": 5057,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5057,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5100,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 5024,
											"end": 5100,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5006,
											"end": 5100,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5123,
											"end": 5134,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5123,
											"end": 5134,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5119,
											"end": 5233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 5119,
											"end": 5233,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 5159,
											"end": 5170,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 5159,
											"end": 5213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5159,
											"end": 5170,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5192,
											"end": 5202,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5205,
											"end": 5212,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 5159,
											"end": 5213,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 5159,
											"end": 5213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 5248,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4927,
											"end": 5248,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 4927,
											"end": 5248,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5375,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5339,
											"end": 5357,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5357,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5375,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4889,
											"end": 5387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 4889,
											"end": 5387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5403,
											"end": 5414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5403,
											"end": 5414,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5399,
											"end": 5622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 5399,
											"end": 5622,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5456,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5456,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 5445,
											"end": 5469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5461,
											"end": 5468,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 5445,
											"end": 5469,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 5445,
											"end": 5469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5431,
											"end": 5469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5431,
											"end": 5469,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5498,
											"end": 5509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5509,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 5498,
											"end": 5522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5521,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 5498,
											"end": 5522,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 5498,
											"end": 5522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5484,
											"end": 5495,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5495,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5522,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5537,
											"end": 5548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 5537,
											"end": 5548,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5537,
											"end": 5610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 5537,
											"end": 5610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5537,
											"end": 5548,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5574,
											"end": 5584,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5595,
											"end": 5599,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5537,
											"end": 5565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 5537,
											"end": 5610,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5537,
											"end": 5610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 5537,
											"end": 5610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5652,
											"end": 5723,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 5706,
											"end": 5722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5706,
											"end": 5722,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5652,
											"end": 5701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 5684,
											"end": 5700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5684,
											"end": 5700,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5652,
											"end": 5679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 5668,
											"end": 5672,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5668,
											"end": 5678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5668,
											"end": 5678,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5668,
											"end": 5678,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5652,
											"end": 5656,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5652,
											"end": 5663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5663,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5652,
											"end": 5663,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5652,
											"end": 5667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5652,
											"end": 5667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5652,
											"end": 5679,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5652,
											"end": 5679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5652,
											"end": 5679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5652,
											"end": 5679,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5652,
											"end": 5679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5652,
											"end": 5723,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 5652,
											"end": 5723,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5634,
											"end": 5649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5634,
											"end": 5649,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5634,
											"end": 5649,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5634,
											"end": 5723,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5741,
											"end": 5769,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5759,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5749,
											"end": 5759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 5741,
											"end": 5769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5741,
											"end": 5769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5741,
											"end": 5769,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5769,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5769,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5769,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5769,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5769,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 5777,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 5777,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11060,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11061,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11097,
											"end": 11099,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 11077,
											"end": 11095,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11077,
											"end": 11095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11077,
											"end": 11095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11100,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11136,
											"end": 11170,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11109,
											"end": 11171,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11180,
											"end": 11216,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11233,
											"end": 11252,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 11233,
											"end": 11252,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10856,
											"end": 11258,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11465,
											"end": 11467,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11447,
											"end": 11468,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11447,
											"end": 11468,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11447,
											"end": 11468,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11502,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11484,
											"end": 11502,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11502,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11477,
											"end": 11507,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11543,
											"end": 11577,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11516,
											"end": 11578,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 11263,
											"end": 11619,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 771,
											"end": 982,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 771,
											"end": 982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5125,
											"end": 5157,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5157,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5107,
											"end": 5158,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5167,
											"end": 5201,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5167,
											"end": 5201,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5167,
											"end": 5201,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 888,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 888,
											"end": 974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 908,
											"end": 913,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 908,
											"end": 913,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 938,
											"end": 961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 915,
											"end": 973,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 915,
											"end": 973,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 888,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 888,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 888,
											"end": 974,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 888,
											"end": 974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 771,
											"end": 982,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 771,
											"end": 982,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 771,
											"end": 982,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 771,
											"end": 982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11826,
											"end": 11828,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11808,
											"end": 11829,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11865,
											"end": 11867,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11845,
											"end": 11863,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11845,
											"end": 11863,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11845,
											"end": 11863,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11838,
											"end": 11868,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11904,
											"end": 11937,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 11884,
											"end": 11902,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11884,
											"end": 11902,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11884,
											"end": 11902,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 11938,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11955,
											"end": 11973,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11955,
											"end": 11973,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 11624,
											"end": 11979,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12021,
											"end": 12918,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 12021,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12084,
											"end": 12099,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 12084,
											"end": 12099,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 12068,
											"end": 12099,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12021,
											"end": 12918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12224,
											"end": 12243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12246,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 12246,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 12246,
											"end": 12262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12246,
											"end": 12262,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 12246,
											"end": 12262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12224,
											"end": 12262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12224,
											"end": 12262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12532,
											"end": 12543,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12547,
											"end": 12548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12532,
											"end": 12548,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12528,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 12528,
											"end": 12628,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12583,
											"end": 12595,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 12565,
											"end": 12580,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 12565,
											"end": 12595,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 12021,
											"end": 12918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12528,
											"end": 12628,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 12528,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12640,
											"end": 12658,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12661,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 12676,
											"end": 12691,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 12676,
											"end": 12691,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12693,
											"end": 12705,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 12661,
											"end": 12675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 12661,
											"end": 12706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12661,
											"end": 12706,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 12661,
											"end": 12706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12640,
											"end": 12706,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12640,
											"end": 12706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12717,
											"end": 12735,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12738,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 12753,
											"end": 12767,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 12753,
											"end": 12767,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12738,
											"end": 12748,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12738,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 12738,
											"end": 12752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12738,
											"end": 12768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12738,
											"end": 12768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12738,
											"end": 12768,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12738,
											"end": 12768,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12738,
											"end": 12768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12738,
											"end": 12768,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 12738,
											"end": 12768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12717,
											"end": 12768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12717,
											"end": 12768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12798,
											"end": 12869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 12819,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 12856,
											"end": 12867,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12819,
											"end": 12851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 12834,
											"end": 12850,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 12834,
											"end": 12850,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12819,
											"end": 12829,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12819,
											"end": 12833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 12819,
											"end": 12833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12819,
											"end": 12851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12819,
											"end": 12851,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12819,
											"end": 12851,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12819,
											"end": 12851,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12819,
											"end": 12851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12798,
											"end": 12869,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 12798,
											"end": 12869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12779,
											"end": 12795,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 12779,
											"end": 12869,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12898,
											"end": 12910,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 12880,
											"end": 12895,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 12880,
											"end": 12910,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12021,
											"end": 12918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13504,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 13195,
											"end": 13504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13270,
											"end": 13277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13301,
											"end": 13314,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13301,
											"end": 13314,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13294,
											"end": 13297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13294,
											"end": 13314,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 13290,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 13290,
											"end": 13497,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13338,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 13338,
											"end": 13341,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13346,
											"end": 13351,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13338,
											"end": 13345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 13338,
											"end": 13352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13338,
											"end": 13352,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 13338,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13331,
											"end": 13352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13331,
											"end": 13352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13331,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 13331,
											"end": 13352,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13290,
											"end": 13497,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 13290,
											"end": 13497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13383,
											"end": 13396,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13383,
											"end": 13396,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13374,
											"end": 13379,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 13370,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 13370,
											"end": 13497,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13420,
											"end": 13421,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13413,
											"end": 13421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 13413,
											"end": 13421,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13370,
											"end": 13497,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 13370,
											"end": 13497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13461,
											"end": 13474,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13461,
											"end": 13474,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13461,
											"end": 13485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 13461,
											"end": 13485,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13479,
											"end": 13484,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13461,
											"end": 13478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 13461,
											"end": 13485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12900,
											"end": 12915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12900,
											"end": 12915,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12900,
											"end": 12915,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12882,
											"end": 12916,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12967,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12967,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12932,
											"end": 12950,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12932,
											"end": 12950,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12932,
											"end": 12950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12925,
											"end": 12968,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12984,
											"end": 13002,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12984,
											"end": 13002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12984,
											"end": 13002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12977,
											"end": 13011,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12977,
											"end": 13011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12977,
											"end": 13011,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1134,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 1134,
											"end": 1230,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12817,
											"end": 12835,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 12817,
											"end": 12835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 12642,
											"end": 13017,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1134,
											"end": 1230,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 1134,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 990,
											"end": 1238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 4056,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 3282,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3729,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 3760,
											"end": 3764,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 8,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3740,
											"end": 3745,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3801,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3801,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3816,
											"end": 3837,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 3812,
											"end": 4049,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 3981,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 3960,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13474,
											"end": 13476,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13456,
											"end": 13477,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13513,
											"end": 13515,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 13493,
											"end": 13511,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13493,
											"end": 13511,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13486,
											"end": 13516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13552,
											"end": 13586,
											"name": "PUSH",
											"source": 9,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13525,
											"end": 13587,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13603,
											"end": 13621,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13603,
											"end": 13621,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13603,
											"end": 13621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13596,
											"end": 13636,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13653,
											"end": 13672,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 13653,
											"end": 13672,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 13272,
											"end": 13678,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4088,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 4037,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "tag",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3873,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "tag",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5125,
											"end": 5137,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5157,
											"end": 5178,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13885,
											"end": 13887,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13867,
											"end": 13888,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13924,
											"end": 13926,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 13904,
											"end": 13922,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13904,
											"end": 13922,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13904,
											"end": 13922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13897,
											"end": 13927,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13963,
											"end": 13997,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 13943,
											"end": 13961,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13943,
											"end": 13961,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13943,
											"end": 13961,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13936,
											"end": 13998,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14014,
											"end": 14032,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14014,
											"end": 14032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14014,
											"end": 14032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14007,
											"end": 14043,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14060,
											"end": 14079,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 14060,
											"end": 14079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 13683,
											"end": 14085,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5278,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5301,
											"end": 5306,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 5282,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "410"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 2,
											"value": "410"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 5357,
											"end": 5363,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5330,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 5330,
											"end": 5399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "tag",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4960,
											"end": 5406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7646,
											"end": 7658,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7674,
											"end": 7681,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7701,
											"end": 7711,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7722,
											"end": 7723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7723,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14839,
											"end": 14841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14821,
											"end": 14842,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14878,
											"end": 14880,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 14858,
											"end": 14876,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14858,
											"end": 14876,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14858,
											"end": 14876,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14851,
											"end": 14881,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14917,
											"end": 14948,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 14897,
											"end": 14915,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14897,
											"end": 14915,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14897,
											"end": 14915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14890,
											"end": 14949,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14966,
											"end": 14984,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14966,
											"end": 14984,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 14637,
											"end": 14990,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8003,
											"end": 8013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "tag",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8064,
											"end": 8076,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8796,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8997,
											"end": 9014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9059,
											"end": 9074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9046,
											"end": 9056,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9044,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9057,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9031,
											"end": 9075,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "tag",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9126,
											"end": 9138,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "429"
										},
										{
											"begin": 9119,
											"end": 9139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 897,
											"end": 1028,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 897,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 972,
											"end": 1003,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 972,
											"end": 1003,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1004,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1004,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 952,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 952,
											"end": 1022,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1018,
											"end": 1019,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1015,
											"end": 1016,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1008,
											"end": 1020,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 1348,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1033,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1162,
											"end": 1164,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1137,
											"end": 1160,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1133,
											"end": 1165,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1130,
											"end": 1182,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1130,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 1130,
											"end": 1182,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1178,
											"end": 1179,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1176,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1168,
											"end": 1180,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1130,
											"end": 1182,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 1130,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1217,
											"end": 1226,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1227,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 1261,
											"end": 1266,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 1236,
											"end": 1267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1267,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 1236,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1291,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1340,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1310,
											"end": 1342,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1310,
											"end": 1342,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1033,
											"end": 1348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1353,
											"end": 1601,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1353,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1421,
											"end": 1427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1435,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1482,
											"end": 1484,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1470,
											"end": 1479,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1461,
											"end": 1468,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1457,
											"end": 1480,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1453,
											"end": 1485,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1593,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1576,
											"end": 1594,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1576,
											"end": 1594,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1576,
											"end": 1594,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1595,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1595,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1353,
											"end": 1601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 2441,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1606,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1749,
											"end": 1755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1763,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1771,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1773,
											"end": 1779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1787,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1795,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1853,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1838,
											"end": 1847,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1829,
											"end": 1836,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1848,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1821,
											"end": 1854,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1818,
											"end": 1871,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1818,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 1818,
											"end": 1871,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1818,
											"end": 1871,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 1818,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1915,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1916,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1925,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1925,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 1925,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1925,
											"end": 1956,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 1925,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2034,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2036,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2045,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 2004,
											"end": 2036,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2045,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 2045,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2045,
											"end": 2078,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 2045,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2097,
											"end": 2104,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2151,
											"end": 2153,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2154,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2154,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2155,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2155,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2202,
											"end": 2204,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2187,
											"end": 2205,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2174,
											"end": 2206,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2174,
											"end": 2206,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2253,
											"end": 2256,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2238,
											"end": 2257,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2225,
											"end": 2258,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2225,
											"end": 2258,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2305,
											"end": 2308,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2290,
											"end": 2309,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2290,
											"end": 2309,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2310,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2310,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2362,
											"end": 2365,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 2347,
											"end": 2366,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2347,
											"end": 2366,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2367,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 2334,
											"end": 2367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 2376,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2409,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 2376,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2435,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2418,
											"end": 2435,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2418,
											"end": 2435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2418,
											"end": 2435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 2441,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 2441,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 2441,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 2441,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 2441,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 2441,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 2441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 2441,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 2441,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 2441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 2441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2969,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2654,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2722,
											"end": 2728,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2736,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2785,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2771,
											"end": 2780,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2762,
											"end": 2769,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 2781,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2751,
											"end": 2803,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2751,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 2751,
											"end": 2803,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2799,
											"end": 2800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2797,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2801,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2751,
											"end": 2803,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 2751,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2822,
											"end": 2845,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2812,
											"end": 2845,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2812,
											"end": 2845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2897,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2884,
											"end": 2893,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2898,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2899,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 2933,
											"end": 2938,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 2908,
											"end": 2939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2939,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 2908,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2969,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2969,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2969,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2974,
											"end": 3092,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 2974,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3066,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3067,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3039,
											"end": 3044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3036,
											"end": 3068,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3026,
											"end": 3086,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3083,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3080,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3084,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3097,
											"end": 3406,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 3097,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3168,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3225,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3211,
											"end": 3220,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3209,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3221,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3191,
											"end": 3243,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3191,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 3191,
											"end": 3243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3237,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3241,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3191,
											"end": 3243,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 3191,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3287,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3288,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3297,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 3319,
											"end": 3324,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3297,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 3297,
											"end": 3325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3881,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3634,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3748,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3734,
											"end": 3743,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3725,
											"end": 3732,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3744,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3717,
											"end": 3749,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3766,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 3714,
											"end": 3766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3762,
											"end": 3763,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3760,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3752,
											"end": 3764,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3766,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 3714,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 3820,
											"end": 3851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5741,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 5614,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5685,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 5670,
											"end": 5673,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 5666,
											"end": 5686,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5656,
											"end": 5687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5706,
											"end": 5710,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5696,
											"end": 5711,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5727,
											"end": 5728,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6439,
											"end": 6712,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6439,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6507,
											"end": 6513,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6560,
											"end": 6562,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6548,
											"end": 6557,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6539,
											"end": 6546,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6535,
											"end": 6558,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6563,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6580,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 6528,
											"end": 6580,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6576,
											"end": 6577,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6573,
											"end": 6574,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6566,
											"end": 6578,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6580,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 6528,
											"end": 6580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6608,
											"end": 6617,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6618,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6658,
											"end": 6662,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6651,
											"end": 6656,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6640,
											"end": 6645,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6637,
											"end": 6664,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6627,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 6627,
											"end": 6682,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6678,
											"end": 6679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6675,
											"end": 6676,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6668,
											"end": 6680,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7201,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 7074,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7135,
											"end": 7145,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 7130,
											"end": 7133,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 7126,
											"end": 7146,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 7123,
											"end": 7124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7116,
											"end": 7147,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7166,
											"end": 7170,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7163,
											"end": 7164,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7156,
											"end": 7171,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7194,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7187,
											"end": 7188,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7180,
											"end": 7195,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7206,
											"end": 7628,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 7206,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7295,
											"end": 7296,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7338,
											"end": 7343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7295,
											"end": 7296,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7622,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 7352,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7373,
											"end": 7380,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7363,
											"end": 7371,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7360,
											"end": 7381,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7622,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 7352,
											"end": 7622,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7436,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7428,
											"end": 7429,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7424,
											"end": 7430,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 7420,
											"end": 7437,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7414,
											"end": 7418,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7438,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7408,
											"end": 7461,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7408,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 7408,
											"end": 7461,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 7441,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 7498,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 7489,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7474,
											"end": 7529,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7474,
											"end": 7529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 7474,
											"end": 7529,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7511,
											"end": 7527,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7511,
											"end": 7527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7511,
											"end": 7527,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7511,
											"end": 7527,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7474,
											"end": 7529,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 7474,
											"end": 7529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7590,
											"end": 7612,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7590,
											"end": 7612,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7590,
											"end": 7612,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 7590,
											"end": 7612,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7565,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7565,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 7352,
											"end": 7622,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7622,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 7352,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7356,
											"end": 7359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7206,
											"end": 7628,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7206,
											"end": 7628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7206,
											"end": 7628,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7206,
											"end": 7628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7206,
											"end": 7628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7206,
											"end": 7628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 8439,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 7633,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7687,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7712,
											"end": 7720,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7702,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 7702,
											"end": 7782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7753,
											"end": 7754,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7767,
											"end": 7772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 7767,
											"end": 7772,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7702,
											"end": 7782,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 7702,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7801,
											"end": 7805,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 7791,
											"end": 7867,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7838,
											"end": 7839,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7852,
											"end": 7857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 7852,
											"end": 7857,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 7867,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 7791,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7883,
											"end": 7887,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7901,
											"end": 7902,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7896,
											"end": 7955,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7896,
											"end": 7955,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7896,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 7896,
											"end": 7955,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7970,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7964,
											"end": 8094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7964,
											"end": 8094,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7964,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 7964,
											"end": 8094,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7876,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 7876,
											"end": 8094,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7896,
											"end": 7955,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 7896,
											"end": 7955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7926,
											"end": 7927,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7917,
											"end": 7927,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7917,
											"end": 7927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7940,
											"end": 7945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7940,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 7940,
											"end": 7945,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7964,
											"end": 8094,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 7964,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8001,
											"end": 8004,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7991,
											"end": 7999,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8005,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7985,
											"end": 8028,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7985,
											"end": 8028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 7985,
											"end": 8028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 8008,
											"end": 8026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8064,
											"end": 8065,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8050,
											"end": 8066,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8066,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 8079,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 8079,
											"end": 8084,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7876,
											"end": 8094,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 7876,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7876,
											"end": 8094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8178,
											"end": 8180,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8168,
											"end": 8176,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8165,
											"end": 8181,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8159,
											"end": 8162,
											"name": "PUSH",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 8153,
											"end": 8157,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8150,
											"end": 8163,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8146,
											"end": 8182,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8142,
											"name": "PUSH",
											"source": 9,
											"value": "4E"
										},
										{
											"begin": 8130,
											"end": 8138,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8127,
											"end": 8143,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8122,
											"end": 8124,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 8116,
											"end": 8120,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8113,
											"end": 8125,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8109,
											"end": 8144,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8183,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 8103,
											"end": 8262,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8103,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 8103,
											"end": 8262,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8215,
											"end": 8234,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8215,
											"end": 8234,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8215,
											"end": 8234,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8247,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 8247,
											"end": 8252,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8103,
											"end": 8262,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 8103,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8294,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 8319,
											"end": 8327,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8313,
											"end": 8317,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8294,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 8294,
											"end": 8328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8294,
											"end": 8328,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 8294,
											"end": 8328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8364,
											"end": 8370,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8360,
											"end": 8361,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8362,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 8352,
											"end": 8371,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8350,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8372,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8337,
											"end": 8395,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8337,
											"end": 8395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 8337,
											"end": 8395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8375,
											"end": 8393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 8375,
											"end": 8393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 8375,
											"end": 8393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8375,
											"end": 8393,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 8375,
											"end": 8393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8433,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8433,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 8439,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7633,
											"end": 8439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8444,
											"end": 8575,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 8444,
											"end": 8575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8509,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8533,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 8560,
											"end": 8568,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8554,
											"end": 8558,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8533,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 8533,
											"end": 8569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10358,
											"end": 10493,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 10358,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10397,
											"end": 10400,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10418,
											"end": 10435,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10418,
											"end": 10435,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10418,
											"end": 10435,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 10415,
											"end": 10458,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10438,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 10438,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 10438,
											"end": 10456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10438,
											"end": 10456,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 10438,
											"end": 10456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10485,
											"end": 10486,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10474,
											"end": 10487,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10474,
											"end": 10487,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10358,
											"end": 10493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11984,
											"end": 12109,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 11984,
											"end": 12109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12058,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12058,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12058,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12070,
											"end": 12080,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12070,
											"end": 12080,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12070,
											"end": 12080,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12067,
											"end": 12103,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12067,
											"end": 12103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 12067,
											"end": 12103,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12083,
											"end": 12101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 12083,
											"end": 12101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 12083,
											"end": 12101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12114,
											"end": 12282,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 12114,
											"end": 12282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12187,
											"end": 12196,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12187,
											"end": 12196,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12187,
											"end": 12196,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12218,
											"end": 12227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12218,
											"end": 12227,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12235,
											"end": 12250,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12235,
											"end": 12250,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12235,
											"end": 12250,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12229,
											"end": 12251,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12229,
											"end": 12251,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12215,
											"end": 12252,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12205,
											"end": 12276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 12205,
											"end": 12276,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12256,
											"end": 12274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 12256,
											"end": 12274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 12256,
											"end": 12274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12287,
											"end": 12504,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 12287,
											"end": 12504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12327,
											"end": 12328,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12353,
											"end": 12354,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12343,
											"end": 12475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 12343,
											"end": 12475,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12397,
											"end": 12407,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 12392,
											"end": 12395,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 12388,
											"end": 12408,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12378,
											"end": 12409,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12432,
											"end": 12436,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 12429,
											"end": 12430,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12422,
											"end": 12437,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12460,
											"end": 12464,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12457,
											"end": 12458,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12450,
											"end": 12465,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12343,
											"end": 12475,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 12343,
											"end": 12475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12489,
											"end": 12498,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12489,
											"end": 12498,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12287,
											"end": 12504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12509,
											"end": 12637,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 12509,
											"end": 12637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12576,
											"end": 12585,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12576,
											"end": 12585,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12576,
											"end": 12585,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12597,
											"end": 12608,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12597,
											"end": 12608,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12597,
											"end": 12608,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12594,
											"end": 12631,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12594,
											"end": 12631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 12594,
											"end": 12631,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 12611,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 12611,
											"end": 12629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13022,
											"end": 13267,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 13022,
											"end": 13267,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13095,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13142,
											"end": 13144,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13130,
											"end": 13139,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13121,
											"end": 13128,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13117,
											"end": 13140,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13113,
											"end": 13145,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 13110,
											"end": 13162,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13110,
											"end": 13162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 13110,
											"end": 13162,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13158,
											"end": 13159,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13155,
											"end": 13156,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13148,
											"end": 13160,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13110,
											"end": 13162,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 13110,
											"end": 13162,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13190,
											"end": 13199,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13184,
											"end": 13200,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 13231,
											"end": 13236,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 13209,
											"end": 13237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14090,
											"end": 14340,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 14090,
											"end": 14340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14175,
											"end": 14176,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14185,
											"end": 14298,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 14185,
											"end": 14298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14199,
											"end": 14205,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14196,
											"end": 14197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14193,
											"end": 14206,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 14185,
											"end": 14298,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14185,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 14185,
											"end": 14298,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14275,
											"end": 14286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14275,
											"end": 14286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14275,
											"end": 14286,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14269,
											"end": 14287,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14256,
											"end": 14267,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14256,
											"end": 14267,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14256,
											"end": 14267,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14249,
											"end": 14288,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14221,
											"end": 14223,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14214,
											"end": 14224,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14185,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 14185,
											"end": 14298,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14185,
											"end": 14298,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 14185,
											"end": 14298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14332,
											"end": 14333,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14314,
											"end": 14330,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14314,
											"end": 14330,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14307,
											"end": 14334,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14090,
											"end": 14340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14345,
											"end": 14632,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 14345,
											"end": 14632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14474,
											"end": 14477,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14512,
											"end": 14518,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14506,
											"end": 14519,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14528,
											"end": 14594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 14587,
											"end": 14593,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14582,
											"end": 14585,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14575,
											"end": 14579,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14567,
											"end": 14573,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 14563,
											"end": 14580,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14528,
											"end": 14594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 14528,
											"end": 14594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14528,
											"end": 14594,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 14528,
											"end": 14594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14610,
											"end": 14626,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14610,
											"end": 14626,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14610,
											"end": 14626,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14610,
											"end": 14626,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14610,
											"end": 14626,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14345,
											"end": 14632,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14345,
											"end": 14632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14995,
											"end": 15391,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 14995,
											"end": 15391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15144,
											"end": 15146,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15133,
											"end": 15142,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15126,
											"end": 15147,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15107,
											"end": 15111,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15176,
											"end": 15182,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15170,
											"end": 15183,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15219,
											"end": 15225,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15214,
											"end": 15216,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15203,
											"end": 15212,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15199,
											"end": 15217,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15192,
											"end": 15226,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15235,
											"end": 15314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 15307,
											"end": 15313,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15302,
											"end": 15304,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15291,
											"end": 15300,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15287,
											"end": 15305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15282,
											"end": 15284,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15274,
											"end": 15280,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15285,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15235,
											"end": 15314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 15235,
											"end": 15314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15235,
											"end": 15314,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 15235,
											"end": 15314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15375,
											"end": 15377,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 15354,
											"end": 15369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15350,
											"end": 15379,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15335,
											"end": 15380,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15335,
											"end": 15380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15335,
											"end": 15380,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15335,
											"end": 15380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15382,
											"end": 15384,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15331,
											"end": 15385,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15331,
											"end": 15385,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14995,
											"end": 15391,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14995,
											"end": 15391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"StackMining.sol",
								"interfaces/IARCStackMining.sol",
								"interfaces/IBEP20.sol",
								"libraries/SafeBEP20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"PRECISION_FACTOR()": "ccd34cd5",
							"SMART_CHEF_FACTORY()": "bd617191",
							"accTokenPerShare()": "8f662915",
							"bonusEndBlock()": "1aed6553",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyRewardWithdraw(uint256)": "3279beab",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getTotalShares()": "d5002f2e",
							"hasUserLimit()": "92e8990e",
							"initialize(address,address,uint256,uint256,uint256,uint256,address)": "83a5041c",
							"isInitialized()": "392e53cd",
							"lastRewardBlock()": "a9f8d181",
							"owner()": "8da5cb5b",
							"pendingReward(uint256,address)": "98969e82",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"poolLimitPerUser()": "66fe9f8a",
							"recoverWrongTokens(address,uint256)": "3f138d4b",
							"renounceOwnership()": "715018a6",
							"rewardPerBlock()": "8ae39cac",
							"rewardToken()": "f7c618c1",
							"stakedToken()": "cc7a262e",
							"startBlock()": "48cd4cb1",
							"stopReward()": "80dc0672",
							"transferOwnership(address)": "f2fde38b",
							"updatePoolLimitPerUser(bool,uint256)": "a0b40905",
							"updateRewardPerBlock(uint256)": "01f8a976",
							"updateStartAndEndBlocks(uint256,uint256)": "9513997f",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenRecovered\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AdminTokenRecovery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolLimitPerUser\",\"type\":\"uint256\"}],\"name\":\"NewPoolLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"}],\"name\":\"NewRewardPerBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"}],\"name\":\"NewStartAndEndBlocks\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"RewardsStop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRECISION_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SMART_CHEF_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accTokenPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"emergencyRewardWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasUserLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"_stakedToken\",\"type\":\"address\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolLimitPerUser\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRewardBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"boost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLimitPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverWrongTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedToken\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_hasUserLimit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_poolLimitPerUser\",\"type\":\"uint256\"}],\"name\":\"updatePoolLimitPerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardPerBlock\",\"type\":\"uint256\"}],\"name\":\"updateRewardPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"name\":\"updateStartAndEndBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockStartTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverWrongTokens(address,uint256)\":{\"details\":\"This function is only callable by admin.\",\"params\":{\"_tokenAddress\":\": the address of the token to withdraw\",\"_tokenAmount\":\": the number of tokens to withdraw\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateStartAndEndBlocks(uint256,uint256)\":{\"details\":\"This function is only callable by owner.\",\"params\":{\"_bonusEndBlock\":\": the new end block\",\"_startBlock\":\": the new start block\"}}},\"stateVariables\":{\"PRECISION_FACTOR\":{\"details\":\"The precision factor\"},\"SMART_CHEF_FACTORY\":{\"details\":\"The address of the smart chef factory\"},\"accTokenPerShare\":{\"details\":\"Accrued token per share\"},\"bonusEndBlock\":{\"details\":\"The block number when CAKE mining ends.\"},\"hasUserLimit\":{\"details\":\"Whether a limit is set for users\"},\"isInitialized\":{\"details\":\"Whether it is initialized\"},\"lastRewardBlock\":{\"details\":\"The block number of the last pool update\"},\"poolLimitPerUser\":{\"details\":\"The pool limit (0 if none)\"},\"rewardPerBlock\":{\"details\":\"CAKE tokens created per block.\"},\"rewardToken\":{\"details\":\"The reward token\"},\"stakedToken\":{\"details\":\"The staked token\"},\"startBlock\":{\"details\":\"The block number when CAKE mining starts.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"recoverWrongTokens(address,uint256)\":{\"notice\":\"It allows the admin to recover wrong tokens sent to the contract\"},\"updateStartAndEndBlocks(uint256,uint256)\":{\"notice\":\"It allows the admin to update start and end blocks\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StackMining.sol\":\"StackMining\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"StackMining.sol\":{\"keccak256\":\"0xc4a52651bf65c2fe03cd54be271e199b2533e2cd3cadc94fd548bfd22f0b1788\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7239507e5c9ec1fe3067d97e79a6c6352600267ed4f7074857a4ece7750a9a9\",\"dweb:/ipfs/QmUyPZhcf38r7S1ndz6q53BaWjZpzJoNdfo8BUchFaM3zr\"]},\"interfaces/IARCStackMining.sol\":{\"keccak256\":\"0x73e901ccc7757e122c47a0611a77dab0614be50690356b56f5d7aa0014c4f4c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed0e8abdc6fbeab9a090694f8412896322c2c2b953ba0b765752c2e03f7c3d1\",\"dweb:/ipfs/QmcAHbPtTndrAEhYHX1CQjhMx8tb2FeiSuGsjGgttB1w2e\"]},\"interfaces/IBEP20.sol\":{\"keccak256\":\"0xf36c35eca28d777110537c36ce958e6e1cba1b63e81c6db425063a9a8070b8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51a5d4ed4a94421d08abdd3c2f4df8387a17d17e89f30181e215fc72d835dc73\",\"dweb:/ipfs/QmTaw8PKYx4p9LLSjU3eaS5DM5WDGtBGKPdT5cms6k23W9\"]},\"libraries/SafeBEP20.sol\":{\"keccak256\":\"0xf0273c9b6c17cde2082d82836ffe196aef2b3d80a08359ebcf2f982074efd6ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://353692949012e08e5d1b86c6a9b17c11029ad18748c37e55e34d10e07eb22c4a\",\"dweb:/ipfs/QmbyRELSAZaeajhiFKBBcreCpLYUeEQYUrEbjs9bwZn4r9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "StackMining.sol:StackMining",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "StackMining.sol:StackMining",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 854,
								"contract": "StackMining.sol:StackMining",
								"label": "SMART_CHEF_FACTORY",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 857,
								"contract": "StackMining.sol:StackMining",
								"label": "hasUserLimit",
								"offset": 20,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 860,
								"contract": "StackMining.sol:StackMining",
								"label": "isInitialized",
								"offset": 21,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 863,
								"contract": "StackMining.sol:StackMining",
								"label": "accTokenPerShare",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 866,
								"contract": "StackMining.sol:StackMining",
								"label": "bonusEndBlock",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 869,
								"contract": "StackMining.sol:StackMining",
								"label": "startBlock",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 872,
								"contract": "StackMining.sol:StackMining",
								"label": "lastRewardBlock",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 875,
								"contract": "StackMining.sol:StackMining",
								"label": "poolLimitPerUser",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 878,
								"contract": "StackMining.sol:StackMining",
								"label": "rewardPerBlock",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 881,
								"contract": "StackMining.sol:StackMining",
								"label": "PRECISION_FACTOR",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 885,
								"contract": "StackMining.sol:StackMining",
								"label": "rewardToken",
								"offset": 0,
								"slot": "10",
								"type": "t_contract(IBEP20)2018"
							},
							{
								"astId": 889,
								"contract": "StackMining.sol:StackMining",
								"label": "stakedToken",
								"offset": 0,
								"slot": "11",
								"type": "t_contract(IBEP20)2018"
							},
							{
								"astId": 907,
								"contract": "StackMining.sol:StackMining",
								"label": "poolInfo",
								"offset": 0,
								"slot": "12",
								"type": "t_array(t_struct(PoolInfo)903_storage)dyn_storage"
							},
							{
								"astId": 914,
								"contract": "StackMining.sol:StackMining",
								"label": "userInfo",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)896_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)903_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)903_storage",
								"encoding": "dynamic_array",
								"label": "struct StackMining.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IBEP20)2018": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)896_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StackMining.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)896_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)896_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct StackMining.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)896_storage)"
							},
							"t_struct(PoolInfo)903_storage": {
								"encoding": "inplace",
								"label": "struct StackMining.PoolInfo",
								"members": [
									{
										"astId": 898,
										"contract": "StackMining.sol:StackMining",
										"label": "duration",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 900,
										"contract": "StackMining.sol:StackMining",
										"label": "boost",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 902,
										"contract": "StackMining.sol:StackMining",
										"label": "amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(UserInfo)896_storage": {
								"encoding": "inplace",
								"label": "struct StackMining.UserInfo",
								"members": [
									{
										"astId": 891,
										"contract": "StackMining.sol:StackMining",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 893,
										"contract": "StackMining.sol:StackMining",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 895,
										"contract": "StackMining.sol:StackMining",
										"label": "lockStartTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"recoverWrongTokens(address,uint256)": {
								"notice": "It allows the admin to recover wrong tokens sent to the contract"
							},
							"updateStartAndEndBlocks(uint256,uint256)": {
								"notice": "It allows the admin to update start and end blocks"
							}
						},
						"version": 1
					}
				}
			},
			"interfaces/IARCStackMining.sol": {
				"IARCStack": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenRecovered",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AdminTokenRecovery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "poolLimitPerUser",
									"type": "uint256"
								}
							],
							"name": "NewPoolLimit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardPerBlock",
									"type": "uint256"
								}
							],
							"name": "NewRewardPerBlock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endBlock",
									"type": "uint256"
								}
							],
							"name": "NewStartAndEndBlocks",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "RewardsStop",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IBEP20",
									"name": "_stakedToken",
									"type": "address"
								},
								{
									"internalType": "contract IBEP20",
									"name": "_rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_bonusEndBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_poolLimitPerUser",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(uint256,uint256)": "e2bbb158",
							"initialize(address,address,uint256,uint256,uint256,uint256,address)": "83a5041c",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenRecovered\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AdminTokenRecovery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolLimitPerUser\",\"type\":\"uint256\"}],\"name\":\"NewPoolLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"}],\"name\":\"NewRewardPerBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"}],\"name\":\"NewStartAndEndBlocks\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"RewardsStop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"_stakedToken\",\"type\":\"address\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolLimitPerUser\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IARCStackMining.sol\":\"IARCStack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IARCStackMining.sol\":{\"keccak256\":\"0x73e901ccc7757e122c47a0611a77dab0614be50690356b56f5d7aa0014c4f4c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed0e8abdc6fbeab9a090694f8412896322c2c2b953ba0b765752c2e03f7c3d1\",\"dweb:/ipfs/QmcAHbPtTndrAEhYHX1CQjhMx8tb2FeiSuGsjGgttB1w2e\"]},\"interfaces/IBEP20.sol\":{\"keccak256\":\"0xf36c35eca28d777110537c36ce958e6e1cba1b63e81c6db425063a9a8070b8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51a5d4ed4a94421d08abdd3c2f4df8387a17d17e89f30181e215fc72d835dc73\",\"dweb:/ipfs/QmTaw8PKYx4p9LLSjU3eaS5DM5WDGtBGKPdT5cms6k23W9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IBEP20.sol\":{\"keccak256\":\"0xf36c35eca28d777110537c36ce958e6e1cba1b63e81c6db425063a9a8070b8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51a5d4ed4a94421d08abdd3c2f4df8387a17d17e89f30181e215fc72d835dc73\",\"dweb:/ipfs/QmTaw8PKYx4p9LLSjU3eaS5DM5WDGtBGKPdT5cms6k23W9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeBEP20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/SafeBEP20.sol\":679:4059  library SafeBEP20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/SafeBEP20.sol\":679:4059  library SafeBEP20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206023ad97cf22d3acdbd59f843cfb78c093bd4fa7be3dc027abf68d4c7475f57464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206023ad97cf22d3acdbd59f843cfb78c093bd4fa7be3dc027abf68d4c7475f57464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x23 0xAD SWAP8 0xCF 0x22 0xD3 0xAC 0xDB 0xD5 SWAP16 DUP5 EXTCODECOPY 0xFB PUSH25 0xC093BD4FA7BE3DC027ABF68D4C7475F57464736F6C63430008 GT STOP CALLER ",
							"sourceMap": "679:3380:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;679:3380:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206023ad97cf22d3acdbd59f843cfb78c093bd4fa7be3dc027abf68d4c7475f57464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x23 0xAD SWAP8 0xCF 0x22 0xD3 0xAC 0xDB 0xD5 SWAP16 DUP5 EXTCODECOPY 0xFB PUSH25 0xC093BD4FA7BE3DC027ABF68D4C7475F57464736F6C63430008 GT STOP CALLER ",
							"sourceMap": "679:3380:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206023ad97cf22d3acdbd59f843cfb78c093bd4fa7be3dc027abf68d4c7475f57464736f6c63430008110033",
									".code": [
										{
											"begin": 679,
											"end": 4059,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"StackMining.sol",
								"interfaces/IARCStackMining.sol",
								"interfaces/IBEP20.sol",
								"libraries/SafeBEP20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeBEP20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"interfaces/IBEP20.sol\":{\"keccak256\":\"0xf36c35eca28d777110537c36ce958e6e1cba1b63e81c6db425063a9a8070b8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51a5d4ed4a94421d08abdd3c2f4df8387a17d17e89f30181e215fc72d835dc73\",\"dweb:/ipfs/QmTaw8PKYx4p9LLSjU3eaS5DM5WDGtBGKPdT5cms6k23W9\"]},\"libraries/SafeBEP20.sol\":{\"keccak256\":\"0xf0273c9b6c17cde2082d82836ffe196aef2b3d80a08359ebcf2f982074efd6ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://353692949012e08e5d1b86c6a9b17c11029ad18748c37e55e34d10e07eb22c4a\",\"dweb:/ipfs/QmbyRELSAZaeajhiFKBBcreCpLYUeEQYUrEbjs9bwZn4r9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							518
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 519,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 518,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								518
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 166,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 134,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 138,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 142,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 146,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 147,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 166,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 166,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 167,
							"src": "888:1952:1",
							"usedErrors": []
						}
					],
					"src": "112:2729:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							496
						]
					},
					"id": 497,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 496,
							"linearizedBaseContracts": [
								496
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "1241:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 177,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "1465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 176,
												"id": 182,
												"nodeType": "Return",
												"src": "1458:30:2"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1235:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:2"
									},
									"scope": 496,
									"src": "1175:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "2483:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 195,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$496",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$496",
																				"typeString": "library Address"
																			}
																		],
																		"id": 194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 193,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:2",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 198,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "2526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:2"
											},
											{
												"assignments": [
													204,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 204,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "2578:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 203,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 205,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2596:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 207,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "2618:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "2647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 212,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:2"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2431:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2458:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:2"
									},
									"scope": 496,
									"src": "2412:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "3555:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 229,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "3594:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3602:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 228,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															276,
															320
														],
														"referencedDeclaration": 320,
														"src": "3572:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 227,
												"id": 234,
												"nodeType": "Return",
												"src": "3565:79:2"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3504:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3541:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:2"
									},
									"scope": 496,
									"src": "3466:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "4020:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "4059:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 250,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "4067:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 252,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "4076:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 248,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															276,
															320
														],
														"referencedDeclaration": 320,
														"src": "4037:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 247,
												"id": 254,
												"nodeType": "Return",
												"src": "4030:59:2"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3904:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3928:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3955:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 242,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:2"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "4006:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:2"
									},
									"scope": 496,
									"src": "3873:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "4601:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 269,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4640:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 270,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "4648:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 271,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4654:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 268,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															276,
															320
														],
														"referencedDeclaration": 320,
														"src": "4618:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 267,
												"id": 274,
												"nodeType": "Return",
												"src": "4611:94:2"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "4498:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "4522:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "4549:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "4587:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:2"
									},
									"scope": 496,
									"src": "4458:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "5139:267:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 293,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$496",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$496",
																				"typeString": "library Address"
																			}
																		],
																		"id": 292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 291,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:2",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 296,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "5182:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:2"
											},
											{
												"assignments": [
													302,
													304
												],
												"declarations": [
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 319,
														"src": "5241:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 301,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 319,
														"src": "5255:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 303,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 311,
												"initialValue": {
													"arguments": [
														{
															"id": 309,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "5308:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 305,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 279,
																"src": "5282:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 307,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "5301:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 313,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "5357:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 314,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "5365:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 315,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "5374:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 316,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "5386:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 312,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "5330:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 289,
												"id": 318,
												"nodeType": "Return",
												"src": "5323:76:2"
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "5000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "5024:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "5051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "5074:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 284,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:2"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "5125:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:2"
									},
									"scope": 496,
									"src": "4960:446:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "5683:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 331,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "5719:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 332,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5727:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 330,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															337,
															366
														],
														"referencedDeclaration": 366,
														"src": "5700:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 329,
												"id": 335,
												"nodeType": "Return",
												"src": "5693:80:2"
											}
										]
									},
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5611:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5627:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 324,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:2"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5669:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:2"
									},
									"scope": 496,
									"src": "5583:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "6122:168:2",
										"statements": [
											{
												"assignments": [
													350,
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 365,
														"src": "6133:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 349,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 365,
														"src": "6147:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 351,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"arguments": [
														{
															"id": 355,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "6192:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 353,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "6174:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:2",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 359,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "6241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "6249:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 361,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "6258:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 362,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6270:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 358,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "6214:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 348,
												"id": 364,
												"nodeType": "Return",
												"src": "6207:76:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "6001:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "6025:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 341,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "6052:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 343,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:2"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "6108:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:2"
									},
									"scope": 496,
									"src": "5964:326:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "6566:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 377,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "6604:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "6612:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 376,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															383,
															412
														],
														"referencedDeclaration": 412,
														"src": "6583:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 375,
												"id": 381,
												"nodeType": "Return",
												"src": "6576:84:2"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "6499:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "6515:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:2"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "6552:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 373,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:2"
									},
									"scope": 496,
									"src": "6469:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "7008:170:2",
										"statements": [
											{
												"assignments": [
													396,
													398
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 411,
														"src": "7019:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 395,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 398,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 411,
														"src": "7033:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 397,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 403,
												"initialValue": {
													"arguments": [
														{
															"id": 401,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7080:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 399,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7060:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:2",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 405,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7129:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "7137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 407,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "7146:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 408,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "7158:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 404,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "7102:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 394,
												"id": 410,
												"nodeType": "Return",
												"src": "7095:76:2"
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "6892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "6916:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 387,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "6943:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 389,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "6994:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:2"
									},
									"scope": 496,
									"src": "6853:325:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "7660:434:2",
										"statements": [
											{
												"condition": {
													"id": 426,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 417,
													"src": "7674:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 448,
													"nodeType": "Block",
													"src": "8030:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 444,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "8052:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 445,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "8064:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 443,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "8044:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 447,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:2"
														}
													]
												},
												"id": 449,
												"nodeType": "IfStatement",
												"src": "7670:418:2",
												"trueBody": {
													"id": 442,
													"nodeType": "Block",
													"src": "7683:341:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 427,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "7701:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 439,
															"nodeType": "IfStatement",
															"src": "7697:286:2",
															"trueBody": {
																"id": 438,
																"nodeType": "Block",
																"src": "7725:258:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 433,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 415,
																							"src": "7927:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 432,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 184,
																						"src": "7916:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 434,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 435,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 431,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 437,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:2"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 440,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "8003:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 425,
															"id": 441,
															"nodeType": "Return",
															"src": "7996:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:2",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "7511:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "7535:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 416,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "7557:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 418,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "7590:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 420,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "7646:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:2"
									},
									"scope": 496,
									"src": "7466:628:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "8475:135:2",
										"statements": [
											{
												"condition": {
													"id": 463,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 454,
													"src": "8489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 472,
													"nodeType": "Block",
													"src": "8546:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 468,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "8568:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 469,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "8580:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 467,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "8560:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:2"
														}
													]
												},
												"id": 473,
												"nodeType": "IfStatement",
												"src": "8485:119:2",
												"trueBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "8498:42:2",
													"statements": [
														{
															"expression": {
																"id": 464,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "8519:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 462,
															"id": 465,
															"nodeType": "Return",
															"src": "8512:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:2",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "8350:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 453,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "8372:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "8405:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 457,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:2"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "8461:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 460,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:2"
									},
									"scope": 496,
									"src": "8315:295:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "8699:457:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 482,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "8775:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "9105:45:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 489,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "9126:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 488,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 491,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:2"
														}
													]
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "8771:379:2",
												"trueBody": {
													"id": 487,
													"nodeType": "Block",
													"src": "8798:301:2",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:2"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:2",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:2"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:2"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 477,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:2",
																	"valueSize": 1
																},
																{
																	"declaration": 477,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:2",
																	"valueSize": 1
																}
															],
															"id": 486,
															"nodeType": "InlineAssembly",
															"src": "8947:142:2"
														}
													]
												}
											}
										]
									},
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "8633:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "8658:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 478,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:2"
									},
									"scope": 496,
									"src": "8616:540:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 497,
							"src": "194:8964:2",
							"usedErrors": []
						}
					],
					"src": "101:9058:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							518
						]
					},
					"id": 519,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 498,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 499,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 518,
							"linearizedBaseContracts": [
								518
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 504,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 503,
												"id": 506,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 518,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 513,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 512,
												"id": 515,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 510,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 518,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 519,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							830
						]
					},
					"id": 831,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 520,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 521,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 830,
							"linearizedBaseContracts": [
								830
							],
							"name": "SafeMath",
							"nameLocation": "490:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "717:140:4",
										"statements": [
											{
												"id": 551,
												"nodeType": "UncheckedBlock",
												"src": "727:124:4",
												"statements": [
													{
														"assignments": [
															534
														],
														"declarations": [
															{
																"constant": false,
																"id": 534,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 551,
																"src": "751:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 533,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 538,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 535,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "763:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 536,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "767:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 539,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 540,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "790:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 546,
														"nodeType": "IfStatement",
														"src": "782:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 544,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 532,
															"id": 545,
															"nodeType": "Return",
															"src": "793:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 548,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "838:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 549,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 532,
														"id": 550,
														"nodeType": "Return",
														"src": "824:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "702:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "708:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:4"
									},
									"scope": 830,
									"src": "641:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "1078:113:4",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 565,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "1116:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 566,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "1120:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 572,
														"nodeType": "IfStatement",
														"src": "1112:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 570,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 564,
															"id": 571,
															"nodeType": "Return",
															"src": "1123:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 574,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 556,
																		"src": "1168:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 575,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "1172:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 577,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 564,
														"id": 578,
														"nodeType": "Return",
														"src": "1154:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1018:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1029:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:4"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1063:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:4"
									},
									"scope": 830,
									"src": "1002:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "1415:417:4",
										"statements": [
											{
												"id": 621,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 593,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "1683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 600,
														"nodeType": "IfStatement",
														"src": "1679:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 598,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 592,
															"id": 599,
															"nodeType": "Return",
															"src": "1691:16:4"
														}
													},
													{
														"assignments": [
															602
														],
														"declarations": [
															{
																"constant": false,
																"id": 602,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 621,
																"src": "1721:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 601,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 606,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 603,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "1733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 604,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 607,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "1756:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 608,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "1760:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 610,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "1765:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 616,
														"nodeType": "IfStatement",
														"src": "1752:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 614,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 592,
															"id": 615,
															"nodeType": "Return",
															"src": "1768:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 618,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "1813:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 619,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 592,
														"id": 620,
														"nodeType": "Return",
														"src": "1799:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "1355:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "1366:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:4"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "1400:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 588,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "1406:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:4"
									},
									"scope": 830,
									"src": "1339:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "2057:114:4",
										"statements": [
											{
												"id": 649,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 635,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "2095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 642,
														"nodeType": "IfStatement",
														"src": "2091:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 640,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 634,
															"id": 641,
															"nodeType": "Return",
															"src": "2103:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 644,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "2148:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 645,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 628,
																		"src": "2152:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 647,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 634,
														"id": 648,
														"nodeType": "Return",
														"src": "2134:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "1997:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2008:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2042:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 630,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:4"
									},
									"scope": 830,
									"src": "1981:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "2406:114:4",
										"statements": [
											{
												"id": 677,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 663,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "2444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 670,
														"nodeType": "IfStatement",
														"src": "2440:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 668,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 662,
															"id": 669,
															"nodeType": "Return",
															"src": "2452:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 672,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 654,
																		"src": "2497:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 673,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 656,
																		"src": "2501:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 675,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 662,
														"id": 676,
														"nodeType": "Return",
														"src": "2483:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2346:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2357:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:4"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2391:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 658,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2397:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:4"
									},
									"scope": 830,
									"src": "2330:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "2822:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "2839:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 690,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "2843:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 688,
												"id": 692,
												"nodeType": "Return",
												"src": "2832:12:4"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "2768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "2779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:4"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "2813:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:4"
									},
									"scope": 830,
									"src": "2755:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "3189:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 704,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "3206:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 705,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "3210:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 703,
												"id": 707,
												"nodeType": "Return",
												"src": "3199:12:4"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3135:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:4"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3180:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:4"
									},
									"scope": 830,
									"src": "3122:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "3532:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 719,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "3549:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 720,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "3553:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 718,
												"id": 722,
												"nodeType": "Return",
												"src": "3542:12:4"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "3478:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "3489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:4"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "3523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:4"
									},
									"scope": 830,
									"src": "3465:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "3917:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 734,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "3934:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 735,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "3938:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 733,
												"id": 737,
												"nodeType": "Return",
												"src": "3927:12:4"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "3863:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "3874:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:4"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "3908:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:4"
									},
									"scope": 830,
									"src": "3850:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "4466:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 749,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "4483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 750,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "4487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 748,
												"id": 752,
												"nodeType": "Return",
												"src": "4476:12:4"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "4412:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "4423:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:4"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "4457:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:4"
									},
									"scope": 830,
									"src": "4399:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "5084:106:4",
										"statements": [
											{
												"id": 777,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 767,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "5126:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 768,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "5131:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 770,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "5134:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 766,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 772,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 773,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "5168:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 774,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "5172:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 765,
														"id": 776,
														"nodeType": "Return",
														"src": "5161:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "4981:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "5000:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "5019:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 760,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:4"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "5075:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:4"
									},
									"scope": 830,
									"src": "4959:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "5799:105:4",
										"statements": [
											{
												"id": 802,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 792,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "5841:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 795,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "5848:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 791,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 797,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 798,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "5882:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 799,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "5886:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 790,
														"id": 801,
														"nodeType": "Return",
														"src": "5875:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "5696:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "5715:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "5734:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 785,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "5790:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:4"
									},
									"scope": 830,
									"src": "5674:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "6675:105:4",
										"statements": [
											{
												"id": 827,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 817,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "6717:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 820,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "6724:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 816,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 822,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 823,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "6758:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 824,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "6762:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 815,
														"id": 826,
														"nodeType": "Return",
														"src": "6751:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "6572:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "6591:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "6610:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:4"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "6666:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:4"
									},
									"scope": 830,
									"src": "6550:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 831,
							"src": "482:6300:4",
							"usedErrors": []
						}
					],
					"src": "107:6676:4"
				},
				"id": 4
			},
			"StackMining.sol": {
				"ast": {
					"absolutePath": "StackMining.sol",
					"exportedSymbols": {
						"Address": [
							496
						],
						"Context": [
							518
						],
						"IARCStack": [
							1917
						],
						"IBEP20": [
							2018
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							166
						],
						"SafeBEP20": [
							2237
						],
						"SafeMath": [
							830
						],
						"StackMining": [
							1838
						]
					},
					"id": 1839,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 832,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 833,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1839,
							"sourceUnit": 113,
							"src": "60:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 834,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1839,
							"sourceUnit": 167,
							"src": "114:62:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 835,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1839,
							"sourceUnit": 831,
							"src": "178:57:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 836,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1839,
							"sourceUnit": 497,
							"src": "237:51:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/SafeBEP20.sol",
							"file": "./libraries/SafeBEP20.sol",
							"id": 837,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1839,
							"sourceUnit": 2238,
							"src": "292:35:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IARCStackMining.sol",
							"file": "./interfaces/IARCStackMining.sol",
							"id": 838,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1839,
							"sourceUnit": 1918,
							"src": "329:42:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 839,
										"name": "IARCStack",
										"nameLocations": [
											"401:9:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1917,
										"src": "401:9:5"
									},
									"id": 840,
									"nodeType": "InheritanceSpecifier",
									"src": "401:9:5"
								},
								{
									"baseName": {
										"id": 841,
										"name": "Ownable",
										"nameLocations": [
											"412:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "412:7:5"
									},
									"id": 842,
									"nodeType": "InheritanceSpecifier",
									"src": "412:7:5"
								},
								{
									"baseName": {
										"id": 843,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"421:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "421:15:5"
									},
									"id": 844,
									"nodeType": "InheritanceSpecifier",
									"src": "421:15:5"
								}
							],
							"canonicalName": "StackMining",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1838,
							"linearizedBaseContracts": [
								1838,
								166,
								112,
								518,
								1917
							],
							"name": "StackMining",
							"nameLocation": "386:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 847,
									"libraryName": {
										"id": 845,
										"name": "SafeMath",
										"nameLocations": [
											"450:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 830,
										"src": "450:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "444:27:5",
									"typeName": {
										"id": 846,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "463:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 851,
									"libraryName": {
										"id": 848,
										"name": "SafeBEP20",
										"nameLocations": [
											"483:9:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2237,
										"src": "483:9:5"
									},
									"nodeType": "UsingForDirective",
									"src": "477:27:5",
									"typeName": {
										"id": 850,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 849,
											"name": "IBEP20",
											"nameLocations": [
												"497:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2018,
											"src": "497:6:5"
										},
										"referencedDeclaration": 2018,
										"src": "497:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$2018",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "512:63:5",
										"text": " @dev The address of the smart chef factory"
									},
									"functionSelector": "bd617191",
									"id": 854,
									"mutability": "mutable",
									"name": "SMART_CHEF_FACTORY",
									"nameLocation": "596:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "581:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 853,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "581:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "623:58:5",
										"text": " @dev Whether a limit is set for users"
									},
									"functionSelector": "92e8990e",
									"id": 857,
									"mutability": "mutable",
									"name": "hasUserLimit",
									"nameLocation": "699:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "687:24:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 856,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "687:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "720:51:5",
										"text": " @dev Whether it is initialized"
									},
									"functionSelector": "392e53cd",
									"id": 860,
									"mutability": "mutable",
									"name": "isInitialized",
									"nameLocation": "789:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "777:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 859,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "777:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "811:49:5",
										"text": " @dev Accrued token per share"
									},
									"functionSelector": "8f662915",
									"id": 863,
									"mutability": "mutable",
									"name": "accTokenPerShare",
									"nameLocation": "881:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "866:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 862,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "866:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "906:65:5",
										"text": " @dev The block number when CAKE mining ends."
									},
									"functionSelector": "1aed6553",
									"id": 866,
									"mutability": "mutable",
									"name": "bonusEndBlock",
									"nameLocation": "992:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "977:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 865,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "977:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "1014:67:5",
										"text": " @dev The block number when CAKE mining starts."
									},
									"functionSelector": "48cd4cb1",
									"id": 869,
									"mutability": "mutable",
									"name": "startBlock",
									"nameLocation": "1102:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "1087:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 868,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1087:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "1121:66:5",
										"text": " @dev The block number of the last pool update"
									},
									"functionSelector": "a9f8d181",
									"id": 872,
									"mutability": "mutable",
									"name": "lastRewardBlock",
									"nameLocation": "1208:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "1193:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 871,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1193:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "1232:52:5",
										"text": " @dev The pool limit (0 if none)"
									},
									"functionSelector": "66fe9f8a",
									"id": 875,
									"mutability": "mutable",
									"name": "poolLimitPerUser",
									"nameLocation": "1305:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "1290:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 874,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1290:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "1330:56:5",
										"text": " @dev CAKE tokens created per block."
									},
									"functionSelector": "8ae39cac",
									"id": 878,
									"mutability": "mutable",
									"name": "rewardPerBlock",
									"nameLocation": "1407:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "1392:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 877,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1392:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "1430:46:5",
										"text": " @dev The precision factor"
									},
									"functionSelector": "ccd34cd5",
									"id": 881,
									"mutability": "mutable",
									"name": "PRECISION_FACTOR",
									"nameLocation": "1497:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "1482:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 880,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1482:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "1523:42:5",
										"text": " @dev The reward token"
									},
									"functionSelector": "f7c618c1",
									"id": 885,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "1585:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "1571:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$2018",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 884,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 883,
											"name": "IBEP20",
											"nameLocations": [
												"1571:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2018,
											"src": "1571:6:5"
										},
										"referencedDeclaration": 2018,
										"src": "1571:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$2018",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "1605:42:5",
										"text": " @dev The staked token"
									},
									"functionSelector": "cc7a262e",
									"id": 889,
									"mutability": "mutable",
									"name": "stakedToken",
									"nameLocation": "1667:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "1653:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$2018",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 888,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 887,
											"name": "IBEP20",
											"nameLocations": [
												"1653:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2018,
											"src": "1653:6:5"
										},
										"referencedDeclaration": 2018,
										"src": "1653:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$2018",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StackMining.UserInfo",
									"id": 896,
									"members": [
										{
											"constant": false,
											"id": 891,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1861:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 896,
											"src": "1853:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 890,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1853:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 893,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "1934:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 896,
											"src": "1926:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 892,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1926:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 895,
											"mutability": "mutable",
											"name": "lockStartTime",
											"nameLocation": "1978:13:5",
											"nodeType": "VariableDeclaration",
											"scope": 896,
											"src": "1970:21:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 894,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1970:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "1833:8:5",
									"nodeType": "StructDefinition",
									"scope": 1838,
									"src": "1826:193:5",
									"visibility": "public"
								},
								{
									"canonicalName": "StackMining.PoolInfo",
									"id": 903,
									"members": [
										{
											"constant": false,
											"id": 898,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "2091:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 903,
											"src": "2083:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 897,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2083:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 900,
											"mutability": "mutable",
											"name": "boost",
											"nameLocation": "2136:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 903,
											"src": "2128:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 899,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2128:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 902,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "2250:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 903,
											"src": "2242:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 901,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2242:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "2063:8:5",
									"nodeType": "StructDefinition",
									"scope": 1838,
									"src": "2056:354:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 907,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "2467:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "2449:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$903_storage_$dyn_storage",
										"typeString": "struct StackMining.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 905,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 904,
												"name": "PoolInfo",
												"nameLocations": [
													"2449:8:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 903,
												"src": "2449:8:5"
											},
											"referencedDeclaration": 903,
											"src": "2449:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
												"typeString": "struct StackMining.PoolInfo"
											}
										},
										"id": 906,
										"nodeType": "ArrayTypeName",
										"src": "2449:10:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$903_storage_$dyn_storage_ptr",
											"typeString": "struct StackMining.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 914,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "2589:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "2531:66:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$896_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct StackMining.UserInfo))"
									},
									"typeName": {
										"id": 913,
										"keyType": {
											"id": 908,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2540:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2531:50:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$896_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct StackMining.UserInfo))"
										},
										"valueType": {
											"id": 912,
											"keyType": {
												"id": 909,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2560:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2551:29:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$896_storage_$",
												"typeString": "mapping(address => struct StackMining.UserInfo)"
											},
											"valueType": {
												"id": 911,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 910,
													"name": "UserInfo",
													"nameLocations": [
														"2571:8:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 896,
													"src": "2571:8:5"
												},
												"referencedDeclaration": 896,
												"src": "2571:8:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
													"typeString": "struct StackMining.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "2620:50:5",
										"statements": [
											{
												"expression": {
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 917,
														"name": "SMART_CHEF_FACTORY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2631:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 918,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2652:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2656:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2652:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2631:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "2631:31:5"
											}
										]
									},
									"id": 923,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2617:2:5"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2620:0:5"
									},
									"scope": 1838,
									"src": "2606:64:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1902
									],
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "3374:996:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3393:14:5",
															"subExpression": {
																"id": 943,
																"name": "isInitialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "3394:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42464c593a20414c52454144595f494e4954",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3409:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7625d2df74beb626e58f53f97a24b008f624d4ec69a00a6a1fe794b60cdbacd0",
																"typeString": "literal_string \"BFLY: ALREADY_INIT\""
															},
															"value": "BFLY: ALREADY_INIT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7625d2df74beb626e58f53f97a24b008f624d4ec69a00a6a1fe794b60cdbacd0",
																"typeString": "literal_string \"BFLY: ALREADY_INIT\""
															}
														],
														"id": 942,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3385:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3385:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "3385:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 949,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3449:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3453:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3449:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 951,
																"name": "SMART_CHEF_FACTORY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "3463:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3449:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42464c593a204e4f545f464143544f5259",
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3483:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5a78d252a9e808d4db4574440c3bd05d3510a0e4d43e41774d004779197eb31b",
																"typeString": "literal_string \"BFLY: NOT_FACTORY\""
															},
															"value": "BFLY: NOT_FACTORY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5a78d252a9e808d4db4574440c3bd05d3510a0e4d43e41774d004779197eb31b",
																"typeString": "literal_string \"BFLY: NOT_FACTORY\""
															}
														],
														"id": 948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3441:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3441:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "3441:62:5"
											},
											{
												"expression": {
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 956,
														"name": "isInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "3559:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3575:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3559:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "3559:20:5"
											},
											{
												"expression": {
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 960,
														"name": "stakedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "3592:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$2018",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 961,
														"name": "_stakedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "3606:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$2018",
															"typeString": "contract IBEP20"
														}
													},
													"src": "3592:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2018",
														"typeString": "contract IBEP20"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "3592:26:5"
											},
											{
												"expression": {
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 964,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "3629:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$2018",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 965,
														"name": "_rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "3643:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$2018",
															"typeString": "contract IBEP20"
														}
													},
													"src": "3629:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2018",
														"typeString": "contract IBEP20"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "3629:26:5"
											},
											{
												"expression": {
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 968,
														"name": "rewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "3666:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 969,
														"name": "_rewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "3683:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3666:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "3666:32:5"
											},
											{
												"expression": {
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 972,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "3709:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 973,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "3722:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3709:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "3709:24:5"
											},
											{
												"expression": {
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 976,
														"name": "bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "3744:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 977,
														"name": "_bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "3760:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3744:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "3744:30:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 980,
														"name": "_poolLimitPerUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "3791:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3811:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3791:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 992,
												"nodeType": "IfStatement",
												"src": "3787:124:5",
												"trueBody": {
													"id": 991,
													"nodeType": "Block",
													"src": "3814:97:5",
													"statements": [
														{
															"expression": {
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 983,
																	"name": "hasUserLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "3829:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3844:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3829:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 986,
															"nodeType": "ExpressionStatement",
															"src": "3829:19:5"
														},
														{
															"expression": {
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 987,
																	"name": "poolLimitPerUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "3863:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 988,
																	"name": "_poolLimitPerUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "3882:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3863:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 990,
															"nodeType": "ExpressionStatement",
															"src": "3863:36:5"
														}
													]
												}
											},
											{
												"assignments": [
													994
												],
												"declarations": [
													{
														"constant": false,
														"id": 994,
														"mutability": "mutable",
														"name": "decimalsRewardToken",
														"nameLocation": "3931:19:5",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "3923:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 993,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3923:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1001,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 997,
																	"name": "rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "3961:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$2018",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3973:8:5",
																"memberName": "decimals",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1931,
																"src": "3961:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																	"typeString": "function () view external returns (uint8)"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3961:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3953:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3953:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3953:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3923:61:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1003,
																"name": "decimalsRewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "4003:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3330",
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4025:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "4003:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42464c593a204d75737420626520696e666572696f7220746f203330",
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4029:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bb0945b2cc28e110c8e42f96160023890f56812cde8454ceca52de1636c6331c",
																"typeString": "literal_string \"BFLY: Must be inferior to 30\""
															},
															"value": "BFLY: Must be inferior to 30"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bb0945b2cc28e110c8e42f96160023890f56812cde8454ceca52de1636c6331c",
																"typeString": "literal_string \"BFLY: Must be inferior to 30\""
															}
														],
														"id": 1002,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3995:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3995:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "3995:65:5"
											},
											{
												"expression": {
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1009,
														"name": "PRECISION_FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "4073:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4100:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"components": [
																		{
																			"arguments": [
																				{
																					"id": 1018,
																					"name": "decimalsRewardToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 994,
																					"src": "4121:19:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "3330",
																							"id": 1015,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4113:2:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_30_by_1",
																								"typeString": "int_const 30"
																							},
																							"value": "30"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_30_by_1",
																								"typeString": "int_const 30"
																							}
																						],
																						"id": 1014,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4105:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1013,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4105:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1016,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4105:11:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4117:3:5",
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 709,
																				"src": "4105:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4105:36:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1020,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4104:38:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4100:42:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4092:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1010,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4092:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4092:51:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4073:70:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "4073:70:5"
											},
											{
												"expression": {
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1025,
														"name": "lastRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "4210:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1026,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "4228:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4210:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "4210:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1030,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "4355:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1029,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "4337:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4337:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "4337:25:5"
											}
										]
									},
									"functionSelector": "83a5041c",
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "3129:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "_stakedToken",
												"nameLocation": "3157:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3150:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2018",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "IBEP20",
														"nameLocations": [
															"3150:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2018,
														"src": "3150:6:5"
													},
													"referencedDeclaration": 2018,
													"src": "3150:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2018",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "3187:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3180:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2018",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 928,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 927,
														"name": "IBEP20",
														"nameLocations": [
															"3180:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2018,
														"src": "3180:6:5"
													},
													"referencedDeclaration": 2018,
													"src": "3180:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2018",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "_rewardPerBlock",
												"nameLocation": "3218:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3210:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "_startBlock",
												"nameLocation": "3252:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3244:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3244:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "_bonusEndBlock",
												"nameLocation": "3282:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3274:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "_poolLimitPerUser",
												"nameLocation": "3315:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3307:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3307:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "3351:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3343:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3139:225:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3374:0:5"
									},
									"scope": 1838,
									"src": "3120:1250:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1909
									],
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "4597:1180:5",
										"statements": [
											{
												"assignments": [
													1045
												],
												"declarations": [
													{
														"constant": false,
														"id": 1045,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "4625:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1195,
														"src": "4608:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
															"typeString": "struct StackMining.UserInfo"
														},
														"typeName": {
															"id": 1044,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1043,
																"name": "UserInfo",
																"nameLocations": [
																	"4608:8:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 896,
																"src": "4608:8:5"
															},
															"referencedDeclaration": 896,
															"src": "4608:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																"typeString": "struct StackMining.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1052,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1046,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "4632:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$896_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct StackMining.UserInfo storage ref))"
															}
														},
														"id": 1048,
														"indexExpression": {
															"id": 1047,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "4641:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4632:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$896_storage_$",
															"typeString": "mapping(address => struct StackMining.UserInfo storage ref)"
														}
													},
													"id": 1051,
													"indexExpression": {
														"expression": {
															"id": 1049,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4647:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4651:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4647:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4632:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$896_storage",
														"typeString": "struct StackMining.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4608:50:5"
											},
											{
												"assignments": [
													1055
												],
												"declarations": [
													{
														"constant": false,
														"id": 1055,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4686:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1195,
														"src": "4669:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
															"typeString": "struct StackMining.PoolInfo"
														},
														"typeName": {
															"id": 1054,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1053,
																"name": "PoolInfo",
																"nameLocations": [
																	"4669:8:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 903,
																"src": "4669:8:5"
															},
															"referencedDeclaration": 903,
															"src": "4669:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
																"typeString": "struct StackMining.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1059,
												"initialValue": {
													"baseExpression": {
														"id": 1056,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "4693:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$903_storage_$dyn_storage",
															"typeString": "struct StackMining.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1058,
													"indexExpression": {
														"id": 1057,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "4702:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4693:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$903_storage",
														"typeString": "struct StackMining.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4669:38:5"
											},
											{
												"condition": {
													"id": 1060,
													"name": "hasUserLimit",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 857,
													"src": "4724:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1073,
												"nodeType": "IfStatement",
												"src": "4720:131:5",
												"trueBody": {
													"id": 1072,
													"nodeType": "Block",
													"src": "4738:113:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1064,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1045,
																						"src": "4773:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																							"typeString": "struct StackMining.UserInfo storage pointer"
																						}
																					},
																					"id": 1065,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4778:6:5",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 891,
																					"src": "4773:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1062,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1038,
																					"src": "4761:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4769:3:5",
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 694,
																				"src": "4761:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4761:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1067,
																			"name": "poolLimitPerUser",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 875,
																			"src": "4789:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4761:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "42464c593a205573657220616d6f756e742061626f7665206c696d6974",
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4807:31:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b4200f8d86c3e338d1b555a53bcb25f604be25f2131e5fbbf99dc4c751d9029",
																			"typeString": "literal_string \"BFLY: User amount above limit\""
																		},
																		"value": "BFLY: User amount above limit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b4200f8d86c3e338d1b555a53bcb25f604be25f2131e5fbbf99dc4c751d9029",
																			"typeString": "literal_string \"BFLY: User amount above limit\""
																		}
																	],
																	"id": 1061,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4753:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4753:86:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1071,
															"nodeType": "ExpressionStatement",
															"src": "4753:86:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1074,
														"name": "_updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1795,
														"src": "4863:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4863:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "4863:13:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1077,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "4893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																"typeString": "struct StackMining.UserInfo storage pointer"
															}
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4898:6:5",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 891,
														"src": "4893:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4907:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4893:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1131,
												"nodeType": "IfStatement",
												"src": "4889:498:5",
												"trueBody": {
													"id": 1130,
													"nodeType": "Block",
													"src": "4910:477:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1084,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1055,
																				"src": "4954:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
																					"typeString": "struct StackMining.PoolInfo storage pointer"
																				}
																			},
																			"id": 1085,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4959:8:5",
																			"memberName": "duration",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 898,
																			"src": "4954:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1081,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1045,
																				"src": "4931:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																					"typeString": "struct StackMining.UserInfo storage pointer"
																				}
																			},
																			"id": 1082,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4936:13:5",
																			"memberName": "lockStartTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 895,
																			"src": "4931:18:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4950:3:5",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 694,
																		"src": "4931:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4931:37:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1087,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4971:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4977:9:5",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4971:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4931:55:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1122,
															"nodeType": "IfStatement",
															"src": "4927:321:5",
															"trueBody": {
																"id": 1121,
																"nodeType": "Block",
																"src": "4987:261:5",
																"statements": [
																	{
																		"assignments": [
																			1091
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1091,
																				"mutability": "mutable",
																				"name": "pending",
																				"nameLocation": "5014:7:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1121,
																				"src": "5006:15:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1090,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5006:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1104,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1101,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1045,
																						"src": "5084:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																							"typeString": "struct StackMining.UserInfo storage pointer"
																						}
																					},
																					"id": 1102,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5089:10:5",
																					"memberName": "rewardDebt",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 893,
																					"src": "5084:15:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1098,
																							"name": "PRECISION_FACTOR",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 881,
																							"src": "5062:16:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"id": 1095,
																									"name": "accTokenPerShare",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 863,
																									"src": "5040:16:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"expression": {
																										"id": 1092,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1045,
																										"src": "5024:4:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																											"typeString": "struct StackMining.UserInfo storage pointer"
																										}
																									},
																									"id": 1093,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "5029:6:5",
																									"memberName": "amount",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 891,
																									"src": "5024:11:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1094,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "5036:3:5",
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 724,
																								"src": "5024:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1096,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5024:33:5",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1097,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5058:3:5",
																						"memberName": "div",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 739,
																						"src": "5024:37:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1099,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5024:55:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5080:3:5",
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 709,
																				"src": "5024:59:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5024:76:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5006:94:5"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1105,
																				"name": "pending",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1091,
																				"src": "5123:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5133:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "5123:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1120,
																		"nodeType": "IfStatement",
																		"src": "5119:114:5",
																		"trueBody": {
																			"id": 1119,
																			"nodeType": "Block",
																			"src": "5136:97:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"expression": {
																											"id": 1113,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "5192:3:5",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 1114,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "5196:6:5",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "5192:10:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1112,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "5184:7:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1111,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "5184:7:5",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1115,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5184:19:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1116,
																								"name": "pending",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1091,
																								"src": "5205:7:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1108,
																								"name": "rewardToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 885,
																								"src": "5159:11:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IBEP20_$2018",
																									"typeString": "contract IBEP20"
																								}
																							},
																							"id": 1110,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5171:12:5",
																							"memberName": "safeTransfer",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2053,
																							"src": "5159:24:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2018_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2018_$",
																								"typeString": "function (contract IBEP20,address,uint256)"
																							}
																						},
																						"id": 1117,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5159:54:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1118,
																					"nodeType": "ExpressionStatement",
																					"src": "5159:54:5"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1123,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1045,
																		"src": "5339:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																			"typeString": "struct StackMining.UserInfo storage pointer"
																		}
																	},
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5344:13:5",
																	"memberName": "lockStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 895,
																	"src": "5339:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1126,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5360:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5366:9:5",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5360:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5339:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1129,
															"nodeType": "ExpressionStatement",
															"src": "5339:36:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1132,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "5403:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5413:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5403:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1171,
												"nodeType": "IfStatement",
												"src": "5399:223:5",
												"trueBody": {
													"id": 1170,
													"nodeType": "Block",
													"src": "5416:206:5",
													"statements": [
														{
															"expression": {
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1135,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1045,
																		"src": "5431:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																			"typeString": "struct StackMining.UserInfo storage pointer"
																		}
																	},
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5436:6:5",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 891,
																	"src": "5431:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1141,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1038,
																			"src": "5461:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1138,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1045,
																				"src": "5445:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																					"typeString": "struct StackMining.UserInfo storage pointer"
																				}
																			},
																			"id": 1139,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5450:6:5",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 891,
																			"src": "5445:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5457:3:5",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 694,
																		"src": "5445:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5445:24:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5431:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1144,
															"nodeType": "ExpressionStatement",
															"src": "5431:38:5"
														},
														{
															"expression": {
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1145,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "5484:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
																			"typeString": "struct StackMining.PoolInfo storage pointer"
																		}
																	},
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5489:6:5",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 902,
																	"src": "5484:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1151,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1038,
																			"src": "5514:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1148,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1055,
																				"src": "5498:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
																					"typeString": "struct StackMining.PoolInfo storage pointer"
																				}
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5503:6:5",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 902,
																			"src": "5498:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5510:3:5",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 694,
																		"src": "5498:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5498:24:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5484:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1154,
															"nodeType": "ExpressionStatement",
															"src": "5484:38:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1160,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "5574:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5578:6:5",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "5574:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5566:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1158,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5566:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5566:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1165,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5595:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_StackMining_$1838",
																					"typeString": "contract StackMining"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_StackMining_$1838",
																					"typeString": "contract StackMining"
																				}
																			],
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5587:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1163,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5587:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5587:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1167,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "5602:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1155,
																		"name": "stakedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "5537:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2018",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5549:16:5",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2079,
																	"src": "5537:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2018_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2018_$",
																		"typeString": "function (contract IBEP20,address,address,uint256)"
																	}
																},
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5537:73:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1169,
															"nodeType": "ExpressionStatement",
															"src": "5537:73:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1172,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "5634:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																"typeString": "struct StackMining.UserInfo storage pointer"
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5639:10:5",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 893,
														"src": "5634:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1185,
																"name": "PRECISION_FACTOR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "5706:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1182,
																		"name": "accTokenPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "5684:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1178,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1055,
																					"src": "5668:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
																						"typeString": "struct StackMining.PoolInfo storage pointer"
																					}
																				},
																				"id": 1179,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5673:5:5",
																				"memberName": "boost",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 900,
																				"src": "5668:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 1175,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1045,
																					"src": "5652:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																						"typeString": "struct StackMining.UserInfo storage pointer"
																					}
																				},
																				"id": 1176,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5657:6:5",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 891,
																				"src": "5652:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5664:3:5",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 724,
																			"src": "5652:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5652:27:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5680:3:5",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 724,
																	"src": "5652:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5652:49:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5702:3:5",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 739,
															"src": "5652:53:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5652:71:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5634:89:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "5634:89:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1190,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5749:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5753:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5749:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1192,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "5761:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1189,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "5741:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "EmitStatement",
												"src": "5736:33:5"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1041,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1040,
												"name": "nonReentrant",
												"nameLocations": [
													"4584:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "4584:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4584:12:5"
										}
									],
									"name": "deposit",
									"nameLocation": "4537:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "4553:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "4545:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4545:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4566:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "4558:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4544:30:5"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4597:0:5"
									},
									"scope": 1838,
									"src": "4528:1249:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1916
									],
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "5998:990:5",
										"statements": [
											{
												"assignments": [
													1207
												],
												"declarations": [
													{
														"constant": false,
														"id": 1207,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "6026:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1342,
														"src": "6009:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
															"typeString": "struct StackMining.UserInfo"
														},
														"typeName": {
															"id": 1206,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1205,
																"name": "UserInfo",
																"nameLocations": [
																	"6009:8:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 896,
																"src": "6009:8:5"
															},
															"referencedDeclaration": 896,
															"src": "6009:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																"typeString": "struct StackMining.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1214,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1208,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "6033:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$896_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct StackMining.UserInfo storage ref))"
															}
														},
														"id": 1210,
														"indexExpression": {
															"id": 1209,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "6042:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6033:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$896_storage_$",
															"typeString": "mapping(address => struct StackMining.UserInfo storage ref)"
														}
													},
													"id": 1213,
													"indexExpression": {
														"expression": {
															"id": 1211,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6048:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6052:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6048:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6033:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$896_storage",
														"typeString": "struct StackMining.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6009:50:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1216,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "6078:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																		"typeString": "struct StackMining.UserInfo storage pointer"
																	}
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6083:6:5",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 891,
																"src": "6078:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1218,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "6093:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6078:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42464c593a20416d6f756e7420746f20776974686472617720746f6f2068696768",
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6102:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4591ee946b4279a8461ba00d6b3db3a64c51105af5c5dd739b8aeabd4a2d348c",
																"typeString": "literal_string \"BFLY: Amount to withdraw too high\""
															},
															"value": "BFLY: Amount to withdraw too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4591ee946b4279a8461ba00d6b3db3a64c51105af5c5dd739b8aeabd4a2d348c",
																"typeString": "literal_string \"BFLY: Amount to withdraw too high\""
															}
														],
														"id": 1215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6070:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6070:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "6070:68:5"
											},
											{
												"assignments": [
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "6166:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1342,
														"src": "6149:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
															"typeString": "struct StackMining.PoolInfo"
														},
														"typeName": {
															"id": 1224,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1223,
																"name": "PoolInfo",
																"nameLocations": [
																	"6149:8:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 903,
																"src": "6149:8:5"
															},
															"referencedDeclaration": 903,
															"src": "6149:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
																"typeString": "struct StackMining.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1229,
												"initialValue": {
													"baseExpression": {
														"id": 1226,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "6173:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$903_storage_$dyn_storage",
															"typeString": "struct StackMining.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1228,
													"indexExpression": {
														"id": 1227,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "6182:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6173:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$903_storage",
														"typeString": "struct StackMining.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6149:38:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1233,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "6274:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
																		"typeString": "struct StackMining.PoolInfo storage pointer"
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6279:8:5",
																"memberName": "duration",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 898,
																"src": "6274:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1230,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "6251:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																		"typeString": "struct StackMining.UserInfo storage pointer"
																	}
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6256:13:5",
																"memberName": "lockStartTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 895,
																"src": "6251:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6270:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 694,
															"src": "6251:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6251:37:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1236,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6291:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6297:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6291:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6251:55:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1244,
												"nodeType": "IfStatement",
												"src": "6247:110:5",
												"trueBody": {
													"id": 1243,
													"nodeType": "Block",
													"src": "6307:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1240,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "6340:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1239,
																	"name": "emergencyWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "6322:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6322:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1242,
															"nodeType": "ExpressionStatement",
															"src": "6322:23:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1245,
														"name": "_updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1795,
														"src": "6369:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6369:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "6369:13:5"
											},
											{
												"assignments": [
													1249
												],
												"declarations": [
													{
														"constant": false,
														"id": 1249,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "6403:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1342,
														"src": "6395:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1248,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6395:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1266,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1263,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1207,
																"src": "6489:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																	"typeString": "struct StackMining.UserInfo storage pointer"
																}
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6494:10:5",
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 893,
															"src": "6489:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1260,
																	"name": "PRECISION_FACTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "6467:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1257,
																			"name": "accTokenPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 863,
																			"src": "6445:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1253,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1225,
																						"src": "6429:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
																							"typeString": "struct StackMining.PoolInfo storage pointer"
																						}
																					},
																					"id": 1254,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6434:5:5",
																					"memberName": "boost",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 900,
																					"src": "6429:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1250,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1207,
																						"src": "6413:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																							"typeString": "struct StackMining.UserInfo storage pointer"
																						}
																					},
																					"id": 1251,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6418:6:5",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 891,
																					"src": "6413:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1252,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6425:3:5",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 724,
																				"src": "6413:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6413:27:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6441:3:5",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 724,
																		"src": "6413:31:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6413:49:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6463:3:5",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 739,
																"src": "6413:53:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6413:71:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6485:3:5",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 709,
														"src": "6413:75:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6413:92:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6395:110:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1267,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "6522:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6532:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6522:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1302,
												"nodeType": "IfStatement",
												"src": "6518:204:5",
												"trueBody": {
													"id": 1301,
													"nodeType": "Block",
													"src": "6535:187:5",
													"statements": [
														{
															"expression": {
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1270,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1207,
																		"src": "6550:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																			"typeString": "struct StackMining.UserInfo storage pointer"
																		}
																	},
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6555:6:5",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 891,
																	"src": "6550:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1276,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1200,
																			"src": "6580:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1273,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1207,
																				"src": "6564:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																					"typeString": "struct StackMining.UserInfo storage pointer"
																				}
																			},
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6569:6:5",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 891,
																			"src": "6564:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6576:3:5",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 709,
																		"src": "6564:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6564:24:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6550:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1279,
															"nodeType": "ExpressionStatement",
															"src": "6550:38:5"
														},
														{
															"expression": {
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1280,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "6603:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
																			"typeString": "struct StackMining.PoolInfo storage pointer"
																		}
																	},
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6608:6:5",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 902,
																	"src": "6603:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1286,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1200,
																			"src": "6633:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1283,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1225,
																				"src": "6617:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
																					"typeString": "struct StackMining.PoolInfo storage pointer"
																				}
																			},
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6622:6:5",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 902,
																			"src": "6617:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6629:3:5",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 709,
																		"src": "6617:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6617:24:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1289,
															"nodeType": "ExpressionStatement",
															"src": "6603:38:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1295,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "6689:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6693:6:5",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "6689:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6681:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1293,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6681:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6681:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1298,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1200,
																		"src": "6702:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1290,
																		"name": "stakedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "6656:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2018",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6668:12:5",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2053,
																	"src": "6656:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2018_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2018_$",
																		"typeString": "function (contract IBEP20,address,uint256)"
																	}
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6656:54:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1300,
															"nodeType": "ExpressionStatement",
															"src": "6656:54:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1303,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "6738:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6748:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6738:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1318,
												"nodeType": "IfStatement",
												"src": "6734:98:5",
												"trueBody": {
													"id": 1317,
													"nodeType": "Block",
													"src": "6751:81:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1311,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "6799:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6803:6:5",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "6799:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6791:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1309,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6791:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6791:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1314,
																		"name": "pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "6812:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1306,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "6766:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2018",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6778:12:5",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2053,
																	"src": "6766:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2018_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2018_$",
																		"typeString": "function (contract IBEP20,address,uint256)"
																	}
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6766:54:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1316,
															"nodeType": "ExpressionStatement",
															"src": "6766:54:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1319,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "6844:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																"typeString": "struct StackMining.UserInfo storage pointer"
															}
														},
														"id": 1321,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6849:10:5",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 893,
														"src": "6844:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1332,
																"name": "PRECISION_FACTOR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "6916:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1329,
																		"name": "accTokenPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "6894:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1325,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1225,
																					"src": "6878:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
																						"typeString": "struct StackMining.PoolInfo storage pointer"
																					}
																				},
																				"id": 1326,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6883:5:5",
																				"memberName": "boost",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 900,
																				"src": "6878:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 1322,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1207,
																					"src": "6862:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																						"typeString": "struct StackMining.UserInfo storage pointer"
																					}
																				},
																				"id": 1323,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6867:6:5",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 891,
																				"src": "6862:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6874:3:5",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 724,
																			"src": "6862:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6862:27:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6890:3:5",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 724,
																	"src": "6862:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6862:49:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6912:3:5",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 739,
															"src": "6862:53:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6862:71:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6844:89:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "6844:89:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1337,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6960:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6964:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6960:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1339,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "6972:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1336,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "6951:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6951:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1341,
												"nodeType": "EmitStatement",
												"src": "6946:34:5"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1203,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1202,
												"name": "nonReentrant",
												"nameLocations": [
													"5985:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "5985:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "5985:12:5"
										}
									],
									"name": "withdraw",
									"nameLocation": "5936:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "5953:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "5945:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5945:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "5959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5959:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5944:31:5"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5998:0:5"
									},
									"scope": 1838,
									"src": "5927:1061:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "7190:362:5",
										"statements": [
											{
												"assignments": [
													1352
												],
												"declarations": [
													{
														"constant": false,
														"id": 1352,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "7218:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "7201:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
															"typeString": "struct StackMining.UserInfo"
														},
														"typeName": {
															"id": 1351,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1350,
																"name": "UserInfo",
																"nameLocations": [
																	"7201:8:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 896,
																"src": "7201:8:5"
															},
															"referencedDeclaration": 896,
															"src": "7201:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																"typeString": "struct StackMining.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1359,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1353,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "7225:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$896_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct StackMining.UserInfo storage ref))"
															}
														},
														"id": 1355,
														"indexExpression": {
															"id": 1354,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "7234:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7225:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$896_storage_$",
															"typeString": "mapping(address => struct StackMining.UserInfo storage ref)"
														}
													},
													"id": 1358,
													"indexExpression": {
														"expression": {
															"id": 1356,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7240:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7244:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7240:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7225:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$896_storage",
														"typeString": "struct StackMining.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7201:50:5"
											},
											{
												"assignments": [
													1361
												],
												"declarations": [
													{
														"constant": false,
														"id": 1361,
														"mutability": "mutable",
														"name": "amountToTransfer",
														"nameLocation": "7270:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "7262:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1360,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7262:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1364,
												"initialValue": {
													"expression": {
														"id": 1362,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "7289:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
															"typeString": "struct StackMining.UserInfo storage pointer"
														}
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7294:6:5",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 891,
													"src": "7289:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7262:38:5"
											},
											{
												"expression": {
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1365,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "7311:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																"typeString": "struct StackMining.UserInfo storage pointer"
															}
														},
														"id": 1367,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7316:6:5",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 891,
														"src": "7311:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7325:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7311:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "7311:15:5"
											},
											{
												"expression": {
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1371,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "7337:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																"typeString": "struct StackMining.UserInfo storage pointer"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7342:10:5",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 893,
														"src": "7337:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7355:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7337:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "7337:19:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1377,
														"name": "amountToTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "7373:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7392:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7373:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1392,
												"nodeType": "IfStatement",
												"src": "7369:116:5",
												"trueBody": {
													"id": 1391,
													"nodeType": "Block",
													"src": "7395:90:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1385,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "7443:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1386,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7447:6:5",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "7443:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7435:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1383,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7435:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7435:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1388,
																		"name": "amountToTransfer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1361,
																		"src": "7456:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1380,
																		"name": "stakedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "7410:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2018",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7422:12:5",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2053,
																	"src": "7410:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2018_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2018_$",
																		"typeString": "function (contract IBEP20,address,uint256)"
																	}
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7410:63:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1390,
															"nodeType": "ExpressionStatement",
															"src": "7410:63:5"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1394,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7520:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7524:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7520:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1396,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "7532:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																	"typeString": "struct StackMining.UserInfo storage pointer"
																}
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7537:6:5",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 891,
															"src": "7532:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1393,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1859,
														"src": "7502:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7502:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "EmitStatement",
												"src": "7497:47:5"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1348,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1347,
												"name": "nonReentrant",
												"nameLocations": [
													"7177:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "7177:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "7177:12:5"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "7138:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "7164:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "7156:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7156:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7155:14:5"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7190:0:5"
									},
									"scope": 1838,
									"src": "7129:423:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "7739:73:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1413,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7783:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7787:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7783:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7775:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1411,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7775:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7775:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1416,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "7796:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1408,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "7750:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2018",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7762:12:5",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2053,
														"src": "7750:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2018_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2018_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7750:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "7750:54:5"
											}
										]
									},
									"functionSelector": "3279beab",
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1406,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1405,
												"name": "onlyOwner",
												"nameLocations": [
													"7729:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "7729:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "7729:9:5"
										}
									],
									"name": "emergencyRewardWithdraw",
									"nameLocation": "7679:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7711:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "7703:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7703:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7702:17:5"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7739:0:5"
									},
									"scope": 1838,
									"src": "7670:142:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "8194:321:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1431,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "8213:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1434,
																		"name": "stakedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "8238:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2018",
																			"typeString": "contract IBEP20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IBEP20_$2018",
																			"typeString": "contract IBEP20"
																		}
																	],
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1432,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8230:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8230:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8213:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206265207374616b656420746f6b656e",
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8252:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2234c59bb9b24bd9eea0d80dd308fa837e87d8c6a3de9b68b0a40a73104da8b",
																"typeString": "literal_string \"Cannot be staked token\""
															},
															"value": "Cannot be staked token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2234c59bb9b24bd9eea0d80dd308fa837e87d8c6a3de9b68b0a40a73104da8b",
																"typeString": "literal_string \"Cannot be staked token\""
															}
														],
														"id": 1430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8205:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8205:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1439,
												"nodeType": "ExpressionStatement",
												"src": "8205:72:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1441,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "8296:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1444,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "8321:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2018",
																			"typeString": "contract IBEP20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IBEP20_$2018",
																			"typeString": "contract IBEP20"
																		}
																	],
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8313:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1442,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8313:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8313:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8296:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742062652072657761726420746f6b656e",
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8335:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd9c8ebedd5fa8d04818598c011edbb5d5f75d02fe6639bf68cf95fd4baa83fb",
																"typeString": "literal_string \"Cannot be reward token\""
															},
															"value": "Cannot be reward token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd9c8ebedd5fa8d04818598c011edbb5d5f75d02fe6639bf68cf95fd4baa83fb",
																"typeString": "literal_string \"Cannot be reward token\""
															}
														],
														"id": 1440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8288:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8288:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "8288:72:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1456,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8416:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8420:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8416:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8408:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1454,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8408:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8408:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1459,
															"name": "_tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "8429:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1451,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "8380:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1450,
																"name": "IBEP20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2018,
																"src": "8373:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBEP20_$2018_$",
																	"typeString": "type(contract IBEP20)"
																}
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8373:21:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2018",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8395:12:5",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2053,
														"src": "8373:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2018_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2018_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8373:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "8373:69:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1463,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "8479:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1464,
															"name": "_tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "8494:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1462,
														"name": "AdminTokenRecovery",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "8460:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8460:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1466,
												"nodeType": "EmitStatement",
												"src": "8455:52:5"
											}
										]
									},
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "7820:276:5",
										"text": " @notice It allows the admin to recover wrong tokens sent to the contract\n @param _tokenAddress: the address of the token to withdraw\n @param _tokenAmount: the number of tokens to withdraw\n @dev This function is only callable by admin."
									},
									"functionSelector": "3f138d4b",
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1428,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1427,
												"name": "onlyOwner",
												"nameLocations": [
													"8184:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "8184:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "8184:9:5"
										}
									],
									"name": "recoverWrongTokens",
									"nameLocation": "8111:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "8138:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "8130:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8130:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "_tokenAmount",
												"nameLocation": "8161:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "8153:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8153:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8129:45:5"
									},
									"returnParameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8194:0:5"
									},
									"scope": 1838,
									"src": "8102:413:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "8646:47:5",
										"statements": [
											{
												"expression": {
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1473,
														"name": "bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "8657:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1474,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8673:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8679:6:5",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "8673:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8657:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "8657:28:5"
											}
										]
									},
									"functionSelector": "80dc0672",
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1471,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1470,
												"name": "onlyOwner",
												"nameLocations": [
													"8636:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "8636:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "8636:9:5"
										}
									],
									"name": "stopReward",
									"nameLocation": "8614:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8624:2:5"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8646:0:5"
									},
									"scope": 1838,
									"src": "8605:88:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "9017:377:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1489,
															"name": "hasUserLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "9036:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d75737420626520736574",
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9050:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d359e0630a0e50f510c3d55ac7e78402c8c17a210cbb7d33e871025c8bfed92",
																"typeString": "literal_string \"Must be set\""
															},
															"value": "Must be set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d359e0630a0e50f510c3d55ac7e78402c8c17a210cbb7d33e871025c8bfed92",
																"typeString": "literal_string \"Must be set\""
															}
														],
														"id": 1488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9028:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9028:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "9028:36:5"
											},
											{
												"condition": {
													"id": 1493,
													"name": "_hasUserLimit",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1481,
													"src": "9079:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1514,
													"nodeType": "Block",
													"src": "9251:90:5",
													"statements": [
														{
															"expression": {
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1506,
																	"name": "hasUserLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "9266:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1507,
																	"name": "_hasUserLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "9281:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9266:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1509,
															"nodeType": "ExpressionStatement",
															"src": "9266:28:5"
														},
														{
															"expression": {
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1510,
																	"name": "poolLimitPerUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "9309:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9328:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9309:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1513,
															"nodeType": "ExpressionStatement",
															"src": "9309:20:5"
														}
													]
												},
												"id": 1515,
												"nodeType": "IfStatement",
												"src": "9075:266:5",
												"trueBody": {
													"id": 1505,
													"nodeType": "Block",
													"src": "9094:151:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1495,
																			"name": "_poolLimitPerUser",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1483,
																			"src": "9117:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 1496,
																			"name": "poolLimitPerUser",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 875,
																			"src": "9137:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9117:36:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e6577206c696d6974206d75737420626520686967686572",
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9155:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a50272db75196303ab05dd1527b8eedc85d0e0a35bbfb74ce5bb179db7dfc938",
																			"typeString": "literal_string \"New limit must be higher\""
																		},
																		"value": "New limit must be higher"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_a50272db75196303ab05dd1527b8eedc85d0e0a35bbfb74ce5bb179db7dfc938",
																			"typeString": "literal_string \"New limit must be higher\""
																		}
																	],
																	"id": 1494,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9109:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9109:73:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1500,
															"nodeType": "ExpressionStatement",
															"src": "9109:73:5"
														},
														{
															"expression": {
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1501,
																	"name": "poolLimitPerUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "9197:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1502,
																	"name": "_poolLimitPerUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1483,
																	"src": "9216:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9197:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1504,
															"nodeType": "ExpressionStatement",
															"src": "9197:36:5"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1517,
															"name": "poolLimitPerUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "9369:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1516,
														"name": "NewPoolLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1873,
														"src": "9356:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9356:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1519,
												"nodeType": "EmitStatement",
												"src": "9351:35:5"
											}
										]
									},
									"functionSelector": "a0b40905",
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1486,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1485,
												"name": "onlyOwner",
												"nameLocations": [
													"9007:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "9007:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "9007:9:5"
										}
									],
									"name": "updatePoolLimitPerUser",
									"nameLocation": "8928:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "_hasUserLimit",
												"nameLocation": "8956:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "8951:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8951:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "_poolLimitPerUser",
												"nameLocation": "8979:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "8971:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:47:5"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9017:0:5"
									},
									"scope": 1838,
									"src": "8919:475:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "9623:166:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1529,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "9642:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9648:6:5",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "9642:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1531,
																"name": "startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "9657:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9642:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206861732073746172746564",
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9669:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3064331463f63d46b77f5f0f10bf66b3e44d7211e89e334f395ddc2d5053297a",
																"typeString": "literal_string \"Pool has started\""
															},
															"value": "Pool has started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3064331463f63d46b77f5f0f10bf66b3e44d7211e89e334f395ddc2d5053297a",
																"typeString": "literal_string \"Pool has started\""
															}
														],
														"id": 1528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9634:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9634:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "9634:54:5"
											},
											{
												"expression": {
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1536,
														"name": "rewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "9699:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1537,
														"name": "_rewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "9716:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9699:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "9699:32:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1541,
															"name": "_rewardPerBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "9765:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1540,
														"name": "NewRewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "9747:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9747:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1543,
												"nodeType": "EmitStatement",
												"src": "9742:39:5"
											}
										]
									},
									"functionSelector": "01f8a976",
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1526,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1525,
												"name": "onlyOwner",
												"nameLocations": [
													"9613:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "9613:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "9613:9:5"
										}
									],
									"name": "updateRewardPerBlock",
									"nameLocation": "9558:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "_rewardPerBlock",
												"nameLocation": "9587:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "9579:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9579:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9578:25:5"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9623:0:5"
									},
									"scope": 1838,
									"src": "9549:240:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1595,
										"nodeType": "Block",
										"src": "10130:509:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1556,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "10149:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10155:6:5",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "10149:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1558,
																"name": "startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "10164:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10149:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206861732073746172746564",
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10176:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3064331463f63d46b77f5f0f10bf66b3e44d7211e89e334f395ddc2d5053297a",
																"typeString": "literal_string \"Pool has started\""
															},
															"value": "Pool has started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3064331463f63d46b77f5f0f10bf66b3e44d7211e89e334f395ddc2d5053297a",
																"typeString": "literal_string \"Pool has started\""
															}
														],
														"id": 1555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10141:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10141:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "10141:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1564,
																"name": "_startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "10214:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1565,
																"name": "_bonusEndBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "10228:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10214:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6577207374617274426c6f636b206d757374206265206c6f776572207468616e206e657720656e64426c6f636b",
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10244:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55e8b512461165150226d7fb62af16288a660c0fc1f35821ba4ad8ad658a0bb0",
																"typeString": "literal_string \"New startBlock must be lower than new endBlock\""
															},
															"value": "New startBlock must be lower than new endBlock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55e8b512461165150226d7fb62af16288a660c0fc1f35821ba4ad8ad658a0bb0",
																"typeString": "literal_string \"New startBlock must be lower than new endBlock\""
															}
														],
														"id": 1563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10206:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10206:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1569,
												"nodeType": "ExpressionStatement",
												"src": "10206:87:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1571,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "10312:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10318:6:5",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "10312:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1573,
																"name": "_startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "10327:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10312:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6577207374617274426c6f636b206d75737420626520686967686572207468616e2063757272656e7420626c6f636b",
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10340:50:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ddaf6510efec06eaa5007f0744244862092545bc763e566e2661c53c8ff3a7e",
																"typeString": "literal_string \"New startBlock must be higher than current block\""
															},
															"value": "New startBlock must be higher than current block"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ddaf6510efec06eaa5007f0744244862092545bc763e566e2661c53c8ff3a7e",
																"typeString": "literal_string \"New startBlock must be higher than current block\""
															}
														],
														"id": 1570,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10304:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10304:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "10304:87:5"
											},
											{
												"expression": {
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1578,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "10404:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1579,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "10417:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10404:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "10404:24:5"
											},
											{
												"expression": {
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1582,
														"name": "bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "10439:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1583,
														"name": "_bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "10455:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10439:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "10439:30:5"
											},
											{
												"expression": {
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1586,
														"name": "lastRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "10536:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1587,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "10554:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10536:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "10536:28:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1591,
															"name": "_startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1548,
															"src": "10603:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1592,
															"name": "_bonusEndBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "10616:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1590,
														"name": "NewStartAndEndBlocks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1865,
														"src": "10582:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10582:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1594,
												"nodeType": "EmitStatement",
												"src": "10577:54:5"
											}
										]
									},
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "9797:230:5",
										"text": " @notice It allows the admin to update start and end blocks\n @dev This function is only callable by owner.\n @param _startBlock: the new start block\n @param _bonusEndBlock: the new end block"
									},
									"functionSelector": "9513997f",
									"id": 1596,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1553,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1552,
												"name": "onlyOwner",
												"nameLocations": [
													"10120:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "10120:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "10120:9:5"
										}
									],
									"name": "updateStartAndEndBlocks",
									"nameLocation": "10042:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "_startBlock",
												"nameLocation": "10074:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "10066:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10066:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "_bonusEndBlock",
												"nameLocation": "10095:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "10087:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10087:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10065:45:5"
									},
									"returnParameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10130:0:5"
									},
									"scope": 1838,
									"src": "10033:606:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "10896:773:5",
										"statements": [
											{
												"assignments": [
													1607
												],
												"declarations": [
													{
														"constant": false,
														"id": 1607,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "10924:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1699,
														"src": "10907:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
															"typeString": "struct StackMining.UserInfo"
														},
														"typeName": {
															"id": 1606,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1605,
																"name": "UserInfo",
																"nameLocations": [
																	"10907:8:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 896,
																"src": "10907:8:5"
															},
															"referencedDeclaration": 896,
															"src": "10907:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																"typeString": "struct StackMining.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1613,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1608,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "10931:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$896_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct StackMining.UserInfo storage ref))"
															}
														},
														"id": 1610,
														"indexExpression": {
															"id": 1609,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "10940:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10931:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$896_storage_$",
															"typeString": "mapping(address => struct StackMining.UserInfo storage ref)"
														}
													},
													"id": 1612,
													"indexExpression": {
														"id": 1611,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "10946:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10931:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$896_storage",
														"typeString": "struct StackMining.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10907:45:5"
											},
											{
												"assignments": [
													1616
												],
												"declarations": [
													{
														"constant": false,
														"id": 1616,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "10980:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1699,
														"src": "10963:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
															"typeString": "struct StackMining.PoolInfo"
														},
														"typeName": {
															"id": 1615,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1614,
																"name": "PoolInfo",
																"nameLocations": [
																	"10963:8:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 903,
																"src": "10963:8:5"
															},
															"referencedDeclaration": 903,
															"src": "10963:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
																"typeString": "struct StackMining.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1620,
												"initialValue": {
													"baseExpression": {
														"id": 1617,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "10987:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$903_storage_$dyn_storage",
															"typeString": "struct StackMining.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1619,
													"indexExpression": {
														"id": 1618,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "10996:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10987:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$903_storage",
														"typeString": "struct StackMining.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10963:38:5"
											},
											{
												"assignments": [
													1622
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "totalShares",
														"nameLocation": "11020:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1699,
														"src": "11012:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1621,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11012:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1625,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1623,
														"name": "getTotalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "11034:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11034:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11012:38:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1626,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "11065:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11071:6:5",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "11065:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1628,
															"name": "lastRewardBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "11080:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11065:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1630,
															"name": "totalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "11099:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11114:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11099:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11065:50:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1697,
													"nodeType": "Block",
													"src": "11536:126:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1693,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1607,
																			"src": "11634:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																				"typeString": "struct StackMining.UserInfo storage pointer"
																			}
																		},
																		"id": 1694,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11639:10:5",
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 893,
																		"src": "11634:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1690,
																				"name": "PRECISION_FACTOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "11612:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1687,
																						"name": "accTokenPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 863,
																						"src": "11590:16:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1683,
																									"name": "pool",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1616,
																									"src": "11574:4:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
																										"typeString": "struct StackMining.PoolInfo storage pointer"
																									}
																								},
																								"id": 1684,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "11579:5:5",
																								"memberName": "boost",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 900,
																								"src": "11574:10:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"expression": {
																									"id": 1680,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1607,
																									"src": "11558:4:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																										"typeString": "struct StackMining.UserInfo storage pointer"
																									}
																								},
																								"id": 1681,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "11563:6:5",
																								"memberName": "amount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 891,
																								"src": "11558:11:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1682,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11570:3:5",
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 724,
																							"src": "11558:15:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1685,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11558:27:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1686,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11586:3:5",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 724,
																					"src": "11558:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11558:49:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11608:3:5",
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 739,
																			"src": "11558:53:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11558:71:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11630:3:5",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 709,
																	"src": "11558:75:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11558:92:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1604,
															"id": 1696,
															"nodeType": "Return",
															"src": "11551:99:5"
														}
													]
												},
												"id": 1698,
												"nodeType": "IfStatement",
												"src": "11061:601:5",
												"trueBody": {
													"id": 1679,
													"nodeType": "Block",
													"src": "11117:413:5",
													"statements": [
														{
															"assignments": [
																1635
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1635,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "11140:10:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1679,
																	"src": "11132:18:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1634,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11132:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1641,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1637,
																		"name": "lastRewardBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "11168:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1638,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "11185:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11191:6:5",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "11185:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1636,
																	"name": "_getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1837,
																	"src": "11153:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11153:45:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11132:66:5"
														},
														{
															"assignments": [
																1643
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1643,
																	"mutability": "mutable",
																	"name": "cakeReward",
																	"nameLocation": "11221:10:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1679,
																	"src": "11213:18:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1642,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11213:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1648,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1646,
																		"name": "rewardPerBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "11249:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1644,
																		"name": "multiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1635,
																		"src": "11234:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11245:3:5",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 724,
																	"src": "11234:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11234:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11213:51:5"
														},
														{
															"assignments": [
																1650
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1650,
																	"mutability": "mutable",
																	"name": "adjustedTokenPerShare",
																	"nameLocation": "11287:21:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1679,
																	"src": "11279:29:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1649,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11279:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1661,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1658,
																				"name": "totalShares",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1622,
																				"src": "11386:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1655,
																						"name": "PRECISION_FACTOR",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 881,
																						"src": "11364:16:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1653,
																						"name": "cakeReward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1643,
																						"src": "11349:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1654,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11360:3:5",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 724,
																					"src": "11349:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11349:32:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11382:3:5",
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 739,
																			"src": "11349:36:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11349:49:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1651,
																		"name": "accTokenPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "11328:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11345:3:5",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 694,
																	"src": "11328:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11328:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11279:120:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1675,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1607,
																			"src": "11502:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																				"typeString": "struct StackMining.UserInfo storage pointer"
																			}
																		},
																		"id": 1676,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11507:10:5",
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 893,
																		"src": "11502:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1672,
																				"name": "PRECISION_FACTOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "11480:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1669,
																						"name": "adjustedTokenPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1650,
																						"src": "11453:21:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1665,
																									"name": "pool",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1616,
																									"src": "11437:4:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PoolInfo_$903_storage_ptr",
																										"typeString": "struct StackMining.PoolInfo storage pointer"
																									}
																								},
																								"id": 1666,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "11442:5:5",
																								"memberName": "boost",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 900,
																								"src": "11437:10:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"expression": {
																									"id": 1662,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1607,
																									"src": "11421:4:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UserInfo_$896_storage_ptr",
																										"typeString": "struct StackMining.UserInfo storage pointer"
																									}
																								},
																								"id": 1663,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "11426:6:5",
																								"memberName": "amount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 891,
																								"src": "11421:11:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1664,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11433:3:5",
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 724,
																							"src": "11421:15:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1667,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11421:27:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1668,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11449:3:5",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 724,
																					"src": "11421:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11421:54:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11476:3:5",
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 739,
																			"src": "11421:58:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11421:76:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11498:3:5",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 709,
																	"src": "11421:80:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:97:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1604,
															"id": 1678,
															"nodeType": "Return",
															"src": "11414:104:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "98969e82",
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingReward",
									"nameLocation": "10821:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "10843:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "10835:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10835:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "10857:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "10849:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10849:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10834:29:5"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "10887:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10887:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10886:9:5"
									},
									"scope": 1838,
									"src": "10812:857:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "11742:178:5",
										"statements": [
											{
												"body": {
													"id": 1732,
													"nodeType": "Block",
													"src": "11810:103:5",
													"statements": [
														{
															"expression": {
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1716,
																	"name": "totalShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1703,
																	"src": "11825:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1724,
																							"name": "poolInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 907,
																							"src": "11880:8:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_PoolInfo_$903_storage_$dyn_storage",
																								"typeString": "struct StackMining.PoolInfo storage ref[] storage ref"
																							}
																						},
																						"id": 1726,
																						"indexExpression": {
																							"id": 1725,
																							"name": "pid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1706,
																							"src": "11889:3:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "11880:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$903_storage",
																							"typeString": "struct StackMining.PoolInfo storage ref"
																						}
																					},
																					"id": 1727,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11894:5:5",
																					"memberName": "boost",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 900,
																					"src": "11880:19:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"baseExpression": {
																							"id": 1719,
																							"name": "poolInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 907,
																							"src": "11855:8:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_PoolInfo_$903_storage_$dyn_storage",
																								"typeString": "struct StackMining.PoolInfo storage ref[] storage ref"
																							}
																						},
																						"id": 1721,
																						"indexExpression": {
																							"id": 1720,
																							"name": "pid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1706,
																							"src": "11864:3:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "11855:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$903_storage",
																							"typeString": "struct StackMining.PoolInfo storage ref"
																						}
																					},
																					"id": 1722,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11869:6:5",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 902,
																					"src": "11855:20:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11876:3:5",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 724,
																				"src": "11855:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11855:45:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1717,
																			"name": "totalShares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1703,
																			"src": "11839:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11851:3:5",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 694,
																		"src": "11839:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11839:62:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11825:76:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1731,
															"nodeType": "ExpressionStatement",
															"src": "11825:76:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1709,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "11781:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1710,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "11787:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$903_storage_$dyn_storage",
																"typeString": "struct StackMining.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11796:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11787:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11781:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1733,
												"initializationExpression": {
													"assignments": [
														1706
													],
													"declarations": [
														{
															"constant": false,
															"id": 1706,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "11772:3:5",
															"nodeType": "VariableDeclaration",
															"scope": 1733,
															"src": "11764:11:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1705,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11764:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1708,
													"initialValue": {
														"hexValue": "30",
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11778:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11764:15:5"
												},
												"loopExpression": {
													"expression": {
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "11804:5:5",
														"subExpression": {
															"id": 1713,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "11806:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1715,
													"nodeType": "ExpressionStatement",
													"src": "11804:5:5"
												},
												"nodeType": "ForStatement",
												"src": "11759:154:5"
											}
										]
									},
									"functionSelector": "d5002f2e",
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalShares",
									"nameLocation": "11686:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11700:2:5"
									},
									"returnParameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "totalShares",
												"nameLocation": "11730:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "11722:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11722:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11721:21:5"
									},
									"scope": 1838,
									"src": "11677:243:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "12053:865:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1738,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12068:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12074:6:5",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "12068:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1740,
														"name": "lastRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "12084:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12068:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1744,
												"nodeType": "IfStatement",
												"src": "12064:70:5",
												"trueBody": {
													"id": 1743,
													"nodeType": "Block",
													"src": "12101:33:5",
													"statements": [
														{
															"functionReturnParameters": 1737,
															"id": 1742,
															"nodeType": "Return",
															"src": "12116:7:5"
														}
													]
												}
											},
											{
												"assignments": [
													1746
												],
												"declarations": [
													{
														"constant": false,
														"id": 1746,
														"mutability": "mutable",
														"name": "totalShares",
														"nameLocation": "12232:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1794,
														"src": "12224:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1745,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12224:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1749,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1747,
														"name": "getTotalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "12246:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12246:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12224:38:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1750,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1746,
														"src": "12532:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12547:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12532:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1760,
												"nodeType": "IfStatement",
												"src": "12528:100:5",
												"trueBody": {
													"id": 1759,
													"nodeType": "Block",
													"src": "12550:78:5",
													"statements": [
														{
															"expression": {
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1753,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 872,
																	"src": "12565:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1754,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "12583:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12589:6:5",
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "12583:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12565:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1757,
															"nodeType": "ExpressionStatement",
															"src": "12565:30:5"
														},
														{
															"functionReturnParameters": 1737,
															"id": 1758,
															"nodeType": "Return",
															"src": "12610:7:5"
														}
													]
												}
											},
											{
												"assignments": [
													1762
												],
												"declarations": [
													{
														"constant": false,
														"id": 1762,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "12648:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1794,
														"src": "12640:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12640:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1768,
												"initialValue": {
													"arguments": [
														{
															"id": 1764,
															"name": "lastRewardBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "12676:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1765,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "12693:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12699:6:5",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "12693:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1763,
														"name": "_getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1837,
														"src": "12661:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12661:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12640:66:5"
											},
											{
												"assignments": [
													1770
												],
												"declarations": [
													{
														"constant": false,
														"id": 1770,
														"mutability": "mutable",
														"name": "cakeReward",
														"nameLocation": "12725:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1794,
														"src": "12717:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1769,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12717:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1775,
												"initialValue": {
													"arguments": [
														{
															"id": 1773,
															"name": "rewardPerBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12753:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1771,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "12738:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12749:3:5",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "12738:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12738:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12717:51:5"
											},
											{
												"expression": {
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1776,
														"name": "accTokenPerShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "12779:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1784,
																		"name": "totalShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1746,
																		"src": "12856:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1781,
																				"name": "PRECISION_FACTOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "12834:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1779,
																				"name": "cakeReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1770,
																				"src": "12819:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12830:3:5",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 724,
																			"src": "12819:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12819:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12852:3:5",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 739,
																	"src": "12819:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12819:49:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1777,
																"name": "accTokenPerShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "12798:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12815:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 694,
															"src": "12798:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12798:71:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12779:90:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1788,
												"nodeType": "ExpressionStatement",
												"src": "12779:90:5"
											},
											{
												"expression": {
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1789,
														"name": "lastRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "12880:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1790,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12898:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12904:6:5",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "12898:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12880:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "12880:30:5"
											}
										]
									},
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePool",
									"nameLocation": "12030:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12041:2:5"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12053:0:5"
									},
									"scope": 1838,
									"src": "12021:897:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1803,
										"nodeType": "Block",
										"src": "12980:41:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1800,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "12998:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$903_storage_$dyn_storage",
															"typeString": "struct StackMining.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13007:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "12998:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1799,
												"id": 1802,
												"nodeType": "Return",
												"src": "12991:22:5"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 1804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "12935:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12945:2:5"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "12971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12970:9:5"
									},
									"scope": 1838,
									"src": "12926:95:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "13279:225:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1813,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "13294:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1814,
														"name": "bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "13301:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13294:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1822,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "13374:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 1823,
															"name": "bonusEndBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "13383:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13374:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1833,
														"nodeType": "Block",
														"src": "13439:58:5",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1830,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1806,
																			"src": "13479:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1828,
																			"name": "bonusEndBlock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 866,
																			"src": "13461:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13475:3:5",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 709,
																		"src": "13461:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13461:24:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1812,
																"id": 1832,
																"nodeType": "Return",
																"src": "13454:31:5"
															}
														]
													},
													"id": 1834,
													"nodeType": "IfStatement",
													"src": "13370:127:5",
													"trueBody": {
														"id": 1827,
														"nodeType": "Block",
														"src": "13398:35:5",
														"statements": [
															{
																"expression": {
																	"hexValue": "30",
																	"id": 1825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13420:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 1812,
																"id": 1826,
																"nodeType": "Return",
																"src": "13413:8:5"
															}
														]
													}
												},
												"id": 1835,
												"nodeType": "IfStatement",
												"src": "13290:207:5",
												"trueBody": {
													"id": 1821,
													"nodeType": "Block",
													"src": "13316:48:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1818,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1806,
																		"src": "13346:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1816,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1808,
																		"src": "13338:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13342:3:5",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 709,
																	"src": "13338:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13338:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1812,
															"id": 1820,
															"nodeType": "Return",
															"src": "13331:21:5"
														}
													]
												}
											}
										]
									},
									"id": 1837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getMultiplier",
									"nameLocation": "13204:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "13227:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "13219:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13219:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "13242:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "13234:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13218:28:5"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "13270:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13270:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13269:9:5"
									},
									"scope": 1838,
									"src": "13195:309:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1839,
							"src": "377:13130:5",
							"usedErrors": []
						}
					],
					"src": "33:13474:5"
				},
				"id": 5
			},
			"interfaces/IARCStackMining.sol": {
				"ast": {
					"absolutePath": "interfaces/IARCStackMining.sol",
					"exportedSymbols": {
						"IARCStack": [
							1917
						],
						"IBEP20": [
							2018
						]
					},
					"id": 1918,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1840,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "interfaces/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 1841,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1918,
							"sourceUnit": 2019,
							"src": "60:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IARCStack",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1917,
							"linearizedBaseContracts": [
								1917
							],
							"name": "IARCStack",
							"nameLocation": "96:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "74545154aac348a3eac92596bd1971957ca94795f4e954ec5f613b55fab78129",
									"id": 1847,
									"name": "AdminTokenRecovery",
									"nameLocation": "121:18:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenRecovered",
												"nameLocation": "148:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "140:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1845,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "172:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "164:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "164:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:40:6"
									},
									"src": "115:65:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
									"id": 1853,
									"name": "Deposit",
									"nameLocation": "192:7:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "216:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "200:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "230:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "222:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "199:38:6"
									},
									"src": "186:52:6"
								},
								{
									"anonymous": false,
									"eventSelector": "5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695",
									"id": 1859,
									"name": "EmergencyWithdraw",
									"nameLocation": "250:17:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "284:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "268:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "268:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "298:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "290:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "290:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "267:38:6"
									},
									"src": "244:62:6"
								},
								{
									"anonymous": false,
									"eventSelector": "7cd0ab87d19036f3dfadadb232c78aa4879dda3f0c994a9d637532410ee2ce06",
									"id": 1865,
									"name": "NewStartAndEndBlocks",
									"nameLocation": "318:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"indexed": false,
												"mutability": "mutable",
												"name": "startBlock",
												"nameLocation": "347:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "339:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"indexed": false,
												"mutability": "mutable",
												"name": "endBlock",
												"nameLocation": "367:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "359:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "359:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:38:6"
									},
									"src": "312:65:6"
								},
								{
									"anonymous": false,
									"eventSelector": "0c4d677eef92893ac7ec52faf8140fc6c851ab4736302b4f3a89dfb20696a0df",
									"id": 1869,
									"name": "NewRewardPerBlock",
									"nameLocation": "389:17:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardPerBlock",
												"nameLocation": "415:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "407:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:24:6"
									},
									"src": "383:48:6"
								},
								{
									"anonymous": false,
									"eventSelector": "241f67ee5f41b7a5cabf911367329be7215900f602ebfc47f89dce2a6bcd847c",
									"id": 1873,
									"name": "NewPoolLimit",
									"nameLocation": "443:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"indexed": false,
												"mutability": "mutable",
												"name": "poolLimitPerUser",
												"nameLocation": "464:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "456:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:26:6"
									},
									"src": "437:45:6"
								},
								{
									"anonymous": false,
									"eventSelector": "fed9fcb0ca3d1e761a4b929792bb24082fba92dca81252646ad306d306806566",
									"id": 1877,
									"name": "RewardsStop",
									"nameLocation": "494:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "514:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "506:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "505:21:6"
									},
									"src": "488:39:6"
								},
								{
									"anonymous": false,
									"eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
									"id": 1883,
									"name": "Withdraw",
									"nameLocation": "539:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "564:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "548:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1881,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "578:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "570:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "547:38:6"
									},
									"src": "533:53:6"
								},
								{
									"functionSelector": "83a5041c",
									"id": 1902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "603:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "_stakedToken",
												"nameLocation": "631:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "624:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2018",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1885,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1884,
														"name": "IBEP20",
														"nameLocations": [
															"624:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2018,
														"src": "624:6:6"
													},
													"referencedDeclaration": 2018,
													"src": "624:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2018",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "661:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "654:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2018",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1887,
														"name": "IBEP20",
														"nameLocations": [
															"654:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2018,
														"src": "654:6:6"
													},
													"referencedDeclaration": 2018,
													"src": "654:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2018",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "_rewardPerBlock",
												"nameLocation": "692:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "684:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "_startBlock",
												"nameLocation": "726:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "718:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "_bonusEndBlock",
												"nameLocation": "756:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "748:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "_poolLimitPerUser",
												"nameLocation": "789:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "781:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "825:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "817:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:225:6"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "847:0:6"
									},
									"scope": 1917,
									"src": "594:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e2bbb158",
									"id": 1909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "865:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "881:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "873:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "895:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "887:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "872:31:6"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "912:0:6"
									},
									"scope": 1917,
									"src": "856:57:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "441a3e70",
									"id": 1916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "930:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "947:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "939:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "960:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "952:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:30:6"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "977:0:6"
									},
									"scope": 1917,
									"src": "921:57:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1918,
							"src": "86:895:6",
							"usedErrors": []
						}
					],
					"src": "33:948:6"
				},
				"id": 6
			},
			"interfaces/IBEP20.sol": {
				"ast": {
					"absolutePath": "interfaces/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							2018
						]
					},
					"id": 2019,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1919,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2018,
							"linearizedBaseContracts": [
								2018
							],
							"name": "IBEP20",
							"nameLocation": "70:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1920,
										"nodeType": "StructuredDocumentation",
										"src": "84:68:7",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "167:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:2:7"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "204:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:7"
									},
									"scope": 2018,
									"src": "158:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "221:53:7",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 1931,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "289:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "297:2:7"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "323:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1928,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "323:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:7:7"
									},
									"scope": 2018,
									"src": "280:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "338:51:7",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "404:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:2:7"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "436:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1934,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "436:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "435:15:7"
									},
									"scope": 2018,
									"src": "395:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1938,
										"nodeType": "StructuredDocumentation",
										"src": "459:49:7",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 1943,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "523:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "527:2:7"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "553:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1940,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "553:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "552:15:7"
									},
									"scope": 2018,
									"src": "514:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1944,
										"nodeType": "StructuredDocumentation",
										"src": "576:54:7",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 1949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "645:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "653:2:7"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "679:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:9:7"
									},
									"scope": 2018,
									"src": "636:52:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "696:74:7",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1957,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "785:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "803:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "795:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:17:7"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "835:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:9:7"
									},
									"scope": 2018,
									"src": "776:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1958,
										"nodeType": "StructuredDocumentation",
										"src": "852:215:7",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1082:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1099:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "1091:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1118:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "1110:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:35:7"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "1144:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1964,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1144:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1143:6:7"
									},
									"scope": 2018,
									"src": "1073:77:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1968,
										"nodeType": "StructuredDocumentation",
										"src": "1158:270:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1977,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1443:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1461:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "1453:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1477:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "1469:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:33:7"
									},
									"returnParameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "1509:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:9:7"
									},
									"scope": 2018,
									"src": "1434:84:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1978,
										"nodeType": "StructuredDocumentation",
										"src": "1526:655:7",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1987,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2196:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2212:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "2204:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2229:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "2221:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:33:7"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "2255:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1984,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2255:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:6:7"
									},
									"scope": 2018,
									"src": "2187:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1988,
										"nodeType": "StructuredDocumentation",
										"src": "2269:304:7",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2588:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2619:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2611:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2611:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2644:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2636:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2636:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2672:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2664:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2664:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2600:85:7"
									},
									"returnParameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2704:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1996,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2704:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:6:7"
									},
									"scope": 2018,
									"src": "2579:131:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2000,
										"nodeType": "StructuredDocumentation",
										"src": "2718:163:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2008,
									"name": "Transfer",
									"nameLocation": "2893:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2918:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "2902:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2004,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2940:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "2924:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2924:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2006,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2952:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "2944:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2944:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2901:57:7"
									},
									"src": "2887:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "2967:151:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2017,
									"name": "Approval",
									"nameLocation": "3130:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3155:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "3139:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3178:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "3162:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3162:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3195:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "3187:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3187:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3138:63:7"
									},
									"src": "3124:78:7"
								}
							],
							"scope": 2019,
							"src": "60:3145:7",
							"usedErrors": []
						}
					],
					"src": "33:3172:7"
				},
				"id": 7
			},
			"libraries/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "libraries/SafeBEP20.sol",
					"exportedSymbols": {
						"Address": [
							496
						],
						"IBEP20": [
							2018
						],
						"SafeBEP20": [
							2237
						],
						"SafeMath": [
							830
						]
					},
					"id": 2238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2020,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2021,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2238,
							"sourceUnit": 831,
							"src": "60:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 2022,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2238,
							"sourceUnit": 497,
							"src": "119:51:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IBEP20.sol",
							"file": "../interfaces/IBEP20.sol",
							"id": 2023,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2238,
							"sourceUnit": 2019,
							"src": "174:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeBEP20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2024,
								"nodeType": "StructuredDocumentation",
								"src": "212:465:8",
								"text": " @title SafeBEP20\n @dev Wrappers around BEP20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2237,
							"linearizedBaseContracts": [
								2237
							],
							"name": "SafeBEP20",
							"nameLocation": "687:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2027,
									"libraryName": {
										"id": 2025,
										"name": "SafeMath",
										"nameLocations": [
											"710:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 830,
										"src": "710:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "704:27:8",
									"typeName": {
										"id": 2026,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "723:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2030,
									"libraryName": {
										"id": 2028,
										"name": "Address",
										"nameLocations": [
											"743:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 496,
										"src": "743:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "737:26:8",
									"typeName": {
										"id": 2029,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "755:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 2052,
										"nodeType": "Block",
										"src": "877:105:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2041,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "908:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2018",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2044,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2033,
																			"src": "938:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2018",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "944:8:8",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1967,
																		"src": "938:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "953:8:8",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "938:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2047,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2035,
																	"src": "963:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2048,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2037,
																	"src": "967:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2042,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "915:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "919:18:8",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "915:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "915:58:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2018",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2040,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2236,
														"src": "888:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2018_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "888:86:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2051,
												"nodeType": "ExpressionStatement",
												"src": "888:86:8"
											}
										]
									},
									"id": 2053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "780:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "810:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "803:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2018",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 2032,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2031,
														"name": "IBEP20",
														"nameLocations": [
															"803:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2018,
														"src": "803:6:8"
													},
													"referencedDeclaration": 2018,
													"src": "803:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2018",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "834:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "826:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "855:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "847:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:75:8"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "877:0:8"
									},
									"scope": 2237,
									"src": "771:211:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2078,
										"nodeType": "Block",
										"src": "1123:115:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2066,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "1154:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2018",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2069,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2056,
																			"src": "1184:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2018",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1190:12:8",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1999,
																		"src": "1184:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1203:8:8",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1184:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2072,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "1213:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2073,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2060,
																	"src": "1219:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2074,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "1223:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2067,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1161:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1165:18:8",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1161:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1161:68:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2018",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2065,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2236,
														"src": "1134:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2018_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:96:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "1134:96:8"
											}
										]
									},
									"id": 2079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "999:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1033:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "1026:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2018",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 2055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2054,
														"name": "IBEP20",
														"nameLocations": [
															"1026:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2018,
														"src": "1026:6:8"
													},
													"referencedDeclaration": 2018,
													"src": "1026:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2018",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1057:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "1049:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1080:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "1072:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1101:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "1093:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:98:8"
									},
									"returnParameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:0:8"
									},
									"scope": 2237,
									"src": "990:248:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2122,
										"nodeType": "Block",
										"src": "1617:560:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2091,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2087,
																			"src": "1925:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1934:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1925:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2094,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1924:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2099,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1965:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$2237",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$2237",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 2098,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1957:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2097,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1957:7:8",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2100,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1957:13:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2101,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2085,
																					"src": "1972:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 2095,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2083,
																					"src": "1941:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$2018",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 2096,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1947:9:8",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1977,
																				"src": "1941:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 2102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1941:39:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1984:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1941:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2105,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1924:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2001:56:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 2090,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1902:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1902:166:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2109,
												"nodeType": "ExpressionStatement",
												"src": "1902:166:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2111,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2083,
															"src": "2099:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2018",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2114,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "2129:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2018",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2135:7:8",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1987,
																		"src": "2129:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2143:8:8",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2129:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2117,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "2153:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2118,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2087,
																	"src": "2162:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2112,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2106:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2110:18:8",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2106:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2106:62:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2018",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2110,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2236,
														"src": "2079:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2018_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2079:90:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2121,
												"nodeType": "ExpressionStatement",
												"src": "2079:90:8"
											}
										]
									},
									"documentation": {
										"id": 2080,
										"nodeType": "StructuredDocumentation",
										"src": "1246:255:8",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 2123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1516:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1545:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "1538:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2018",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 2082,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2081,
														"name": "IBEP20",
														"nameLocations": [
															"1538:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2018,
														"src": "1538:6:8"
													},
													"referencedDeclaration": 2018,
													"src": "1538:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2018",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1569:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "1561:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1595:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "1587:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1527:80:8"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1617:0:8"
									},
									"scope": 2237,
									"src": "1507:670:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2159,
										"nodeType": "Block",
										"src": "2305:200:8",
										"statements": [
											{
												"assignments": [
													2134
												],
												"declarations": [
													{
														"constant": false,
														"id": 2134,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2324:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 2159,
														"src": "2316:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2133,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2316:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2146,
												"initialValue": {
													"arguments": [
														{
															"id": 2144,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "2383:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2139,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2363:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$2237",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$2237",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2137,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2141,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2128,
																	"src": "2370:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2135,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2126,
																	"src": "2339:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$2018",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2345:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1977,
																"src": "2339:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2339:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2379:3:8",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 694,
														"src": "2339:43:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2339:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2316:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2148,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "2420:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2018",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2151,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "2450:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2018",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2456:7:8",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1987,
																		"src": "2450:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2464:8:8",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2450:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2154,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2128,
																	"src": "2474:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2155,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2134,
																	"src": "2483:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2149,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2427:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2431:18:8",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2427:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2427:69:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2018",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2147,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2236,
														"src": "2400:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2018_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2400:97:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2158,
												"nodeType": "ExpressionStatement",
												"src": "2400:97:8"
											}
										]
									},
									"id": 2160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2194:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2233:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "2226:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2018",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 2125,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2124,
														"name": "IBEP20",
														"nameLocations": [
															"2226:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2018,
														"src": "2226:6:8"
													},
													"referencedDeclaration": 2018,
													"src": "2226:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2018",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2257:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "2249:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2283:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "2275:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2215:80:8"
									},
									"returnParameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2305:0:8"
									},
									"scope": 2237,
									"src": "2185:320:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2197,
										"nodeType": "Block",
										"src": "2633:258:8",
										"statements": [
											{
												"assignments": [
													2171
												],
												"declarations": [
													{
														"constant": false,
														"id": 2171,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2652:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 2197,
														"src": "2644:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2170,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2644:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2184,
												"initialValue": {
													"arguments": [
														{
															"id": 2181,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "2724:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2731:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2176,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2704:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$2237",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$2237",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 2175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2696:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2174,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2696:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2696:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2178,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "2711:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2172,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2163,
																	"src": "2680:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$2018",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2686:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1977,
																"src": "2680:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2680:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2720:3:8",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 779,
														"src": "2680:43:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2680:95:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2644:131:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2186,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "2806:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2018",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2189,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2163,
																			"src": "2836:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2018",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2842:7:8",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1987,
																		"src": "2836:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2850:8:8",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2836:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2192,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "2860:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2193,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2171,
																	"src": "2869:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2187,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2813:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2817:18:8",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2813:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2813:69:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2018",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2185,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2236,
														"src": "2786:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2018_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2786:97:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2196,
												"nodeType": "ExpressionStatement",
												"src": "2786:97:8"
											}
										]
									},
									"id": 2198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2522:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2561:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "2554:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2018",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 2162,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2161,
														"name": "IBEP20",
														"nameLocations": [
															"2554:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2018,
														"src": "2554:6:8"
													},
													"referencedDeclaration": 2018,
													"src": "2554:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2018",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2585:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "2577:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2577:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2611:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "2603:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2543:80:8"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2633:0:8"
									},
									"scope": 2237,
									"src": "2513:378:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2235,
										"nodeType": "Block",
										"src": "3352:704:8",
										"statements": [
											{
												"assignments": [
													2208
												],
												"declarations": [
													{
														"constant": false,
														"id": 2208,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3719:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2235,
														"src": "3706:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2207,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3706:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2217,
												"initialValue": {
													"arguments": [
														{
															"id": 2214,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2204,
															"src": "3760:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3766:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2211,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "3740:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$2018",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$2018",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3732:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2209,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3732:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3732:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3747:12:8",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 256,
														"src": "3732:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3732:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3706:95:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2218,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "3816:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3827:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3816:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3836:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3816:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2234,
												"nodeType": "IfStatement",
												"src": "3812:237:8",
												"trueBody": {
													"id": 2233,
													"nodeType": "Block",
													"src": "3839:210:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2225,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2208,
																				"src": "3971:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2227,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3984:4:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2226,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3984:4:8",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2228,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3983:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 2223,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3960:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3964:6:8",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3960:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3960:30:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 2230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3992:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 2222,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3952:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3952:85:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2232,
															"nodeType": "ExpressionStatement",
															"src": "3952:85:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2199,
										"nodeType": "StructuredDocumentation",
										"src": "2899:377:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3291:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3318:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "3311:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2018",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 2201,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2200,
														"name": "IBEP20",
														"nameLocations": [
															"3311:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2018,
														"src": "3311:6:8"
													},
													"referencedDeclaration": 2018,
													"src": "3311:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2018",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3338:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "3325:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3325:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3310:33:8"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3352:0:8"
									},
									"scope": 2237,
									"src": "3282:774:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2238,
							"src": "679:3380:8",
							"usedErrors": []
						}
					],
					"src": "33:4026:8"
				},
				"id": 8
			}
		}
	}
}