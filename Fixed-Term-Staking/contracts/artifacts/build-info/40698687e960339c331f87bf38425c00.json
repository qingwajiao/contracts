{
	"id": "40698687e960339c331f87bf38425c00",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"FixedTermStack.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\nimport \"./interfaces/IBEP20.sol\";\r\nimport \"./libraries/SafeBEP20.sol\";\r\n\r\n\r\ncontract FixedTermStack is Ownable {\r\n\r\n    /**\r\n     * Extends uint256 by SafeMath\r\n     */\r\n    using SafeMath for uint256;\r\n\r\n    /**\r\n     * Extends safe operation by SafeBEP20\r\n     */\r\n    using SafeBEP20 for IBEP20;\r\n\r\n    uint256 public constant DENOMINATOR = 365 days;  \r\n\r\n    uint256 public constant BASE = 100;\r\n\r\n    uint256 public constant DENOMINATOR_TEST = 10 minutes;\r\n\r\n    // uint256 public constant day = 12 * 60 * 24;\r\n    \r\n    // string private constant _symbol = 'SquidGrow';\r\n\r\n    /**\r\n     * Info of each user.\r\n     *\r\n     *\r\n     * We do some fancy math here. Basically, any point in time, the amount of BFLYs\r\n     * entitled to a user but is pending to be distributed is:\r\n     *\r\n     *   pending reward = (user.amount * pool.accBflyPerShare) - user.rewardDebt\r\n     *\r\n     * Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n     *   1. The pool's `accBflyPerShare` (and `lastRewardBlock`) gets updated.\r\n     *   2. User receives the pending reward sent to his/her address.\r\n     *   3. User's `amount` gets updated.\r\n     *   4. User's `rewardDebt` gets updated.\r\n     */\r\n    struct UserInfo {\r\n        uint256 amount;     // How many LP tokens the user has provided.\r\n        uint256 lockStartTime;\r\n        uint256 offset; \r\n    }\r\n\r\n    struct AprInfo {\r\n        uint256 apr;\r\n        uint256 time;\r\n    }\r\n\r\n\r\n    struct PoolInfo{\r\n        uint256 id;\r\n        uint256 amount;\r\n        uint256 duration;\r\n        AprInfo[] aprs;\r\n    }\r\n\r\n    PoolInfo[] poolInfos;\r\n\r\n    mapping (uint256 => mapping (address => UserInfo)) public userInfo;\r\n\r\n\r\n    /**\r\n     * The reward token!\r\n     */\r\n    IBEP20 public para;\r\n\r\n\r\n\r\n    /**\r\n     * The block number when mining starts.\r\n     */\r\n    // uint256 public startBlock;\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event AddPool(uint256 indexed pid,uint256 indexed apr, uint256 indexed duration);\r\n    event SetApr(uint256 indexed pid,uint256 indexed apr);\r\n\r\n    constructor(\r\n        IBEP20 _para\r\n\r\n    ) {\r\n        para = _para;\r\n\r\n        initialized();\r\n    }\r\n\r\n\r\n    function initialized()private {\r\n\r\n        uint _id = poolInfos.length;\r\n        PoolInfo storage p = poolInfos.push();\r\n\r\n        p.aprs.push(AprInfo(20, block.timestamp));\r\n        p.duration = 5 * 1 minutes;\r\n        p.id = _id;\r\n        p.amount = 0;\r\n\r\n\r\n    }           \r\n\r\n    /**\r\n     * @dev Number of the pools\r\n     */\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfos.length;\r\n    }\r\n\r\n    function getPoolInfo(uint256 _pid) external view returns (PoolInfo memory info){\r\n        return poolInfos[_pid];\r\n    }\r\n\r\n \r\n\r\n\r\n    /**\r\n     * @dev Return reward multiplier over the given _from to _to block.\r\n     */\r\n    function getMultiplier(uint256 _from, uint256 _to) public pure returns (uint256) {\r\n        return _to.sub(_from);\r\n    }\r\n\r\n    /**\r\n     * @dev View function to see pending rewards on frontend.\r\n     */\r\n    function pendingReward(uint256 _pid, address _user) external view returns (uint256 reward) {\r\n        PoolInfo storage pool = poolInfos[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 len = pool.aprs.length;\r\n        uint256 multiplier;\r\n        bool flag;\r\n        if (pool.aprs[len-1].time < user.lockStartTime){\r\n            multiplier = getMultiplier(user.lockStartTime,block.timestamp);\r\n            reward = multiplier.mul(pool.aprs[len-1].apr).mul(user.amount);\r\n            reward = reward.div(DENOMINATOR_TEST).div(100);\r\n            return reward;\r\n        }\r\n\r\n        for (uint i = user.offset;i< len-1;i++){\r\n\r\n            if (!flag){\r\n                multiplier = getMultiplier(user.lockStartTime, pool.aprs[i+1].time);\r\n                reward = multiplier.mul(pool.aprs[i].apr).mul(user.amount);\r\n                flag = true;\r\n                continue ;\r\n            }\r\n\r\n            uint256 tempNumber = getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time);\r\n\r\n            reward =reward.add(tempNumber.mul(pool.aprs[i].apr).mul(user.amount));  \r\n            multiplier = multiplier.add(tempNumber);\r\n                      \r\n        }\r\n\r\n        multiplier = getMultiplier(pool.aprs[len-1].time, block.number);\r\n        reward =reward.add(multiplier.mul(pool.aprs[len-1].apr).mul(user.amount));\r\n        reward = reward.div(DENOMINATOR_TEST).div(100);\r\n\r\n        return reward;\r\n\r\n    }\r\n\r\n\r\n    function calculateReward(uint256 _pid, address _user) public view returns (uint256 reward) {\r\n        PoolInfo storage pool = poolInfos[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 len = pool.aprs.length;\r\n        uint256 multiplier;\r\n        bool flag;\r\n        // 如果\r\n        if (pool.aprs[len-1].time < user.lockStartTime){\r\n            multiplier = pool.duration;\r\n            reward = multiplier.mul(pool.aprs[len-1].apr).mul(user.amount);\r\n            reward = reward.div(DENOMINATOR_TEST).div(100);\r\n            return reward;\r\n        }\r\n        for (uint i = user.offset;i< len-1;i++){\r\n\r\n            if (!flag){\r\n                multiplier = getMultiplier(user.lockStartTime, pool.aprs[i+1].time);\r\n                if (multiplier > pool.duration){\r\n                    reward = pool.duration.mul(pool.aprs[i].apr).mul(user.amount);\r\n                    reward = reward.div(DENOMINATOR_TEST).div(100);\r\n                    return reward;\r\n                    }\r\n                reward = multiplier.mul(pool.aprs[i].apr).mul(user.amount);\r\n                flag = true;\r\n                continue ;\r\n            }\r\n\r\n            uint256 tempNumber = getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time);\r\n\r\n            if (tempNumber.add(multiplier) > pool.duration){\r\n                reward = reward.add(pool.duration.sub(multiplier).mul(pool.aprs[i].apr).mul(user.amount));\r\n                reward = reward.div(DENOMINATOR_TEST).div(100);\r\n                return reward;\r\n                }    \r\n            \r\n            reward =reward.add(tempNumber.mul(pool.aprs[i].apr).mul(user.amount));  \r\n            multiplier = multiplier.add(tempNumber);          \r\n        }\r\n\r\n            reward = reward.add(pool.duration.sub(multiplier).mul(pool.aprs[len-1].apr).mul(user.amount));\r\n            reward = reward.div(DENOMINATOR_TEST).div(100);\r\n            return reward;          \r\n        \r\n    }\r\n\r\n    /**\r\n     * @dev Deposit LP tokens to LPMining for bfly allocation.\r\n     */\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfos[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        require(_amount > 0,\"FixedTermStack: Below minimum\");\r\n\r\n        if (user.amount > 0){\r\n            \r\n            if(user.lockStartTime.add(pool.duration)> block.timestamp){\r\n                // 质押到期，返还利息\r\n                uint256 pending = calculateReward(_pid,msg.sender);\r\n                if(pending > 0) {\r\n                    IBEP20(para).safeTransfer(msg.sender, pending);\r\n                }\r\n\r\n            }                 \r\n        }\r\n\r\n                        // 追加本金 、更新质押开始时间 \r\n            \r\n        user.amount = user.amount.add(_amount);\r\n        user.lockStartTime = block.timestamp;\r\n        user.offset = pool.aprs.length - 1;\r\n        pool.amount = pool.amount.add(_amount);\r\n\r\n        IBEP20(para).safeTransferFrom(address(msg.sender), address(this), _amount);\r\n        emit Deposit(msg.sender, _pid, _amount);\r\n        \r\n    }\r\n\r\n    /**\r\n     * @dev Withdraw LP tokens from MasterChef.\r\n     */\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfos[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        require(user.amount >= _amount, \"FixedTermStack: SUFFICIENT_BALANCE\");\r\n\r\n        if(user.lockStartTime.add(pool.duration)> block.timestamp){\r\n\r\n            // 返还利息\r\n            uint256 pending = calculateReward(_pid,msg.sender);\r\n                if(pending > 0) {\r\n                    IBEP20(para).safeTransfer(msg.sender, pending);\r\n                }\r\n            \r\n        }\r\n\r\n        user.amount = user.amount.sub(_amount);\r\n        user.lockStartTime = block.timestamp;\r\n        user.offset = pool.aprs.length - 1;\r\n        pool.amount = pool.amount.sub(_amount);\r\n            \r\n        IBEP20(para).safeTransfer(msg.sender, _amount);\r\n\r\n        emit Withdraw(msg.sender, _pid, _amount);\r\n        \r\n    }\r\n\r\n\r\n    function recoverWrongTokens(address _tokenAddress, uint256 _tokenAmount) external onlyOwner {\r\n        require(_tokenAddress != address(para), \"Cannot be staked token\");\r\n\r\n        IBEP20(_tokenAddress).safeTransfer(address(msg.sender), _tokenAmount);\r\n\r\n    }\r\n\r\n    function getAllAmount()public view returns(uint256 allAmount){\r\n        for(uint i = 0; i < poolInfos.length;i++){\r\n            allAmount += poolInfos[i].amount;\r\n        }\r\n    }\r\n\r\n\r\n    function addPool(uint256 _apr, uint256 _duration) external  onlyOwner {\r\n\r\n        uint _id = poolInfos.length;\r\n        PoolInfo storage p = poolInfos.push();\r\n\r\n        p.aprs.push(AprInfo(_apr, block.timestamp));\r\n        p.duration = _duration * 1 minutes;\r\n        p.id = _id;\r\n        p.amount = 0;\r\n\r\n        emit AddPool(_id,_apr,_duration);\r\n\r\n    }\r\n\r\n    /**\r\n     * @dev Update the given pool's BFLY allocation point. Can only be called by the owner.\r\n     */\r\n    function setApr(uint256 _pid, uint256 _apr) public onlyOwner {\r\n        PoolInfo storage pool = poolInfos[_pid];\r\n        pool.aprs.push(AprInfo({\r\n            apr:_apr,\r\n            time:block.timestamp\r\n            }));\r\n\r\n        emit SetApr(_pid,_apr);\r\n    }\r\n\r\n\r\n}"
			},
			"libraries/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\n\r\nimport \"../interfaces/IBEP20.sol\";\r\n\r\n/**\r\n * @title SafeBEP20\r\n * @dev Wrappers around BEP20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IBEP20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IBEP20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance =\r\n            token.allowance(address(this), spender).sub(value, \"SafeBEP20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"interfaces/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220289951791995b8e449c901c4b4c2bf03ac7d11a0e0a78d1677050f81215cd7de64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220289951791995b8e449c901c4b4c2bf03ac7d11a0e0a78d1677050f81215cd7de64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SWAP10 MLOAD PUSH26 0x1995B8E449C901C4B4C2BF03AC7D11A0E0A78D1677050F81215C 0xD7 0xDE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8964:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220289951791995b8e449c901c4b4c2bf03ac7d11a0e0a78d1677050f81215cd7de64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SWAP10 MLOAD PUSH26 0x1995B8E449C901C4B4C2BF03AC7D11A0E0A78D1677050F81215C 0xD7 0xDE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8964:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220289951791995b8e449c901c4b4c2bf03ac7d11a0e0a78d1677050f81215cd7de64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"FixedTermStack.sol",
								"interfaces/IBEP20.sol",
								"libraries/SafeBEP20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220548f30a1065b769b5c48a9ac3b695216c0fce3495ff93bf93102c0cfb68a4b7f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220548f30a1065b769b5c48a9ac3b695216c0fce3495ff93bf93102c0cfb68a4b7f64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD DUP16 ADDRESS LOG1 MOD JUMPDEST PUSH23 0x9B5C48A9AC3B695216C0FCE3495FF93BF93102C0CFB68A 0x4B PUSH32 0x64736F6C63430008110033000000000000000000000000000000000000000000 ",
							"sourceMap": "482:6300:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220548f30a1065b769b5c48a9ac3b695216c0fce3495ff93bf93102c0cfb68a4b7f64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD DUP16 ADDRESS LOG1 MOD JUMPDEST PUSH23 0x9B5C48A9AC3B695216C0FCE3495FF93BF93102C0CFB68A 0x4B PUSH32 0x64736F6C63430008110033000000000000000000000000000000000000000000 ",
							"sourceMap": "482:6300:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220548f30a1065b769b5c48a9ac3b695216c0fce3495ff93bf93102c0cfb68a4b7f64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"FixedTermStack.sol",
								"interfaces/IBEP20.sol",
								"libraries/SafeBEP20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"FixedTermStack.sol": {
				"FixedTermStack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IBEP20",
									"name": "_para",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apr",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "AddPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apr",
									"type": "uint256"
								}
							],
							"name": "SetApr",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BASE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DENOMINATOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DENOMINATOR_TEST",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_apr",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								}
							],
							"name": "addPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "allAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "getMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "getPoolInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "id",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "duration",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "apr",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "time",
													"type": "uint256"
												}
											],
											"internalType": "struct FixedTermStack.AprInfo[]",
											"name": "aprs",
											"type": "tuple[]"
										}
									],
									"internalType": "struct FixedTermStack.PoolInfo",
									"name": "info",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "para",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenAmount",
									"type": "uint256"
								}
							],
							"name": "recoverWrongTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_apr",
									"type": "uint256"
								}
							],
							"name": "setApr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockStartTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "offset",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"deposit(uint256,uint256)": {
								"details": "Deposit LP tokens to LPMining for bfly allocation."
							},
							"getMultiplier(uint256,uint256)": {
								"details": "Return reward multiplier over the given _from to _to block."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingReward(uint256,address)": {
								"details": "View function to see pending rewards on frontend."
							},
							"poolLength()": {
								"details": "Number of the pools"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setApr(uint256,uint256)": {
								"details": "Update the given pool's BFLY allocation point. Can only be called by the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(uint256,uint256)": {
								"details": "Withdraw LP tokens from MasterChef."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"FixedTermStack.sol\":306:10124  contract FixedTermStack is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"FixedTermStack.sol\":2411:2512  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"FixedTermStack.sol\":2466:2470  para */\n  0x03\n    /* \"FixedTermStack.sol\":2466:2478  para = _para */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"FixedTermStack.sol\":2491:2504  initialized() */\n  tag_12\n    /* \"FixedTermStack.sol\":2576:2585  poolInfos */\n  0x01\n    /* \"FixedTermStack.sol\":2576:2592  poolInfos.length */\n  dup1\n  sload\n    /* \"FixedTermStack.sol\":2624:2640  poolInfos.push() */\n  dup1\n  dup3\n  add\n  dup3\n  sstore\n    /* \"FixedTermStack.sol\":2665:2693  AprInfo(20, block.timestamp) */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n    /* \"FixedTermStack.sol\":2673:2675  20 */\n  0x14\n    /* \"FixedTermStack.sol\":2665:2693  AprInfo(20, block.timestamp) */\n  dup2\n  mstore\n    /* \"FixedTermStack.sol\":2677:2692  block.timestamp */\n  timestamp\n    /* \"FixedTermStack.sol\":2624:2640  poolInfos.push() */\n  0x20\n    /* \"FixedTermStack.sol\":2665:2693  AprInfo(20, block.timestamp) */\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n    /* \"FixedTermStack.sol\":2624:2640  poolInfos.push() */\n  0x04\n  dup5\n  mul\n    /* \"FixedTermStack.sol\":2653:2659  p.aprs */\n  0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9\n  dup2\n  add\n    /* \"FixedTermStack.sol\":2653:2694  p.aprs.push(AprInfo(20, block.timestamp)) */\n  dup1\n  sload\n  dup1\n  dup9\n  add\n  dup3\n  sstore\n  0x00\n  swap2\n  dup3\n  mstore\n  swap3\n  dup2\n  keccak256\n  swap5\n  mload\n  0x02\n  swap1\n  swap4\n  mul\n  swap1\n  swap5\n  add\n  swap2\n  dup3\n  sstore\n  swap2\n  mload\n  swap5\n  add\n  swap4\n  swap1\n  swap4\n  sstore\n    /* \"FixedTermStack.sol\":2718:2731  5 * 1 minutes */\n  0x012c\n    /* \"FixedTermStack.sol\":2705:2715  p.duration */\n  0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8\n  dup5\n  add\n    /* \"FixedTermStack.sol\":2705:2731  p.duration = 5 * 1 minutes */\n  sstore\n    /* \"FixedTermStack.sol\":2624:2640  poolInfos.push() */\n  0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6\n  dup4\n  add\n    /* \"FixedTermStack.sol\":2742:2752  p.id = _id */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"FixedTermStack.sol\":2763:2771  p.amount */\n  0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7\n  swap1\n  swap2\n  add\n    /* \"FixedTermStack.sol\":2763:2775  p.amount = 0 */\n  sstore\n    /* \"FixedTermStack.sol\":2522:2787  function initialized()private {... */\n  jump\n    /* \"FixedTermStack.sol\":2491:2504  initialized() */\ntag_12:\n    /* \"FixedTermStack.sol\":2411:2512  constructor(... */\n  pop\n    /* \"FixedTermStack.sol\":306:10124  contract FixedTermStack is Ownable {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:319   */\ntag_3:\n    /* \"#utility.yul\":99:105   */\n  0x00\n    /* \"#utility.yul\":152:154   */\n  0x20\n    /* \"#utility.yul\":140:149   */\n  dup3\n    /* \"#utility.yul\":131:138   */\n  dup5\n    /* \"#utility.yul\":127:150   */\n  sub\n    /* \"#utility.yul\":123:155   */\n  slt\n    /* \"#utility.yul\":120:172   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":168:169   */\n  0x00\n    /* \"#utility.yul\":165:166   */\n  dup1\n    /* \"#utility.yul\":158:170   */\n  revert\n    /* \"#utility.yul\":120:172   */\ntag_22:\n    /* \"#utility.yul\":194:210   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":239:270   */\n  dup2\n  and\n    /* \"#utility.yul\":229:271   */\n  dup2\n  eq\n    /* \"#utility.yul\":219:289   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":285:286   */\n  0x00\n    /* \"#utility.yul\":282:283   */\n  dup1\n    /* \"#utility.yul\":275:287   */\n  revert\n    /* \"#utility.yul\":219:289   */\ntag_23:\n    /* \"#utility.yul\":308:313   */\n  swap4\n    /* \"#utility.yul\":14:319   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_20:\n    /* \"FixedTermStack.sol\":306:10124  contract FixedTermStack is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"FixedTermStack.sol\":306:10124  contract FixedTermStack is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8dbb1e3a\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xcfbb3dbd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xcfbb3dbd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe3d0b2bf\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xec342ad0\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x8dbb1e3a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x918f8674\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x98969e82\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa18f07a0\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x441a3e70\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x51166d78\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6d89dbc5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2f380b35\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3e3cca90\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3f138d4b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"FixedTermStack.sol\":2857:2953  function poolLength() external view returns (uint256) {... */\n    tag_3:\n        /* \"FixedTermStack.sol\":2929:2938  poolInfos */\n      0x01\n        /* \"FixedTermStack.sol\":2929:2945  poolInfos.length */\n      sload\n        /* \"FixedTermStack.sol\":2857:2953  function poolLength() external view returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"FixedTermStack.sol\":2857:2953  function poolLength() external view returns (uint256) {... */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FixedTermStack.sol\":2961:3081  function getPoolInfo(uint256 _pid) external view returns (PoolInfo memory info){... */\n    tag_4:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n        /* \"FixedTermStack.sol\":1972:1990  IBEP20 public para */\n    tag_5:\n      sload(0x03)\n      tag_35\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_35:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1600:1632   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1582:1633   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1570:1572   */\n      0x20\n        /* \"#utility.yul\":1555:1573   */\n      add\n        /* \"FixedTermStack.sol\":1972:1990  IBEP20 public para */\n      tag_27\n        /* \"#utility.yul\":1421:1639   */\n      jump\n        /* \"FixedTermStack.sol\":8920:9180  function recoverWrongTokens(address _tokenAddress, uint256 _tokenAmount) external onlyOwner {... */\n    tag_6:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"FixedTermStack.sol\":8014:8910  function withdraw(uint256 _pid, uint256 _amount) public {... */\n    tag_7:\n      tag_39\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"FixedTermStack.sol\":9188:9367  function getAllAmount()public view returns(uint256 allAmount){... */\n    tag_8:\n      tag_25\n      tag_48\n      jump\t// in\n        /* \"FixedTermStack.sol\":9377:9735  function addPool(uint256 _apr, uint256 _duration) external  onlyOwner {... */\n    tag_9:\n      tag_39\n      tag_51\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_39\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_35)\n        /* \"FixedTermStack.sol\":3187:3308  function getMultiplier(uint256 _from, uint256 _to) public pure returns (uint256) {... */\n    tag_12:\n      tag_25\n      tag_60\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"FixedTermStack.sol\":536:582  uint256 public constant DENOMINATOR = 365 days */\n    tag_13:\n      tag_25\n        /* \"FixedTermStack.sol\":574:582  365 days */\n      0x01e13380\n        /* \"FixedTermStack.sol\":536:582  uint256 public constant DENOMINATOR = 365 days */\n      dup2\n      jump\n        /* \"FixedTermStack.sol\":1851:1917  mapping (uint256 => mapping (address => UserInfo)) public userInfo */\n    tag_14:\n      tag_66\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      0x02\n      0x20\n      dup2\n      dup2\n      mstore\n      0x00\n      swap4\n      dup5\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap2\n      dup4\n      mstore\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      swap2\n      swap1\n      swap3\n      add\n      sload\n      dup4\n      jump\n    tag_66:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3003:3028   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":3059:3061   */\n      0x20\n        /* \"#utility.yul\":3044:3062   */\n      dup5\n      add\n        /* \"#utility.yul\":3037:3071   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3087:3105   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3080:3114   */\n      mstore\n        /* \"#utility.yul\":2991:2993   */\n      0x60\n        /* \"#utility.yul\":2976:2994   */\n      add\n        /* \"FixedTermStack.sol\":1851:1917  mapping (uint256 => mapping (address => UserInfo)) public userInfo */\n      tag_27\n        /* \"#utility.yul\":2801:3120   */\n      jump\n        /* \"FixedTermStack.sol\":3397:4832  function pendingReward(uint256 _pid, address _user) external view returns (uint256 reward) {... */\n    tag_15:\n      tag_25\n      tag_73\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"FixedTermStack.sol\":4842:6784  function calculateReward(uint256 _pid, address _user) public view returns (uint256 reward) {... */\n    tag_16:\n      tag_25\n      tag_77\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"FixedTermStack.sol\":9854:10117  function setApr(uint256 _pid, uint256 _apr) public onlyOwner {... */\n    tag_17:\n      tag_39\n      tag_81\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"FixedTermStack.sol\":6874:7939  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_18:\n      tag_39\n      tag_84\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"FixedTermStack.sol\":636:689  uint256 public constant DENOMINATOR_TEST = 10 minutes */\n    tag_19:\n      tag_25\n        /* \"FixedTermStack.sol\":679:689  10 minutes */\n      0x0258\n        /* \"FixedTermStack.sol\":636:689  uint256 public constant DENOMINATOR_TEST = 10 minutes */\n      dup2\n      jump\n        /* \"FixedTermStack.sol\":593:627  uint256 public constant BASE = 100 */\n    tag_20:\n      tag_25\n        /* \"FixedTermStack.sol\":624:627  100 */\n      0x64\n        /* \"FixedTermStack.sol\":593:627  uint256 public constant BASE = 100 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_39\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"FixedTermStack.sol\":2961:3081  function getPoolInfo(uint256 _pid) external view returns (PoolInfo memory info){... */\n    tag_32:\n        /* \"FixedTermStack.sol\":3019:3039  PoolInfo memory info */\n      tag_97\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_97:\n        /* \"FixedTermStack.sol\":3058:3067  poolInfos */\n      0x01\n        /* \"FixedTermStack.sol\":3068:3072  _pid */\n      dup3\n        /* \"FixedTermStack.sol\":3058:3073  poolInfos[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_101\n      jumpi\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"FixedTermStack.sol\":3051:3073  return poolInfos[_pid] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_104:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_105\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_104)\n    tag_105:\n      pop\n      pop\n      pop\n      swap2\n      mstore\n      pop\n      swap1\n      swap4\n        /* \"FixedTermStack.sol\":2961:3081  function getPoolInfo(uint256 _pid) external view returns (PoolInfo memory info){... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"FixedTermStack.sol\":8920:9180  function recoverWrongTokens(address _tokenAddress, uint256 _tokenAmount) external onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_108:\n        /* \"FixedTermStack.sol\":9056:9060  para */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"FixedTermStack.sol\":9031:9061  _tokenAddress != address(para) */\n      swap1\n      dup4\n      and\n      sub\n        /* \"FixedTermStack.sol\":9023:9088  require(_tokenAddress != address(para), \"Cannot be staked token\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3650:3652   */\n      0x20\n        /* \"FixedTermStack.sol\":9023:9088  require(_tokenAddress != address(para), \"Cannot be staked token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3632:3653   */\n      mstore\n        /* \"#utility.yul\":3689:3691   */\n      0x16\n        /* \"#utility.yul\":3669:3687   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3662:3692   */\n      mstore\n      shl(0x51, 0x21b0b73737ba1031329039ba30b5b2b2103a37b5b2b7)\n        /* \"#utility.yul\":3708:3726   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3701:3753   */\n      mstore\n        /* \"#utility.yul\":3770:3788   */\n      0x64\n      add\n        /* \"FixedTermStack.sol\":9023:9088  require(_tokenAddress != address(para), \"Cannot be staked token\") */\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"FixedTermStack.sol\":9101:9170  IBEP20(_tokenAddress).safeTransfer(address(msg.sender), _tokenAmount) */\n      tag_114\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FixedTermStack.sol\":9101:9135  IBEP20(_tokenAddress).safeTransfer */\n      dup4\n      and\n        /* \"FixedTermStack.sol\":9144:9154  msg.sender */\n      caller\n        /* \"FixedTermStack.sol\":9157:9169  _tokenAmount */\n      dup4\n        /* \"FixedTermStack.sol\":9101:9135  IBEP20(_tokenAddress).safeTransfer */\n      tag_115\n        /* \"FixedTermStack.sol\":9101:9170  IBEP20(_tokenAddress).safeTransfer(address(msg.sender), _tokenAmount) */\n      jump\t// in\n    tag_114:\n        /* \"FixedTermStack.sol\":8920:9180  function recoverWrongTokens(address _tokenAddress, uint256 _tokenAmount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"FixedTermStack.sol\":8014:8910  function withdraw(uint256 _pid, uint256 _amount) public {... */\n    tag_46:\n        /* \"FixedTermStack.sol\":8081:8102  PoolInfo storage pool */\n      0x00\n        /* \"FixedTermStack.sol\":8105:8114  poolInfos */\n      0x01\n        /* \"FixedTermStack.sol\":8115:8119  _pid */\n      dup4\n        /* \"FixedTermStack.sol\":8105:8120  poolInfos[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_118\n      jumpi\n      tag_118\n      tag_102\n      jump\t// in\n    tag_118:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"FixedTermStack.sol\":8155:8169  userInfo[_pid] */\n      dup7\n      dup5\n      mstore\n        /* \"FixedTermStack.sol\":8155:8163  userInfo */\n      0x02\n        /* \"FixedTermStack.sol\":8155:8169  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"FixedTermStack.sol\":8170:8180  msg.sender */\n      caller\n        /* \"FixedTermStack.sol\":8155:8181  userInfo[_pid][msg.sender] */\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap3\n      keccak256\n        /* \"FixedTermStack.sol\":8200:8211  user.amount */\n      dup1\n      sload\n        /* \"FixedTermStack.sol\":8105:8120  poolInfos[_pid] */\n      0x04\n      swap1\n      swap3\n      mul\n      swap1\n      swap3\n      add\n      swap3\n      pop\n        /* \"FixedTermStack.sol\":8200:8222  user.amount >= _amount */\n      dup4\n      gt\n      iszero\n        /* \"FixedTermStack.sol\":8192:8261  require(user.amount >= _amount, \"FixedTermStack: SUFFICIENT_BALANCE\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4001:4003   */\n      0x20\n        /* \"FixedTermStack.sol\":8192:8261  require(user.amount >= _amount, \"FixedTermStack: SUFFICIENT_BALANCE\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3983:4004   */\n      mstore\n        /* \"#utility.yul\":4040:4042   */\n      0x22\n        /* \"#utility.yul\":4020:4038   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4013:4043   */\n      mstore\n        /* \"#utility.yul\":4079:4113   */\n      0x46697865645465726d537461636b3a2053554646494349454e545f42414c414e\n        /* \"#utility.yul\":4059:4077   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4052:4114   */\n      mstore\n      shl(0xf0, 0x4345)\n        /* \"#utility.yul\":4130:4148   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4123:4155   */\n      mstore\n        /* \"#utility.yul\":4172:4191   */\n      0x84\n      add\n        /* \"FixedTermStack.sol\":8192:8261  require(user.amount >= _amount, \"FixedTermStack: SUFFICIENT_BALANCE\") */\n      tag_112\n        /* \"#utility.yul\":3799:4197   */\n      jump\n        /* \"FixedTermStack.sol\":8192:8261  require(user.amount >= _amount, \"FixedTermStack: SUFFICIENT_BALANCE\") */\n    tag_120:\n        /* \"FixedTermStack.sol\":8316:8331  block.timestamp */\n      timestamp\n        /* \"FixedTermStack.sol\":8277:8314  user.lockStartTime.add(pool.duration) */\n      tag_123\n        /* \"FixedTermStack.sol\":8300:8304  pool */\n      dup4\n        /* \"FixedTermStack.sol\":8300:8313  pool.duration */\n      0x02\n      add\n      sload\n        /* \"FixedTermStack.sol\":8277:8281  user */\n      dup4\n        /* \"FixedTermStack.sol\":8277:8295  user.lockStartTime */\n      0x01\n      add\n      sload\n        /* \"FixedTermStack.sol\":8277:8299  user.lockStartTime.add */\n      tag_124\n      swap1\n        /* \"FixedTermStack.sol\":8277:8314  user.lockStartTime.add(pool.duration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_123:\n        /* \"FixedTermStack.sol\":8277:8331  user.lockStartTime.add(pool.duration)> block.timestamp */\n      gt\n        /* \"FixedTermStack.sol\":8274:8577  if(user.lockStartTime.add(pool.duration)> block.timestamp){... */\n      iszero\n      tag_125\n      jumpi\n        /* \"FixedTermStack.sol\":8378:8393  uint256 pending */\n      0x00\n        /* \"FixedTermStack.sol\":8396:8428  calculateReward(_pid,msg.sender) */\n      tag_126\n        /* \"FixedTermStack.sol\":8412:8416  _pid */\n      dup6\n        /* \"FixedTermStack.sol\":8417:8427  msg.sender */\n      caller\n        /* \"FixedTermStack.sol\":8396:8411  calculateReward */\n      tag_78\n        /* \"FixedTermStack.sol\":8396:8428  calculateReward(_pid,msg.sender) */\n      jump\t// in\n    tag_126:\n        /* \"FixedTermStack.sol\":8378:8428  uint256 pending = calculateReward(_pid,msg.sender) */\n      swap1\n      pop\n        /* \"FixedTermStack.sol\":8450:8461  pending > 0 */\n      dup1\n      iszero\n        /* \"FixedTermStack.sol\":8447:8552  if(pending > 0) {... */\n      tag_128\n      jumpi\n        /* \"FixedTermStack.sol\":8493:8497  para */\n      sload(0x03)\n        /* \"FixedTermStack.sol\":8486:8532  IBEP20(para).safeTransfer(msg.sender, pending) */\n      tag_128\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FixedTermStack.sol\":8493:8497  para */\n      and\n        /* \"FixedTermStack.sol\":8512:8522  msg.sender */\n      caller\n        /* \"FixedTermStack.sol\":8524:8531  pending */\n      dup4\n        /* \"FixedTermStack.sol\":8486:8511  IBEP20(para).safeTransfer */\n      tag_115\n        /* \"FixedTermStack.sol\":8486:8532  IBEP20(para).safeTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_128:\n        /* \"FixedTermStack.sol\":8332:8577  {... */\n      pop\n        /* \"FixedTermStack.sol\":8274:8577  if(user.lockStartTime.add(pool.duration)> block.timestamp){... */\n    tag_125:\n        /* \"FixedTermStack.sol\":8603:8614  user.amount */\n      dup1\n      sload\n        /* \"FixedTermStack.sol\":8603:8627  user.amount.sub(_amount) */\n      tag_129\n      swap1\n        /* \"FixedTermStack.sol\":8619:8626  _amount */\n      dup5\n        /* \"FixedTermStack.sol\":8603:8618  user.amount.sub */\n      tag_130\n        /* \"FixedTermStack.sol\":8603:8627  user.amount.sub(_amount) */\n      jump\t// in\n    tag_129:\n        /* \"FixedTermStack.sol\":8589:8627  user.amount = user.amount.sub(_amount) */\n      dup2\n      sstore\n        /* \"FixedTermStack.sol\":8659:8674  block.timestamp */\n      timestamp\n        /* \"FixedTermStack.sol\":8638:8656  user.lockStartTime */\n      0x01\n      dup1\n      dup4\n      add\n        /* \"FixedTermStack.sol\":8638:8674  user.lockStartTime = block.timestamp */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"FixedTermStack.sol\":8699:8708  pool.aprs */\n      0x03\n      dup4\n      add\n        /* \"FixedTermStack.sol\":8699:8715  pool.aprs.length */\n      sload\n        /* \"FixedTermStack.sol\":8699:8719  pool.aprs.length - 1 */\n      tag_131\n      swap2\n        /* \"FixedTermStack.sol\":8638:8656  user.lockStartTime */\n      swap1\n        /* \"FixedTermStack.sol\":8699:8719  pool.aprs.length - 1 */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"FixedTermStack.sol\":8685:8696  user.offset */\n      0x02\n      dup3\n      add\n        /* \"FixedTermStack.sol\":8685:8719  user.offset = pool.aprs.length - 1 */\n      sstore\n        /* \"FixedTermStack.sol\":8744:8755  pool.amount */\n      0x01\n      dup3\n      add\n      sload\n        /* \"FixedTermStack.sol\":8744:8768  pool.amount.sub(_amount) */\n      tag_133\n      swap1\n        /* \"FixedTermStack.sol\":8760:8767  _amount */\n      dup5\n        /* \"FixedTermStack.sol\":8744:8759  pool.amount.sub */\n      tag_130\n        /* \"FixedTermStack.sol\":8744:8768  pool.amount.sub(_amount) */\n      jump\t// in\n    tag_133:\n        /* \"FixedTermStack.sol\":8730:8741  pool.amount */\n      0x01\n      dup4\n      add\n        /* \"FixedTermStack.sol\":8730:8768  pool.amount = pool.amount.sub(_amount) */\n      sstore\n        /* \"FixedTermStack.sol\":8800:8804  para */\n      sload(0x03)\n        /* \"FixedTermStack.sol\":8793:8839  IBEP20(para).safeTransfer(msg.sender, _amount) */\n      tag_134\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FixedTermStack.sol\":8800:8804  para */\n      and\n        /* \"FixedTermStack.sol\":8819:8829  msg.sender */\n      caller\n        /* \"FixedTermStack.sol\":8831:8838  _amount */\n      dup6\n        /* \"FixedTermStack.sol\":8793:8818  IBEP20(para).safeTransfer */\n      tag_115\n        /* \"FixedTermStack.sol\":8793:8839  IBEP20(para).safeTransfer(msg.sender, _amount) */\n      jump\t// in\n    tag_134:\n        /* \"FixedTermStack.sol\":8857:8892  Withdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n        /* \"FixedTermStack.sol\":8878:8882  _pid */\n      dup5\n      swap1\n        /* \"FixedTermStack.sol\":8866:8876  msg.sender */\n      caller\n      swap1\n        /* \"FixedTermStack.sol\":8857:8892  Withdraw(msg.sender, _pid, _amount) */\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"FixedTermStack.sol\":8857:8892  Withdraw(msg.sender, _pid, _amount) */\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"FixedTermStack.sol\":8070:8910  {... */\n      pop\n      pop\n        /* \"FixedTermStack.sol\":8014:8910  function withdraw(uint256 _pid, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"FixedTermStack.sol\":9188:9367  function getAllAmount()public view returns(uint256 allAmount){... */\n    tag_48:\n        /* \"FixedTermStack.sol\":9231:9248  uint256 allAmount */\n      0x00\n      dup1\n        /* \"FixedTermStack.sol\":9260:9360  for(uint i = 0; i < poolInfos.length;i++){... */\n    tag_137:\n        /* \"FixedTermStack.sol\":9280:9289  poolInfos */\n      0x01\n        /* \"FixedTermStack.sol\":9280:9296  poolInfos.length */\n      sload\n        /* \"FixedTermStack.sol\":9276:9296  i < poolInfos.length */\n      dup2\n      lt\n        /* \"FixedTermStack.sol\":9260:9360  for(uint i = 0; i < poolInfos.length;i++){... */\n      iszero\n      tag_138\n      jumpi\n        /* \"FixedTermStack.sol\":9329:9338  poolInfos */\n      0x01\n        /* \"FixedTermStack.sol\":9339:9340  i */\n      dup2\n        /* \"FixedTermStack.sol\":9329:9341  poolInfos[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_141\n      jumpi\n      tag_141\n      tag_102\n      jump\t// in\n    tag_141:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"FixedTermStack.sol\":9329:9348  poolInfos[i].amount */\n      0x01\n      add\n      sload\n        /* \"FixedTermStack.sol\":9316:9348  allAmount += poolInfos[i].amount */\n      dup3\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      swap2\n      pop\n        /* \"FixedTermStack.sol\":9297:9300  i++ */\n      dup1\n      tag_145\n      dup2\n      tag_146\n      jump\t// in\n    tag_145:\n      swap2\n      pop\n      pop\n        /* \"FixedTermStack.sol\":9260:9360  for(uint i = 0; i < poolInfos.length;i++){... */\n      jump(tag_137)\n    tag_138:\n      pop\n        /* \"FixedTermStack.sol\":9188:9367  function getAllAmount()public view returns(uint256 allAmount){... */\n      swap1\n      jump\t// out\n        /* \"FixedTermStack.sol\":9377:9735  function addPool(uint256 _apr, uint256 _duration) external  onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_148:\n        /* \"FixedTermStack.sol\":9471:9480  poolInfos */\n      0x01\n        /* \"FixedTermStack.sol\":9471:9487  poolInfos.length */\n      dup1\n      sload\n        /* \"FixedTermStack.sol\":9519:9535  poolInfos.push() */\n      dup1\n      dup3\n      add\n      dup3\n      sstore\n        /* \"FixedTermStack.sol\":9560:9590  AprInfo(_apr, block.timestamp) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      dup5\n      dup2\n      mstore\n        /* \"FixedTermStack.sol\":9574:9589  block.timestamp */\n      timestamp\n        /* \"FixedTermStack.sol\":9519:9535  poolInfos.push() */\n      0x20\n        /* \"FixedTermStack.sol\":9560:9590  AprInfo(_apr, block.timestamp) */\n      dup1\n      dup4\n      add\n      swap2\n      dup3\n      mstore\n        /* \"FixedTermStack.sol\":9519:9535  poolInfos.push() */\n      0x04\n      dup5\n      mul\n        /* \"FixedTermStack.sol\":9548:9554  p.aprs */\n      0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9\n      dup2\n      add\n        /* \"FixedTermStack.sol\":9548:9591  p.aprs.push(AprInfo(_apr, block.timestamp)) */\n      dup1\n      sload\n      dup1\n      dup9\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      dup3\n      mstore\n      swap3\n      swap1\n      keccak256\n      swap4\n      mload\n      0x02\n      swap1\n      swap3\n      mul\n      swap1\n      swap4\n      add\n      swap1\n      dup2\n      sstore\n      swap1\n      mload\n      swap4\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"FixedTermStack.sol\":9471:9487  poolInfos.length */\n      swap1\n        /* \"FixedTermStack.sol\":9519:9535  poolInfos.push() */\n      0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6\n      add\n        /* \"FixedTermStack.sol\":9615:9636  _duration * 1 minutes */\n      tag_152\n        /* \"FixedTermStack.sol\":9615:9624  _duration */\n      dup4\n        /* \"FixedTermStack.sol\":9627:9636  1 minutes */\n      0x3c\n        /* \"FixedTermStack.sol\":9615:9636  _duration * 1 minutes */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"FixedTermStack.sol\":9602:9612  p.duration */\n      0x02\n      dup3\n      add\n        /* \"FixedTermStack.sol\":9602:9636  p.duration = _duration * 1 minutes */\n      sstore\n        /* \"FixedTermStack.sol\":9647:9657  p.id = _id */\n      dup2\n      dup2\n      sstore\n        /* \"FixedTermStack.sol\":9647:9651  p.id */\n      0x00\n        /* \"FixedTermStack.sol\":9668:9676  p.amount */\n      0x01\n      dup3\n      add\n        /* \"FixedTermStack.sol\":9668:9680  p.amount = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"FixedTermStack.sol\":9698:9725  AddPool(_id,_apr,_duration) */\n      mload(0x40)\n        /* \"FixedTermStack.sol\":9715:9724  _duration */\n      dup5\n      swap2\n        /* \"FixedTermStack.sol\":9710:9714  _apr */\n      dup7\n      swap2\n        /* \"FixedTermStack.sol\":9654:9657  _id */\n      dup6\n      swap2\n        /* \"FixedTermStack.sol\":9698:9725  AddPool(_id,_apr,_duration) */\n      0x4d93067d0d628fe42c457623322c0f22ad92f71762a2eebe06e2a0e7d2aa61c7\n      swap2\n      log4\n        /* \"FixedTermStack.sol\":9447:9735  {... */\n      pop\n      pop\n        /* \"FixedTermStack.sol\":9377:9735  function addPool(uint256 _apr, uint256 _duration) external  onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"FixedTermStack.sol\":3187:3308  function getMultiplier(uint256 _from, uint256 _to) public pure returns (uint256) {... */\n    tag_61:\n        /* \"FixedTermStack.sol\":3259:3266  uint256 */\n      0x00\n        /* \"FixedTermStack.sol\":3286:3300  _to.sub(_from) */\n      tag_161\n        /* \"FixedTermStack.sol\":3286:3289  _to */\n      dup3\n        /* \"FixedTermStack.sol\":3294:3299  _from */\n      dup5\n        /* \"FixedTermStack.sol\":3286:3293  _to.sub */\n      tag_130\n        /* \"FixedTermStack.sol\":3286:3300  _to.sub(_from) */\n      jump\t// in\n    tag_161:\n        /* \"FixedTermStack.sol\":3279:3300  return _to.sub(_from) */\n      swap1\n      pop\n        /* \"FixedTermStack.sol\":3187:3308  function getMultiplier(uint256 _from, uint256 _to) public pure returns (uint256) {... */\n    tag_160:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"FixedTermStack.sol\":3397:4832  function pendingReward(uint256 _pid, address _user) external view returns (uint256 reward) {... */\n    tag_74:\n        /* \"FixedTermStack.sol\":3472:3486  uint256 reward */\n      0x00\n        /* \"FixedTermStack.sol\":3499:3520  PoolInfo storage pool */\n      dup1\n        /* \"FixedTermStack.sol\":3523:3532  poolInfos */\n      0x01\n        /* \"FixedTermStack.sol\":3533:3537  _pid */\n      dup5\n        /* \"FixedTermStack.sol\":3523:3538  poolInfos[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_164\n      jumpi\n      tag_164\n      tag_102\n      jump\t// in\n    tag_164:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"FixedTermStack.sol\":3573:3587  userInfo[_pid] */\n      dup8\n      dup5\n      mstore\n        /* \"FixedTermStack.sol\":3573:3581  userInfo */\n      0x02\n        /* \"FixedTermStack.sol\":3573:3587  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FixedTermStack.sol\":3573:3594  userInfo[_pid][_user] */\n      dup10\n      and\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      dup4\n      keccak256\n        /* \"FixedTermStack.sol\":3523:3538  poolInfos[_pid] */\n      0x04\n      swap3\n      swap1\n      swap3\n      mul\n      add\n        /* \"FixedTermStack.sol\":3619:3628  pool.aprs */\n      0x03\n      dup2\n      add\n        /* \"FixedTermStack.sol\":3619:3635  pool.aprs.length */\n      dup1\n      sload\n        /* \"FixedTermStack.sol\":3723:3741  user.lockStartTime */\n      0x01\n      dup1\n      dup6\n      add\n      sload\n        /* \"FixedTermStack.sol\":3523:3538  poolInfos[_pid] */\n      swap4\n      swap7\n      pop\n        /* \"FixedTermStack.sol\":3573:3594  userInfo[_pid][_user] */\n      swap4\n      swap5\n        /* \"FixedTermStack.sol\":3619:3635  pool.aprs.length */\n      swap1\n      swap4\n        /* \"FixedTermStack.sol\":3523:3538  poolInfos[_pid] */\n      swap1\n      swap3\n      dup4\n      swap3\n        /* \"FixedTermStack.sol\":3723:3741  user.lockStartTime */\n      swap1\n      swap2\n        /* \"FixedTermStack.sol\":3709:3714  len-1 */\n      tag_166\n      swap1\n        /* \"FixedTermStack.sol\":3619:3635  pool.aprs.length */\n      dup7\n        /* \"FixedTermStack.sol\":3709:3714  len-1 */\n      tag_132\n      jump\t// in\n    tag_166:\n        /* \"FixedTermStack.sol\":3699:3715  pool.aprs[len-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_168\n      jumpi\n      tag_168\n      tag_102\n      jump\t// in\n    tag_168:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"FixedTermStack.sol\":3699:3720  pool.aprs[len-1].time */\n      0x01\n      add\n      sload\n        /* \"FixedTermStack.sol\":3699:3741  pool.aprs[len-1].time < user.lockStartTime */\n      lt\n        /* \"FixedTermStack.sol\":3695:3997  if (pool.aprs[len-1].time < user.lockStartTime){... */\n      iszero\n      tag_170\n      jumpi\n        /* \"FixedTermStack.sol\":3770:3819  getMultiplier(user.lockStartTime,block.timestamp) */\n      tag_171\n        /* \"FixedTermStack.sol\":3784:3788  user */\n      dup5\n        /* \"FixedTermStack.sol\":3784:3802  user.lockStartTime */\n      0x01\n      add\n      sload\n        /* \"FixedTermStack.sol\":3803:3818  block.timestamp */\n      timestamp\n        /* \"FixedTermStack.sol\":3770:3783  getMultiplier */\n      tag_61\n        /* \"FixedTermStack.sol\":3770:3819  getMultiplier(user.lockStartTime,block.timestamp) */\n      jump\t// in\n    tag_171:\n        /* \"FixedTermStack.sol\":3884:3895  user.amount */\n      dup5\n      sload\n        /* \"FixedTermStack.sol\":3757:3819  multiplier = getMultiplier(user.lockStartTime,block.timestamp) */\n      swap1\n      swap3\n      pop\n        /* \"FixedTermStack.sol\":3843:3896  multiplier.mul(pool.aprs[len-1].apr).mul(user.amount) */\n      tag_172\n      swap1\n        /* \"FixedTermStack.sol\":3843:3879  multiplier.mul(pool.aprs[len-1].apr) */\n      tag_173\n        /* \"FixedTermStack.sol\":3858:3867  pool.aprs */\n      0x03\n      dup9\n      add\n        /* \"FixedTermStack.sol\":3868:3873  len-1 */\n      tag_174\n        /* \"FixedTermStack.sol\":3872:3873  1 */\n      0x01\n        /* \"FixedTermStack.sol\":3868:3871  len */\n      dup9\n        /* \"FixedTermStack.sol\":3868:3873  len-1 */\n      tag_132\n      jump\t// in\n    tag_174:\n        /* \"FixedTermStack.sol\":3858:3874  pool.aprs[len-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_176\n      tag_102\n      jump\t// in\n    tag_176:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n        /* \"FixedTermStack.sol\":3858:3878  pool.aprs[len-1].apr */\n      sload\n        /* \"FixedTermStack.sol\":3843:3853  multiplier */\n      dup6\n      swap1\n        /* \"FixedTermStack.sol\":3843:3857  multiplier.mul */\n      tag_178\n        /* \"FixedTermStack.sol\":3843:3879  multiplier.mul(pool.aprs[len-1].apr) */\n      jump\t// in\n    tag_173:\n        /* \"FixedTermStack.sol\":3843:3883  multiplier.mul(pool.aprs[len-1].apr).mul */\n      swap1\n      tag_178\n        /* \"FixedTermStack.sol\":3843:3896  multiplier.mul(pool.aprs[len-1].apr).mul(user.amount) */\n      jump\t// in\n    tag_172:\n        /* \"FixedTermStack.sol\":3834:3896  reward = multiplier.mul(pool.aprs[len-1].apr).mul(user.amount) */\n      swap6\n      pop\n        /* \"FixedTermStack.sol\":3920:3957  reward.div(DENOMINATOR_TEST).div(100) */\n      tag_179\n        /* \"FixedTermStack.sol\":3953:3956  100 */\n      0x64\n        /* \"FixedTermStack.sol\":3920:3948  reward.div(DENOMINATOR_TEST) */\n      tag_180\n        /* \"FixedTermStack.sol\":3834:3896  reward = multiplier.mul(pool.aprs[len-1].apr).mul(user.amount) */\n      dup9\n        /* \"FixedTermStack.sol\":679:689  10 minutes */\n      0x0258\n        /* \"FixedTermStack.sol\":3920:3930  reward.div */\n      tag_181\n        /* \"FixedTermStack.sol\":3920:3948  reward.div(DENOMINATOR_TEST) */\n      jump\t// in\n    tag_180:\n        /* \"FixedTermStack.sol\":3920:3952  reward.div(DENOMINATOR_TEST).div */\n      swap1\n      tag_181\n        /* \"FixedTermStack.sol\":3920:3957  reward.div(DENOMINATOR_TEST).div(100) */\n      jump\t// in\n    tag_179:\n        /* \"FixedTermStack.sol\":3911:3957  reward = reward.div(DENOMINATOR_TEST).div(100) */\n      swap6\n      pop\n        /* \"FixedTermStack.sol\":3972:3985  return reward */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_160)\n        /* \"FixedTermStack.sol\":3695:3997  if (pool.aprs[len-1].time < user.lockStartTime){... */\n    tag_170:\n        /* \"FixedTermStack.sol\":4023:4034  user.offset */\n      0x02\n      dup5\n      add\n      sload\n        /* \"FixedTermStack.sol\":4009:4580  for (uint i = user.offset;i< len-1;i++){... */\n    tag_182:\n        /* \"FixedTermStack.sol\":4038:4043  len-1 */\n      tag_185\n        /* \"FixedTermStack.sol\":4042:4043  1 */\n      0x01\n        /* \"FixedTermStack.sol\":4038:4041  len */\n      dup6\n        /* \"FixedTermStack.sol\":4038:4043  len-1 */\n      tag_132\n      jump\t// in\n    tag_185:\n        /* \"FixedTermStack.sol\":4035:4036  i */\n      dup2\n        /* \"FixedTermStack.sol\":4035:4043  i< len-1 */\n      lt\n        /* \"FixedTermStack.sol\":4009:4580  for (uint i = user.offset;i< len-1;i++){... */\n      iszero\n      tag_183\n      jumpi\n        /* \"FixedTermStack.sol\":4070:4074  flag */\n      dup2\n        /* \"FixedTermStack.sol\":4065:4312  if (!flag){... */\n      tag_186\n      jumpi\n        /* \"FixedTermStack.sol\":4107:4161  getMultiplier(user.lockStartTime, pool.aprs[i+1].time) */\n      tag_187\n        /* \"FixedTermStack.sol\":4121:4125  user */\n      dup6\n        /* \"FixedTermStack.sol\":4121:4139  user.lockStartTime */\n      0x01\n      add\n      sload\n        /* \"FixedTermStack.sol\":4141:4145  pool */\n      dup8\n        /* \"FixedTermStack.sol\":4141:4150  pool.aprs */\n      0x03\n      add\n        /* \"FixedTermStack.sol\":4151:4152  i */\n      dup4\n        /* \"FixedTermStack.sol\":4153:4154  1 */\n      0x01\n        /* \"FixedTermStack.sol\":4151:4154  i+1 */\n      tag_188\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_188:\n        /* \"FixedTermStack.sol\":4141:4155  pool.aprs[i+1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_190\n      jumpi\n      tag_190\n      tag_102\n      jump\t// in\n    tag_190:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"FixedTermStack.sol\":4141:4160  pool.aprs[i+1].time */\n      0x01\n      add\n      sload\n        /* \"FixedTermStack.sol\":4107:4120  getMultiplier */\n      tag_61\n        /* \"FixedTermStack.sol\":4107:4161  getMultiplier(user.lockStartTime, pool.aprs[i+1].time) */\n      jump\t// in\n    tag_187:\n        /* \"FixedTermStack.sol\":4094:4161  multiplier = getMultiplier(user.lockStartTime, pool.aprs[i+1].time) */\n      swap3\n      pop\n        /* \"FixedTermStack.sol\":4189:4238  multiplier.mul(pool.aprs[i].apr).mul(user.amount) */\n      tag_192\n        /* \"FixedTermStack.sol\":4226:4230  user */\n      dup6\n        /* \"FixedTermStack.sol\":4226:4237  user.amount */\n      0x00\n      add\n      sload\n        /* \"FixedTermStack.sol\":4189:4221  multiplier.mul(pool.aprs[i].apr) */\n      tag_173\n        /* \"FixedTermStack.sol\":4204:4208  pool */\n      dup9\n        /* \"FixedTermStack.sol\":4204:4213  pool.aprs */\n      0x03\n      add\n        /* \"FixedTermStack.sol\":4214:4215  i */\n      dup5\n        /* \"FixedTermStack.sol\":4204:4216  pool.aprs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_195\n      jumpi\n      tag_195\n      tag_102\n      jump\t// in\n    tag_195:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n        /* \"FixedTermStack.sol\":4204:4220  pool.aprs[i].apr */\n      sload\n        /* \"FixedTermStack.sol\":4189:4199  multiplier */\n      dup7\n      swap1\n        /* \"FixedTermStack.sol\":4189:4203  multiplier.mul */\n      tag_178\n        /* \"FixedTermStack.sol\":4189:4221  multiplier.mul(pool.aprs[i].apr) */\n      jump\t// in\n        /* \"FixedTermStack.sol\":4189:4238  multiplier.mul(pool.aprs[i].apr).mul(user.amount) */\n    tag_192:\n        /* \"FixedTermStack.sol\":4180:4238  reward = multiplier.mul(pool.aprs[i].apr).mul(user.amount) */\n      swap7\n      pop\n        /* \"FixedTermStack.sol\":4264:4268  true */\n      0x01\n        /* \"FixedTermStack.sol\":4257:4268  flag = true */\n      swap2\n      pop\n        /* \"FixedTermStack.sol\":4287:4295  continue */\n      jump(tag_184)\n        /* \"FixedTermStack.sol\":4065:4312  if (!flag){... */\n    tag_186:\n        /* \"FixedTermStack.sol\":4328:4346  uint256 tempNumber */\n      0x00\n        /* \"FixedTermStack.sol\":4349:4402  getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time) */\n      tag_197\n        /* \"FixedTermStack.sol\":4363:4367  pool */\n      dup8\n        /* \"FixedTermStack.sol\":4363:4372  pool.aprs */\n      0x03\n      add\n        /* \"FixedTermStack.sol\":4373:4374  i */\n      dup4\n        /* \"FixedTermStack.sol\":4363:4375  pool.aprs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_199\n      jumpi\n      tag_199\n      tag_102\n      jump\t// in\n    tag_199:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"FixedTermStack.sol\":4363:4380  pool.aprs[i].time */\n      0x01\n      add\n      sload\n        /* \"FixedTermStack.sol\":4382:4386  pool */\n      dup9\n        /* \"FixedTermStack.sol\":4382:4391  pool.aprs */\n      0x03\n      add\n        /* \"FixedTermStack.sol\":4392:4393  i */\n      dup5\n        /* \"FixedTermStack.sol\":4394:4395  1 */\n      0x01\n        /* \"FixedTermStack.sol\":4392:4395  i+1 */\n      tag_188\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n        /* \"FixedTermStack.sol\":4349:4402  getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time) */\n    tag_197:\n        /* \"FixedTermStack.sol\":4328:4402  uint256 tempNumber = getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time) */\n      swap1\n      pop\n        /* \"FixedTermStack.sol\":4427:4488  reward.add(tempNumber.mul(pool.aprs[i].apr).mul(user.amount)) */\n      tag_205\n        /* \"FixedTermStack.sol\":4438:4487  tempNumber.mul(pool.aprs[i].apr).mul(user.amount) */\n      tag_206\n        /* \"FixedTermStack.sol\":4475:4479  user */\n      dup8\n        /* \"FixedTermStack.sol\":4475:4486  user.amount */\n      0x00\n      add\n      sload\n        /* \"FixedTermStack.sol\":4438:4470  tempNumber.mul(pool.aprs[i].apr) */\n      tag_173\n        /* \"FixedTermStack.sol\":4453:4457  pool */\n      dup11\n        /* \"FixedTermStack.sol\":4453:4462  pool.aprs */\n      0x03\n      add\n        /* \"FixedTermStack.sol\":4463:4464  i */\n      dup7\n        /* \"FixedTermStack.sol\":4453:4465  pool.aprs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_176\n      tag_102\n      jump\t// in\n        /* \"FixedTermStack.sol\":4438:4487  tempNumber.mul(pool.aprs[i].apr).mul(user.amount) */\n    tag_206:\n        /* \"FixedTermStack.sol\":4427:4433  reward */\n      dup10\n      swap1\n        /* \"FixedTermStack.sol\":4427:4437  reward.add */\n      tag_124\n        /* \"FixedTermStack.sol\":4427:4488  reward.add(tempNumber.mul(pool.aprs[i].apr).mul(user.amount)) */\n      jump\t// in\n    tag_205:\n        /* \"FixedTermStack.sol\":4419:4488  reward =reward.add(tempNumber.mul(pool.aprs[i].apr).mul(user.amount)) */\n      swap8\n      pop\n        /* \"FixedTermStack.sol\":4518:4544  multiplier.add(tempNumber) */\n      tag_211\n        /* \"FixedTermStack.sol\":4518:4528  multiplier */\n      dup5\n        /* \"FixedTermStack.sol\":4533:4543  tempNumber */\n      dup3\n        /* \"FixedTermStack.sol\":4518:4532  multiplier.add */\n      tag_124\n        /* \"FixedTermStack.sol\":4518:4544  multiplier.add(tempNumber) */\n      jump\t// in\n    tag_211:\n        /* \"FixedTermStack.sol\":4505:4544  multiplier = multiplier.add(tempNumber) */\n      swap4\n      pop\n        /* \"FixedTermStack.sol\":4048:4580  {... */\n      pop\n        /* \"FixedTermStack.sol\":4009:4580  for (uint i = user.offset;i< len-1;i++){... */\n    tag_184:\n        /* \"FixedTermStack.sol\":4044:4047  i++ */\n      dup1\n      tag_212\n      dup2\n      tag_146\n      jump\t// in\n    tag_212:\n      swap2\n      pop\n      pop\n        /* \"FixedTermStack.sol\":4009:4580  for (uint i = user.offset;i< len-1;i++){... */\n      jump(tag_182)\n    tag_183:\n      pop\n        /* \"FixedTermStack.sol\":4605:4655  getMultiplier(pool.aprs[len-1].time, block.number) */\n      tag_213\n        /* \"FixedTermStack.sol\":4619:4628  pool.aprs */\n      0x03\n      dup7\n      add\n        /* \"FixedTermStack.sol\":4629:4634  len-1 */\n      tag_214\n        /* \"FixedTermStack.sol\":4633:4634  1 */\n      0x01\n        /* \"FixedTermStack.sol\":4629:4632  len */\n      dup7\n        /* \"FixedTermStack.sol\":4629:4634  len-1 */\n      tag_132\n      jump\t// in\n    tag_214:\n        /* \"FixedTermStack.sol\":4619:4635  pool.aprs[len-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_216\n      jumpi\n      tag_216\n      tag_102\n      jump\t// in\n    tag_216:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"FixedTermStack.sol\":4619:4640  pool.aprs[len-1].time */\n      0x01\n      add\n      sload\n        /* \"FixedTermStack.sol\":4642:4654  block.number */\n      number\n        /* \"FixedTermStack.sol\":4605:4618  getMultiplier */\n      tag_61\n        /* \"FixedTermStack.sol\":4605:4655  getMultiplier(pool.aprs[len-1].time, block.number) */\n      jump\t// in\n    tag_213:\n        /* \"FixedTermStack.sol\":4726:4737  user.amount */\n      dup5\n      sload\n        /* \"FixedTermStack.sol\":4592:4655  multiplier = getMultiplier(pool.aprs[len-1].time, block.number) */\n      swap1\n      swap3\n      pop\n        /* \"FixedTermStack.sol\":4674:4739  reward.add(multiplier.mul(pool.aprs[len-1].apr).mul(user.amount)) */\n      tag_218\n      swap1\n        /* \"FixedTermStack.sol\":4685:4738  multiplier.mul(pool.aprs[len-1].apr).mul(user.amount) */\n      tag_219\n      swap1\n        /* \"FixedTermStack.sol\":4685:4721  multiplier.mul(pool.aprs[len-1].apr) */\n      tag_173\n        /* \"FixedTermStack.sol\":4700:4709  pool.aprs */\n      0x03\n      dup10\n      add\n        /* \"FixedTermStack.sol\":4710:4715  len-1 */\n      tag_221\n        /* \"FixedTermStack.sol\":4714:4715  1 */\n      0x01\n        /* \"FixedTermStack.sol\":4710:4713  len */\n      dup10\n        /* \"FixedTermStack.sol\":4710:4715  len-1 */\n      tag_132\n      jump\t// in\n    tag_221:\n        /* \"FixedTermStack.sol\":4700:4716  pool.aprs[len-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_195\n      jumpi\n      tag_195\n      tag_102\n      jump\t// in\n        /* \"FixedTermStack.sol\":4685:4738  multiplier.mul(pool.aprs[len-1].apr).mul(user.amount) */\n    tag_219:\n        /* \"FixedTermStack.sol\":4674:4680  reward */\n      dup8\n      swap1\n        /* \"FixedTermStack.sol\":4674:4684  reward.add */\n      tag_124\n        /* \"FixedTermStack.sol\":4674:4739  reward.add(multiplier.mul(pool.aprs[len-1].apr).mul(user.amount)) */\n      jump\t// in\n    tag_218:\n        /* \"FixedTermStack.sol\":4666:4739  reward =reward.add(multiplier.mul(pool.aprs[len-1].apr).mul(user.amount)) */\n      swap6\n      pop\n        /* \"FixedTermStack.sol\":4759:4796  reward.div(DENOMINATOR_TEST).div(100) */\n      tag_225\n        /* \"FixedTermStack.sol\":4792:4795  100 */\n      0x64\n        /* \"FixedTermStack.sol\":4759:4787  reward.div(DENOMINATOR_TEST) */\n      tag_180\n        /* \"FixedTermStack.sol\":4666:4739  reward =reward.add(multiplier.mul(pool.aprs[len-1].apr).mul(user.amount)) */\n      dup9\n        /* \"FixedTermStack.sol\":679:689  10 minutes */\n      0x0258\n        /* \"FixedTermStack.sol\":4759:4769  reward.div */\n      tag_181\n        /* \"FixedTermStack.sol\":4759:4787  reward.div(DENOMINATOR_TEST) */\n      jump\t// in\n        /* \"FixedTermStack.sol\":4759:4796  reward.div(DENOMINATOR_TEST).div(100) */\n    tag_225:\n        /* \"FixedTermStack.sol\":4750:4796  reward = reward.div(DENOMINATOR_TEST).div(100) */\n      swap9\n        /* \"FixedTermStack.sol\":3397:4832  function pendingReward(uint256 _pid, address _user) external view returns (uint256 reward) {... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"FixedTermStack.sol\":4842:6784  function calculateReward(uint256 _pid, address _user) public view returns (uint256 reward) {... */\n    tag_78:\n        /* \"FixedTermStack.sol\":4917:4931  uint256 reward */\n      0x00\n        /* \"FixedTermStack.sol\":4944:4965  PoolInfo storage pool */\n      dup1\n        /* \"FixedTermStack.sol\":4968:4977  poolInfos */\n      0x01\n        /* \"FixedTermStack.sol\":4978:4982  _pid */\n      dup5\n        /* \"FixedTermStack.sol\":4968:4983  poolInfos[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_229\n      jumpi\n      tag_229\n      tag_102\n      jump\t// in\n    tag_229:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"FixedTermStack.sol\":5018:5032  userInfo[_pid] */\n      dup8\n      dup5\n      mstore\n        /* \"FixedTermStack.sol\":5018:5026  userInfo */\n      0x02\n        /* \"FixedTermStack.sol\":5018:5032  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FixedTermStack.sol\":5018:5039  userInfo[_pid][_user] */\n      dup10\n      and\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      dup4\n      keccak256\n        /* \"FixedTermStack.sol\":4968:4983  poolInfos[_pid] */\n      0x04\n      swap3\n      swap1\n      swap3\n      mul\n      add\n        /* \"FixedTermStack.sol\":5064:5073  pool.aprs */\n      0x03\n      dup2\n      add\n        /* \"FixedTermStack.sol\":5064:5080  pool.aprs.length */\n      dup1\n      sload\n        /* \"FixedTermStack.sol\":5187:5205  user.lockStartTime */\n      0x01\n      dup1\n      dup6\n      add\n      sload\n        /* \"FixedTermStack.sol\":4968:4983  poolInfos[_pid] */\n      swap4\n      swap7\n      pop\n        /* \"FixedTermStack.sol\":5018:5039  userInfo[_pid][_user] */\n      swap4\n      swap5\n        /* \"FixedTermStack.sol\":5064:5080  pool.aprs.length */\n      swap1\n      swap4\n        /* \"FixedTermStack.sol\":4968:4983  poolInfos[_pid] */\n      swap1\n      swap3\n      dup4\n      swap3\n        /* \"FixedTermStack.sol\":5187:5205  user.lockStartTime */\n      swap1\n      swap2\n        /* \"FixedTermStack.sol\":5173:5178  len-1 */\n      tag_231\n      swap1\n        /* \"FixedTermStack.sol\":5064:5080  pool.aprs.length */\n      dup7\n        /* \"FixedTermStack.sol\":5173:5178  len-1 */\n      tag_132\n      jump\t// in\n    tag_231:\n        /* \"FixedTermStack.sol\":5163:5179  pool.aprs[len-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_233\n      jumpi\n      tag_233\n      tag_102\n      jump\t// in\n    tag_233:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"FixedTermStack.sol\":5163:5184  pool.aprs[len-1].time */\n      0x01\n      add\n      sload\n        /* \"FixedTermStack.sol\":5163:5205  pool.aprs[len-1].time < user.lockStartTime */\n      lt\n        /* \"FixedTermStack.sol\":5159:5425  if (pool.aprs[len-1].time < user.lockStartTime){... */\n      iszero\n      tag_235\n      jumpi\n        /* \"FixedTermStack.sol\":5234:5247  pool.duration */\n      0x02\n      dup6\n      add\n      sload\n        /* \"FixedTermStack.sol\":5312:5323  user.amount */\n      dup5\n      sload\n        /* \"FixedTermStack.sol\":5234:5247  pool.duration */\n      swap1\n      swap3\n      pop\n        /* \"FixedTermStack.sol\":5271:5324  multiplier.mul(pool.aprs[len-1].apr).mul(user.amount) */\n      tag_172\n      swap1\n        /* \"FixedTermStack.sol\":5271:5307  multiplier.mul(pool.aprs[len-1].apr) */\n      tag_173\n        /* \"FixedTermStack.sol\":5286:5295  pool.aprs */\n      0x03\n      dup9\n      add\n        /* \"FixedTermStack.sol\":5296:5301  len-1 */\n      tag_174\n        /* \"FixedTermStack.sol\":5300:5301  1 */\n      0x01\n        /* \"FixedTermStack.sol\":5296:5299  len */\n      dup9\n        /* \"FixedTermStack.sol\":5296:5301  len-1 */\n      tag_132\n      jump\t// in\n        /* \"FixedTermStack.sol\":5159:5425  if (pool.aprs[len-1].time < user.lockStartTime){... */\n    tag_235:\n        /* \"FixedTermStack.sol\":5449:5460  user.offset */\n      0x02\n      dup5\n      add\n      sload\n        /* \"FixedTermStack.sol\":5435:6558  for (uint i = user.offset;i< len-1;i++){... */\n    tag_244:\n        /* \"FixedTermStack.sol\":5464:5469  len-1 */\n      tag_247\n        /* \"FixedTermStack.sol\":5468:5469  1 */\n      0x01\n        /* \"FixedTermStack.sol\":5464:5467  len */\n      dup6\n        /* \"FixedTermStack.sol\":5464:5469  len-1 */\n      tag_132\n      jump\t// in\n    tag_247:\n        /* \"FixedTermStack.sol\":5461:5462  i */\n      dup2\n        /* \"FixedTermStack.sol\":5461:5469  i< len-1 */\n      lt\n        /* \"FixedTermStack.sol\":5435:6558  for (uint i = user.offset;i< len-1;i++){... */\n      iszero\n      tag_245\n      jumpi\n        /* \"FixedTermStack.sol\":5496:5500  flag */\n      dup2\n        /* \"FixedTermStack.sol\":5491:6000  if (!flag){... */\n      tag_248\n      jumpi\n        /* \"FixedTermStack.sol\":5533:5587  getMultiplier(user.lockStartTime, pool.aprs[i+1].time) */\n      tag_249\n        /* \"FixedTermStack.sol\":5547:5551  user */\n      dup6\n        /* \"FixedTermStack.sol\":5547:5565  user.lockStartTime */\n      0x01\n      add\n      sload\n        /* \"FixedTermStack.sol\":5567:5571  pool */\n      dup8\n        /* \"FixedTermStack.sol\":5567:5576  pool.aprs */\n      0x03\n      add\n        /* \"FixedTermStack.sol\":5577:5578  i */\n      dup4\n        /* \"FixedTermStack.sol\":5579:5580  1 */\n      0x01\n        /* \"FixedTermStack.sol\":5577:5580  i+1 */\n      tag_188\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n        /* \"FixedTermStack.sol\":5533:5587  getMultiplier(user.lockStartTime, pool.aprs[i+1].time) */\n    tag_249:\n        /* \"FixedTermStack.sol\":5520:5587  multiplier = getMultiplier(user.lockStartTime, pool.aprs[i+1].time) */\n      swap3\n      pop\n        /* \"FixedTermStack.sol\":5623:5627  pool */\n      dup6\n        /* \"FixedTermStack.sol\":5623:5636  pool.duration */\n      0x02\n      add\n      sload\n        /* \"FixedTermStack.sol\":5610:5620  multiplier */\n      dup4\n        /* \"FixedTermStack.sol\":5610:5636  multiplier > pool.duration */\n      gt\n        /* \"FixedTermStack.sol\":5606:5850  if (multiplier > pool.duration){... */\n      iszero\n      tag_254\n      jumpi\n        /* \"FixedTermStack.sol\":5669:5721  pool.duration.mul(pool.aprs[i].apr).mul(user.amount) */\n      tag_255\n        /* \"FixedTermStack.sol\":5709:5713  user */\n      dup6\n        /* \"FixedTermStack.sol\":5709:5720  user.amount */\n      0x00\n      add\n      sload\n        /* \"FixedTermStack.sol\":5669:5704  pool.duration.mul(pool.aprs[i].apr) */\n      tag_173\n        /* \"FixedTermStack.sol\":5687:5691  pool */\n      dup9\n        /* \"FixedTermStack.sol\":5687:5696  pool.aprs */\n      0x03\n      add\n        /* \"FixedTermStack.sol\":5697:5698  i */\n      dup5\n        /* \"FixedTermStack.sol\":5687:5699  pool.aprs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_258\n      jumpi\n      tag_258\n      tag_102\n      jump\t// in\n    tag_258:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap2\n      dup3\n      mul\n      add\n        /* \"FixedTermStack.sol\":5687:5703  pool.aprs[i].apr */\n      sload\n        /* \"FixedTermStack.sol\":5669:5682  pool.duration */\n      swap1\n      dup11\n      add\n      sload\n      swap1\n        /* \"FixedTermStack.sol\":5669:5686  pool.duration.mul */\n      tag_178\n        /* \"FixedTermStack.sol\":5669:5704  pool.duration.mul(pool.aprs[i].apr) */\n      jump\t// in\n        /* \"FixedTermStack.sol\":5669:5721  pool.duration.mul(pool.aprs[i].apr).mul(user.amount) */\n    tag_255:\n        /* \"FixedTermStack.sol\":5660:5721  reward = pool.duration.mul(pool.aprs[i].apr).mul(user.amount) */\n      swap7\n      pop\n        /* \"FixedTermStack.sol\":5753:5790  reward.div(DENOMINATOR_TEST).div(100) */\n      tag_260\n        /* \"FixedTermStack.sol\":5786:5789  100 */\n      0x64\n        /* \"FixedTermStack.sol\":5753:5781  reward.div(DENOMINATOR_TEST) */\n      tag_180\n        /* \"FixedTermStack.sol\":5660:5721  reward = pool.duration.mul(pool.aprs[i].apr).mul(user.amount) */\n      dup10\n        /* \"FixedTermStack.sol\":679:689  10 minutes */\n      0x0258\n        /* \"FixedTermStack.sol\":5753:5763  reward.div */\n      tag_181\n        /* \"FixedTermStack.sol\":5753:5781  reward.div(DENOMINATOR_TEST) */\n      jump\t// in\n        /* \"FixedTermStack.sol\":5753:5790  reward.div(DENOMINATOR_TEST).div(100) */\n    tag_260:\n        /* \"FixedTermStack.sol\":5744:5790  reward = reward.div(DENOMINATOR_TEST).div(100) */\n      swap7\n      pop\n        /* \"FixedTermStack.sol\":5813:5826  return reward */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_160)\n        /* \"FixedTermStack.sol\":5606:5850  if (multiplier > pool.duration){... */\n    tag_254:\n        /* \"FixedTermStack.sol\":5877:5926  multiplier.mul(pool.aprs[i].apr).mul(user.amount) */\n      tag_262\n        /* \"FixedTermStack.sol\":5914:5918  user */\n      dup6\n        /* \"FixedTermStack.sol\":5914:5925  user.amount */\n      0x00\n      add\n      sload\n        /* \"FixedTermStack.sol\":5877:5909  multiplier.mul(pool.aprs[i].apr) */\n      tag_173\n        /* \"FixedTermStack.sol\":5892:5896  pool */\n      dup9\n        /* \"FixedTermStack.sol\":5892:5901  pool.aprs */\n      0x03\n      add\n        /* \"FixedTermStack.sol\":5902:5903  i */\n      dup5\n        /* \"FixedTermStack.sol\":5892:5904  pool.aprs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_195\n      jumpi\n      tag_195\n      tag_102\n      jump\t// in\n        /* \"FixedTermStack.sol\":5877:5926  multiplier.mul(pool.aprs[i].apr).mul(user.amount) */\n    tag_262:\n        /* \"FixedTermStack.sol\":5868:5926  reward = multiplier.mul(pool.aprs[i].apr).mul(user.amount) */\n      swap7\n      pop\n        /* \"FixedTermStack.sol\":5952:5956  true */\n      0x01\n        /* \"FixedTermStack.sol\":5945:5956  flag = true */\n      swap2\n      pop\n        /* \"FixedTermStack.sol\":5975:5983  continue */\n      jump(tag_246)\n        /* \"FixedTermStack.sol\":5491:6000  if (!flag){... */\n    tag_248:\n        /* \"FixedTermStack.sol\":6016:6034  uint256 tempNumber */\n      0x00\n        /* \"FixedTermStack.sol\":6037:6090  getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time) */\n      tag_267\n        /* \"FixedTermStack.sol\":6051:6055  pool */\n      dup8\n        /* \"FixedTermStack.sol\":6051:6060  pool.aprs */\n      0x03\n      add\n        /* \"FixedTermStack.sol\":6061:6062  i */\n      dup4\n        /* \"FixedTermStack.sol\":6051:6063  pool.aprs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_199\n      jumpi\n      tag_199\n      tag_102\n      jump\t// in\n        /* \"FixedTermStack.sol\":6037:6090  getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time) */\n    tag_267:\n        /* \"FixedTermStack.sol\":6140:6153  pool.duration */\n      0x02\n      dup9\n      add\n      sload\n        /* \"FixedTermStack.sol\":6016:6090  uint256 tempNumber = getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time) */\n      swap1\n      swap2\n      pop\n        /* \"FixedTermStack.sol\":6111:6137  tempNumber.add(multiplier) */\n      tag_275\n        /* \"FixedTermStack.sol\":6016:6090  uint256 tempNumber = getMultiplier(pool.aprs[i].time, pool.aprs[i+1].time) */\n      dup3\n        /* \"FixedTermStack.sol\":6126:6136  multiplier */\n      dup7\n        /* \"FixedTermStack.sol\":6111:6125  tempNumber.add */\n      tag_124\n        /* \"FixedTermStack.sol\":6111:6137  tempNumber.add(multiplier) */\n      jump\t// in\n    tag_275:\n        /* \"FixedTermStack.sol\":6111:6153  tempNumber.add(multiplier) > pool.duration */\n      gt\n        /* \"FixedTermStack.sol\":6107:6379  if (tempNumber.add(multiplier) > pool.duration){... */\n      iszero\n      tag_276\n      jumpi\n        /* \"FixedTermStack.sol\":6182:6262  reward.add(pool.duration.sub(multiplier).mul(pool.aprs[i].apr).mul(user.amount)) */\n      tag_277\n        /* \"FixedTermStack.sol\":6193:6261  pool.duration.sub(multiplier).mul(pool.aprs[i].apr).mul(user.amount) */\n      tag_206\n        /* \"FixedTermStack.sol\":6249:6253  user */\n      dup8\n        /* \"FixedTermStack.sol\":6249:6260  user.amount */\n      0x00\n      add\n      sload\n        /* \"FixedTermStack.sol\":6193:6244  pool.duration.sub(multiplier).mul(pool.aprs[i].apr) */\n      tag_173\n        /* \"FixedTermStack.sol\":6227:6231  pool */\n      dup11\n        /* \"FixedTermStack.sol\":6227:6236  pool.aprs */\n      0x03\n      add\n        /* \"FixedTermStack.sol\":6237:6238  i */\n      dup7\n        /* \"FixedTermStack.sol\":6227:6239  pool.aprs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_281\n      jumpi\n      tag_281\n      tag_102\n      jump\t// in\n    tag_281:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap2\n      dup3\n      mul\n      add\n        /* \"FixedTermStack.sol\":6227:6243  pool.aprs[i].apr */\n      sload\n        /* \"FixedTermStack.sol\":6193:6206  pool.duration */\n      swap1\n      dup13\n      add\n      sload\n        /* \"FixedTermStack.sol\":6193:6222  pool.duration.sub(multiplier) */\n      tag_173\n      swap1\n        /* \"FixedTermStack.sol\":6211:6221  multiplier */\n      dup11\n        /* \"FixedTermStack.sol\":6193:6210  pool.duration.sub */\n      tag_130\n        /* \"FixedTermStack.sol\":6193:6222  pool.duration.sub(multiplier) */\n      jump\t// in\n        /* \"FixedTermStack.sol\":6182:6262  reward.add(pool.duration.sub(multiplier).mul(pool.aprs[i].apr).mul(user.amount)) */\n    tag_277:\n        /* \"FixedTermStack.sol\":6173:6262  reward = reward.add(pool.duration.sub(multiplier).mul(pool.aprs[i].apr).mul(user.amount)) */\n      swap8\n      pop\n        /* \"FixedTermStack.sol\":6290:6327  reward.div(DENOMINATOR_TEST).div(100) */\n      tag_284\n        /* \"FixedTermStack.sol\":6323:6326  100 */\n      0x64\n        /* \"FixedTermStack.sol\":6290:6318  reward.div(DENOMINATOR_TEST) */\n      tag_180\n        /* \"FixedTermStack.sol\":6173:6262  reward = reward.add(pool.duration.sub(multiplier).mul(pool.aprs[i].apr).mul(user.amount)) */\n      dup11\n        /* \"FixedTermStack.sol\":679:689  10 minutes */\n      0x0258\n        /* \"FixedTermStack.sol\":6290:6300  reward.div */\n      tag_181\n        /* \"FixedTermStack.sol\":6290:6318  reward.div(DENOMINATOR_TEST) */\n      jump\t// in\n        /* \"FixedTermStack.sol\":6290:6327  reward.div(DENOMINATOR_TEST).div(100) */\n    tag_284:\n        /* \"FixedTermStack.sol\":6281:6327  reward = reward.div(DENOMINATOR_TEST).div(100) */\n      swap8\n      pop\n        /* \"FixedTermStack.sol\":6346:6359  return reward */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_160)\n        /* \"FixedTermStack.sol\":6107:6379  if (tempNumber.add(multiplier) > pool.duration){... */\n    tag_276:\n        /* \"FixedTermStack.sol\":6419:6480  reward.add(tempNumber.mul(pool.aprs[i].apr).mul(user.amount)) */\n      tag_286\n        /* \"FixedTermStack.sol\":6430:6479  tempNumber.mul(pool.aprs[i].apr).mul(user.amount) */\n      tag_206\n        /* \"FixedTermStack.sol\":6467:6471  user */\n      dup8\n        /* \"FixedTermStack.sol\":6467:6478  user.amount */\n      0x00\n      add\n      sload\n        /* \"FixedTermStack.sol\":6430:6462  tempNumber.mul(pool.aprs[i].apr) */\n      tag_173\n        /* \"FixedTermStack.sol\":6445:6449  pool */\n      dup11\n        /* \"FixedTermStack.sol\":6445:6454  pool.aprs */\n      0x03\n      add\n        /* \"FixedTermStack.sol\":6455:6456  i */\n      dup7\n        /* \"FixedTermStack.sol\":6445:6457  pool.aprs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_176\n      tag_102\n      jump\t// in\n        /* \"FixedTermStack.sol\":6419:6480  reward.add(tempNumber.mul(pool.aprs[i].apr).mul(user.amount)) */\n    tag_286:\n        /* \"FixedTermStack.sol\":6411:6480  reward =reward.add(tempNumber.mul(pool.aprs[i].apr).mul(user.amount)) */\n      swap8\n      pop\n        /* \"FixedTermStack.sol\":6510:6536  multiplier.add(tempNumber) */\n      tag_292\n        /* \"FixedTermStack.sol\":6510:6520  multiplier */\n      dup5\n        /* \"FixedTermStack.sol\":6525:6535  tempNumber */\n      dup3\n        /* \"FixedTermStack.sol\":6510:6524  multiplier.add */\n      tag_124\n        /* \"FixedTermStack.sol\":6510:6536  multiplier.add(tempNumber) */\n      jump\t// in\n    tag_292:\n        /* \"FixedTermStack.sol\":6497:6536  multiplier = multiplier.add(tempNumber) */\n      swap4\n      pop\n        /* \"FixedTermStack.sol\":5474:6558  {... */\n      pop\n        /* \"FixedTermStack.sol\":5435:6558  for (uint i = user.offset;i< len-1;i++){... */\n    tag_246:\n        /* \"FixedTermStack.sol\":5470:5473  i++ */\n      dup1\n      tag_293\n      dup2\n      tag_146\n      jump\t// in\n    tag_293:\n      swap2\n      pop\n      pop\n        /* \"FixedTermStack.sol\":5435:6558  for (uint i = user.offset;i< len-1;i++){... */\n      jump(tag_244)\n    tag_245:\n      pop\n        /* \"FixedTermStack.sol\":6654:6665  user.amount */\n      dup4\n      sload\n        /* \"FixedTermStack.sol\":6583:6667  reward.add(pool.duration.sub(multiplier).mul(pool.aprs[len-1].apr).mul(user.amount)) */\n      tag_218\n      swap1\n        /* \"FixedTermStack.sol\":6594:6666  pool.duration.sub(multiplier).mul(pool.aprs[len-1].apr).mul(user.amount) */\n      tag_219\n      swap1\n        /* \"FixedTermStack.sol\":6594:6649  pool.duration.sub(multiplier).mul(pool.aprs[len-1].apr) */\n      tag_173\n        /* \"FixedTermStack.sol\":6628:6637  pool.aprs */\n      0x03\n      dup10\n      add\n        /* \"FixedTermStack.sol\":6638:6643  len-1 */\n      tag_297\n        /* \"FixedTermStack.sol\":6642:6643  1 */\n      0x01\n        /* \"FixedTermStack.sol\":6638:6641  len */\n      dup10\n        /* \"FixedTermStack.sol\":6638:6643  len-1 */\n      tag_132\n      jump\t// in\n    tag_297:\n        /* \"FixedTermStack.sol\":6628:6644  pool.aprs[len-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_299\n      jumpi\n      tag_299\n      tag_102\n      jump\t// in\n    tag_299:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap2\n      dup3\n      mul\n      add\n        /* \"FixedTermStack.sol\":6628:6648  pool.aprs[len-1].apr */\n      sload\n        /* \"FixedTermStack.sol\":6594:6607  pool.duration */\n      swap1\n      dup11\n      add\n      sload\n        /* \"FixedTermStack.sol\":6594:6623  pool.duration.sub(multiplier) */\n      tag_173\n      swap1\n        /* \"FixedTermStack.sol\":6612:6622  multiplier */\n      dup9\n        /* \"FixedTermStack.sol\":6594:6611  pool.duration.sub */\n      tag_130\n        /* \"FixedTermStack.sol\":6594:6623  pool.duration.sub(multiplier) */\n      jump\t// in\n        /* \"FixedTermStack.sol\":9854:10117  function setApr(uint256 _pid, uint256 _apr) public onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_305\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_305:\n        /* \"FixedTermStack.sol\":9926:9947  PoolInfo storage pool */\n      0x00\n        /* \"FixedTermStack.sol\":9950:9959  poolInfos */\n      0x01\n        /* \"FixedTermStack.sol\":9960:9964  _pid */\n      dup4\n        /* \"FixedTermStack.sol\":9950:9965  poolInfos[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_308\n      jumpi\n      tag_308\n      tag_102\n      jump\t// in\n    tag_308:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"FixedTermStack.sol\":9991:10073  AprInfo({... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      dup8\n      dup2\n      mstore\n        /* \"FixedTermStack.sol\":10042:10057  block.timestamp */\n      timestamp\n        /* \"FixedTermStack.sol\":9991:10073  AprInfo({... */\n      dup2\n      dup6\n      add\n      swap1\n      dup2\n      mstore\n        /* \"FixedTermStack.sol\":9976:9985  pool.aprs */\n      0x03\n        /* \"FixedTermStack.sol\":9950:9965  poolInfos[_pid] */\n      0x04\n      swap1\n      swap7\n      mul\n      swap1\n      swap4\n      add\n        /* \"FixedTermStack.sol\":9976:9985  pool.aprs */\n      swap5\n      dup6\n      add\n        /* \"FixedTermStack.sol\":9976:10074  pool.aprs.push(AprInfo({... */\n      dup1\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup4\n      sstore\n      swap2\n      dup9\n      mstore\n      swap5\n      dup8\n      keccak256\n      swap2\n      mload\n      0x02\n      swap1\n      swap6\n      mul\n      swap1\n      swap2\n      add\n      swap4\n      dup5\n      sstore\n      swap2\n      mload\n      swap3\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"FixedTermStack.sol\":10092:10109  SetApr(_pid,_apr) */\n      mload\n        /* \"FixedTermStack.sol\":9950:9965  poolInfos[_pid] */\n      swap1\n      swap3\n      pop\n        /* \"FixedTermStack.sol\":10018:10022  _apr */\n      dup4\n      swap2\n        /* \"FixedTermStack.sol\":10099:10103  _pid */\n      dup6\n      swap2\n        /* \"FixedTermStack.sol\":10092:10109  SetApr(_pid,_apr) */\n      0x6ec6d062a87c4b42fe40885d2e8955d89ab9275e14d24354dd2b6b130043bba5\n      swap2\n        /* \"FixedTermStack.sol\":9950:9965  poolInfos[_pid] */\n      swap1\n        /* \"FixedTermStack.sol\":10092:10109  SetApr(_pid,_apr) */\n      log3\n        /* \"FixedTermStack.sol\":9915:10117  {... */\n      pop\n        /* \"FixedTermStack.sol\":9854:10117  function setApr(uint256 _pid, uint256 _apr) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"FixedTermStack.sol\":6874:7939  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_85:\n        /* \"FixedTermStack.sol\":6940:6961  PoolInfo storage pool */\n      0x00\n        /* \"FixedTermStack.sol\":6964:6973  poolInfos */\n      0x01\n        /* \"FixedTermStack.sol\":6974:6978  _pid */\n      dup4\n        /* \"FixedTermStack.sol\":6964:6979  poolInfos[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_313\n      jumpi\n      tag_313\n      tag_102\n      jump\t// in\n    tag_313:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"FixedTermStack.sol\":7014:7028  userInfo[_pid] */\n      dup7\n      dup5\n      mstore\n        /* \"FixedTermStack.sol\":7014:7022  userInfo */\n      0x02\n        /* \"FixedTermStack.sol\":7014:7028  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"FixedTermStack.sol\":7029:7039  msg.sender */\n      caller\n        /* \"FixedTermStack.sol\":7014:7040  userInfo[_pid][msg.sender] */\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap3\n      keccak256\n        /* \"FixedTermStack.sol\":6964:6979  poolInfos[_pid] */\n      0x04\n      swap1\n      swap2\n      mul\n      swap1\n      swap2\n      add\n      swap2\n      pop\n        /* \"FixedTermStack.sol\":7059:7070  _amount > 0 */\n      dup3\n        /* \"FixedTermStack.sol\":7051:7103  require(_amount > 0,\"FixedTermStack: Below minimum\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5112:5114   */\n      0x20\n        /* \"FixedTermStack.sol\":7051:7103  require(_amount > 0,\"FixedTermStack: Below minimum\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5094:5115   */\n      mstore\n        /* \"#utility.yul\":5151:5153   */\n      0x1d\n        /* \"#utility.yul\":5131:5149   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5124:5154   */\n      mstore\n        /* \"#utility.yul\":5190:5221   */\n      0x46697865645465726d537461636b3a2042656c6f77206d696e696d756d000000\n        /* \"#utility.yul\":5170:5188   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5163:5222   */\n      mstore\n        /* \"#utility.yul\":5239:5257   */\n      0x64\n      add\n        /* \"FixedTermStack.sol\":7051:7103  require(_amount > 0,\"FixedTermStack: Below minimum\") */\n      tag_112\n        /* \"#utility.yul\":4910:5263   */\n      jump\n        /* \"FixedTermStack.sol\":7051:7103  require(_amount > 0,\"FixedTermStack: Below minimum\") */\n    tag_315:\n        /* \"FixedTermStack.sol\":7120:7131  user.amount */\n      dup1\n      sload\n        /* \"FixedTermStack.sol\":7120:7135  user.amount > 0 */\n      iszero\n        /* \"FixedTermStack.sol\":7116:7509  if (user.amount > 0){... */\n      tag_320\n      jumpi\n        /* \"FixedTermStack.sol\":7207:7222  block.timestamp */\n      timestamp\n        /* \"FixedTermStack.sol\":7168:7205  user.lockStartTime.add(pool.duration) */\n      tag_319\n        /* \"FixedTermStack.sol\":7191:7195  pool */\n      dup4\n        /* \"FixedTermStack.sol\":7191:7204  pool.duration */\n      0x02\n      add\n      sload\n        /* \"FixedTermStack.sol\":7168:7172  user */\n      dup4\n        /* \"FixedTermStack.sol\":7168:7186  user.lockStartTime */\n      0x01\n      add\n      sload\n        /* \"FixedTermStack.sol\":7168:7190  user.lockStartTime.add */\n      tag_124\n      swap1\n        /* \"FixedTermStack.sol\":7168:7205  user.lockStartTime.add(pool.duration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_319:\n        /* \"FixedTermStack.sol\":7168:7222  user.lockStartTime.add(pool.duration)> block.timestamp */\n      gt\n        /* \"FixedTermStack.sol\":7165:7481  if(user.lockStartTime.add(pool.duration)> block.timestamp){... */\n      iszero\n      tag_320\n      jumpi\n        /* \"FixedTermStack.sol\":7290:7305  uint256 pending */\n      0x00\n        /* \"FixedTermStack.sol\":7308:7340  calculateReward(_pid,msg.sender) */\n      tag_321\n        /* \"FixedTermStack.sol\":7324:7328  _pid */\n      dup6\n        /* \"FixedTermStack.sol\":7329:7339  msg.sender */\n      caller\n        /* \"FixedTermStack.sol\":7308:7323  calculateReward */\n      tag_78\n        /* \"FixedTermStack.sol\":7308:7340  calculateReward(_pid,msg.sender) */\n      jump\t// in\n    tag_321:\n        /* \"FixedTermStack.sol\":7290:7340  uint256 pending = calculateReward(_pid,msg.sender) */\n      swap1\n      pop\n        /* \"FixedTermStack.sol\":7362:7373  pending > 0 */\n      dup1\n      iszero\n        /* \"FixedTermStack.sol\":7359:7464  if(pending > 0) {... */\n      tag_323\n      jumpi\n        /* \"FixedTermStack.sol\":7405:7409  para */\n      sload(0x03)\n        /* \"FixedTermStack.sol\":7398:7444  IBEP20(para).safeTransfer(msg.sender, pending) */\n      tag_323\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FixedTermStack.sol\":7405:7409  para */\n      and\n        /* \"FixedTermStack.sol\":7424:7434  msg.sender */\n      caller\n        /* \"FixedTermStack.sol\":7436:7443  pending */\n      dup4\n        /* \"FixedTermStack.sol\":7398:7423  IBEP20(para).safeTransfer */\n      tag_115\n        /* \"FixedTermStack.sol\":7398:7444  IBEP20(para).safeTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_323:\n        /* \"FixedTermStack.sol\":7223:7481  {... */\n      pop\n        /* \"FixedTermStack.sol\":7165:7481  if(user.lockStartTime.add(pool.duration)> block.timestamp){... */\n    tag_320:\n        /* \"FixedTermStack.sol\":7619:7630  user.amount */\n      dup1\n      sload\n        /* \"FixedTermStack.sol\":7619:7643  user.amount.add(_amount) */\n      tag_324\n      swap1\n        /* \"FixedTermStack.sol\":7635:7642  _amount */\n      dup5\n        /* \"FixedTermStack.sol\":7619:7634  user.amount.add */\n      tag_124\n        /* \"FixedTermStack.sol\":7619:7643  user.amount.add(_amount) */\n      jump\t// in\n    tag_324:\n        /* \"FixedTermStack.sol\":7605:7643  user.amount = user.amount.add(_amount) */\n      dup2\n      sstore\n        /* \"FixedTermStack.sol\":7675:7690  block.timestamp */\n      timestamp\n        /* \"FixedTermStack.sol\":7654:7672  user.lockStartTime */\n      0x01\n      dup1\n      dup4\n      add\n        /* \"FixedTermStack.sol\":7654:7690  user.lockStartTime = block.timestamp */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"FixedTermStack.sol\":7715:7724  pool.aprs */\n      0x03\n      dup4\n      add\n        /* \"FixedTermStack.sol\":7715:7731  pool.aprs.length */\n      sload\n        /* \"FixedTermStack.sol\":7715:7735  pool.aprs.length - 1 */\n      tag_325\n      swap2\n        /* \"FixedTermStack.sol\":7654:7672  user.lockStartTime */\n      swap1\n        /* \"FixedTermStack.sol\":7715:7735  pool.aprs.length - 1 */\n      tag_132\n      jump\t// in\n    tag_325:\n        /* \"FixedTermStack.sol\":7701:7712  user.offset */\n      0x02\n      dup3\n      add\n        /* \"FixedTermStack.sol\":7701:7735  user.offset = pool.aprs.length - 1 */\n      sstore\n        /* \"FixedTermStack.sol\":7760:7771  pool.amount */\n      0x01\n      dup3\n      add\n      sload\n        /* \"FixedTermStack.sol\":7760:7784  pool.amount.add(_amount) */\n      tag_326\n      swap1\n        /* \"FixedTermStack.sol\":7776:7783  _amount */\n      dup5\n        /* \"FixedTermStack.sol\":7760:7775  pool.amount.add */\n      tag_124\n        /* \"FixedTermStack.sol\":7760:7784  pool.amount.add(_amount) */\n      jump\t// in\n    tag_326:\n        /* \"FixedTermStack.sol\":7746:7757  pool.amount */\n      0x01\n      dup4\n      add\n        /* \"FixedTermStack.sol\":7746:7784  pool.amount = pool.amount.add(_amount) */\n      sstore\n        /* \"FixedTermStack.sol\":7804:7808  para */\n      sload(0x03)\n        /* \"FixedTermStack.sol\":7797:7871  IBEP20(para).safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_327\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FixedTermStack.sol\":7804:7808  para */\n      and\n        /* \"FixedTermStack.sol\":7835:7845  msg.sender */\n      caller\n        /* \"FixedTermStack.sol\":7856:7860  this */\n      address\n        /* \"FixedTermStack.sol\":7863:7870  _amount */\n      dup7\n        /* \"FixedTermStack.sol\":7797:7826  IBEP20(para).safeTransferFrom */\n      tag_328\n        /* \"FixedTermStack.sol\":7797:7871  IBEP20(para).safeTransferFrom(address(msg.sender), address(this), _amount) */\n      jump\t// in\n    tag_327:\n        /* \"FixedTermStack.sol\":7887:7921  Deposit(msg.sender, _pid, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n        /* \"FixedTermStack.sol\":7907:7911  _pid */\n      dup5\n      swap1\n        /* \"FixedTermStack.sol\":7895:7905  msg.sender */\n      caller\n      swap1\n        /* \"FixedTermStack.sol\":7887:7921  Deposit(msg.sender, _pid, _amount) */\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"FixedTermStack.sol\":7887:7921  Deposit(msg.sender, _pid, _amount) */\n      tag_135\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_331\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_331:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5470:5472   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5452:5473   */\n      mstore\n        /* \"#utility.yul\":5509:5511   */\n      0x26\n        /* \"#utility.yul\":5489:5507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5482:5512   */\n      mstore\n        /* \"#utility.yul\":5548:5582   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5528:5546   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5521:5583   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":5599:5617   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5592:5628   */\n      mstore\n        /* \"#utility.yul\":5645:5664   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_112\n        /* \"#utility.yul\":5268:5670   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_333:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_336\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5877:5879   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5859:5880   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5896:5914   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5889:5919   */\n      mstore\n        /* \"#utility.yul\":5955:5989   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5935:5953   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5928:5990   */\n      mstore\n        /* \"#utility.yul\":6007:6025   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_112\n        /* \"#utility.yul\":5675:6031   */\n      jump\n        /* \"libraries/SafeBEP20.sol\":771:982  function safeTransfer(... */\n    tag_115:\n        /* \"libraries/SafeBEP20.sol\":915:973  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6228:6260   */\n      dup4\n      and\n        /* \"libraries/SafeBEP20.sol\":915:973  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6210:6261   */\n      mstore\n        /* \"#utility.yul\":6277:6295   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6270:6304   */\n      dup3\n      swap1\n      mstore\n        /* \"libraries/SafeBEP20.sol\":888:974  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_345\n      swap1\n        /* \"libraries/SafeBEP20.sol\":908:913  token */\n      dup5\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"libraries/SafeBEP20.sol\":938:961  token.transfer.selector */\n      swap1\n        /* \"#utility.yul\":6183:6201   */\n      0x64\n      add\n        /* \"libraries/SafeBEP20.sol\":915:973  abi.encodeWithSelector(token.transfer.selector, to, value) */\n    tag_346:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"libraries/SafeBEP20.sol\":888:907  _callOptionalReturn */\n      tag_348\n        /* \"libraries/SafeBEP20.sol\":888:974  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_345:\n        /* \"libraries/SafeBEP20.sol\":771:982  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_161\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_144\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_161\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_132\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_161\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_153\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_161\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_358\n      jump\t// in\n        /* \"libraries/SafeBEP20.sol\":990:1238  function safeTransferFrom(... */\n    tag_328:\n        /* \"libraries/SafeBEP20.sol\":1161:1229  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6795:6810   */\n      dup1\n      dup6\n      and\n        /* \"libraries/SafeBEP20.sol\":1161:1229  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":6777:6811   */\n      mstore\n        /* \"#utility.yul\":6847:6862   */\n      dup4\n      and\n        /* \"#utility.yul\":6827:6845   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6820:6863   */\n      mstore\n        /* \"#utility.yul\":6879:6897   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":6872:6906   */\n      dup3\n      swap1\n      mstore\n        /* \"libraries/SafeBEP20.sol\":1134:1230  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_360\n      swap1\n        /* \"libraries/SafeBEP20.sol\":1154:1159  token */\n      dup6\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"libraries/SafeBEP20.sol\":1184:1211  token.transferFrom.selector */\n      swap1\n        /* \"#utility.yul\":6712:6730   */\n      0x84\n      add\n        /* \"libraries/SafeBEP20.sol\":1161:1229  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      tag_346\n        /* \"#utility.yul\":6537:6912   */\n      jump\n        /* \"libraries/SafeBEP20.sol\":1134:1230  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n    tag_360:\n        /* \"libraries/SafeBEP20.sol\":990:1238  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeBEP20.sol\":3282:4056  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n    tag_348:\n        /* \"libraries/SafeBEP20.sol\":3706:3729  bytes memory returndata */\n      0x00\n        /* \"libraries/SafeBEP20.sol\":3732:3801  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_365\n        /* \"libraries/SafeBEP20.sol\":3760:3764  data */\n      dup3\n        /* \"libraries/SafeBEP20.sol\":3732:3801  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"libraries/SafeBEP20.sol\":3740:3745  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"libraries/SafeBEP20.sol\":3732:3759  address(token).functionCall */\n      and\n      tag_366\n      swap1\n        /* \"libraries/SafeBEP20.sol\":3732:3801  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_365:\n        /* \"libraries/SafeBEP20.sol\":3816:3833  returndata.length */\n      dup1\n      mload\n        /* \"libraries/SafeBEP20.sol\":3706:3801  bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"libraries/SafeBEP20.sol\":3816:3837  returndata.length > 0 */\n      iszero\n        /* \"libraries/SafeBEP20.sol\":3812:4049  if (returndata.length > 0) {... */\n      tag_345\n      jumpi\n        /* \"libraries/SafeBEP20.sol\":3971:3981  returndata */\n      dup1\n        /* \"libraries/SafeBEP20.sol\":3960:3990  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_368\n      swap2\n      swap1\n      tag_369\n      jump\t// in\n    tag_368:\n        /* \"libraries/SafeBEP20.sol\":3952:4037  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7401:7403   */\n      0x20\n        /* \"libraries/SafeBEP20.sol\":3952:4037  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7383:7404   */\n      mstore\n        /* \"#utility.yul\":7440:7442   */\n      0x2a\n        /* \"#utility.yul\":7420:7438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7413:7443   */\n      mstore\n        /* \"#utility.yul\":7479:7513   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":7459:7477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7452:7514   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":7530:7548   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7523:7563   */\n      mstore\n        /* \"#utility.yul\":7580:7599   */\n      0x84\n      add\n        /* \"libraries/SafeBEP20.sol\":3952:4037  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_112\n        /* \"#utility.yul\":7199:7605   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n    tag_366:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4006:4018  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_374\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4059:4065  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4067:4071  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4073:4074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4076:4088  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4058  functionCallWithValue */\n      tag_375\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4030:4089  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n    tag_375:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5125:5137  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5182:5187  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5178  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5187  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_377\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7812:7814   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7794:7815   */\n      mstore\n        /* \"#utility.yul\":7851:7853   */\n      0x26\n        /* \"#utility.yul\":7831:7849   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7824:7854   */\n      mstore\n        /* \"#utility.yul\":7890:7924   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":7870:7888   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7863:7925   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":7941:7959   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7934:7970   */\n      mstore\n        /* \"#utility.yul\":7987:8006   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_112\n        /* \"#utility.yul\":7610:8012   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_377:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5241:5253  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5255:5278  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5288  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5293  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5301:5306  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5308:5312  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5313  target.call{value: value}(data) */\n      mload(0x40)\n      tag_380\n      swap2\n      swap1\n      tag_381\n      jump\t// in\n    tag_380:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_384\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_383)\n    tag_384:\n      0x60\n      swap2\n      pop\n    tag_383:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5240:5313  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_385\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5357:5363  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5365:5372  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5374:5384  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5386:5398  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5356  verifyCallResultFromTarget */\n      tag_386\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5323:5399  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_386:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7646:7658  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7674:7681  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n      iszero\n      tag_388\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7711  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7718  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7723  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7723  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n      tag_392\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_392\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8766:8768   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8748:8769   */\n      mstore\n        /* \"#utility.yul\":8805:8807   */\n      0x1d\n        /* \"#utility.yul\":8785:8803   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8778:8808   */\n      mstore\n        /* \"#utility.yul\":8844:8875   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":8824:8842   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8817:8876   */\n      mstore\n        /* \"#utility.yul\":8893:8911   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_112\n        /* \"#utility.yul\":8564:8917   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n    tag_392:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8003:8013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7996:8013  return returndata */\n      jump(tag_374)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n    tag_388:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      tag_374\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8052:8062  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8076  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8792  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8796  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n      tag_400\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9003:9013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8997:9014  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9059:9074  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9046:9056  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9042:9044  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9038:9057  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9031:9075  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n    tag_400:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9126:9138  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9119:9139  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap2\n      swap1\n      tag_403\n      jump\t// in\n        /* \"#utility.yul\":196:376   */\n    tag_31:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      dup1\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_410:\n      pop\n        /* \"#utility.yul\":347:370   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:376   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":381:1416   */\n    tag_34:\n        /* \"#utility.yul\":523:527   */\n      0x00\n        /* \"#utility.yul\":552:554   */\n      0x20\n        /* \"#utility.yul\":581:583   */\n      dup1\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":563:584   */\n      mstore\n        /* \"#utility.yul\":622:625   */\n      0xa0\n        /* \"#utility.yul\":611:620   */\n      dup4\n        /* \"#utility.yul\":607:626   */\n      add\n        /* \"#utility.yul\":668:674   */\n      dup5\n        /* \"#utility.yul\":662:675   */\n      mload\n        /* \"#utility.yul\":657:659   */\n      dup3\n        /* \"#utility.yul\":646:655   */\n      dup6\n        /* \"#utility.yul\":642:660   */\n      add\n        /* \"#utility.yul\":635:676   */\n      mstore\n        /* \"#utility.yul\":713:715   */\n      dup2\n        /* \"#utility.yul\":705:711   */\n      dup6\n        /* \"#utility.yul\":701:716   */\n      add\n        /* \"#utility.yul\":695:717   */\n      mload\n        /* \"#utility.yul\":736:738   */\n      0x40\n        /* \"#utility.yul\":774:776   */\n      dup2\n        /* \"#utility.yul\":769:771   */\n      dup2\n        /* \"#utility.yul\":758:767   */\n      dup8\n        /* \"#utility.yul\":754:772   */\n      add\n        /* \"#utility.yul\":747:777   */\n      mstore\n        /* \"#utility.yul\":831:833   */\n      dup1\n        /* \"#utility.yul\":823:829   */\n      dup8\n        /* \"#utility.yul\":819:834   */\n      add\n        /* \"#utility.yul\":813:835   */\n      mload\n        /* \"#utility.yul\":808:810   */\n      0x60\n        /* \"#utility.yul\":797:806   */\n      dup8\n        /* \"#utility.yul\":793:811   */\n      add\n        /* \"#utility.yul\":786:836   */\n      mstore\n        /* \"#utility.yul\":883:885   */\n      0x60\n        /* \"#utility.yul\":875:881   */\n      dup8\n        /* \"#utility.yul\":871:886   */\n      add\n        /* \"#utility.yul\":865:887   */\n      mload\n        /* \"#utility.yul\":845:887   */\n      swap2\n      pop\n        /* \"#utility.yul\":925:929   */\n      0x80\n        /* \"#utility.yul\":918:922   */\n      dup1\n        /* \"#utility.yul\":907:916   */\n      dup8\n        /* \"#utility.yul\":903:923   */\n      add\n        /* \"#utility.yul\":896:930   */\n      mstore\n        /* \"#utility.yul\":950:956   */\n      dup3\n        /* \"#utility.yul\":985:997   */\n      dup3\n        /* \"#utility.yul\":979:998   */\n      mload\n        /* \"#utility.yul\":1022:1028   */\n      dup1\n        /* \"#utility.yul\":1014:1020   */\n      dup6\n        /* \"#utility.yul\":1007:1029   */\n      mstore\n        /* \"#utility.yul\":1060:1063   */\n      0xc0\n        /* \"#utility.yul\":1049:1058   */\n      dup9\n        /* \"#utility.yul\":1045:1064   */\n      add\n        /* \"#utility.yul\":1038:1064   */\n      swap2\n      pop\n        /* \"#utility.yul\":1105:1107   */\n      dup6\n        /* \"#utility.yul\":1091:1103   */\n      dup5\n        /* \"#utility.yul\":1087:1108   */\n      add\n        /* \"#utility.yul\":1073:1108   */\n      swap5\n      pop\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1117:1127   */\n      swap4\n      pop\n        /* \"#utility.yul\":1136:1390   */\n    tag_412:\n        /* \"#utility.yul\":1150:1156   */\n      dup1\n        /* \"#utility.yul\":1147:1148   */\n      dup5\n        /* \"#utility.yul\":1144:1157   */\n      lt\n        /* \"#utility.yul\":1136:1390   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":1209:1222   */\n      dup5\n      mload\n        /* \"#utility.yul\":1247:1256   */\n      dup1\n      mload\n        /* \"#utility.yul\":1235:1257   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1297:1308   */\n      dup7\n      add\n        /* \"#utility.yul\":1291:1309   */\n      mload\n        /* \"#utility.yul\":1277:1289   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1270:1310   */\n      mstore\n        /* \"#utility.yul\":1365:1380   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":1172:1173   */\n      0x01\n        /* \"#utility.yul\":1165:1174   */\n      swap4\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":1330:1342   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":1136:1390   */\n      jump(tag_412)\n    tag_414:\n      pop\n        /* \"#utility.yul\":1407:1410   */\n      swap8\n        /* \"#utility.yul\":381:1416   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1644:1817   */\n    tag_404:\n        /* \"#utility.yul\":1712:1732   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1761:1792   */\n      dup2\n      and\n        /* \"#utility.yul\":1751:1793   */\n      dup2\n      eq\n        /* \"#utility.yul\":1741:1811   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":1807:1808   */\n      0x00\n        /* \"#utility.yul\":1804:1805   */\n      dup1\n        /* \"#utility.yul\":1797:1809   */\n      revert\n        /* \"#utility.yul\":1741:1811   */\n    tag_417:\n        /* \"#utility.yul\":1644:1817   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1822:2076   */\n    tag_41:\n        /* \"#utility.yul\":1890:1896   */\n      0x00\n        /* \"#utility.yul\":1898:1904   */\n      dup1\n        /* \"#utility.yul\":1951:1953   */\n      0x40\n        /* \"#utility.yul\":1939:1948   */\n      dup4\n        /* \"#utility.yul\":1930:1937   */\n      dup6\n        /* \"#utility.yul\":1926:1949   */\n      sub\n        /* \"#utility.yul\":1922:1954   */\n      slt\n        /* \"#utility.yul\":1919:1971   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":1967:1968   */\n      0x00\n        /* \"#utility.yul\":1964:1965   */\n      dup1\n        /* \"#utility.yul\":1957:1969   */\n      revert\n        /* \"#utility.yul\":1919:1971   */\n    tag_419:\n        /* \"#utility.yul\":1990:2019   */\n      tag_420\n        /* \"#utility.yul\":2009:2018   */\n      dup4\n        /* \"#utility.yul\":1990:2019   */\n      tag_404\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":1980:2019   */\n      swap5\n        /* \"#utility.yul\":2066:2068   */\n      0x20\n        /* \"#utility.yul\":2051:2069   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2038:2070   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1822:2076   */\n      jump\t// out\n        /* \"#utility.yul\":2081:2329   */\n    tag_45:\n        /* \"#utility.yul\":2149:2155   */\n      0x00\n        /* \"#utility.yul\":2157:2163   */\n      dup1\n        /* \"#utility.yul\":2210:2212   */\n      0x40\n        /* \"#utility.yul\":2198:2207   */\n      dup4\n        /* \"#utility.yul\":2189:2196   */\n      dup6\n        /* \"#utility.yul\":2185:2208   */\n      sub\n        /* \"#utility.yul\":2181:2213   */\n      slt\n        /* \"#utility.yul\":2178:2230   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":2226:2227   */\n      0x00\n        /* \"#utility.yul\":2223:2224   */\n      dup1\n        /* \"#utility.yul\":2216:2228   */\n      revert\n        /* \"#utility.yul\":2178:2230   */\n    tag_422:\n      pop\n      pop\n        /* \"#utility.yul\":2249:2272   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2319:2321   */\n      0x20\n        /* \"#utility.yul\":2304:2322   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2291:2323   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2081:2329   */\n      jump\t// out\n        /* \"#utility.yul\":2542:2796   */\n    tag_68:\n        /* \"#utility.yul\":2610:2616   */\n      0x00\n        /* \"#utility.yul\":2618:2624   */\n      dup1\n        /* \"#utility.yul\":2671:2673   */\n      0x40\n        /* \"#utility.yul\":2659:2668   */\n      dup4\n        /* \"#utility.yul\":2650:2657   */\n      dup6\n        /* \"#utility.yul\":2646:2669   */\n      sub\n        /* \"#utility.yul\":2642:2674   */\n      slt\n        /* \"#utility.yul\":2639:2691   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":2687:2688   */\n      0x00\n        /* \"#utility.yul\":2684:2685   */\n      dup1\n        /* \"#utility.yul\":2677:2689   */\n      revert\n        /* \"#utility.yul\":2639:2691   */\n    tag_425:\n        /* \"#utility.yul\":2723:2732   */\n      dup3\n        /* \"#utility.yul\":2710:2733   */\n      calldataload\n        /* \"#utility.yul\":2700:2733   */\n      swap2\n      pop\n        /* \"#utility.yul\":2752:2790   */\n      tag_426\n        /* \"#utility.yul\":2786:2788   */\n      0x20\n        /* \"#utility.yul\":2775:2784   */\n      dup5\n        /* \"#utility.yul\":2771:2789   */\n      add\n        /* \"#utility.yul\":2752:2790   */\n      tag_404\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":2742:2790   */\n      swap1\n      pop\n        /* \"#utility.yul\":2542:2796   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3125:3311   */\n    tag_94:\n        /* \"#utility.yul\":3184:3190   */\n      0x00\n        /* \"#utility.yul\":3237:3239   */\n      0x20\n        /* \"#utility.yul\":3225:3234   */\n      dup3\n        /* \"#utility.yul\":3216:3223   */\n      dup5\n        /* \"#utility.yul\":3212:3235   */\n      sub\n        /* \"#utility.yul\":3208:3240   */\n      slt\n        /* \"#utility.yul\":3205:3257   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":3253:3254   */\n      0x00\n        /* \"#utility.yul\":3250:3251   */\n      dup1\n        /* \"#utility.yul\":3243:3255   */\n      revert\n        /* \"#utility.yul\":3205:3257   */\n    tag_429:\n        /* \"#utility.yul\":3276:3305   */\n      tag_161\n        /* \"#utility.yul\":3295:3304   */\n      dup3\n        /* \"#utility.yul\":3276:3305   */\n      tag_404\n      jump\t// in\n        /* \"#utility.yul\":3316:3443   */\n    tag_102:\n        /* \"#utility.yul\":3377:3387   */\n      0x4e487b71\n        /* \"#utility.yul\":3372:3375   */\n      0xe0\n        /* \"#utility.yul\":3368:3388   */\n      shl\n        /* \"#utility.yul\":3365:3366   */\n      0x00\n        /* \"#utility.yul\":3358:3389   */\n      mstore\n        /* \"#utility.yul\":3408:3412   */\n      0x32\n        /* \"#utility.yul\":3405:3406   */\n      0x04\n        /* \"#utility.yul\":3398:3413   */\n      mstore\n        /* \"#utility.yul\":3432:3436   */\n      0x24\n        /* \"#utility.yul\":3429:3430   */\n      0x00\n        /* \"#utility.yul\":3422:3437   */\n      revert\n        /* \"#utility.yul\":4202:4329   */\n    tag_405:\n        /* \"#utility.yul\":4263:4273   */\n      0x4e487b71\n        /* \"#utility.yul\":4258:4261   */\n      0xe0\n        /* \"#utility.yul\":4254:4274   */\n      shl\n        /* \"#utility.yul\":4251:4252   */\n      0x00\n        /* \"#utility.yul\":4244:4275   */\n      mstore\n        /* \"#utility.yul\":4294:4298   */\n      0x11\n        /* \"#utility.yul\":4291:4292   */\n      0x04\n        /* \"#utility.yul\":4284:4299   */\n      mstore\n        /* \"#utility.yul\":4318:4322   */\n      0x24\n        /* \"#utility.yul\":4315:4316   */\n      0x00\n        /* \"#utility.yul\":4308:4323   */\n      revert\n        /* \"#utility.yul\":4334:4462   */\n    tag_132:\n        /* \"#utility.yul\":4401:4410   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4422:4433   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4419:4456   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":4436:4454   */\n      tag_160\n      tag_405\n      jump\t// in\n        /* \"#utility.yul\":4467:4592   */\n    tag_144:\n        /* \"#utility.yul\":4532:4541   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4553:4563   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4550:4586   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":4566:4584   */\n      tag_160\n      tag_405\n      jump\t// in\n        /* \"#utility.yul\":4597:4732   */\n    tag_146:\n        /* \"#utility.yul\":4636:4639   */\n      0x00\n        /* \"#utility.yul\":4657:4674   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":4654:4697   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":4677:4695   */\n      tag_443\n      tag_405\n      jump\t// in\n    tag_443:\n      pop\n        /* \"#utility.yul\":4724:4725   */\n      0x01\n        /* \"#utility.yul\":4713:4726   */\n      add\n      swap1\n        /* \"#utility.yul\":4597:4732   */\n      jump\t// out\n        /* \"#utility.yul\":4737:4905   */\n    tag_153:\n        /* \"#utility.yul\":4810:4819   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4841:4850   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4858:4873   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4852:4874   */\n      dup5\n      eq\n        /* \"#utility.yul\":4838:4875   */\n      or\n        /* \"#utility.yul\":4828:4899   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":4879:4897   */\n      tag_160\n      tag_405\n      jump\t// in\n        /* \"#utility.yul\":6315:6532   */\n    tag_358:\n        /* \"#utility.yul\":6355:6356   */\n      0x00\n        /* \"#utility.yul\":6381:6382   */\n      dup3\n        /* \"#utility.yul\":6371:6503   */\n      tag_452\n      jumpi\n        /* \"#utility.yul\":6425:6435   */\n      0x4e487b71\n        /* \"#utility.yul\":6420:6423   */\n      0xe0\n        /* \"#utility.yul\":6416:6436   */\n      shl\n        /* \"#utility.yul\":6413:6414   */\n      0x00\n        /* \"#utility.yul\":6406:6437   */\n      mstore\n        /* \"#utility.yul\":6460:6464   */\n      0x12\n        /* \"#utility.yul\":6457:6458   */\n      0x04\n        /* \"#utility.yul\":6450:6465   */\n      mstore\n        /* \"#utility.yul\":6488:6492   */\n      0x24\n        /* \"#utility.yul\":6485:6486   */\n      0x00\n        /* \"#utility.yul\":6478:6493   */\n      revert\n        /* \"#utility.yul\":6371:6503   */\n    tag_452:\n      pop\n        /* \"#utility.yul\":6517:6526   */\n      div\n      swap1\n        /* \"#utility.yul\":6315:6532   */\n      jump\t// out\n        /* \"#utility.yul\":6917:7194   */\n    tag_369:\n        /* \"#utility.yul\":6984:6990   */\n      0x00\n        /* \"#utility.yul\":7037:7039   */\n      0x20\n        /* \"#utility.yul\":7025:7034   */\n      dup3\n        /* \"#utility.yul\":7016:7023   */\n      dup5\n        /* \"#utility.yul\":7012:7035   */\n      sub\n        /* \"#utility.yul\":7008:7040   */\n      slt\n        /* \"#utility.yul\":7005:7057   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":7053:7054   */\n      0x00\n        /* \"#utility.yul\":7050:7051   */\n      dup1\n        /* \"#utility.yul\":7043:7055   */\n      revert\n        /* \"#utility.yul\":7005:7057   */\n    tag_455:\n        /* \"#utility.yul\":7085:7094   */\n      dup2\n        /* \"#utility.yul\":7079:7095   */\n      mload\n        /* \"#utility.yul\":7138:7143   */\n      dup1\n        /* \"#utility.yul\":7131:7144   */\n      iszero\n        /* \"#utility.yul\":7124:7145   */\n      iszero\n        /* \"#utility.yul\":7117:7122   */\n      dup2\n        /* \"#utility.yul\":7114:7146   */\n      eq\n        /* \"#utility.yul\":7104:7164   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":7160:7161   */\n      0x00\n        /* \"#utility.yul\":7157:7158   */\n      dup1\n        /* \"#utility.yul\":7150:7162   */\n      revert\n        /* \"#utility.yul\":7104:7164   */\n    tag_456:\n        /* \"#utility.yul\":7183:7188   */\n      swap4\n        /* \"#utility.yul\":6917:7194   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8017:8267   */\n    tag_406:\n        /* \"#utility.yul\":8102:8103   */\n      0x00\n        /* \"#utility.yul\":8112:8225   */\n    tag_460:\n        /* \"#utility.yul\":8126:8132   */\n      dup4\n        /* \"#utility.yul\":8123:8124   */\n      dup2\n        /* \"#utility.yul\":8120:8133   */\n      lt\n        /* \"#utility.yul\":8112:8225   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":8202:8213   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8196:8214   */\n      mload\n        /* \"#utility.yul\":8183:8194   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":8176:8215   */\n      mstore\n        /* \"#utility.yul\":8148:8150   */\n      0x20\n        /* \"#utility.yul\":8141:8151   */\n      add\n        /* \"#utility.yul\":8112:8225   */\n      jump(tag_460)\n    tag_462:\n      pop\n      pop\n        /* \"#utility.yul\":8259:8260   */\n      0x00\n        /* \"#utility.yul\":8241:8257   */\n      swap2\n      add\n        /* \"#utility.yul\":8234:8261   */\n      mstore\n        /* \"#utility.yul\":8017:8267   */\n      jump\t// out\n        /* \"#utility.yul\":8272:8559   */\n    tag_381:\n        /* \"#utility.yul\":8401:8404   */\n      0x00\n        /* \"#utility.yul\":8439:8445   */\n      dup3\n        /* \"#utility.yul\":8433:8446   */\n      mload\n        /* \"#utility.yul\":8455:8521   */\n      tag_464\n        /* \"#utility.yul\":8514:8520   */\n      dup2\n        /* \"#utility.yul\":8509:8512   */\n      dup5\n        /* \"#utility.yul\":8502:8506   */\n      0x20\n        /* \"#utility.yul\":8494:8500   */\n      dup8\n        /* \"#utility.yul\":8490:8507   */\n      add\n        /* \"#utility.yul\":8455:8521   */\n      tag_406\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":8537:8553   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":8272:8559   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8922:9318   */\n    tag_403:\n        /* \"#utility.yul\":9071:9073   */\n      0x20\n        /* \"#utility.yul\":9060:9069   */\n      dup2\n        /* \"#utility.yul\":9053:9074   */\n      mstore\n        /* \"#utility.yul\":9034:9038   */\n      0x00\n        /* \"#utility.yul\":9103:9109   */\n      dup3\n        /* \"#utility.yul\":9097:9110   */\n      mload\n        /* \"#utility.yul\":9146:9152   */\n      dup1\n        /* \"#utility.yul\":9141:9143   */\n      0x20\n        /* \"#utility.yul\":9130:9139   */\n      dup5\n        /* \"#utility.yul\":9126:9144   */\n      add\n        /* \"#utility.yul\":9119:9153   */\n      mstore\n        /* \"#utility.yul\":9162:9241   */\n      tag_467\n        /* \"#utility.yul\":9234:9240   */\n      dup2\n        /* \"#utility.yul\":9229:9231   */\n      0x40\n        /* \"#utility.yul\":9218:9227   */\n      dup6\n        /* \"#utility.yul\":9214:9232   */\n      add\n        /* \"#utility.yul\":9209:9211   */\n      0x20\n        /* \"#utility.yul\":9201:9207   */\n      dup8\n        /* \"#utility.yul\":9197:9212   */\n      add\n        /* \"#utility.yul\":9162:9241   */\n      tag_406\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":9302:9304   */\n      0x1f\n        /* \"#utility.yul\":9281:9296   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":9277:9306   */\n      and\n        /* \"#utility.yul\":9262:9307   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":9309:9311   */\n      0x40\n        /* \"#utility.yul\":9258:9312   */\n      add\n      swap3\n        /* \"#utility.yul\":8922:9318   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209e14be90309aa20d98783b7100a2ec62cc11166d9f2879d3f77bf4a1af136c8c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_884": {
									"entryPoint": null,
									"id": 884,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_454": {
									"entryPoint": null,
									"id": 454,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 316,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialized_932": {
									"entryPoint": null,
									"id": 932,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_IBEP20_$2000_fromMemory": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:321:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "110:209:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "156:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "165:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "168:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "158:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "158:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "158:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "131:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "140:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "127:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "127:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "123:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "123:32:7"
															},
															"nodeType": "YulIf",
															"src": "120:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "181:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "200:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "194:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "185:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "273:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "282:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "285:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "275:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "275:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "275:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "232:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "243:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "258:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "263:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "254:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "254:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "267:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "250:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "250:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "239:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "239:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "229:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "229:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "222:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "222:50:7"
															},
															"nodeType": "YulIf",
															"src": "219:70:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "298:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "308:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "298:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IBEP20_$2000_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "76:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "87:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "99:6:7",
														"type": ""
													}
												],
												"src": "14:305:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IBEP20_$2000_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161176038038061176083398101604081905261002f9161018c565b6100383361013c565b600380546001600160a01b0319166001600160a01b0383161790556101366001805480820182556040805180820190915260148152426020808301918252600484027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9810180548088018255600091825292812094516002909302909401918255915194019390935561012c7fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf88401557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68301919091557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf790910155565b506101bc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561019e57600080fd5b81516001600160a01b03811681146101b557600080fd5b9392505050565b611595806101cb6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638dbb1e3a116100ad578063cfbb3dbd11610071578063cfbb3dbd14610279578063e2bbb1581461028c578063e3d0b2bf1461029f578063ec342ad0146102a8578063f2fde38b146102b057600080fd5b80638dbb1e3a146101e4578063918f8674146101f757806393f1a40b1461020257806398969e8214610253578063a18f07a01461026657600080fd5b8063441a3e70116100f4578063441a3e701461019d57806351166d78146101b05780636d89dbc5146101b8578063715018a6146101cb5780638da5cb5b146101d357600080fd5b8063081e3eda146101265780632f380b351461013d5780633e3cca901461015d5780633f138d4b14610188575b600080fd5b6001545b6040519081526020015b60405180910390f35b61015061014b3660046112da565b6102c3565b60405161013491906112f3565b600354610170906001600160a01b031681565b6040516001600160a01b039091168152602001610134565b61019b61019636600461138c565b6103b1565b005b61019b6101ab3660046113b6565b61042d565b61012a6105aa565b61019b6101c63660046113b6565b610600565b61019b6106e3565b6000546001600160a01b0316610170565b61012a6101f23660046113b6565b6106f7565b61012a6301e1338081565b6102386102103660046113d8565b6002602081815260009384526040808520909152918352912080546001820154919092015483565b60408051938452602084019290925290820152606001610134565b61012a6102613660046113d8565b61070c565b61012a6102743660046113d8565b6109d5565b61019b6102873660046113b6565b610c75565b61019b61029a3660046113b6565b610d13565b61012a61025881565b61012a606481565b61019b6102be366004611404565b610e7f565b6102ee6040518060800160405280600081526020016000815260200160008152602001606081525090565b600182815481106103015761030161141f565b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156103a35783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061035d565b505050915250909392505050565b6103b9610ef8565b6003546001600160a01b03908116908316036104155760405162461bcd60e51b815260206004820152601660248201527521b0b73737ba1031329039ba30b5b2b2103a37b5b2b760511b60448201526064015b60405180910390fd5b6104296001600160a01b0383163383610f52565b5050565b6000600183815481106104425761044261141f565b6000918252602080832086845260028252604080852033865290925292208054600490920290920192508311156104c65760405162461bcd60e51b815260206004820152602260248201527f46697865645465726d537461636b3a2053554646494349454e545f42414c414e604482015261434560f01b606482015260840161040c565b426104e283600201548360010154610fba90919063ffffffff16565b11156105155760006104f485336109d5565b9050801561051357600354610513906001600160a01b03163383610f52565b505b80546105219084610fc6565b815542600180830191909155600383015461053c919061144b565b600282015560018201546105509084610fc6565b600183015560035461056c906001600160a01b03163385610f52565b604051838152849033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906020015b60405180910390a350505050565b6000805b6001548110156105fc57600181815481106105cb576105cb61141f565b906000526020600020906004020160010154826105e8919061145e565b9150806105f481611471565b9150506105ae565b5090565b610608610ef8565b60018054808201825560408051808201909152848152426020808301918252600484027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf98101805480880182556000918252929020935160029092029093019081559051930192909255907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6016106a083603c61148a565b60028201558181556000600182018190556040518491869185917f4d93067d0d628fe42c457623322c0f22ad92f71762a2eebe06e2a0e7d2aa61c791a450505050565b6106eb610ef8565b6106f56000610fd2565b565b60006107038284610fc6565b90505b92915050565b600080600184815481106107225761072261141f565b600091825260208083208784526002825260408085206001600160a01b03891686529092529083206004929092020160038101805460018085015493965093949093909283929091610774908661144b565b815481106107845761078461141f565b9060005260206000209060020201600101541015610818576107aa8460010154426106f7565b84549092506107f3906107ed600388016107c560018861144b565b815481106107d5576107d561141f565b60009182526020909120600290910201548590611022565b90611022565b955061080c60646108068861025861102e565b9061102e565b95505050505050610706565b60028401545b61082960018561144b565b81101561094557816108ba5761087585600101548760030183600161084e919061145e565b8154811061085e5761085e61141f565b9060005260206000209060020201600101546106f7565b92506108af85600001546107ed8860030184815481106108975761089761141f565b60009182526020909120600290910201548690611022565b965060019150610933565b60006108f78760030183815481106108d4576108d461141f565b9060005260206000209060020201600101548860030184600161084e919061145e565b905061092361091c87600001546107ed8a60030186815481106107d5576107d561141f565b8990610fba565b975061092f8482610fba565b9350505b8061093d81611471565b91505061081e565b506109806003860161095860018661144b565b815481106109685761096861141f565b906000526020600020906002020160010154436106f7565b84549092506109b6906109af906107ed6003890161099f60018961144b565b815481106108975761089761141f565b8790610fba565b95506109c960646108068861025861102e565b98975050505050505050565b600080600184815481106109eb576109eb61141f565b600091825260208083208784526002825260408085206001600160a01b03891686529092529083206004929092020160038101805460018085015493965093949093909283929091610a3d908661144b565b81548110610a4d57610a4d61141f565b9060005260206000209060020201600101541015610a8557600285015484549092506107f3906107ed600388016107c560018861144b565b60028401545b610a9660018561144b565b811015610c295781610b4f57610abb85600101548760030183600161084e919061145e565b92508560020154831115610b2457610b0485600001546107ed886003018481548110610ae957610ae961141f565b6000918252602090912060029182020154908a015490611022565b9650610b1760646108068961025861102e565b9650505050505050610706565b610b4485600001546107ed8860030184815481106108975761089761141f565b965060019150610c17565b6000610b698760030183815481106108d4576108d461141f565b6002880154909150610b7b8286610fba565b1115610be457610bc361091c87600001546107ed8a6003018681548110610ba457610ba461141f565b6000918252602090912060029182020154908c01546107ed908a610fc6565b9750610bd660646108068a61025861102e565b975050505050505050610706565b610c0761091c87600001546107ed8a60030186815481106107d5576107d561141f565b9750610c138482610fba565b9350505b80610c2181611471565b915050610a8b565b5083546109b6906109af906107ed60038901610c4660018961144b565b81548110610c5657610c5661141f565b6000918252602090912060029182020154908a01546107ed9088610fc6565b610c7d610ef8565b600060018381548110610c9257610c9261141f565b600091825260208083206040805180820182528781524281850190815260036004909602909301948501805460018181018355918852948720915160029095029091019384559151929091019190915551909250839185917f6ec6d062a87c4b42fe40885d2e8955d89ab9275e14d24354dd2b6b130043bba59190a3505050565b600060018381548110610d2857610d2861141f565b6000918252602080832086845260028252604080852033865290925292206004909102909101915082610d9d5760405162461bcd60e51b815260206004820152601d60248201527f46697865645465726d537461636b3a2042656c6f77206d696e696d756d000000604482015260640161040c565b805415610df35742610dc083600201548360010154610fba90919063ffffffff16565b1115610df3576000610dd285336109d5565b90508015610df157600354610df1906001600160a01b03163383610f52565b505b8054610dff9084610fba565b8155426001808301919091556003830154610e1a919061144b565b60028201556001820154610e2e9084610fba565b6001830155600354610e4b906001600160a01b031633308661103a565b604051838152849033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200161059c565b610e87610ef8565b6001600160a01b038116610eec5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161040c565b610ef581610fd2565b50565b6000546001600160a01b031633146106f55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040c565b6040516001600160a01b038316602482015260448101829052610fb590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611078565b505050565b6000610703828461145e565b6000610703828461144b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610703828461148a565b600061070382846114a1565b6040516001600160a01b03808516602483015283166044820152606481018290526110729085906323b872dd60e01b90608401610f7e565b50505050565b60006110cd826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661114a9092919063ffffffff16565b805190915015610fb557808060200190518101906110eb91906114c3565b610fb55760405162461bcd60e51b815260206004820152602a60248201527f5361666542455032303a204245503230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161040c565b60606111598484600085611161565b949350505050565b6060824710156111c25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161040c565b600080866001600160a01b031685876040516111de9190611510565b60006040518083038185875af1925050503d806000811461121b576040519150601f19603f3d011682016040523d82523d6000602084013e611220565b606091505b50915091506112318783838761123c565b979650505050505050565b606083156112ab5782516000036112a4576001600160a01b0385163b6112a45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161040c565b5081611159565b61115983838151156112c05781518083602001fd5b8060405162461bcd60e51b815260040161040c919061152c565b6000602082840312156112ec57600080fd5b5035919050565b6000602080835260a0830184518285015281850151604081818701528087015160608701526060870151915060808087015282825180855260c0880191508584019450600093505b80841015611364578451805183528601518683015293850193600193909301929082019061133b565b50979650505050505050565b80356001600160a01b038116811461138757600080fd5b919050565b6000806040838503121561139f57600080fd5b6113a883611370565b946020939093013593505050565b600080604083850312156113c957600080fd5b50508035926020909101359150565b600080604083850312156113eb57600080fd5b823591506113fb60208401611370565b90509250929050565b60006020828403121561141657600080fd5b61070382611370565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561070657610706611435565b8082018082111561070657610706611435565b60006001820161148357611483611435565b5060010190565b808202811582820484141761070657610706611435565b6000826114be57634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156114d557600080fd5b815180151581146114e557600080fd5b9392505050565b60005b838110156115075781810151838201526020016114ef565b50506000910152565b600082516115228184602087016114ec565b9190910192915050565b602081526000825180602084015261154b8160408501602087016114ec565b601f01601f1916919091016040019291505056fea26469706673582212209e14be90309aa20d98783b7100a2ec62cc11166d9f2879d3f77bf4a1af136c8c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1760 CODESIZE SUB DUP1 PUSH2 0x1760 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x18C JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x13C JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH2 0x136 PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x14 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x4 DUP5 MUL PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF9 DUP2 ADD DUP1 SLOAD DUP1 DUP9 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE SWAP3 DUP2 KECCAK256 SWAP5 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL SWAP1 SWAP5 ADD SWAP2 DUP3 SSTORE SWAP2 MLOAD SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH2 0x12C PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF8 DUP5 ADD SSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF7 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST POP PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1595 DUP1 PUSH2 0x1CB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DBB1E3A GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCFBB3DBD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCFBB3DBD EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE3D0B2BF EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xEC342AD0 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x918F8674 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x98969E82 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xA18F07A0 EQ PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x51166D78 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x6D89DBC5 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x2F380B35 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x3E3CCA90 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x3F138D4B EQ PUSH2 0x188 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x170 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x138C JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH2 0x12A PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x19B PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x170 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x12A PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH2 0x12A PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x258 DUP2 JUMP JUMPDEST PUSH2 0x12A PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x2EE PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x301 JUMPI PUSH2 0x301 PUSH2 0x141F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3A3 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x35D JUMP JUMPDEST POP POP POP SWAP2 MSTORE POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3B9 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B73737BA1031329039BA30B5B2B2103A37B5B2B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x429 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0xF52 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x442 JUMPI PUSH2 0x442 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP4 GT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46697865645465726D537461636B3A2053554646494349454E545F42414C414E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x4345 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40C JUMP JUMPDEST TIMESTAMP PUSH2 0x4E2 DUP4 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0xFBA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 PUSH2 0x4F4 DUP6 CALLER PUSH2 0x9D5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x3 SLOAD PUSH2 0x513 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xF52 JUMP JUMPDEST POP JUMPDEST DUP1 SLOAD PUSH2 0x521 SWAP1 DUP5 PUSH2 0xFC6 JUMP JUMPDEST DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x144B JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x550 SWAP1 DUP5 PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x3 SLOAD PUSH2 0x56C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP6 PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x5FC JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5CB JUMPI PUSH2 0x5CB PUSH2 0x141F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x5F4 DUP2 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5AE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x608 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP5 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x4 DUP5 MUL PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF9 DUP2 ADD DUP1 SLOAD DUP1 DUP9 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE SWAP3 SWAP1 KECCAK256 SWAP4 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP4 ADD SWAP1 DUP2 SSTORE SWAP1 MLOAD SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD PUSH2 0x6A0 DUP4 PUSH1 0x3C PUSH2 0x148A JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE DUP2 DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP5 SWAP2 DUP7 SWAP2 DUP6 SWAP2 PUSH32 0x4D93067D0D628FE42C457623322C0F22AD92F71762A2EEBE06E2A0E7D2AA61C7 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH2 0x6EB PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x6F5 PUSH1 0x0 PUSH2 0xFD2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x703 DUP3 DUP5 PUSH2 0xFC6 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x722 JUMPI PUSH2 0x722 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP1 DUP4 KECCAK256 PUSH1 0x4 SWAP3 SWAP1 SWAP3 MUL ADD PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP6 ADD SLOAD SWAP4 SWAP7 POP SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 PUSH2 0x774 SWAP1 DUP7 PUSH2 0x144B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x784 JUMPI PUSH2 0x784 PUSH2 0x141F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0x818 JUMPI PUSH2 0x7AA DUP5 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x6F7 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP3 POP PUSH2 0x7F3 SWAP1 PUSH2 0x7ED PUSH1 0x3 DUP9 ADD PUSH2 0x7C5 PUSH1 0x1 DUP9 PUSH2 0x144B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x7D5 JUMPI PUSH2 0x7D5 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP6 SWAP1 PUSH2 0x1022 JUMP JUMPDEST SWAP1 PUSH2 0x1022 JUMP JUMPDEST SWAP6 POP PUSH2 0x80C PUSH1 0x64 PUSH2 0x806 DUP9 PUSH2 0x258 PUSH2 0x102E JUMP JUMPDEST SWAP1 PUSH2 0x102E JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x706 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SLOAD JUMPDEST PUSH2 0x829 PUSH1 0x1 DUP6 PUSH2 0x144B JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x945 JUMPI DUP2 PUSH2 0x8BA JUMPI PUSH2 0x875 DUP6 PUSH1 0x1 ADD SLOAD DUP8 PUSH1 0x3 ADD DUP4 PUSH1 0x1 PUSH2 0x84E SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x85E JUMPI PUSH2 0x85E PUSH2 0x141F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x6F7 JUMP JUMPDEST SWAP3 POP PUSH2 0x8AF DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x7ED DUP9 PUSH1 0x3 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x897 JUMPI PUSH2 0x897 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP7 SWAP1 PUSH2 0x1022 JUMP JUMPDEST SWAP7 POP PUSH1 0x1 SWAP2 POP PUSH2 0x933 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F7 DUP8 PUSH1 0x3 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8D4 JUMPI PUSH2 0x8D4 PUSH2 0x141F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x3 ADD DUP5 PUSH1 0x1 PUSH2 0x84E SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST SWAP1 POP PUSH2 0x923 PUSH2 0x91C DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x7ED DUP11 PUSH1 0x3 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x7D5 JUMPI PUSH2 0x7D5 PUSH2 0x141F JUMP JUMPDEST DUP10 SWAP1 PUSH2 0xFBA JUMP JUMPDEST SWAP8 POP PUSH2 0x92F DUP5 DUP3 PUSH2 0xFBA JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x93D DUP2 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x81E JUMP JUMPDEST POP PUSH2 0x980 PUSH1 0x3 DUP7 ADD PUSH2 0x958 PUSH1 0x1 DUP7 PUSH2 0x144B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x968 JUMPI PUSH2 0x968 PUSH2 0x141F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD NUMBER PUSH2 0x6F7 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP3 POP PUSH2 0x9B6 SWAP1 PUSH2 0x9AF SWAP1 PUSH2 0x7ED PUSH1 0x3 DUP10 ADD PUSH2 0x99F PUSH1 0x1 DUP10 PUSH2 0x144B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x897 JUMPI PUSH2 0x897 PUSH2 0x141F JUMP JUMPDEST DUP8 SWAP1 PUSH2 0xFBA JUMP JUMPDEST SWAP6 POP PUSH2 0x9C9 PUSH1 0x64 PUSH2 0x806 DUP9 PUSH2 0x258 PUSH2 0x102E JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x9EB JUMPI PUSH2 0x9EB PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP1 DUP4 KECCAK256 PUSH1 0x4 SWAP3 SWAP1 SWAP3 MUL ADD PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP6 ADD SLOAD SWAP4 SWAP7 POP SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 PUSH2 0xA3D SWAP1 DUP7 PUSH2 0x144B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA4D JUMPI PUSH2 0xA4D PUSH2 0x141F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0xA85 JUMPI PUSH1 0x2 DUP6 ADD SLOAD DUP5 SLOAD SWAP1 SWAP3 POP PUSH2 0x7F3 SWAP1 PUSH2 0x7ED PUSH1 0x3 DUP9 ADD PUSH2 0x7C5 PUSH1 0x1 DUP9 PUSH2 0x144B JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SLOAD JUMPDEST PUSH2 0xA96 PUSH1 0x1 DUP6 PUSH2 0x144B JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xC29 JUMPI DUP2 PUSH2 0xB4F JUMPI PUSH2 0xABB DUP6 PUSH1 0x1 ADD SLOAD DUP8 PUSH1 0x3 ADD DUP4 PUSH1 0x1 PUSH2 0x84E SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST SWAP3 POP DUP6 PUSH1 0x2 ADD SLOAD DUP4 GT ISZERO PUSH2 0xB24 JUMPI PUSH2 0xB04 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x7ED DUP9 PUSH1 0x3 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xAE9 JUMPI PUSH2 0xAE9 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP2 DUP3 MUL ADD SLOAD SWAP1 DUP11 ADD SLOAD SWAP1 PUSH2 0x1022 JUMP JUMPDEST SWAP7 POP PUSH2 0xB17 PUSH1 0x64 PUSH2 0x806 DUP10 PUSH2 0x258 PUSH2 0x102E JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x706 JUMP JUMPDEST PUSH2 0xB44 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x7ED DUP9 PUSH1 0x3 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x897 JUMPI PUSH2 0x897 PUSH2 0x141F JUMP JUMPDEST SWAP7 POP PUSH1 0x1 SWAP2 POP PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB69 DUP8 PUSH1 0x3 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8D4 JUMPI PUSH2 0x8D4 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x2 DUP9 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xB7B DUP3 DUP7 PUSH2 0xFBA JUMP JUMPDEST GT ISZERO PUSH2 0xBE4 JUMPI PUSH2 0xBC3 PUSH2 0x91C DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x7ED DUP11 PUSH1 0x3 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xBA4 JUMPI PUSH2 0xBA4 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP2 DUP3 MUL ADD SLOAD SWAP1 DUP13 ADD SLOAD PUSH2 0x7ED SWAP1 DUP11 PUSH2 0xFC6 JUMP JUMPDEST SWAP8 POP PUSH2 0xBD6 PUSH1 0x64 PUSH2 0x806 DUP11 PUSH2 0x258 PUSH2 0x102E JUMP JUMPDEST SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x706 JUMP JUMPDEST PUSH2 0xC07 PUSH2 0x91C DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x7ED DUP11 PUSH1 0x3 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x7D5 JUMPI PUSH2 0x7D5 PUSH2 0x141F JUMP JUMPDEST SWAP8 POP PUSH2 0xC13 DUP5 DUP3 PUSH2 0xFBA JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0xC21 DUP2 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA8B JUMP JUMPDEST POP DUP4 SLOAD PUSH2 0x9B6 SWAP1 PUSH2 0x9AF SWAP1 PUSH2 0x7ED PUSH1 0x3 DUP10 ADD PUSH2 0xC46 PUSH1 0x1 DUP10 PUSH2 0x144B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xC56 JUMPI PUSH2 0xC56 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP2 DUP3 MUL ADD SLOAD SWAP1 DUP11 ADD SLOAD PUSH2 0x7ED SWAP1 DUP9 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0xC7D PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xC92 JUMPI PUSH2 0xC92 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP8 DUP2 MSTORE TIMESTAMP DUP2 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x4 SWAP1 SWAP7 MUL SWAP1 SWAP4 ADD SWAP5 DUP6 ADD DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP9 MSTORE SWAP5 DUP8 KECCAK256 SWAP2 MLOAD PUSH1 0x2 SWAP1 SWAP6 MUL SWAP1 SWAP2 ADD SWAP4 DUP5 SSTORE SWAP2 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD SWAP1 SWAP3 POP DUP4 SWAP2 DUP6 SWAP2 PUSH32 0x6EC6D062A87C4B42FE40885D2E8955D89AB9275E14D24354DD2B6B130043BBA5 SWAP2 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD28 JUMPI PUSH2 0xD28 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP DUP3 PUSH2 0xD9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46697865645465726D537461636B3A2042656C6F77206D696E696D756D000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40C JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0xDF3 JUMPI TIMESTAMP PUSH2 0xDC0 DUP4 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0xFBA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 PUSH2 0xDD2 DUP6 CALLER PUSH2 0x9D5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xDF1 JUMPI PUSH1 0x3 SLOAD PUSH2 0xDF1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xF52 JUMP JUMPDEST POP JUMPDEST DUP1 SLOAD PUSH2 0xDFF SWAP1 DUP5 PUSH2 0xFBA JUMP JUMPDEST DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0xE1A SWAP2 SWAP1 PUSH2 0x144B JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0xE2E SWAP1 DUP5 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x3 SLOAD PUSH2 0xE4B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH1 0x20 ADD PUSH2 0x59C JUMP JUMPDEST PUSH2 0xE87 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40C JUMP JUMPDEST PUSH2 0xEF5 DUP2 PUSH2 0xFD2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xFB5 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1078 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x703 DUP3 DUP5 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x703 DUP3 DUP5 PUSH2 0x144B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x703 DUP3 DUP5 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x703 DUP3 DUP5 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1072 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0xF7E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CD DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x114A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xFB5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10EB SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH2 0xFB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40C JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1159 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1161 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x11C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x11DE SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x121B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1231 DUP8 DUP4 DUP4 DUP8 PUSH2 0x123C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x12AB JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x12A4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x12A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40C JUMP JUMPDEST POP DUP2 PUSH2 0x1159 JUMP JUMPDEST PUSH2 0x1159 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x12C0 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0xA0 DUP4 ADD DUP5 MLOAD DUP3 DUP6 ADD MSTORE DUP2 DUP6 ADD MLOAD PUSH1 0x40 DUP2 DUP2 DUP8 ADD MSTORE DUP1 DUP8 ADD MLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x60 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x80 DUP1 DUP8 ADD MSTORE DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0xC0 DUP9 ADD SWAP2 POP DUP6 DUP5 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP JUMPDEST DUP1 DUP5 LT ISZERO PUSH2 0x1364 JUMPI DUP5 MLOAD DUP1 MLOAD DUP4 MSTORE DUP7 ADD MLOAD DUP7 DUP4 ADD MSTORE SWAP4 DUP6 ADD SWAP4 PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH2 0x133B JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x139F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13A8 DUP4 PUSH2 0x1370 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x13FB PUSH1 0x20 DUP5 ADD PUSH2 0x1370 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x703 DUP3 PUSH2 0x1370 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x706 JUMPI PUSH2 0x706 PUSH2 0x1435 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x706 JUMPI PUSH2 0x706 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1483 JUMPI PUSH2 0x1483 PUSH2 0x1435 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x706 JUMPI PUSH2 0x706 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x14E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1507 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14EF JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1522 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x154B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 EQ 0xBE SWAP1 ADDRESS SWAP11 LOG2 0xD SWAP9 PUSH25 0x3B7100A2EC62CC11166D9F2879D3F77BF4A1AF136C8C64736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "306:9818:4:-:0;;;2411:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:2;936:18:0;:32::i;:::-;2466:4:4;:12;;-1:-1:-1;;;;;;2466:12:4;-1:-1:-1;;;;;2466:12:4;;;;;2491:13;2576:9;:16;;2624;;;;;2665:28;;;;;;;;;2673:2;2665:28;;2677:15;2624:16;2665:28;;;;;;2624:16;;;2653:6;;;:41;;;;;;;-1:-1:-1;2653:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;2718:13;2705:10;;;:26;2624:16;;;2742:10;;;;2763:8;;;;:12;2522:265;2491:13;2411:101;306:9818;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:305:7:-;99:6;152:2;140:9;131:7;127:23;123:32;120:52;;;168:1;165;158:12;120:52;194:16;;-1:-1:-1;;;;;239:31:7;;229:42;;219:70;;285:1;282;275:12;219:70;308:5;14:305;-1:-1:-1;;;14:305:7:o;:::-;306:9818:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BASE_798": {
									"entryPoint": null,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DENOMINATOR_795": {
									"entryPoint": null,
									"id": 795,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DENOMINATOR_TEST_801": {
									"entryPoint": null,
									"id": 801,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_2218": {
									"entryPoint": 4216,
									"id": 2218,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 3832,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_454": {
									"entryPoint": null,
									"id": 454,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_441": {
									"entryPoint": null,
									"id": 441,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 4050,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addPool_1863": {
									"entryPoint": 1536,
									"id": 1863,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_640": {
									"entryPoint": 4026,
									"id": 640,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateReward_1493": {
									"entryPoint": 2517,
									"id": 1493,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deposit_1625": {
									"entryPoint": 3347,
									"id": 1625,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@div_685": {
									"entryPoint": 4142,
									"id": 685,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_266": {
									"entryPoint": 4449,
									"id": 266,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_202": {
									"entryPoint": 4426,
									"id": 202,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAllAmount_1803": {
									"entryPoint": 1450,
									"id": 1803,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMultiplier_971": {
									"entryPoint": 1783,
									"id": 971,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPoolInfo_955": {
									"entryPoint": 707,
									"id": 955,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_130": {
									"entryPoint": null,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_670": {
									"entryPoint": 4130,
									"id": 670,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@para_839": {
									"entryPoint": null,
									"id": 839,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pendingReward_1201": {
									"entryPoint": 1804,
									"id": 1201,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolLength_942": {
									"entryPoint": null,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recoverWrongTokens_1777": {
									"entryPoint": 945,
									"id": 1777,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 1763,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_2061": {
									"entryPoint": 4154,
									"id": 2061,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_2035": {
									"entryPoint": 3922,
									"id": 2035,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setApr_1898": {
									"entryPoint": 3189,
									"id": 1898,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_655": {
									"entryPoint": 4038,
									"id": 655,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 3711,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_835": {
									"entryPoint": null,
									"id": 835,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_397": {
									"entryPoint": 4668,
									"id": 397,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdraw_1745": {
									"entryPoint": 1069,
									"id": 1745,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 5080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$2000__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_35c1107469db871bb90433534220e8bf05ffb140bd424f1bee70dc03556326ce__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2234c59bb9b24bd9eea0d80dd308fa837e87d8c6a3de9b68b0a40a73104da8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2efb8e85246ee1857a12421d86999caef163a0bf04c075c8ce124ac837b8f35__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_PoolInfo_$824_memory_ptr__to_t_struct$_PoolInfo_$824_memory_ptr__fromStack_reversed": {
									"entryPoint": 4851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5356,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 5233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5151,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9320:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "266:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "312:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "321:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "324:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "279:32:7"
															},
															"nodeType": "YulIf",
															"src": "276:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "347:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "347:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "337:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "232:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "243:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "255:6:7",
														"type": ""
													}
												],
												"src": "196:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "532:884:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "542:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "552:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "546:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "581:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "563:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "593:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "611:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "622:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:19:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "597:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "646:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "657:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "642:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "642:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "668:6:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "662:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:13:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "635:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "635:41:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "685:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "705:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "713:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "701:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "701:15:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "695:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:22:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "689:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "726:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "736:2:7",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "730:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "758:9:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "769:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "754:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "754:18:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "774:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "747:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "747:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "797:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "808:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "793:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "793:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "823:6:7"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "831:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "819:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "819:15:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "813:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "813:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "786:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:50:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "786:50:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "845:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "875:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "883:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "871:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "871:15:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "865:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "865:22:7"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "849:12:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "907:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "918:4:7",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "903:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "903:20:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "925:4:7",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "939:17:7",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "950:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "943:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "965:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "985:12:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "979:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:19:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "969:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1014:6:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1022:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1007:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1007:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1007:22:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1038:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1049:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1045:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1045:19:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1038:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1073:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "1091:12:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1105:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1087:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:21:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1077:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1117:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1126:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1121:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1185:205:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1199:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1215:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1209:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1209:13:7"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "1203:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1242:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "1253:2:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1247:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1247:9:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1235:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1235:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1235:22:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1281:3:7"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1286:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1277:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1277:12:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1301:2:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1305:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1297:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1297:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1291:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1291:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1270:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1270:40:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1270:40:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1323:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1334:3:7"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "1339:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1330:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1330:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1323:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1355:25:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1369:6:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1377:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1365:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1365:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1355:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1147:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1150:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1144:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1158:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1160:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1169:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1172:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1165:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1165:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1160:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1140:3:7",
																"statements": []
															},
															"src": "1136:254:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1399:11:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1407:3:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1399:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_PoolInfo_$824_memory_ptr__to_t_struct$_PoolInfo_$824_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "501:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "512:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "523:4:7",
														"type": ""
													}
												],
												"src": "381:1035:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1537:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1547:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1559:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1547:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1589:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1604:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1620:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1625:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1616:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1616:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1629:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1612:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1612:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1600:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1600:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1582:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$2000__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1506:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1517:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1528:4:7",
														"type": ""
													}
												],
												"src": "1421:218:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1693:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1703:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1725:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1712:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1703:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1795:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1804:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1807:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1797:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1797:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1797:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1754:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1765:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1780:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1785:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1776:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1776:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1789:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1772:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1772:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1761:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1761:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1751:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1751:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1744:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1744:50:7"
															},
															"nodeType": "YulIf",
															"src": "1741:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1672:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1683:5:7",
														"type": ""
													}
												],
												"src": "1644:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1909:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1955:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1964:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1967:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1957:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1957:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1957:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1930:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1939:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1926:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1926:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1951:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1922:32:7"
															},
															"nodeType": "YulIf",
															"src": "1919:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1980:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2009:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1990:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2028:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2055:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2066:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2051:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2051:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2038:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2038:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2028:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1867:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1878:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1890:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1898:6:7",
														"type": ""
													}
												],
												"src": "1822:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2168:161:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2214:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2223:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2226:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2216:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2216:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2216:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2189:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2198:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2185:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2185:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2210:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2181:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:32:7"
															},
															"nodeType": "YulIf",
															"src": "2178:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2239:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2262:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2249:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2249:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2281:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2308:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2319:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2304:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2304:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2291:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2291:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2281:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2126:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2137:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2149:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2157:6:7",
														"type": ""
													}
												],
												"src": "2081:248:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2435:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2445:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2457:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2468:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2453:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2453:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2445:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2487:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2502:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2518:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2523:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2514:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2514:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2527:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2510:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2510:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2498:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2498:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2480:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2480:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2404:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2415:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2426:4:7",
														"type": ""
													}
												],
												"src": "2334:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2629:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2675:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2650:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2659:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2646:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2646:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2671:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2642:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2642:32:7"
															},
															"nodeType": "YulIf",
															"src": "2639:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2700:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2723:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2710:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2742:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2775:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2786:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2771:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2771:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2752:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2752:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2742:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2587:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2598:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2610:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2618:6:7",
														"type": ""
													}
												],
												"src": "2542:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2958:162:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2968:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2980:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2991:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2976:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2968:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3010:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3021:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3003:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3003:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3003:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3048:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3059:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3044:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3064:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3037:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3037:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3037:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3091:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3102:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3087:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3087:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3107:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3080:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3080:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3080:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2911:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2922:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2930:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2938:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2949:4:7",
														"type": ""
													}
												],
												"src": "2801:319:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3195:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3241:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3250:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3253:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3243:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3243:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3243:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3216:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3225:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3212:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3237:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3208:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3208:32:7"
															},
															"nodeType": "YulIf",
															"src": "3205:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3266:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3295:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3276:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3276:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3266:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3161:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3172:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3184:6:7",
														"type": ""
													}
												],
												"src": "3125:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3348:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3365:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3372:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3377:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3368:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3368:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3358:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3358:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3358:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3405:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3408:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3398:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3398:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3398:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3432:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3422:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3422:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3422:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "3316:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3622:172:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3639:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3650:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3632:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3632:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3632:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3673:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3684:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3669:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3669:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3662:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3662:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3662:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3712:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3723:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3708:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3708:18:7"
																	},
																	{
																		"hexValue": "43616e6e6f74206265207374616b656420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3728:24:7",
																		"type": "",
																		"value": "Cannot be staked token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3701:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3701:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3762:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3774:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3785:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3770:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3762:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2234c59bb9b24bd9eea0d80dd308fa837e87d8c6a3de9b68b0a40a73104da8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3599:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3613:4:7",
														"type": ""
													}
												],
												"src": "3448:346:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3973:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3990:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4001:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3983:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3983:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3983:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4024:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4035:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4020:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4020:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4013:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4013:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4013:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4063:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4074:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4059:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4059:18:7"
																	},
																	{
																		"hexValue": "46697865645465726d537461636b3a2053554646494349454e545f42414c414e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4079:34:7",
																		"type": "",
																		"value": "FixedTermStack: SUFFICIENT_BALAN"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4052:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4052:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4052:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4134:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4145:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4130:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4130:18:7"
																	},
																	{
																		"hexValue": "4345",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4150:4:7",
																		"type": "",
																		"value": "CE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4123:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4123:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4123:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4164:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4176:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4187:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4172:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4172:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4164:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_35c1107469db871bb90433534220e8bf05ffb140bd424f1bee70dc03556326ce__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3950:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3964:4:7",
														"type": ""
													}
												],
												"src": "3799:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4234:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4251:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4258:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4263:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4254:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4254:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4244:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4244:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4244:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4291:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4294:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4284:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4284:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4284:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4315:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4318:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4308:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4308:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4308:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4202:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4383:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4393:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4405:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4408:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4401:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4401:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4393:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4434:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4436:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4436:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4436:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4425:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4431:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4422:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4422:11:7"
															},
															"nodeType": "YulIf",
															"src": "4419:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4365:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4368:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4374:4:7",
														"type": ""
													}
												],
												"src": "4334:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4515:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4525:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4536:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4539:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4532:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4564:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4566:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4566:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4566:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4556:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4559:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4553:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4553:10:7"
															},
															"nodeType": "YulIf",
															"src": "4550:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4498:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4501:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4507:3:7",
														"type": ""
													}
												],
												"src": "4467:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4644:88:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4675:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4677:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4677:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4677:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4660:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4671:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4667:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4667:6:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4657:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4657:17:7"
															},
															"nodeType": "YulIf",
															"src": "4654:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4706:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4717:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4724:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4713:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4713:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4706:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4626:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4636:3:7",
														"type": ""
													}
												],
												"src": "4597:135:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4789:116:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4799:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4814:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4817:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4810:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4810:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4799:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4877:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4879:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4879:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4879:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4848:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4841:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4841:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4855:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4862:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4871:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4858:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4858:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4852:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4852:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4838:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4838:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4831:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4831:45:7"
															},
															"nodeType": "YulIf",
															"src": "4828:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4768:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4771:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4777:7:7",
														"type": ""
													}
												],
												"src": "4737:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5084:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5101:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5112:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5094:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5094:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5094:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5135:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5146:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5131:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5131:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5151:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5124:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5124:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5174:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5185:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5170:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5170:18:7"
																	},
																	{
																		"hexValue": "46697865645465726d537461636b3a2042656c6f77206d696e696d756d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5190:31:7",
																		"type": "",
																		"value": "FixedTermStack: Below minimum"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5163:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5163:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5163:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5231:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5243:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5254:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5239:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5239:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5231:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2efb8e85246ee1857a12421d86999caef163a0bf04c075c8ce124ac837b8f35__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5061:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5075:4:7",
														"type": ""
													}
												],
												"src": "4910:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5442:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5459:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5470:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5452:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5452:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5452:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5493:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5504:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5489:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5489:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5509:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5482:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5482:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5532:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5543:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5528:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5528:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5548:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5521:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5521:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5521:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5603:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5614:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5599:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5599:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5619:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5592:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5592:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5592:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5637:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5649:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5660:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5645:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5645:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5637:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5419:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5433:4:7",
														"type": ""
													}
												],
												"src": "5268:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5849:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5866:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5877:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5859:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5859:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5859:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5900:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5911:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5896:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5896:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5916:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5889:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5889:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5889:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5939:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5950:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5935:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5935:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5955:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5928:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5928:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5928:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5999:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6011:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6022:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6007:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6007:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5999:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5826:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5840:4:7",
														"type": ""
													}
												],
												"src": "5675:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6165:145:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6175:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6187:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6198:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6183:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6183:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6175:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6217:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6232:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6248:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6253:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6244:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6244:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6257:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6240:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6240:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6228:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6228:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6210:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6210:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6210:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6281:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6292:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6277:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6277:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6297:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6270:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6270:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6270:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6126:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6137:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6145:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6156:4:7",
														"type": ""
													}
												],
												"src": "6036:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6361:171:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6392:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6413:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6420:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6425:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6416:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6416:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6406:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6406:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6406:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6457:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6460:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6450:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6450:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6450:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6485:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6488:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6478:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6478:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6478:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6381:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6374:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6374:9:7"
															},
															"nodeType": "YulIf",
															"src": "6371:132:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6512:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6521:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6524:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6517:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6517:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6512:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6346:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6349:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6355:1:7",
														"type": ""
													}
												],
												"src": "6315:217:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6694:218:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6704:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6716:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6727:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6712:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6712:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6704:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6739:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6757:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6762:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6753:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6753:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6766:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6749:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6749:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6743:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6784:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6799:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6807:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6795:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6795:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6777:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6777:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6777:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6831:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6842:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6827:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6827:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6851:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6859:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6847:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6847:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6820:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6820:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6820:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6883:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6894:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6879:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6879:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6899:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6872:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6872:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6872:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6647:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6658:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6666:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6674:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6685:4:7",
														"type": ""
													}
												],
												"src": "6537:375:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6995:199:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7041:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7050:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7053:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7043:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7043:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7043:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7016:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7025:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7012:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7012:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7037:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7008:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7008:32:7"
															},
															"nodeType": "YulIf",
															"src": "7005:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7066:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7085:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7079:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7079:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7070:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7148:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7157:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7160:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7150:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7150:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7150:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7117:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7138:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7131:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7131:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7124:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7124:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7114:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7114:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7107:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7107:40:7"
															},
															"nodeType": "YulIf",
															"src": "7104:60:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7173:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7183:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7173:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6961:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6972:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6984:6:7",
														"type": ""
													}
												],
												"src": "6917:277:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7373:232:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7390:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7401:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7383:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7383:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7383:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7424:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7435:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7420:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7420:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7440:2:7",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7413:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7413:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7413:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7463:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7474:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7459:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7459:18:7"
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7479:34:7",
																		"type": "",
																		"value": "SafeBEP20: BEP20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7452:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7452:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7452:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7534:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7545:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7530:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7530:18:7"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7550:12:7",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7523:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7523:40:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7523:40:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7572:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7584:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7595:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7580:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7580:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7572:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7350:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7364:4:7",
														"type": ""
													}
												],
												"src": "7199:406:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7784:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7801:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7812:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7794:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7794:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7835:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7846:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7831:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7831:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7851:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7824:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7824:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7824:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7874:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7885:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7870:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7870:18:7"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7890:34:7",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7863:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7863:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7863:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7945:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7956:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7941:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7941:18:7"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7961:8:7",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7934:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7934:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7934:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7979:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7991:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8002:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7987:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7987:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7979:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7761:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7775:4:7",
														"type": ""
													}
												],
												"src": "7610:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8083:184:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8093:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8102:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8097:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8162:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8187:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8192:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8183:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8183:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "8206:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8211:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8202:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8202:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8196:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8196:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8176:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8176:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8176:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8123:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8126:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8120:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8120:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8134:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8136:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8145:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8148:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8141:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8141:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8136:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8116:3:7",
																"statements": []
															},
															"src": "8112:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8245:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8250:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8241:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8241:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8259:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8234:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8234:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8061:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8066:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8071:6:7",
														"type": ""
													}
												],
												"src": "8017:250:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8409:150:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8419:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8439:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8433:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8433:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8423:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8494:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8502:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8490:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8490:17:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8509:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8514:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8455:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8455:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8455:66:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8530:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8541:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8546:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8537:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8537:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8530:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8385:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8390:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8401:3:7",
														"type": ""
													}
												],
												"src": "8272:287:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8738:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8755:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8766:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8748:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8748:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8748:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8789:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8800:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8785:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8785:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8805:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8778:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8778:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8778:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8828:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8839:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8824:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8824:18:7"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8844:31:7",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8817:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8817:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8817:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8885:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8897:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8908:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8893:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8893:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8885:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8715:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8729:4:7",
														"type": ""
													}
												],
												"src": "8564:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9043:275:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9060:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9071:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9053:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9053:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9053:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9083:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9103:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9097:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9097:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9087:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9130:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9141:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9126:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9126:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9146:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9119:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9119:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9119:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9201:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9209:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9197:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9197:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9218:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9229:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9214:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9214:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9234:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9162:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9162:79:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9162:79:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9250:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9266:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "9285:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9293:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9281:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9281:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9302:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9298:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9298:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "9277:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9277:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9262:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9262:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9309:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9258:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9258:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9250:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9012:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9023:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9034:4:7",
														"type": ""
													}
												],
												"src": "8922:396:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_struct$_PoolInfo_$824_memory_ptr__to_t_struct$_PoolInfo_$824_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let tail_1 := add(headStart, 160)\n        mstore(add(headStart, _1), mload(value0))\n        let _2 := mload(add(value0, _1))\n        let _3 := 64\n        mstore(add(headStart, _3), _2)\n        mstore(add(headStart, 96), mload(add(value0, _3)))\n        let memberValue0 := mload(add(value0, 96))\n        mstore(add(headStart, 0x80), 0x80)\n        let pos := tail_1\n        let length := mload(memberValue0)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(memberValue0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _4 := mload(srcPtr)\n            mstore(pos, mload(_4))\n            mstore(add(pos, _1), mload(add(_4, _1)))\n            pos := add(pos, _3)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_contract$_IBEP20_$2000__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_d2234c59bb9b24bd9eea0d80dd308fa837e87d8c6a3de9b68b0a40a73104da8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Cannot be staked token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_35c1107469db871bb90433534220e8bf05ffb140bd424f1bee70dc03556326ce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"FixedTermStack: SUFFICIENT_BALAN\")\n        mstore(add(headStart, 96), \"CE\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_d2efb8e85246ee1857a12421d86999caef163a0bf04c075c8ce124ac837b8f35__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"FixedTermStack: Below minimum\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeBEP20: BEP20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c80638dbb1e3a116100ad578063cfbb3dbd11610071578063cfbb3dbd14610279578063e2bbb1581461028c578063e3d0b2bf1461029f578063ec342ad0146102a8578063f2fde38b146102b057600080fd5b80638dbb1e3a146101e4578063918f8674146101f757806393f1a40b1461020257806398969e8214610253578063a18f07a01461026657600080fd5b8063441a3e70116100f4578063441a3e701461019d57806351166d78146101b05780636d89dbc5146101b8578063715018a6146101cb5780638da5cb5b146101d357600080fd5b8063081e3eda146101265780632f380b351461013d5780633e3cca901461015d5780633f138d4b14610188575b600080fd5b6001545b6040519081526020015b60405180910390f35b61015061014b3660046112da565b6102c3565b60405161013491906112f3565b600354610170906001600160a01b031681565b6040516001600160a01b039091168152602001610134565b61019b61019636600461138c565b6103b1565b005b61019b6101ab3660046113b6565b61042d565b61012a6105aa565b61019b6101c63660046113b6565b610600565b61019b6106e3565b6000546001600160a01b0316610170565b61012a6101f23660046113b6565b6106f7565b61012a6301e1338081565b6102386102103660046113d8565b6002602081815260009384526040808520909152918352912080546001820154919092015483565b60408051938452602084019290925290820152606001610134565b61012a6102613660046113d8565b61070c565b61012a6102743660046113d8565b6109d5565b61019b6102873660046113b6565b610c75565b61019b61029a3660046113b6565b610d13565b61012a61025881565b61012a606481565b61019b6102be366004611404565b610e7f565b6102ee6040518060800160405280600081526020016000815260200160008152602001606081525090565b600182815481106103015761030161141f565b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156103a35783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061035d565b505050915250909392505050565b6103b9610ef8565b6003546001600160a01b03908116908316036104155760405162461bcd60e51b815260206004820152601660248201527521b0b73737ba1031329039ba30b5b2b2103a37b5b2b760511b60448201526064015b60405180910390fd5b6104296001600160a01b0383163383610f52565b5050565b6000600183815481106104425761044261141f565b6000918252602080832086845260028252604080852033865290925292208054600490920290920192508311156104c65760405162461bcd60e51b815260206004820152602260248201527f46697865645465726d537461636b3a2053554646494349454e545f42414c414e604482015261434560f01b606482015260840161040c565b426104e283600201548360010154610fba90919063ffffffff16565b11156105155760006104f485336109d5565b9050801561051357600354610513906001600160a01b03163383610f52565b505b80546105219084610fc6565b815542600180830191909155600383015461053c919061144b565b600282015560018201546105509084610fc6565b600183015560035461056c906001600160a01b03163385610f52565b604051838152849033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906020015b60405180910390a350505050565b6000805b6001548110156105fc57600181815481106105cb576105cb61141f565b906000526020600020906004020160010154826105e8919061145e565b9150806105f481611471565b9150506105ae565b5090565b610608610ef8565b60018054808201825560408051808201909152848152426020808301918252600484027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf98101805480880182556000918252929020935160029092029093019081559051930192909255907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6016106a083603c61148a565b60028201558181556000600182018190556040518491869185917f4d93067d0d628fe42c457623322c0f22ad92f71762a2eebe06e2a0e7d2aa61c791a450505050565b6106eb610ef8565b6106f56000610fd2565b565b60006107038284610fc6565b90505b92915050565b600080600184815481106107225761072261141f565b600091825260208083208784526002825260408085206001600160a01b03891686529092529083206004929092020160038101805460018085015493965093949093909283929091610774908661144b565b815481106107845761078461141f565b9060005260206000209060020201600101541015610818576107aa8460010154426106f7565b84549092506107f3906107ed600388016107c560018861144b565b815481106107d5576107d561141f565b60009182526020909120600290910201548590611022565b90611022565b955061080c60646108068861025861102e565b9061102e565b95505050505050610706565b60028401545b61082960018561144b565b81101561094557816108ba5761087585600101548760030183600161084e919061145e565b8154811061085e5761085e61141f565b9060005260206000209060020201600101546106f7565b92506108af85600001546107ed8860030184815481106108975761089761141f565b60009182526020909120600290910201548690611022565b965060019150610933565b60006108f78760030183815481106108d4576108d461141f565b9060005260206000209060020201600101548860030184600161084e919061145e565b905061092361091c87600001546107ed8a60030186815481106107d5576107d561141f565b8990610fba565b975061092f8482610fba565b9350505b8061093d81611471565b91505061081e565b506109806003860161095860018661144b565b815481106109685761096861141f565b906000526020600020906002020160010154436106f7565b84549092506109b6906109af906107ed6003890161099f60018961144b565b815481106108975761089761141f565b8790610fba565b95506109c960646108068861025861102e565b98975050505050505050565b600080600184815481106109eb576109eb61141f565b600091825260208083208784526002825260408085206001600160a01b03891686529092529083206004929092020160038101805460018085015493965093949093909283929091610a3d908661144b565b81548110610a4d57610a4d61141f565b9060005260206000209060020201600101541015610a8557600285015484549092506107f3906107ed600388016107c560018861144b565b60028401545b610a9660018561144b565b811015610c295781610b4f57610abb85600101548760030183600161084e919061145e565b92508560020154831115610b2457610b0485600001546107ed886003018481548110610ae957610ae961141f565b6000918252602090912060029182020154908a015490611022565b9650610b1760646108068961025861102e565b9650505050505050610706565b610b4485600001546107ed8860030184815481106108975761089761141f565b965060019150610c17565b6000610b698760030183815481106108d4576108d461141f565b6002880154909150610b7b8286610fba565b1115610be457610bc361091c87600001546107ed8a6003018681548110610ba457610ba461141f565b6000918252602090912060029182020154908c01546107ed908a610fc6565b9750610bd660646108068a61025861102e565b975050505050505050610706565b610c0761091c87600001546107ed8a60030186815481106107d5576107d561141f565b9750610c138482610fba565b9350505b80610c2181611471565b915050610a8b565b5083546109b6906109af906107ed60038901610c4660018961144b565b81548110610c5657610c5661141f565b6000918252602090912060029182020154908a01546107ed9088610fc6565b610c7d610ef8565b600060018381548110610c9257610c9261141f565b600091825260208083206040805180820182528781524281850190815260036004909602909301948501805460018181018355918852948720915160029095029091019384559151929091019190915551909250839185917f6ec6d062a87c4b42fe40885d2e8955d89ab9275e14d24354dd2b6b130043bba59190a3505050565b600060018381548110610d2857610d2861141f565b6000918252602080832086845260028252604080852033865290925292206004909102909101915082610d9d5760405162461bcd60e51b815260206004820152601d60248201527f46697865645465726d537461636b3a2042656c6f77206d696e696d756d000000604482015260640161040c565b805415610df35742610dc083600201548360010154610fba90919063ffffffff16565b1115610df3576000610dd285336109d5565b90508015610df157600354610df1906001600160a01b03163383610f52565b505b8054610dff9084610fba565b8155426001808301919091556003830154610e1a919061144b565b60028201556001820154610e2e9084610fba565b6001830155600354610e4b906001600160a01b031633308661103a565b604051838152849033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200161059c565b610e87610ef8565b6001600160a01b038116610eec5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161040c565b610ef581610fd2565b50565b6000546001600160a01b031633146106f55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040c565b6040516001600160a01b038316602482015260448101829052610fb590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611078565b505050565b6000610703828461145e565b6000610703828461144b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610703828461148a565b600061070382846114a1565b6040516001600160a01b03808516602483015283166044820152606481018290526110729085906323b872dd60e01b90608401610f7e565b50505050565b60006110cd826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661114a9092919063ffffffff16565b805190915015610fb557808060200190518101906110eb91906114c3565b610fb55760405162461bcd60e51b815260206004820152602a60248201527f5361666542455032303a204245503230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161040c565b60606111598484600085611161565b949350505050565b6060824710156111c25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161040c565b600080866001600160a01b031685876040516111de9190611510565b60006040518083038185875af1925050503d806000811461121b576040519150601f19603f3d011682016040523d82523d6000602084013e611220565b606091505b50915091506112318783838761123c565b979650505050505050565b606083156112ab5782516000036112a4576001600160a01b0385163b6112a45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161040c565b5081611159565b61115983838151156112c05781518083602001fd5b8060405162461bcd60e51b815260040161040c919061152c565b6000602082840312156112ec57600080fd5b5035919050565b6000602080835260a0830184518285015281850151604081818701528087015160608701526060870151915060808087015282825180855260c0880191508584019450600093505b80841015611364578451805183528601518683015293850193600193909301929082019061133b565b50979650505050505050565b80356001600160a01b038116811461138757600080fd5b919050565b6000806040838503121561139f57600080fd5b6113a883611370565b946020939093013593505050565b600080604083850312156113c957600080fd5b50508035926020909101359150565b600080604083850312156113eb57600080fd5b823591506113fb60208401611370565b90509250929050565b60006020828403121561141657600080fd5b61070382611370565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561070657610706611435565b8082018082111561070657610706611435565b60006001820161148357611483611435565b5060010190565b808202811582820484141761070657610706611435565b6000826114be57634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156114d557600080fd5b815180151581146114e557600080fd5b9392505050565b60005b838110156115075781810151838201526020016114ef565b50506000910152565b600082516115228184602087016114ec565b9190910192915050565b602081526000825180602084015261154b8160408501602087016114ec565b601f01601f1916919091016040019291505056fea26469706673582212209e14be90309aa20d98783b7100a2ec62cc11166d9f2879d3f77bf4a1af136c8c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DBB1E3A GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCFBB3DBD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCFBB3DBD EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE3D0B2BF EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xEC342AD0 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x918F8674 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x98969E82 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xA18F07A0 EQ PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x51166D78 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x6D89DBC5 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x2F380B35 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x3E3CCA90 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x3F138D4B EQ PUSH2 0x188 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x170 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x138C JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH2 0x12A PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x19B PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x170 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x12A PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH2 0x12A PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x258 DUP2 JUMP JUMPDEST PUSH2 0x12A PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x2EE PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x301 JUMPI PUSH2 0x301 PUSH2 0x141F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3A3 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x35D JUMP JUMPDEST POP POP POP SWAP2 MSTORE POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3B9 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B73737BA1031329039BA30B5B2B2103A37B5B2B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x429 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0xF52 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x442 JUMPI PUSH2 0x442 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP4 GT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46697865645465726D537461636B3A2053554646494349454E545F42414C414E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x4345 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40C JUMP JUMPDEST TIMESTAMP PUSH2 0x4E2 DUP4 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0xFBA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 PUSH2 0x4F4 DUP6 CALLER PUSH2 0x9D5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x3 SLOAD PUSH2 0x513 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xF52 JUMP JUMPDEST POP JUMPDEST DUP1 SLOAD PUSH2 0x521 SWAP1 DUP5 PUSH2 0xFC6 JUMP JUMPDEST DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x144B JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x550 SWAP1 DUP5 PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x3 SLOAD PUSH2 0x56C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP6 PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x5FC JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5CB JUMPI PUSH2 0x5CB PUSH2 0x141F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x5F4 DUP2 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5AE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x608 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP5 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x4 DUP5 MUL PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF9 DUP2 ADD DUP1 SLOAD DUP1 DUP9 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE SWAP3 SWAP1 KECCAK256 SWAP4 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP4 ADD SWAP1 DUP2 SSTORE SWAP1 MLOAD SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD PUSH2 0x6A0 DUP4 PUSH1 0x3C PUSH2 0x148A JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE DUP2 DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP5 SWAP2 DUP7 SWAP2 DUP6 SWAP2 PUSH32 0x4D93067D0D628FE42C457623322C0F22AD92F71762A2EEBE06E2A0E7D2AA61C7 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH2 0x6EB PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x6F5 PUSH1 0x0 PUSH2 0xFD2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x703 DUP3 DUP5 PUSH2 0xFC6 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x722 JUMPI PUSH2 0x722 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP1 DUP4 KECCAK256 PUSH1 0x4 SWAP3 SWAP1 SWAP3 MUL ADD PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP6 ADD SLOAD SWAP4 SWAP7 POP SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 PUSH2 0x774 SWAP1 DUP7 PUSH2 0x144B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x784 JUMPI PUSH2 0x784 PUSH2 0x141F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0x818 JUMPI PUSH2 0x7AA DUP5 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x6F7 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP3 POP PUSH2 0x7F3 SWAP1 PUSH2 0x7ED PUSH1 0x3 DUP9 ADD PUSH2 0x7C5 PUSH1 0x1 DUP9 PUSH2 0x144B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x7D5 JUMPI PUSH2 0x7D5 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP6 SWAP1 PUSH2 0x1022 JUMP JUMPDEST SWAP1 PUSH2 0x1022 JUMP JUMPDEST SWAP6 POP PUSH2 0x80C PUSH1 0x64 PUSH2 0x806 DUP9 PUSH2 0x258 PUSH2 0x102E JUMP JUMPDEST SWAP1 PUSH2 0x102E JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x706 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SLOAD JUMPDEST PUSH2 0x829 PUSH1 0x1 DUP6 PUSH2 0x144B JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x945 JUMPI DUP2 PUSH2 0x8BA JUMPI PUSH2 0x875 DUP6 PUSH1 0x1 ADD SLOAD DUP8 PUSH1 0x3 ADD DUP4 PUSH1 0x1 PUSH2 0x84E SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x85E JUMPI PUSH2 0x85E PUSH2 0x141F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x6F7 JUMP JUMPDEST SWAP3 POP PUSH2 0x8AF DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x7ED DUP9 PUSH1 0x3 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x897 JUMPI PUSH2 0x897 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP7 SWAP1 PUSH2 0x1022 JUMP JUMPDEST SWAP7 POP PUSH1 0x1 SWAP2 POP PUSH2 0x933 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F7 DUP8 PUSH1 0x3 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8D4 JUMPI PUSH2 0x8D4 PUSH2 0x141F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x3 ADD DUP5 PUSH1 0x1 PUSH2 0x84E SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST SWAP1 POP PUSH2 0x923 PUSH2 0x91C DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x7ED DUP11 PUSH1 0x3 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x7D5 JUMPI PUSH2 0x7D5 PUSH2 0x141F JUMP JUMPDEST DUP10 SWAP1 PUSH2 0xFBA JUMP JUMPDEST SWAP8 POP PUSH2 0x92F DUP5 DUP3 PUSH2 0xFBA JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x93D DUP2 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x81E JUMP JUMPDEST POP PUSH2 0x980 PUSH1 0x3 DUP7 ADD PUSH2 0x958 PUSH1 0x1 DUP7 PUSH2 0x144B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x968 JUMPI PUSH2 0x968 PUSH2 0x141F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD NUMBER PUSH2 0x6F7 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP3 POP PUSH2 0x9B6 SWAP1 PUSH2 0x9AF SWAP1 PUSH2 0x7ED PUSH1 0x3 DUP10 ADD PUSH2 0x99F PUSH1 0x1 DUP10 PUSH2 0x144B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x897 JUMPI PUSH2 0x897 PUSH2 0x141F JUMP JUMPDEST DUP8 SWAP1 PUSH2 0xFBA JUMP JUMPDEST SWAP6 POP PUSH2 0x9C9 PUSH1 0x64 PUSH2 0x806 DUP9 PUSH2 0x258 PUSH2 0x102E JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x9EB JUMPI PUSH2 0x9EB PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP1 DUP4 KECCAK256 PUSH1 0x4 SWAP3 SWAP1 SWAP3 MUL ADD PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP6 ADD SLOAD SWAP4 SWAP7 POP SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 PUSH2 0xA3D SWAP1 DUP7 PUSH2 0x144B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA4D JUMPI PUSH2 0xA4D PUSH2 0x141F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0xA85 JUMPI PUSH1 0x2 DUP6 ADD SLOAD DUP5 SLOAD SWAP1 SWAP3 POP PUSH2 0x7F3 SWAP1 PUSH2 0x7ED PUSH1 0x3 DUP9 ADD PUSH2 0x7C5 PUSH1 0x1 DUP9 PUSH2 0x144B JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SLOAD JUMPDEST PUSH2 0xA96 PUSH1 0x1 DUP6 PUSH2 0x144B JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xC29 JUMPI DUP2 PUSH2 0xB4F JUMPI PUSH2 0xABB DUP6 PUSH1 0x1 ADD SLOAD DUP8 PUSH1 0x3 ADD DUP4 PUSH1 0x1 PUSH2 0x84E SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST SWAP3 POP DUP6 PUSH1 0x2 ADD SLOAD DUP4 GT ISZERO PUSH2 0xB24 JUMPI PUSH2 0xB04 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x7ED DUP9 PUSH1 0x3 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xAE9 JUMPI PUSH2 0xAE9 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP2 DUP3 MUL ADD SLOAD SWAP1 DUP11 ADD SLOAD SWAP1 PUSH2 0x1022 JUMP JUMPDEST SWAP7 POP PUSH2 0xB17 PUSH1 0x64 PUSH2 0x806 DUP10 PUSH2 0x258 PUSH2 0x102E JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x706 JUMP JUMPDEST PUSH2 0xB44 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x7ED DUP9 PUSH1 0x3 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x897 JUMPI PUSH2 0x897 PUSH2 0x141F JUMP JUMPDEST SWAP7 POP PUSH1 0x1 SWAP2 POP PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB69 DUP8 PUSH1 0x3 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8D4 JUMPI PUSH2 0x8D4 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x2 DUP9 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xB7B DUP3 DUP7 PUSH2 0xFBA JUMP JUMPDEST GT ISZERO PUSH2 0xBE4 JUMPI PUSH2 0xBC3 PUSH2 0x91C DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x7ED DUP11 PUSH1 0x3 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xBA4 JUMPI PUSH2 0xBA4 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP2 DUP3 MUL ADD SLOAD SWAP1 DUP13 ADD SLOAD PUSH2 0x7ED SWAP1 DUP11 PUSH2 0xFC6 JUMP JUMPDEST SWAP8 POP PUSH2 0xBD6 PUSH1 0x64 PUSH2 0x806 DUP11 PUSH2 0x258 PUSH2 0x102E JUMP JUMPDEST SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x706 JUMP JUMPDEST PUSH2 0xC07 PUSH2 0x91C DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x7ED DUP11 PUSH1 0x3 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x7D5 JUMPI PUSH2 0x7D5 PUSH2 0x141F JUMP JUMPDEST SWAP8 POP PUSH2 0xC13 DUP5 DUP3 PUSH2 0xFBA JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0xC21 DUP2 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA8B JUMP JUMPDEST POP DUP4 SLOAD PUSH2 0x9B6 SWAP1 PUSH2 0x9AF SWAP1 PUSH2 0x7ED PUSH1 0x3 DUP10 ADD PUSH2 0xC46 PUSH1 0x1 DUP10 PUSH2 0x144B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xC56 JUMPI PUSH2 0xC56 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP2 DUP3 MUL ADD SLOAD SWAP1 DUP11 ADD SLOAD PUSH2 0x7ED SWAP1 DUP9 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0xC7D PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xC92 JUMPI PUSH2 0xC92 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP8 DUP2 MSTORE TIMESTAMP DUP2 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x4 SWAP1 SWAP7 MUL SWAP1 SWAP4 ADD SWAP5 DUP6 ADD DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP9 MSTORE SWAP5 DUP8 KECCAK256 SWAP2 MLOAD PUSH1 0x2 SWAP1 SWAP6 MUL SWAP1 SWAP2 ADD SWAP4 DUP5 SSTORE SWAP2 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD SWAP1 SWAP3 POP DUP4 SWAP2 DUP6 SWAP2 PUSH32 0x6EC6D062A87C4B42FE40885D2E8955D89AB9275E14D24354DD2B6B130043BBA5 SWAP2 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD28 JUMPI PUSH2 0xD28 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP DUP3 PUSH2 0xD9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46697865645465726D537461636B3A2042656C6F77206D696E696D756D000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40C JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0xDF3 JUMPI TIMESTAMP PUSH2 0xDC0 DUP4 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0xFBA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 PUSH2 0xDD2 DUP6 CALLER PUSH2 0x9D5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xDF1 JUMPI PUSH1 0x3 SLOAD PUSH2 0xDF1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xF52 JUMP JUMPDEST POP JUMPDEST DUP1 SLOAD PUSH2 0xDFF SWAP1 DUP5 PUSH2 0xFBA JUMP JUMPDEST DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0xE1A SWAP2 SWAP1 PUSH2 0x144B JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0xE2E SWAP1 DUP5 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x3 SLOAD PUSH2 0xE4B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH1 0x20 ADD PUSH2 0x59C JUMP JUMPDEST PUSH2 0xE87 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40C JUMP JUMPDEST PUSH2 0xEF5 DUP2 PUSH2 0xFD2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xFB5 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1078 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x703 DUP3 DUP5 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x703 DUP3 DUP5 PUSH2 0x144B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x703 DUP3 DUP5 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x703 DUP3 DUP5 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1072 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0xF7E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CD DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x114A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xFB5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10EB SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH2 0xFB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40C JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1159 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1161 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x11C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x11DE SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x121B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1231 DUP8 DUP4 DUP4 DUP8 PUSH2 0x123C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x12AB JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x12A4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x12A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40C JUMP JUMPDEST POP DUP2 PUSH2 0x1159 JUMP JUMPDEST PUSH2 0x1159 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x12C0 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0xA0 DUP4 ADD DUP5 MLOAD DUP3 DUP6 ADD MSTORE DUP2 DUP6 ADD MLOAD PUSH1 0x40 DUP2 DUP2 DUP8 ADD MSTORE DUP1 DUP8 ADD MLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x60 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x80 DUP1 DUP8 ADD MSTORE DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0xC0 DUP9 ADD SWAP2 POP DUP6 DUP5 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP JUMPDEST DUP1 DUP5 LT ISZERO PUSH2 0x1364 JUMPI DUP5 MLOAD DUP1 MLOAD DUP4 MSTORE DUP7 ADD MLOAD DUP7 DUP4 ADD MSTORE SWAP4 DUP6 ADD SWAP4 PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH2 0x133B JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x139F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13A8 DUP4 PUSH2 0x1370 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x13FB PUSH1 0x20 DUP5 ADD PUSH2 0x1370 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x703 DUP3 PUSH2 0x1370 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x706 JUMPI PUSH2 0x706 PUSH2 0x1435 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x706 JUMPI PUSH2 0x706 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1483 JUMPI PUSH2 0x1483 PUSH2 0x1435 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x706 JUMPI PUSH2 0x706 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x14E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1507 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14EF JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1522 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x154B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 EQ 0xBE SWAP1 ADDRESS SWAP11 LOG2 0xD SWAP9 PUSH25 0x3B7100A2EC62CC11166D9F2879D3F77BF4A1AF136C8C64736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "306:9818:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:96;2929:9;:16;2857:96;;;160:25:7;;;148:2;133:18;2857:96:4;;;;;;;;2961:120;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1972:18::-;;;;;-1:-1:-1;;;;;1972:18:4;;;;;;-1:-1:-1;;;;;1600:32:7;;;1582:51;;1570:2;1555:18;1972::4;1421:218:7;8920:260:4;;;;;;:::i;:::-;;:::i;:::-;;8014:896;;;;;;:::i;:::-;;:::i;9188:179::-;;;:::i;9377:358::-;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;3187:121:4;;;;;;:::i;:::-;;:::i;536:46::-;;574:8;536:46;;1851:66;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3003:25:7;;;3059:2;3044:18;;3037:34;;;;3087:18;;;3080:34;2991:2;2976:18;1851:66:4;2801:319:7;3397:1435:4;;;;;;:::i;:::-;;:::i;4842:1942::-;;;;;;:::i;:::-;;:::i;9854:263::-;;;;;;:::i;:::-;;:::i;6874:1065::-;;;;;;:::i;:::-;;:::i;636:53::-;;679:10;636:53;;593:34;;624:3;593:34;;2081:198:0;;;;;;:::i;:::-;;:::i;2961:120:4:-;3019:20;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3019:20:4;3058:9;3068:4;3058:15;;;;;;;;:::i;:::-;;;;;;;;;;;3051:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3051:22:4;;-1:-1:-1;3051:22:4;;2961:120;-1:-1:-1;;;2961:120:4:o;8920:260::-;1094:13:0;:11;:13::i;:::-;9056:4:4::1;::::0;-1:-1:-1;;;;;9056:4:4;;::::1;9031:30:::0;;::::1;::::0;9023:65:::1;;;::::0;-1:-1:-1;;;9023:65:4;;3650:2:7;9023:65:4::1;::::0;::::1;3632:21:7::0;3689:2;3669:18;;;3662:30;-1:-1:-1;;;3708:18:7;;;3701:52;3770:18;;9023:65:4::1;;;;;;;;;9101:69;-1:-1:-1::0;;;;;9101:34:4;::::1;9144:10;9157:12:::0;9101:34:::1;:69::i;:::-;8920:260:::0;;:::o;8014:896::-;8081:21;8105:9;8115:4;8105:15;;;;;;;;:::i;:::-;;;;;;;;;8155:14;;;:8;:14;;;;;;8170:10;8155:26;;;;;;;8200:11;;8105:15;;;;;;;;-1:-1:-1;8200:22:4;-1:-1:-1;8200:22:4;8192:69;;;;-1:-1:-1;;;8192:69:4;;4001:2:7;8192:69:4;;;3983:21:7;4040:2;4020:18;;;4013:30;4079:34;4059:18;;;4052:62;-1:-1:-1;;;4130:18:7;;;4123:32;4172:19;;8192:69:4;3799:398:7;8192:69:4;8316:15;8277:37;8300:4;:13;;;8277:4;:18;;;:22;;:37;;;;:::i;:::-;:54;8274:303;;;8378:15;8396:32;8412:4;8417:10;8396:15;:32::i;:::-;8378:50;-1:-1:-1;8450:11:4;;8447:105;;8493:4;;8486:46;;-1:-1:-1;;;;;8493:4:4;8512:10;8524:7;8486:25;:46::i;:::-;8332:245;8274:303;8603:11;;:24;;8619:7;8603:15;:24::i;:::-;8589:38;;8659:15;8638:18;;;;:36;;;;8699:9;;;:16;:20;;8638:18;8699:20;:::i;:::-;8685:11;;;:34;8744:11;;;;:24;;8760:7;8744:15;:24::i;:::-;8730:11;;;:38;8800:4;;8793:46;;-1:-1:-1;;;;;8800:4:4;8819:10;8831:7;8793:25;:46::i;:::-;8857:35;;160:25:7;;;8878:4:4;;8866:10;;8857:35;;148:2:7;133:18;8857:35:4;;;;;;;;8070:840;;8014:896;;:::o;9188:179::-;9231:17;;9260:100;9280:9;:16;9276:20;;9260:100;;;9329:9;9339:1;9329:12;;;;;;;;:::i;:::-;;;;;;;;;;;:19;;;9316:32;;;;;:::i;:::-;;-1:-1:-1;9297:3:4;;;;:::i;:::-;;;;9260:100;;;;9188:179;:::o;9377:358::-;1094:13:0;:11;:13::i;:::-;9471:9:4::1;:16:::0;;9519;;::::1;::::0;;9560:30:::1;::::0;;;;::::1;::::0;;;;;;9574:15:::1;9519:16;9560:30:::0;;::::1;::::0;;;9519:16:::1;::::0;::::1;9548:6:::0;;;:43;;;;::::1;::::0;;-1:-1:-1;9548:43:4;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;;;9471:16;9519;::::1;9615:21;:9:::0;9627::::1;9615:21;:::i;:::-;9602:10;::::0;::::1;:34:::0;9647:10;;;:4:::1;9668:8;::::0;::::1;:12:::0;;;9698:27:::1;::::0;9715:9;;9710:4;;9654:3;;9698:27:::1;::::0;::::1;9447:288;;9377:358:::0;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3187:121:4:-;3259:7;3286:14;:3;3294:5;3286:7;:14::i;:::-;3279:21;;3187:121;;;;;:::o;3397:1435::-;3472:14;3499:21;3523:9;3533:4;3523:15;;;;;;;;:::i;:::-;;;;;;;;;3573:14;;;:8;:14;;;;;;-1:-1:-1;;;;;3573:21:4;;;;;;;;;;3523:15;;;;;;3619:9;;;:16;;3723:18;;;;;3523:15;;-1:-1:-1;3573:21:4;;3619:16;;3523:15;;;;3723:18;;3709:5;;3619:16;3709:5;:::i;:::-;3699:16;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;:42;3695:302;;;3770:49;3784:4;:18;;;3803:15;3770:13;:49::i;:::-;3884:11;;3757:62;;-1:-1:-1;3843:53:4;;:36;3858:9;;;3868:5;3872:1;3868:3;:5;:::i;:::-;3858:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:20;3843:10;;:14;:36::i;:::-;:40;;:53::i;:::-;3834:62;-1:-1:-1;3920:37:4;3953:3;3920:28;3834:62;679:10;3920;:28::i;:::-;:32;;:37::i;:::-;3911:46;;3972:13;;;;;;;3695:302;4023:11;;;;4009:571;4038:5;4042:1;4038:3;:5;:::i;:::-;4035:1;:8;4009:571;;;4070:4;4065:247;;4107:54;4121:4;:18;;;4141:4;:9;;4151:1;4153;4151:3;;;;:::i;:::-;4141:14;;;;;;;;:::i;:::-;;;;;;;;;;;:19;;;4107:13;:54::i;:::-;4094:67;;4189:49;4226:4;:11;;;4189:32;4204:4;:9;;4214:1;4204:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:16;4189:10;;:14;:32::i;:49::-;4180:58;;4264:4;4257:11;;4287:8;;4065:247;4328:18;4349:53;4363:4;:9;;4373:1;4363:12;;;;;;;;:::i;:::-;;;;;;;;;;;:17;;;4382:4;:9;;4392:1;4394;4392:3;;;;:::i;4349:53::-;4328:74;;4427:61;4438:49;4475:4;:11;;;4438:32;4453:4;:9;;4463:1;4453:12;;;;;;;;:::i;4438:49::-;4427:6;;:10;:61::i;:::-;4419:69;-1:-1:-1;4518:26:4;:10;4533;4518:14;:26::i;:::-;4505:39;;4048:532;4009:571;4044:3;;;;:::i;:::-;;;;4009:571;;;-1:-1:-1;4605:50:4;4619:9;;;4629:5;4633:1;4629:3;:5;:::i;:::-;4619:16;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;4642:12;4605:13;:50::i;:::-;4726:11;;4592:63;;-1:-1:-1;4674:65:4;;4685:53;;:36;4700:9;;;4710:5;4714:1;4710:3;:5;:::i;:::-;4700:16;;;;;;;;:::i;4685:53::-;4674:6;;:10;:65::i;:::-;4666:73;-1:-1:-1;4759:37:4;4792:3;4759:28;4666:73;679:10;4759;:28::i;:37::-;4750:46;3397:1435;-1:-1:-1;;;;;;;;3397:1435:4:o;4842:1942::-;4917:14;4944:21;4968:9;4978:4;4968:15;;;;;;;;:::i;:::-;;;;;;;;;5018:14;;;:8;:14;;;;;;-1:-1:-1;;;;;5018:21:4;;;;;;;;;;4968:15;;;;;;5064:9;;;:16;;5187:18;;;;;4968:15;;-1:-1:-1;5018:21:4;;5064:16;;4968:15;;;;5187:18;;5173:5;;5064:16;5173:5;:::i;:::-;5163:16;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;:42;5159:266;;;5234:13;;;;5312:11;;5234:13;;-1:-1:-1;5271:53:4;;:36;5286:9;;;5296:5;5300:1;5296:3;:5;:::i;5159:266::-;5449:11;;;;5435:1123;5464:5;5468:1;5464:3;:5;:::i;:::-;5461:1;:8;5435:1123;;;5496:4;5491:509;;5533:54;5547:4;:18;;;5567:4;:9;;5577:1;5579;5577:3;;;;:::i;5533:54::-;5520:67;;5623:4;:13;;;5610:10;:26;5606:244;;;5669:52;5709:4;:11;;;5669:35;5687:4;:9;;5697:1;5687:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:16;5669:13;;;;;:17;:35::i;:52::-;5660:61;-1:-1:-1;5753:37:4;5786:3;5753:28;5660:61;679:10;5753;:28::i;:37::-;5744:46;;5813:13;;;;;;;;5606:244;5877:49;5914:4;:11;;;5877:32;5892:4;:9;;5902:1;5892:12;;;;;;;;:::i;5877:49::-;5868:58;;5952:4;5945:11;;5975:8;;5491:509;6016:18;6037:53;6051:4;:9;;6061:1;6051:12;;;;;;;;:::i;6037:53::-;6140:13;;;;6016:74;;-1:-1:-1;6111:26:4;6016:74;6126:10;6111:14;:26::i;:::-;:42;6107:272;;;6182:80;6193:68;6249:4;:11;;;6193:51;6227:4;:9;;6237:1;6227:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:16;6193:13;;;;:29;;6211:10;6193:17;:29::i;6182:80::-;6173:89;-1:-1:-1;6290:37:4;6323:3;6290:28;6173:89;679:10;6290;:28::i;:37::-;6281:46;;6346:13;;;;;;;;;6107:272;6419:61;6430:49;6467:4;:11;;;6430:32;6445:4;:9;;6455:1;6445:12;;;;;;;;:::i;6419:61::-;6411:69;-1:-1:-1;6510:26:4;:10;6525;6510:14;:26::i;:::-;6497:39;;5474:1084;5435:1123;5470:3;;;;:::i;:::-;;;;5435:1123;;;-1:-1:-1;6654:11:4;;6583:84;;6594:72;;:55;6628:9;;;6638:5;6642:1;6638:3;:5;:::i;:::-;6628:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:20;6594:13;;;;:29;;6612:10;6594:17;:29::i;9854:263::-;1094:13:0;:11;:13::i;:::-;9926:21:4::1;9950:9;9960:4;9950:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;9991:82:::1;::::0;;;;::::1;::::0;;;;;10042:15:::1;9991:82:::0;;::::1;::::0;;;9976:9:::1;9950:15;::::0;;::::1;::::0;;::::1;9976:9:::0;;::::1;:98:::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;::::1;::::0;;;;10092:17;9950:15;;-1:-1:-1;10018:4:4;;10099;;10092:17:::1;::::0;9950:15;10092:17:::1;9915:202;9854:263:::0;;:::o;6874:1065::-;6940:21;6964:9;6974:4;6964:15;;;;;;;;:::i;:::-;;;;;;;;;7014:14;;;:8;:14;;;;;;7029:10;7014:26;;;;;;;6964:15;;;;;;;;-1:-1:-1;7059:11:4;7051:52;;;;-1:-1:-1;;;7051:52:4;;5112:2:7;7051:52:4;;;5094:21:7;5151:2;5131:18;;;5124:30;5190:31;5170:18;;;5163:59;5239:18;;7051:52:4;4910:353:7;7051:52:4;7120:11;;:15;7116:393;;7207:15;7168:37;7191:4;:13;;;7168:4;:18;;;:22;;:37;;;;:::i;:::-;:54;7165:316;;;7290:15;7308:32;7324:4;7329:10;7308:15;:32::i;:::-;7290:50;-1:-1:-1;7362:11:4;;7359:105;;7405:4;;7398:46;;-1:-1:-1;;;;;7405:4:4;7424:10;7436:7;7398:25;:46::i;:::-;7223:258;7165:316;7619:11;;:24;;7635:7;7619:15;:24::i;:::-;7605:38;;7675:15;7654:18;;;;:36;;;;7715:9;;;:16;:20;;7654:18;7715:20;:::i;:::-;7701:11;;;:34;7760:11;;;;:24;;7776:7;7760:15;:24::i;:::-;7746:11;;;:38;7804:4;;7797:74;;-1:-1:-1;;;;;7804:4:4;7835:10;7856:4;7863:7;7797:29;:74::i;:::-;7887:34;;160:25:7;;;7907:4:4;;7895:10;;7887:34;;148:2:7;133:18;7887:34:4;14:177:7;2081:198:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;5470:2:7;2161:73:0::1;::::0;::::1;5452:21:7::0;5509:2;5489:18;;;5482:30;5548:34;5528:18;;;5521:62;-1:-1:-1;;;5599:18:7;;;5592:36;5645:19;;2161:73:0::1;5268:402:7::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:2;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;5877:2:7;1414:68:0;;;5859:21:7;;;5896:18;;;5889:30;5955:34;5935:18;;;5928:62;6007:18;;1414:68:0;5675:356:7;771:211:6;915:58;;-1:-1:-1;;;;;6228:32:7;;915:58:6;;;6210:51:7;6277:18;;;6270:34;;;888:86:6;;908:5;;-1:-1:-1;;;938:23:6;6183:18:7;;915:58:6;;;;-1:-1:-1;;915:58:6;;;;;;;;;;;;;;-1:-1:-1;;;;;915:58:6;-1:-1:-1;;;;;;915:58:6;;;;;;;;;;888:19;:86::i;:::-;771:211;;;:::o;2755:96:3:-;2813:7;2839:5;2843:1;2839;:5;:::i;3122:96::-;3180:7;3206:5;3210:1;3206;:5;:::i;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;3465:96:3:-;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;990:248:6:-;1161:68;;-1:-1:-1;;;;;6795:15:7;;;1161:68:6;;;6777:34:7;6847:15;;6827:18;;;6820:43;6879:18;;;6872:34;;;1134:96:6;;1154:5;;-1:-1:-1;;;1184:27:6;6712:18:7;;1161:68:6;6537:375:7;1134:96:6;990:248;;;;:::o;3282:774::-;3706:23;3732:69;3760:4;3732:69;;;;;;;;;;;;;;;;;3740:5;-1:-1:-1;;;;;3732:27:6;;;:69;;;;;:::i;:::-;3816:17;;3706:95;;-1:-1:-1;3816:21:6;3812:237;;3971:10;3960:30;;;;;;;;;;;;:::i;:::-;3952:85;;;;-1:-1:-1;;;3952:85:6;;7401:2:7;3952:85:6;;;7383:21:7;7440:2;7420:18;;;7413:30;7479:34;7459:18;;;7452:62;-1:-1:-1;;;7530:18:7;;;7523:40;7580:19;;3952:85:6;7199:406:7;3873:223:1;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:1:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:1;;7812:2:7;5149:81:1;;;7794:21:7;7851:2;7831:18;;;7824:30;7890:34;7870:18;;;7863:62;-1:-1:-1;;;7941:18:7;;;7934:36;7987:19;;5149:81:1;7610:402:7;5149:81:1;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:1;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:1:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:1;;;7908:60;;;;-1:-1:-1;;;7908:60:1;;8766:2:7;7908:60:1;;;8748:21:7;8805:2;8785:18;;;8778:30;8844:31;8824:18;;;8817:59;8893:18;;7908:60:1;8564:353:7;7908:60:1;-1:-1:-1;8003:10:1;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:1;;;;;;;;:::i;196:180:7:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:7;;196:180;-1:-1:-1;196:180:7:o;381:1035::-;523:4;552:2;581;570:9;563:21;622:3;611:9;607:19;668:6;662:13;657:2;646:9;642:18;635:41;713:2;705:6;701:15;695:22;736:2;774;769;758:9;754:18;747:30;831:2;823:6;819:15;813:22;808:2;797:9;793:18;786:50;883:2;875:6;871:15;865:22;845:42;;925:4;918;907:9;903:20;896:34;950:6;985:12;979:19;1022:6;1014;1007:22;1060:3;1049:9;1045:19;1038:26;;1105:2;1091:12;1087:21;1073:35;;1126:1;1117:10;;1136:254;1150:6;1147:1;1144:13;1136:254;;;1209:13;;1247:9;;1235:22;;1297:11;;1291:18;1277:12;;;1270:40;1365:15;;;;1172:1;1165:9;;;;;1330:12;;;;1136:254;;;-1:-1:-1;1407:3:7;381:1035;-1:-1:-1;;;;;;;381:1035:7:o;1644:173::-;1712:20;;-1:-1:-1;;;;;1761:31:7;;1751:42;;1741:70;;1807:1;1804;1797:12;1741:70;1644:173;;;:::o;1822:254::-;1890:6;1898;1951:2;1939:9;1930:7;1926:23;1922:32;1919:52;;;1967:1;1964;1957:12;1919:52;1990:29;2009:9;1990:29;:::i;:::-;1980:39;2066:2;2051:18;;;;2038:32;;-1:-1:-1;;;1822:254:7:o;2081:248::-;2149:6;2157;2210:2;2198:9;2189:7;2185:23;2181:32;2178:52;;;2226:1;2223;2216:12;2178:52;-1:-1:-1;;2249:23:7;;;2319:2;2304:18;;;2291:32;;-1:-1:-1;2081:248:7:o;2542:254::-;2610:6;2618;2671:2;2659:9;2650:7;2646:23;2642:32;2639:52;;;2687:1;2684;2677:12;2639:52;2723:9;2710:23;2700:33;;2752:38;2786:2;2775:9;2771:18;2752:38;:::i;:::-;2742:48;;2542:254;;;;;:::o;3125:186::-;3184:6;3237:2;3225:9;3216:7;3212:23;3208:32;3205:52;;;3253:1;3250;3243:12;3205:52;3276:29;3295:9;3276:29;:::i;3316:127::-;3377:10;3372:3;3368:20;3365:1;3358:31;3408:4;3405:1;3398:15;3432:4;3429:1;3422:15;4202:127;4263:10;4258:3;4254:20;4251:1;4244:31;4294:4;4291:1;4284:15;4318:4;4315:1;4308:15;4334:128;4401:9;;;4422:11;;;4419:37;;;4436:18;;:::i;4467:125::-;4532:9;;;4553:10;;;4550:36;;;4566:18;;:::i;4597:135::-;4636:3;4657:17;;;4654:43;;4677:18;;:::i;:::-;-1:-1:-1;4724:1:7;4713:13;;4597:135::o;4737:168::-;4810:9;;;4841;;4858:15;;;4852:22;;4838:37;4828:71;;4879:18;;:::i;6315:217::-;6355:1;6381;6371:132;;6425:10;6420:3;6416:20;6413:1;6406:31;6460:4;6457:1;6450:15;6488:4;6485:1;6478:15;6371:132;-1:-1:-1;6517:9:7;;6315:217::o;6917:277::-;6984:6;7037:2;7025:9;7016:7;7012:23;7008:32;7005:52;;;7053:1;7050;7043:12;7005:52;7085:9;7079:16;7138:5;7131:13;7124:21;7117:5;7114:32;7104:60;;7160:1;7157;7150:12;7104:60;7183:5;6917:277;-1:-1:-1;;;6917:277:7:o;8017:250::-;8102:1;8112:113;8126:6;8123:1;8120:13;8112:113;;;8202:11;;;8196:18;8183:11;;;8176:39;8148:2;8141:10;8112:113;;;-1:-1:-1;;8259:1:7;8241:16;;8234:27;8017:250::o;8272:287::-;8401:3;8439:6;8433:13;8455:66;8514:6;8509:3;8502:4;8494:6;8490:17;8455:66;:::i;:::-;8537:16;;;;;8272:287;-1:-1:-1;;8272:287:7:o;8922:396::-;9071:2;9060:9;9053:21;9034:4;9103:6;9097:13;9146:6;9141:2;9130:9;9126:18;9119:34;9162:79;9234:6;9229:2;9218:9;9214:18;9209:2;9201:6;9197:15;9162:79;:::i;:::-;9302:2;9281:15;-1:-1:-1;;9277:29:7;9262:45;;;;9309:2;9258:54;;8922:396;-1:-1:-1;;8922:396:7:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1105000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BASE()": "272",
								"DENOMINATOR()": "229",
								"DENOMINATOR_TEST()": "250",
								"addPool(uint256,uint256)": "146552",
								"calculateReward(uint256,address)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"getAllAmount()": "infinite",
								"getMultiplier(uint256,uint256)": "infinite",
								"getPoolInfo(uint256)": "infinite",
								"owner()": "2442",
								"para()": "2405",
								"pendingReward(uint256,address)": "infinite",
								"poolLength()": "2294",
								"recoverWrongTokens(address,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"setApr(uint256,uint256)": "74785",
								"transferOwnership(address)": "28447",
								"userInfo(uint256,address)": "6950",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"initialized()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 306,
									"end": 10124,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 306,
									"end": 10124,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 10124,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2411,
									"end": 2512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2466,
									"end": 2470,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2466,
									"end": 2478,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2466,
									"end": 2478,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2466,
									"end": 2478,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2466,
									"end": 2478,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2466,
									"end": 2478,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2466,
									"end": 2478,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2466,
									"end": 2478,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2466,
									"end": 2478,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2491,
									"end": 2504,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2576,
									"end": 2585,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2576,
									"end": 2592,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2576,
									"end": 2592,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2624,
									"end": 2640,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2624,
									"end": 2640,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2624,
									"end": 2640,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2624,
									"end": 2640,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2624,
									"end": 2640,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2673,
									"end": 2675,
									"name": "PUSH",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2677,
									"end": 2692,
									"name": "TIMESTAMP",
									"source": 4
								},
								{
									"begin": 2624,
									"end": 2640,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2665,
									"end": 2693,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2624,
									"end": 2640,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2624,
									"end": 2640,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2624,
									"end": 2640,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "PUSH",
									"source": 4,
									"value": "B10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF9"
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2694,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2718,
									"end": 2731,
									"name": "PUSH",
									"source": 4,
									"value": "12C"
								},
								{
									"begin": 2705,
									"end": 2715,
									"name": "PUSH",
									"source": 4,
									"value": "B10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF8"
								},
								{
									"begin": 2705,
									"end": 2715,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2705,
									"end": 2715,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2705,
									"end": 2731,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2624,
									"end": 2640,
									"name": "PUSH",
									"source": 4,
									"value": "B10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
								},
								{
									"begin": 2624,
									"end": 2640,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2624,
									"end": 2640,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2742,
									"end": 2752,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2742,
									"end": 2752,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2742,
									"end": 2752,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2742,
									"end": 2752,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2763,
									"end": 2771,
									"name": "PUSH",
									"source": 4,
									"value": "B10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF7"
								},
								{
									"begin": 2763,
									"end": 2771,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2763,
									"end": 2771,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2763,
									"end": 2771,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2763,
									"end": 2775,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2522,
									"end": 2787,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2491,
									"end": 2504,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2491,
									"end": 2504,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2512,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 306,
									"end": 10124,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 306,
									"end": 10124,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 319,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 319,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 99,
									"end": 105,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 152,
									"end": 154,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 140,
									"end": 149,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 131,
									"end": 138,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 127,
									"end": 150,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 123,
									"end": 155,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 120,
									"end": 172,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 120,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 120,
									"end": 172,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 168,
									"end": 169,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 166,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 158,
									"end": 170,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 120,
									"end": 172,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 120,
									"end": 172,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 210,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 210,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 239,
									"end": 270,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 239,
									"end": 270,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 229,
									"end": 271,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 229,
									"end": 271,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 219,
									"end": 289,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 219,
									"end": 289,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 283,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 275,
									"end": 287,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 219,
									"end": 289,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 219,
									"end": 289,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 308,
									"end": 313,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 14,
									"end": 319,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 319,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 319,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 319,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 306,
									"end": 10124,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 10124,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 306,
									"end": 10124,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 10124,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 10124,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 306,
									"end": 10124,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 10124,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e14be90309aa20d98783b7100a2ec62cc11166d9f2879d3f77bf4a1af136c8c64736f6c63430008110033",
									".code": [
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "8DBB1E3A"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "CFBB3DBD"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "CFBB3DBD"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "E2BBB158"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "E3D0B2BF"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "EC342AD0"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "8DBB1E3A"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "918F8674"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "93F1A40B"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "98969E82"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "A18F07A0"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "441A3E70"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "441A3E70"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "51166D78"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "6D89DBC5"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "81E3EDA"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "2F380B35"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "3E3CCA90"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "3F138D4B"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 306,
											"end": 10124,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2857,
											"end": 2953,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2857,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2938,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2929,
											"end": 2945,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2857,
											"end": 2953,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2857,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2857,
											"end": 2953,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2857,
											"end": 2953,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2953,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2857,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2857,
											"end": 2953,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2857,
											"end": 2953,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2857,
											"end": 2953,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2857,
											"end": 2953,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2857,
											"end": 2953,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2857,
											"end": 2953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2857,
											"end": 2953,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2961,
											"end": 3081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2961,
											"end": 3081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2961,
											"end": 3081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1600,
											"end": 1632,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1632,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1632,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1633,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1633,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1572,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1421,
											"end": 1639,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 8920,
											"end": 9180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 8920,
											"end": 9180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 8014,
											"end": 8910,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 8014,
											"end": 8910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8014,
											"end": 8910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 8014,
											"end": 8910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 8014,
											"end": 8910,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8014,
											"end": 8910,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8014,
											"end": 8910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 8014,
											"end": 8910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8014,
											"end": 8910,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 8014,
											"end": 8910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8014,
											"end": 8910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 8014,
											"end": 8910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9188,
											"end": 9367,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 9188,
											"end": 9367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9188,
											"end": 9367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 9188,
											"end": 9367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 9188,
											"end": 9367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9377,
											"end": 9735,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 9377,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9377,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 9377,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 9377,
											"end": 9735,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 9377,
											"end": 9735,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9377,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 9377,
											"end": 9735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9377,
											"end": 9735,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 9377,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9377,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 9377,
											"end": 9735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3187,
											"end": 3308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3187,
											"end": 3308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 536,
											"end": 582,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 536,
											"end": 582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 536,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 574,
											"end": 582,
											"name": "PUSH",
											"source": 4,
											"value": "1E13380"
										},
										{
											"begin": 536,
											"end": 582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 536,
											"end": 582,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1851,
											"end": 1917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3003,
											"end": 3028,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3028,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3028,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3044,
											"end": 3062,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3044,
											"end": 3062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3071,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3071,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3071,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3087,
											"end": 3105,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3087,
											"end": 3105,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3087,
											"end": 3105,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3114,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2991,
											"end": 2993,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2976,
											"end": 2994,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1851,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2801,
											"end": 3120,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3397,
											"end": 4832,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3397,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3397,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3397,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3397,
											"end": 4832,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3397,
											"end": 4832,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3397,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3397,
											"end": 4832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3397,
											"end": 4832,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3397,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3397,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3397,
											"end": 4832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 6784,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 4842,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4842,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4842,
											"end": 6784,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 6784,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4842,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4842,
											"end": 6784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 6784,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4842,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4842,
											"end": 6784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9854,
											"end": 10117,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 9854,
											"end": 10117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9854,
											"end": 10117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 9854,
											"end": 10117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 9854,
											"end": 10117,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 9854,
											"end": 10117,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9854,
											"end": 10117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 9854,
											"end": 10117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9854,
											"end": 10117,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 9854,
											"end": 10117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9854,
											"end": 10117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 9854,
											"end": 10117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 7939,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 6874,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 6874,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6874,
											"end": 7939,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 7939,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6874,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6874,
											"end": 7939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 7939,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6874,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6874,
											"end": 7939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 636,
											"end": 689,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 636,
											"end": 689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 636,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 679,
											"end": 689,
											"name": "PUSH",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 636,
											"end": 689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 636,
											"end": 689,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 593,
											"end": 627,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 593,
											"end": 627,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 593,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 624,
											"end": 627,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 593,
											"end": 627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 593,
											"end": 627,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3019,
											"end": 3039,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3019,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3067,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3072,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3058,
											"end": 3073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2961,
											"end": 3081,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2961,
											"end": 3081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9056,
											"end": 9060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9056,
											"end": 9060,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9056,
											"end": 9060,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9060,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9060,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9061,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9061,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9061,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9023,
											"end": 9088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 9023,
											"end": 9088,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9023,
											"end": 9088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9023,
											"end": 9088,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9023,
											"end": 9088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9023,
											"end": 9088,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3652,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9023,
											"end": 9088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9023,
											"end": 9088,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9023,
											"end": 9088,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3632,
											"end": 3653,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 3691,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21B0B73737BA1031329039BA30B5B2B2103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3708,
											"end": 3726,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3708,
											"end": 3726,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3708,
											"end": 3726,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3753,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3770,
											"end": 3788,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3770,
											"end": 3788,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9023,
											"end": 9088,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 9023,
											"end": 9088,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9023,
											"end": 9088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9023,
											"end": 9088,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9023,
											"end": 9088,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9023,
											"end": 9088,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9023,
											"end": 9088,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9023,
											"end": 9088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9023,
											"end": 9088,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9023,
											"end": 9088,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 9023,
											"end": 9088,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9101,
											"end": 9170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9101,
											"end": 9135,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9101,
											"end": 9135,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9144,
											"end": 9154,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9157,
											"end": 9169,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9101,
											"end": 9135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 9101,
											"end": 9170,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9101,
											"end": 9170,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 9101,
											"end": 9170,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8920,
											"end": 9180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8920,
											"end": 9180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8014,
											"end": 8910,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 8014,
											"end": 8910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8102,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8105,
											"end": 8114,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8115,
											"end": 8119,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 8105,
											"end": 8120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8169,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8169,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8169,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8163,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8155,
											"end": 8169,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8169,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8169,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8155,
											"end": 8169,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8169,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8169,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8170,
											"end": 8180,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8200,
											"end": 8211,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8200,
											"end": 8211,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8200,
											"end": 8222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8200,
											"end": 8222,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 8192,
											"end": 8261,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8192,
											"end": 8261,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8192,
											"end": 8261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4001,
											"end": 4003,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8192,
											"end": 8261,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8192,
											"end": 8261,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3983,
											"end": 4004,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4043,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4079,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "46697865645465726D537461636B3A2053554646494349454E545F42414C414E"
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4052,
											"end": 4114,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4345"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4123,
											"end": 4155,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3799,
											"end": 4197,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8261,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 8192,
											"end": 8261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8316,
											"end": 8331,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 8300,
											"end": 8304,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8313,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8300,
											"end": 8313,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8313,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8281,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8314,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8277,
											"end": 8314,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8314,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 8277,
											"end": 8314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8331,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8274,
											"end": 8577,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8274,
											"end": 8577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 8274,
											"end": 8577,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8378,
											"end": 8393,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8396,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 8412,
											"end": 8416,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8417,
											"end": 8427,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8396,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 8396,
											"end": 8428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8396,
											"end": 8428,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 8396,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8378,
											"end": 8428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8450,
											"end": 8461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8450,
											"end": 8461,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8447,
											"end": 8552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 8447,
											"end": 8552,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8493,
											"end": 8497,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8493,
											"end": 8497,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8486,
											"end": 8532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 8486,
											"end": 8532,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8493,
											"end": 8497,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8512,
											"end": 8522,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8524,
											"end": 8531,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8486,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 8486,
											"end": 8532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8486,
											"end": 8532,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 8486,
											"end": 8532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8332,
											"end": 8577,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8274,
											"end": 8577,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 8274,
											"end": 8577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8603,
											"end": 8614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8603,
											"end": 8614,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8603,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 8603,
											"end": 8627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8619,
											"end": 8626,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8603,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 8603,
											"end": 8627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8603,
											"end": 8627,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 8603,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8589,
											"end": 8627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8589,
											"end": 8627,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8659,
											"end": 8674,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 8638,
											"end": 8656,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8638,
											"end": 8656,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8638,
											"end": 8656,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8638,
											"end": 8656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8638,
											"end": 8674,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8638,
											"end": 8674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8638,
											"end": 8674,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8638,
											"end": 8674,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8699,
											"end": 8708,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8699,
											"end": 8708,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8699,
											"end": 8708,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8699,
											"end": 8715,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8699,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 8699,
											"end": 8719,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8638,
											"end": 8656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8699,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 8699,
											"end": 8719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8699,
											"end": 8719,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 8699,
											"end": 8719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8685,
											"end": 8696,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8685,
											"end": 8696,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8685,
											"end": 8696,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8685,
											"end": 8719,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8744,
											"end": 8755,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8744,
											"end": 8755,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8744,
											"end": 8755,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8744,
											"end": 8755,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8744,
											"end": 8768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 8744,
											"end": 8768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8760,
											"end": 8767,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8744,
											"end": 8759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 8744,
											"end": 8768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8744,
											"end": 8768,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 8744,
											"end": 8768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8730,
											"end": 8741,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8730,
											"end": 8741,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8730,
											"end": 8741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8730,
											"end": 8768,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8804,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8800,
											"end": 8804,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8793,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 8793,
											"end": 8839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8800,
											"end": 8804,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8819,
											"end": 8829,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8831,
											"end": 8838,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8793,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 8793,
											"end": 8839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8793,
											"end": 8839,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 8793,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8857,
											"end": 8892,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8857,
											"end": 8892,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 8882,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8878,
											"end": 8882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8866,
											"end": 8876,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8866,
											"end": 8876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8857,
											"end": 8892,
											"name": "PUSH",
											"source": 4,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 8857,
											"end": 8892,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8857,
											"end": 8892,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 8857,
											"end": 8892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8857,
											"end": 8892,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8857,
											"end": 8892,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8857,
											"end": 8892,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8857,
											"end": 8892,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8857,
											"end": 8892,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8857,
											"end": 8892,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8857,
											"end": 8892,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8070,
											"end": 8910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8070,
											"end": 8910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8014,
											"end": 8910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8014,
											"end": 8910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8014,
											"end": 8910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9188,
											"end": 9367,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 9188,
											"end": 9367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9231,
											"end": 9248,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9248,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9360,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 9260,
											"end": 9360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9280,
											"end": 9289,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9280,
											"end": 9296,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9276,
											"end": 9296,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9276,
											"end": 9296,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9360,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 9260,
											"end": 9360,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9339,
											"end": 9340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 9329,
											"end": 9341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9348,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9329,
											"end": 9348,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9348,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9348,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 9316,
											"end": 9348,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 9316,
											"end": 9348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9348,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 9316,
											"end": 9348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9348,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9297,
											"end": 9300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9297,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 9297,
											"end": 9300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9297,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 9297,
											"end": 9300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9297,
											"end": 9300,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 9297,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9297,
											"end": 9300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9297,
											"end": 9300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9297,
											"end": 9300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 9260,
											"end": 9360,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9360,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 9260,
											"end": 9360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9360,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9188,
											"end": 9367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9188,
											"end": 9367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9377,
											"end": 9735,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 9377,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9471,
											"end": 9487,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9471,
											"end": 9487,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9519,
											"end": 9535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9519,
											"end": 9535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9519,
											"end": 9535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9519,
											"end": 9535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9519,
											"end": 9535,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9560,
											"end": 9590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9560,
											"end": 9590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9560,
											"end": 9590,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9560,
											"end": 9590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9560,
											"end": 9590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9560,
											"end": 9590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9560,
											"end": 9590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9560,
											"end": 9590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9560,
											"end": 9590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9560,
											"end": 9590,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9560,
											"end": 9590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9560,
											"end": 9590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9574,
											"end": 9589,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 9519,
											"end": 9535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9560,
											"end": 9590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9560,
											"end": 9590,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9560,
											"end": 9590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9560,
											"end": 9590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9560,
											"end": 9590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9560,
											"end": 9590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9519,
											"end": 9535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9519,
											"end": 9535,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9519,
											"end": 9535,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9554,
											"name": "PUSH",
											"source": 4,
											"value": "B10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF9"
										},
										{
											"begin": 9548,
											"end": 9554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9554,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9591,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9471,
											"end": 9487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9519,
											"end": 9535,
											"name": "PUSH",
											"source": 4,
											"value": "B10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
										},
										{
											"begin": 9519,
											"end": 9535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 9615,
											"end": 9624,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9627,
											"end": 9636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3C"
										},
										{
											"begin": 9615,
											"end": 9636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 9615,
											"end": 9636,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9636,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 9615,
											"end": 9636,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9602,
											"end": 9612,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9647,
											"end": 9657,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9647,
											"end": 9657,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9647,
											"end": 9657,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9647,
											"end": 9651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9668,
											"end": 9676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9668,
											"end": 9676,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9668,
											"end": 9676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9668,
											"end": 9680,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9668,
											"end": 9680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9668,
											"end": 9680,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9698,
											"end": 9725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9698,
											"end": 9725,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9715,
											"end": 9724,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9715,
											"end": 9724,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9714,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9714,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9657,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9657,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9698,
											"end": 9725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4D93067D0D628FE42C457623322C0F22AD92F71762A2EEBE06E2A0E7D2AA61C7"
										},
										{
											"begin": 9698,
											"end": 9725,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9698,
											"end": 9725,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 9447,
											"end": 9735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9447,
											"end": 9735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9377,
											"end": 9735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9377,
											"end": 9735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9377,
											"end": 9735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3259,
											"end": 3266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3286,
											"end": 3289,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 3299,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3286,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3286,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3286,
											"end": 3300,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3286,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3279,
											"end": 3300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3279,
											"end": 3300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3308,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3397,
											"end": 4832,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3397,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3532,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3533,
											"end": 3537,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3523,
											"end": 3538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3587,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3587,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3587,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3581,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3573,
											"end": 3587,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3587,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3587,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3573,
											"end": 3587,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3587,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3587,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3628,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3619,
											"end": 3628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3635,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3635,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3635,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3538,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3709,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3709,
											"end": 3714,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3635,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3709,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3709,
											"end": 3714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3709,
											"end": 3714,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3709,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3699,
											"end": 3715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3715,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3720,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3699,
											"end": 3720,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3720,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3741,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3997,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3695,
											"end": 3997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3784,
											"end": 3788,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3770,
											"end": 3819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3819,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3770,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3884,
											"end": 3895,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3884,
											"end": 3895,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3819,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3843,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3843,
											"end": 3896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3843,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3858,
											"end": 3867,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3858,
											"end": 3867,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3872,
											"end": 3873,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3868,
											"end": 3871,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3868,
											"end": 3873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3858,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3878,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3843,
											"end": 3853,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3843,
											"end": 3853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3843,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3843,
											"end": 3879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3843,
											"end": 3879,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3843,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3843,
											"end": 3883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3843,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3843,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3843,
											"end": 3896,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3843,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3834,
											"end": 3896,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3920,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3953,
											"end": 3956,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3920,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3834,
											"end": 3896,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 679,
											"end": 689,
											"name": "PUSH",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 3920,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3920,
											"end": 3948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3948,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3920,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3952,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3920,
											"end": 3957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3957,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3920,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3911,
											"end": 3957,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3911,
											"end": 3957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3972,
											"end": 3985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3972,
											"end": 3985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3972,
											"end": 3985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3972,
											"end": 3985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3972,
											"end": 3985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3972,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3972,
											"end": 3985,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3997,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3695,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4023,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4023,
											"end": 4034,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4023,
											"end": 4034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4023,
											"end": 4034,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4009,
											"end": 4580,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4009,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4042,
											"end": 4043,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4038,
											"end": 4041,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4038,
											"end": 4043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4035,
											"end": 4036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4035,
											"end": 4043,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4009,
											"end": 4580,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4009,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4009,
											"end": 4580,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4070,
											"end": 4074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4065,
											"end": 4312,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4121,
											"end": 4125,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4145,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4150,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4141,
											"end": 4150,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4151,
											"end": 4152,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4154,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4151,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4151,
											"end": 4154,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4151,
											"end": 4154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4151,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4151,
											"end": 4154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4151,
											"end": 4154,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4151,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4141,
											"end": 4155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4160,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4141,
											"end": 4160,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4160,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4107,
											"end": 4161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4161,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4107,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4094,
											"end": 4161,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4094,
											"end": 4161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4189,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 4226,
											"end": 4230,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4226,
											"end": 4237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4237,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4226,
											"end": 4237,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4189,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4204,
											"end": 4208,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4213,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4204,
											"end": 4213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4214,
											"end": 4215,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4204,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4220,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4189,
											"end": 4199,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4189,
											"end": 4199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4189,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4189,
											"end": 4221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4189,
											"end": 4238,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 4189,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4180,
											"end": 4238,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 4180,
											"end": 4238,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4264,
											"end": 4268,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4257,
											"end": 4268,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4257,
											"end": 4268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4287,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4287,
											"end": 4295,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4312,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4065,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4346,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 4363,
											"end": 4367,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4372,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4363,
											"end": 4372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4373,
											"end": 4374,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4363,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4380,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4363,
											"end": 4380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4380,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4386,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4391,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4382,
											"end": 4391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4392,
											"end": 4393,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4394,
											"end": 4395,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4392,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4392,
											"end": 4395,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4392,
											"end": 4395,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4392,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4392,
											"end": 4395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4402,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4402,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4427,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4438,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4475,
											"end": 4479,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4475,
											"end": 4486,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4475,
											"end": 4486,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4475,
											"end": 4486,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4438,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4453,
											"end": 4457,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 4453,
											"end": 4462,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4453,
											"end": 4462,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4463,
											"end": 4464,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4453,
											"end": 4465,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4453,
											"end": 4465,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4453,
											"end": 4465,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4453,
											"end": 4465,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4453,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4453,
											"end": 4465,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4453,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4453,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4453,
											"end": 4465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4438,
											"end": 4487,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4438,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4427,
											"end": 4433,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 4427,
											"end": 4433,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4427,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4427,
											"end": 4488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4427,
											"end": 4488,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4427,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4488,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4518,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 4518,
											"end": 4528,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4533,
											"end": 4543,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4518,
											"end": 4532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4518,
											"end": 4544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4518,
											"end": 4544,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 4518,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4505,
											"end": 4544,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4505,
											"end": 4544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4048,
											"end": 4580,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4009,
											"end": 4580,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4009,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4044,
											"end": 4047,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4044,
											"end": 4047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 4044,
											"end": 4047,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4044,
											"end": 4047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4044,
											"end": 4047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4044,
											"end": 4047,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 4044,
											"end": 4047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4044,
											"end": 4047,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4044,
											"end": 4047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4044,
											"end": 4047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4009,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4009,
											"end": 4580,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4009,
											"end": 4580,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4009,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4605,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4619,
											"end": 4628,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4619,
											"end": 4628,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4629,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 4633,
											"end": 4634,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4629,
											"end": 4632,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4629,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4629,
											"end": 4634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4629,
											"end": 4634,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 4629,
											"end": 4634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4619,
											"end": 4635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4640,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4640,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4640,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4642,
											"end": 4654,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4605,
											"end": 4655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4655,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4605,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4592,
											"end": 4655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4592,
											"end": 4655,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4674,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 4674,
											"end": 4739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4685,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 4685,
											"end": 4738,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4685,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4700,
											"end": 4709,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4700,
											"end": 4709,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4709,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 4714,
											"end": 4715,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4710,
											"end": 4713,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4710,
											"end": 4715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4715,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 4710,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4700,
											"end": 4716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4685,
											"end": 4738,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 4685,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4674,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4674,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4674,
											"end": 4739,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 4674,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4666,
											"end": 4739,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 4792,
											"end": 4795,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4759,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 4666,
											"end": 4739,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 679,
											"end": 689,
											"name": "PUSH",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 4759,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 4759,
											"end": 4787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4796,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 4759,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4750,
											"end": 4796,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 3397,
											"end": 4832,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3397,
											"end": 4832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 6784,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4842,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4917,
											"end": 4931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4944,
											"end": 4965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4977,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4978,
											"end": 4982,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4968,
											"end": 4983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5032,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5032,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5032,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5026,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5018,
											"end": 5032,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5032,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5032,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5018,
											"end": 5032,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5032,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5032,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5018,
											"end": 5039,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5039,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5039,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5039,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5039,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5039,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5039,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5039,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5064,
											"end": 5073,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5064,
											"end": 5073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5064,
											"end": 5073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5064,
											"end": 5080,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5064,
											"end": 5080,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5187,
											"end": 5205,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5187,
											"end": 5205,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5187,
											"end": 5205,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5187,
											"end": 5205,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5187,
											"end": 5205,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5018,
											"end": 5039,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5039,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5064,
											"end": 5080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5064,
											"end": 5080,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5187,
											"end": 5205,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5187,
											"end": 5205,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 5173,
											"end": 5178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5064,
											"end": 5080,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5173,
											"end": 5178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5178,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 5173,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5163,
											"end": 5179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5184,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5163,
											"end": 5184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5184,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5205,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5159,
											"end": 5425,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5159,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 5159,
											"end": 5425,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5234,
											"end": 5247,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5234,
											"end": 5247,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5234,
											"end": 5247,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5234,
											"end": 5247,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5312,
											"end": 5323,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5312,
											"end": 5323,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5234,
											"end": 5247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5234,
											"end": 5247,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5271,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5271,
											"end": 5324,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5271,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5286,
											"end": 5295,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5286,
											"end": 5295,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5286,
											"end": 5295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5296,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5300,
											"end": 5301,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5296,
											"end": 5299,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5296,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5296,
											"end": 5301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5159,
											"end": 5425,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 5159,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5449,
											"end": 5460,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5449,
											"end": 5460,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5449,
											"end": 5460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5449,
											"end": 5460,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5435,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5464,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 5468,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5464,
											"end": 5467,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5464,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5464,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5464,
											"end": 5469,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 5464,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5461,
											"end": 5462,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5461,
											"end": 5469,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 6558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 5435,
											"end": 6558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5496,
											"end": 5500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5491,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 5491,
											"end": 6000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5533,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 5547,
											"end": 5551,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5571,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5576,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5567,
											"end": 5576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5578,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5577,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 5577,
											"end": 5580,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5580,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5577,
											"end": 5580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5533,
											"end": 5587,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 5533,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5520,
											"end": 5587,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5520,
											"end": 5587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5623,
											"end": 5627,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5623,
											"end": 5636,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5623,
											"end": 5636,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5623,
											"end": 5636,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5620,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5636,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5850,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 5606,
											"end": 5850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 5709,
											"end": 5713,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5709,
											"end": 5720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5720,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5709,
											"end": 5720,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5687,
											"end": 5691,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5696,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5687,
											"end": 5696,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5697,
											"end": 5698,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5687,
											"end": 5699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5703,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5682,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5682,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5682,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5669,
											"end": 5704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5721,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 5669,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5721,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5753,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 5786,
											"end": 5789,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5753,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5660,
											"end": 5721,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 679,
											"end": 689,
											"name": "PUSH",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 5753,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5753,
											"end": 5781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5753,
											"end": 5790,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 5753,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5790,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5813,
											"end": 5826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5813,
											"end": 5826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5813,
											"end": 5826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5813,
											"end": 5826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5813,
											"end": 5826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5813,
											"end": 5826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5813,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5813,
											"end": 5826,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5850,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 5606,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5877,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 5914,
											"end": 5918,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5914,
											"end": 5925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5914,
											"end": 5925,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5877,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5892,
											"end": 5896,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5892,
											"end": 5901,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5892,
											"end": 5901,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5892,
											"end": 5904,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5892,
											"end": 5904,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5892,
											"end": 5904,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5892,
											"end": 5904,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5892,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 5892,
											"end": 5904,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5892,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 5892,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5892,
											"end": 5904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5877,
											"end": 5926,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 5877,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5868,
											"end": 5926,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 5868,
											"end": 5926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5945,
											"end": 5956,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5945,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5975,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 5975,
											"end": 5983,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5491,
											"end": 6000,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 5491,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6016,
											"end": 6034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6037,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 6051,
											"end": 6055,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6051,
											"end": 6060,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6051,
											"end": 6060,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6061,
											"end": 6062,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6051,
											"end": 6063,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6051,
											"end": 6063,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6051,
											"end": 6063,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6051,
											"end": 6063,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6051,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 6051,
											"end": 6063,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6051,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 6051,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 6051,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6037,
											"end": 6090,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 6037,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6140,
											"end": 6153,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6140,
											"end": 6153,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6140,
											"end": 6153,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6140,
											"end": 6153,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6016,
											"end": 6090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6016,
											"end": 6090,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 6016,
											"end": 6090,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6136,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 6111,
											"end": 6137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6111,
											"end": 6153,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6107,
											"end": 6379,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6107,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 6107,
											"end": 6379,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6182,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 6193,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6249,
											"end": 6253,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6260,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6249,
											"end": 6260,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6260,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6193,
											"end": 6244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 6227,
											"end": 6231,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6236,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6227,
											"end": 6236,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6237,
											"end": 6238,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 6227,
											"end": 6239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6243,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6193,
											"end": 6206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6193,
											"end": 6206,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 6193,
											"end": 6206,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6193,
											"end": 6206,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6193,
											"end": 6222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 6193,
											"end": 6222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6221,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 6193,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6193,
											"end": 6222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6182,
											"end": 6262,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 6182,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6173,
											"end": 6262,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6290,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 6323,
											"end": 6326,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 6290,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 6173,
											"end": 6262,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 679,
											"end": 689,
											"name": "PUSH",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 6290,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 6290,
											"end": 6318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6327,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 6290,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6327,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6346,
											"end": 6359,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6107,
											"end": 6379,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 6107,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6419,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 6430,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6467,
											"end": 6471,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6467,
											"end": 6478,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6478,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6467,
											"end": 6478,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 6445,
											"end": 6449,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6454,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6445,
											"end": 6454,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6455,
											"end": 6456,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 6445,
											"end": 6457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6419,
											"end": 6480,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 6419,
											"end": 6480,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6480,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6510,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 6510,
											"end": 6520,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6510,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 6510,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6510,
											"end": 6536,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 6510,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6497,
											"end": 6536,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6497,
											"end": 6536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5474,
											"end": 6558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 5435,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5470,
											"end": 5473,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5470,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 5470,
											"end": 5473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5470,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5470,
											"end": 5473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5470,
											"end": 5473,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 5470,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5470,
											"end": 5473,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5470,
											"end": 5473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5470,
											"end": 5473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5435,
											"end": 6558,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 5435,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6654,
											"end": 6665,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6654,
											"end": 6665,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6583,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 6583,
											"end": 6667,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6594,
											"end": 6666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 6594,
											"end": 6666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6594,
											"end": 6649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 6628,
											"end": 6637,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6628,
											"end": 6637,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6638,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6638,
											"end": 6641,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 6638,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6638,
											"end": 6643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6638,
											"end": 6643,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 6638,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 6628,
											"end": 6644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6648,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6594,
											"end": 6607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6594,
											"end": 6607,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 6594,
											"end": 6607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6594,
											"end": 6607,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6594,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 6594,
											"end": 6623,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6612,
											"end": 6622,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6594,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6594,
											"end": 6623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9854,
											"end": 10117,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 9854,
											"end": 10117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9926,
											"end": 9947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9950,
											"end": 9959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9960,
											"end": 9964,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 9950,
											"end": 9965,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 9950,
											"end": 9965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 9950,
											"end": 9965,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 9950,
											"end": 9965,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9950,
											"end": 9965,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9950,
											"end": 9965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9991,
											"end": 10073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10073,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10073,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10042,
											"end": 10057,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10073,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10073,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 9985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9950,
											"end": 9965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9950,
											"end": 9965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 9985,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 9985,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 9985,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10074,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10092,
											"end": 10109,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10018,
											"end": 10022,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10022,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10099,
											"end": 10103,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10099,
											"end": 10103,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10092,
											"end": 10109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6EC6D062A87C4B42FE40885D2E8955D89AB9275E14D24354DD2B6B130043BBA5"
										},
										{
											"begin": 10092,
											"end": 10109,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10092,
											"end": 10109,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9915,
											"end": 10117,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9854,
											"end": 10117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9854,
											"end": 10117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9854,
											"end": 10117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 7939,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6874,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6940,
											"end": 6961,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6964,
											"end": 6973,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6974,
											"end": 6978,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 6964,
											"end": 6979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7028,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7028,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7028,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7022,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7014,
											"end": 7028,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7028,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7028,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7014,
											"end": 7028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7028,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7028,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7029,
											"end": 7039,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7040,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7040,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7040,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7040,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7040,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7040,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7059,
											"end": 7070,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7051,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 7051,
											"end": 7103,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7051,
											"end": 7103,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7051,
											"end": 7103,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7051,
											"end": 7103,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7051,
											"end": 7103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5114,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7051,
											"end": 7103,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7051,
											"end": 7103,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7051,
											"end": 7103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5094,
											"end": 5115,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5153,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5154,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5221,
											"name": "PUSH",
											"source": 7,
											"value": "46697865645465726D537461636B3A2042656C6F77206D696E696D756D000000"
										},
										{
											"begin": 5170,
											"end": 5188,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5170,
											"end": 5188,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5170,
											"end": 5188,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5163,
											"end": 5222,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7051,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4910,
											"end": 5263,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7051,
											"end": 7103,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 7051,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7120,
											"end": 7131,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7120,
											"end": 7131,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7120,
											"end": 7135,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7116,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 7116,
											"end": 7509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7207,
											"end": 7222,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 7191,
											"end": 7195,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7191,
											"end": 7204,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7191,
											"end": 7204,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7191,
											"end": 7204,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7172,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7186,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7168,
											"end": 7186,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7186,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 7168,
											"end": 7190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7205,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7205,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7205,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7168,
											"end": 7205,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7205,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 7168,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7222,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7165,
											"end": 7481,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7165,
											"end": 7481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 7165,
											"end": 7481,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7290,
											"end": 7305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7308,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 7324,
											"end": 7328,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7329,
											"end": 7339,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7308,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 7308,
											"end": 7340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7308,
											"end": 7340,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 7308,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7290,
											"end": 7340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7362,
											"end": 7373,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7373,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7359,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 7359,
											"end": 7464,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7405,
											"end": 7409,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7405,
											"end": 7409,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7398,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 7398,
											"end": 7444,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7405,
											"end": 7409,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7424,
											"end": 7434,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7436,
											"end": 7443,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7398,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 7398,
											"end": 7444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7398,
											"end": 7444,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 7398,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7223,
											"end": 7481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7165,
											"end": 7481,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 7165,
											"end": 7481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7630,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7630,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 7619,
											"end": 7643,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7635,
											"end": 7642,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 7619,
											"end": 7643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7643,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 7619,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7643,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7643,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7675,
											"end": 7690,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7690,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7724,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7715,
											"end": 7724,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7724,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7731,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 7715,
											"end": 7735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7712,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7701,
											"end": 7712,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7712,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7735,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7760,
											"end": 7771,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7760,
											"end": 7771,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7760,
											"end": 7771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7760,
											"end": 7771,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7760,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 7760,
											"end": 7784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7776,
											"end": 7783,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7760,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 7760,
											"end": 7784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7760,
											"end": 7784,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 7760,
											"end": 7784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7746,
											"end": 7757,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7746,
											"end": 7757,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7746,
											"end": 7757,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7746,
											"end": 7784,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7804,
											"end": 7808,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7804,
											"end": 7808,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7797,
											"end": 7871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 7797,
											"end": 7871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7804,
											"end": 7808,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7845,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7856,
											"end": 7860,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 7863,
											"end": 7870,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7797,
											"end": 7826,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 7797,
											"end": 7871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7797,
											"end": 7871,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 7797,
											"end": 7871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7921,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7887,
											"end": 7921,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7907,
											"end": 7911,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7911,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7905,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7921,
											"name": "PUSH",
											"source": 4,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 7887,
											"end": 7921,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7887,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5472,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5512,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5548,
											"end": 5582,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5521,
											"end": 5583,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5599,
											"end": 5617,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5599,
											"end": 5617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5599,
											"end": 5617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5592,
											"end": 5628,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5645,
											"end": 5664,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5645,
											"end": 5664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5268,
											"end": 5670,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5877,
											"end": 5879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5859,
											"end": 5880,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5859,
											"end": 5880,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5859,
											"end": 5880,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5889,
											"end": 5919,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 5989,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5935,
											"end": 5953,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5935,
											"end": 5953,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5935,
											"end": 5953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5928,
											"end": 5990,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6025,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6007,
											"end": 6025,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5675,
											"end": 6031,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 771,
											"end": 982,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 771,
											"end": 982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6228,
											"end": 6260,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6260,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6210,
											"end": 6261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6295,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6277,
											"end": 6295,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6304,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6304,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6304,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 888,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 888,
											"end": 974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 908,
											"end": 913,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 908,
											"end": 913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 938,
											"end": 961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6183,
											"end": 6201,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6183,
											"end": 6201,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 915,
											"end": 973,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 915,
											"end": 973,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 915,
											"end": 973,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 888,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 888,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 888,
											"end": 974,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 888,
											"end": 974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 771,
											"end": 982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 771,
											"end": 982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 771,
											"end": 982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 771,
											"end": 982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6795,
											"end": 6810,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6795,
											"end": 6810,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6795,
											"end": 6810,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6777,
											"end": 6811,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6862,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6862,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6820,
											"end": 6863,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6879,
											"end": 6897,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6879,
											"end": 6897,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6879,
											"end": 6897,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6872,
											"end": 6906,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6872,
											"end": 6906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6872,
											"end": 6906,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1134,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 1134,
											"end": 1230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6730,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6712,
											"end": 6730,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 6537,
											"end": 6912,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1134,
											"end": 1230,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 1134,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 990,
											"end": 1238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 990,
											"end": 1238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 4056,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 3282,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3729,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 3760,
											"end": 3764,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 6,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3745,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 3732,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3816,
											"end": 3837,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 3812,
											"end": 4049,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 3981,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 3960,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 3960,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7403,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7383,
											"end": 7404,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7440,
											"end": 7442,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 7420,
											"end": 7438,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7420,
											"end": 7438,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7420,
											"end": 7438,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7413,
											"end": 7443,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7479,
											"end": 7513,
											"name": "PUSH",
											"source": 7,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 7459,
											"end": 7477,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7459,
											"end": 7477,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7459,
											"end": 7477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7452,
											"end": 7514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7563,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7599,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7580,
											"end": 7599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 7199,
											"end": 7605,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4088,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 4037,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3873,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5125,
											"end": 5137,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5178,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7812,
											"end": 7814,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7815,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7851,
											"end": 7853,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 7831,
											"end": 7849,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7831,
											"end": 7849,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7824,
											"end": 7854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7890,
											"end": 7924,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 7870,
											"end": 7888,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7870,
											"end": 7888,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7863,
											"end": 7925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7934,
											"end": 7970,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7987,
											"end": 8006,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7987,
											"end": 8006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 7610,
											"end": 8012,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5278,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5306,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 5282,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 5357,
											"end": 5363,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 5330,
											"end": 5399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4960,
											"end": 5406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7658,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7674,
											"end": 7681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8766,
											"end": 8768,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8748,
											"end": 8769,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8805,
											"end": 8807,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 8785,
											"end": 8803,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8785,
											"end": 8803,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8785,
											"end": 8803,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8778,
											"end": 8808,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8844,
											"end": 8875,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8817,
											"end": 8876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8893,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8893,
											"end": 8911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 8564,
											"end": 8917,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8003,
											"end": 8013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8076,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8775,
											"end": 8796,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8997,
											"end": 9014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9059,
											"end": 9074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9046,
											"end": 9056,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9044,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9075,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 9119,
											"end": 9139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 376,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 347,
											"end": 370,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 196,
											"end": 376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 381,
											"end": 1416,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 381,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 523,
											"end": 527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 554,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 581,
											"end": 583,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 563,
											"end": 584,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 622,
											"end": 625,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 611,
											"end": 620,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 607,
											"end": 626,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 668,
											"end": 674,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 662,
											"end": 675,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 657,
											"end": 659,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 646,
											"end": 655,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 642,
											"end": 660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 635,
											"end": 676,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 713,
											"end": 715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 705,
											"end": 711,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 701,
											"end": 716,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 695,
											"end": 717,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 736,
											"end": 738,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 776,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 758,
											"end": 767,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 754,
											"end": 772,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 747,
											"end": 777,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 831,
											"end": 833,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 823,
											"end": 829,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 819,
											"end": 834,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 813,
											"end": 835,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 808,
											"end": 810,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 797,
											"end": 806,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 793,
											"end": 811,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 883,
											"end": 885,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 875,
											"end": 881,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 871,
											"end": 886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 887,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 845,
											"end": 887,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 845,
											"end": 887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 925,
											"end": 929,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 918,
											"end": 922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 907,
											"end": 916,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 903,
											"end": 923,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 896,
											"end": 930,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 950,
											"end": 956,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 985,
											"end": 997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 979,
											"end": 998,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1022,
											"end": 1028,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1020,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1029,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1060,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 1049,
											"end": 1058,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1045,
											"end": 1064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1064,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1105,
											"end": 1107,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1103,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1108,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1127,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1390,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 1136,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1148,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1157,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1390,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 1136,
											"end": 1390,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1209,
											"end": 1222,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1209,
											"end": 1222,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1256,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1256,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1235,
											"end": 1257,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1235,
											"end": 1257,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1308,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1308,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1291,
											"end": 1309,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1270,
											"end": 1310,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1380,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1380,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1380,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1380,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1172,
											"end": 1173,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1165,
											"end": 1174,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1174,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1174,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1174,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1342,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1342,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 1136,
											"end": 1390,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1390,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 1136,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1407,
											"end": 1410,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 381,
											"end": 1416,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 381,
											"end": 1416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1817,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 1644,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1761,
											"end": 1792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1792,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1751,
											"end": 1793,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1751,
											"end": 1793,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 1741,
											"end": 1811,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1805,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1809,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1811,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 1741,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1817,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 2076,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1822,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1951,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1939,
											"end": 1948,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 1937,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1949,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1954,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1971,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 1919,
											"end": 1971,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1965,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 1969,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1971,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 1919,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 2009,
											"end": 2018,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 1990,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2019,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 1990,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2019,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2066,
											"end": 2068,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2070,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2070,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1822,
											"end": 2076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2329,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2081,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2163,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2210,
											"end": 2212,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2189,
											"end": 2196,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2208,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2178,
											"end": 2230,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2178,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 2178,
											"end": 2230,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2224,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2178,
											"end": 2230,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 2178,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2249,
											"end": 2272,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2272,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2272,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2304,
											"end": 2322,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2304,
											"end": 2322,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2304,
											"end": 2322,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2323,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2323,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2081,
											"end": 2329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2796,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2542,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2624,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2671,
											"end": 2673,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2659,
											"end": 2668,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2657,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2646,
											"end": 2669,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2642,
											"end": 2674,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2691,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 2639,
											"end": 2691,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2687,
											"end": 2688,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2677,
											"end": 2689,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2691,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 2639,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2733,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 2786,
											"end": 2788,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2771,
											"end": 2789,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 2752,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2790,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 2752,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2796,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2796,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3311,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 3125,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3239,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3234,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3223,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3212,
											"end": 3235,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3240,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3253,
											"end": 3254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3251,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3243,
											"end": 3255,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3295,
											"end": 3304,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 3276,
											"end": 3305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3443,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3316,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3387,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3372,
											"end": 3375,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3368,
											"end": 3388,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3389,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3405,
											"end": 3406,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3432,
											"end": 3436,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3429,
											"end": 3430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3422,
											"end": 3437,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4202,
											"end": 4329,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 4202,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4263,
											"end": 4273,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4258,
											"end": 4261,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4254,
											"end": 4274,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4275,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4298,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4291,
											"end": 4292,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4284,
											"end": 4299,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4318,
											"end": 4322,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4315,
											"end": 4316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4308,
											"end": 4323,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4462,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 4334,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4410,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4410,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4410,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4422,
											"end": 4433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4422,
											"end": 4433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4422,
											"end": 4433,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4419,
											"end": 4456,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4419,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4419,
											"end": 4456,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4436,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 4436,
											"end": 4454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4467,
											"end": 4592,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 4467,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4541,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4541,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4553,
											"end": 4563,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4553,
											"end": 4563,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4553,
											"end": 4563,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4550,
											"end": 4586,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4550,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4550,
											"end": 4586,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 4566,
											"end": 4584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4597,
											"end": 4732,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 4597,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4636,
											"end": 4639,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4657,
											"end": 4674,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4657,
											"end": 4674,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 4654,
											"end": 4697,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 4677,
											"end": 4695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4724,
											"end": 4725,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4713,
											"end": 4726,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4713,
											"end": 4726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4597,
											"end": 4732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4905,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4737,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4819,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4819,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4819,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4850,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4850,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4858,
											"end": 4873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4858,
											"end": 4873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4858,
											"end": 4873,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4852,
											"end": 4874,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4852,
											"end": 4874,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4875,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4828,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4828,
											"end": 4899,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4879,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 4879,
											"end": 4897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6315,
											"end": 6532,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 6315,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6356,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6371,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 6371,
											"end": 6503,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6435,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 6420,
											"end": 6423,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6416,
											"end": 6436,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6414,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6406,
											"end": 6437,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6460,
											"end": 6464,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 6457,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6450,
											"end": 6465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6492,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6485,
											"end": 6486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6478,
											"end": 6493,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6371,
											"end": 6503,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 6371,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6517,
											"end": 6526,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6517,
											"end": 6526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6315,
											"end": 6532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6917,
											"end": 7194,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 6917,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6984,
											"end": 6990,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7037,
											"end": 7039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7025,
											"end": 7034,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7023,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7012,
											"end": 7035,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7040,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7057,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 7005,
											"end": 7057,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7053,
											"end": 7054,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7051,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7055,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7057,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 7005,
											"end": 7057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7085,
											"end": 7094,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7079,
											"end": 7095,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7138,
											"end": 7143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7124,
											"end": 7145,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7122,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7146,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7104,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 7104,
											"end": 7164,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7160,
											"end": 7161,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7150,
											"end": 7162,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7104,
											"end": 7164,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 7104,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7183,
											"end": 7188,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6917,
											"end": 7194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6917,
											"end": 7194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8017,
											"end": 8267,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 8017,
											"end": 8267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8102,
											"end": 8103,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8225,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 8112,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8126,
											"end": 8132,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8124,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8120,
											"end": 8133,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8112,
											"end": 8225,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8112,
											"end": 8225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 8112,
											"end": 8225,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8202,
											"end": 8213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8202,
											"end": 8213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8202,
											"end": 8213,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8196,
											"end": 8214,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8176,
											"end": 8215,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8148,
											"end": 8150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8141,
											"end": 8151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8112,
											"end": 8225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 8112,
											"end": 8225,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8112,
											"end": 8225,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 8112,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8259,
											"end": 8260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8257,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8234,
											"end": 8261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8017,
											"end": 8267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8272,
											"end": 8559,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 8272,
											"end": 8559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8404,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8439,
											"end": 8445,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8433,
											"end": 8446,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8455,
											"end": 8521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 8514,
											"end": 8520,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8509,
											"end": 8512,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8502,
											"end": 8506,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8494,
											"end": 8500,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8490,
											"end": 8507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8455,
											"end": 8521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 8455,
											"end": 8521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8455,
											"end": 8521,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 8455,
											"end": 8521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8537,
											"end": 8553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8537,
											"end": 8553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8537,
											"end": 8553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8537,
											"end": 8553,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8537,
											"end": 8553,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8272,
											"end": 8559,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8272,
											"end": 8559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8922,
											"end": 9318,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 8922,
											"end": 9318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9071,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9060,
											"end": 9069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9038,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9103,
											"end": 9109,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9097,
											"end": 9110,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9146,
											"end": 9152,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9141,
											"end": 9143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9130,
											"end": 9139,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9126,
											"end": 9144,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9153,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 9234,
											"end": 9240,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9229,
											"end": 9231,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9218,
											"end": 9227,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9209,
											"end": 9211,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9201,
											"end": 9207,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9197,
											"end": 9212,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 9162,
											"end": 9241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9241,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 9162,
											"end": 9241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9302,
											"end": 9304,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9281,
											"end": 9296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9277,
											"end": 9306,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9262,
											"end": 9307,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9262,
											"end": 9307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9262,
											"end": 9307,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9262,
											"end": 9307,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9309,
											"end": 9311,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9258,
											"end": 9312,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8922,
											"end": 9318,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8922,
											"end": 9318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"FixedTermStack.sol",
								"interfaces/IBEP20.sol",
								"libraries/SafeBEP20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BASE()": "ec342ad0",
							"DENOMINATOR()": "918f8674",
							"DENOMINATOR_TEST()": "e3d0b2bf",
							"addPool(uint256,uint256)": "6d89dbc5",
							"calculateReward(uint256,address)": "a18f07a0",
							"deposit(uint256,uint256)": "e2bbb158",
							"getAllAmount()": "51166d78",
							"getMultiplier(uint256,uint256)": "8dbb1e3a",
							"getPoolInfo(uint256)": "2f380b35",
							"owner()": "8da5cb5b",
							"para()": "3e3cca90",
							"pendingReward(uint256,address)": "98969e82",
							"poolLength()": "081e3eda",
							"recoverWrongTokens(address,uint256)": "3f138d4b",
							"renounceOwnership()": "715018a6",
							"setApr(uint256,uint256)": "cfbb3dbd",
							"transferOwnership(address)": "f2fde38b",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"_para\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"apr\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"AddPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"apr\",\"type\":\"uint256\"}],\"name\":\"SetApr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DENOMINATOR_TEST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"getPoolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"apr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedTermStack.AprInfo[]\",\"name\":\"aprs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct FixedTermStack.PoolInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"para\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverWrongTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apr\",\"type\":\"uint256\"}],\"name\":\"setApr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,uint256)\":{\"details\":\"Deposit LP tokens to LPMining for bfly allocation.\"},\"getMultiplier(uint256,uint256)\":{\"details\":\"Return reward multiplier over the given _from to _to block.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingReward(uint256,address)\":{\"details\":\"View function to see pending rewards on frontend.\"},\"poolLength()\":{\"details\":\"Number of the pools\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setApr(uint256,uint256)\":{\"details\":\"Update the given pool's BFLY allocation point. Can only be called by the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256,uint256)\":{\"details\":\"Withdraw LP tokens from MasterChef.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,uint256,uint256)\":{\"notice\":\"The block number when mining starts.\"}},\"kind\":\"user\",\"methods\":{\"para()\":{\"notice\":\"The reward token!\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"FixedTermStack.sol\":\"FixedTermStack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"FixedTermStack.sol\":{\"keccak256\":\"0xa37435665c2d17d92f3df02d3a4faa6240a62d9a7a7273839d1b36a751a34a35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1390785d6812e688c84f7b1828cbb420fc087bbbcc07afcf3d30b930e246d515\",\"dweb:/ipfs/QmUFU9aAkw9P72TzpWRoqztpyWZpZxzPBwAKaXxoVDG3CB\"]},\"interfaces/IBEP20.sol\":{\"keccak256\":\"0xf36c35eca28d777110537c36ce958e6e1cba1b63e81c6db425063a9a8070b8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51a5d4ed4a94421d08abdd3c2f4df8387a17d17e89f30181e215fc72d835dc73\",\"dweb:/ipfs/QmTaw8PKYx4p9LLSjU3eaS5DM5WDGtBGKPdT5cms6k23W9\"]},\"libraries/SafeBEP20.sol\":{\"keccak256\":\"0xf0273c9b6c17cde2082d82836ffe196aef2b3d80a08359ebcf2f982074efd6ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://353692949012e08e5d1b86c6a9b17c11029ad18748c37e55e34d10e07eb22c4a\",\"dweb:/ipfs/QmbyRELSAZaeajhiFKBBcreCpLYUeEQYUrEbjs9bwZn4r9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "FixedTermStack.sol:FixedTermStack",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 828,
								"contract": "FixedTermStack.sol:FixedTermStack",
								"label": "poolInfos",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(PoolInfo)824_storage)dyn_storage"
							},
							{
								"astId": 835,
								"contract": "FixedTermStack.sol:FixedTermStack",
								"label": "userInfo",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)808_storage))"
							},
							{
								"astId": 839,
								"contract": "FixedTermStack.sol:FixedTermStack",
								"label": "para",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IBEP20)2000"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(AprInfo)813_storage)dyn_storage": {
								"base": "t_struct(AprInfo)813_storage",
								"encoding": "dynamic_array",
								"label": "struct FixedTermStack.AprInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(PoolInfo)824_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)824_storage",
								"encoding": "dynamic_array",
								"label": "struct FixedTermStack.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_contract(IBEP20)2000": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)808_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct FixedTermStack.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)808_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)808_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct FixedTermStack.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)808_storage)"
							},
							"t_struct(AprInfo)813_storage": {
								"encoding": "inplace",
								"label": "struct FixedTermStack.AprInfo",
								"members": [
									{
										"astId": 810,
										"contract": "FixedTermStack.sol:FixedTermStack",
										"label": "apr",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 812,
										"contract": "FixedTermStack.sol:FixedTermStack",
										"label": "time",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(PoolInfo)824_storage": {
								"encoding": "inplace",
								"label": "struct FixedTermStack.PoolInfo",
								"members": [
									{
										"astId": 815,
										"contract": "FixedTermStack.sol:FixedTermStack",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 817,
										"contract": "FixedTermStack.sol:FixedTermStack",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 819,
										"contract": "FixedTermStack.sol:FixedTermStack",
										"label": "duration",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 823,
										"contract": "FixedTermStack.sol:FixedTermStack",
										"label": "aprs",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_struct(AprInfo)813_storage)dyn_storage"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(UserInfo)808_storage": {
								"encoding": "inplace",
								"label": "struct FixedTermStack.UserInfo",
								"members": [
									{
										"astId": 803,
										"contract": "FixedTermStack.sol:FixedTermStack",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 805,
										"contract": "FixedTermStack.sol:FixedTermStack",
										"label": "lockStartTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 807,
										"contract": "FixedTermStack.sol:FixedTermStack",
										"label": "offset",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Deposit(address,uint256,uint256)": {
								"notice": "The block number when mining starts."
							}
						},
						"kind": "user",
						"methods": {
							"para()": {
								"notice": "The reward token!"
							}
						},
						"version": 1
					}
				}
			},
			"interfaces/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IBEP20.sol\":{\"keccak256\":\"0xf36c35eca28d777110537c36ce958e6e1cba1b63e81c6db425063a9a8070b8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51a5d4ed4a94421d08abdd3c2f4df8387a17d17e89f30181e215fc72d835dc73\",\"dweb:/ipfs/QmTaw8PKYx4p9LLSjU3eaS5DM5WDGtBGKPdT5cms6k23W9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeBEP20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/SafeBEP20.sol\":679:4059  library SafeBEP20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/SafeBEP20.sol\":679:4059  library SafeBEP20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206023ad97cf22d3acdbd59f843cfb78c093bd4fa7be3dc027abf68d4c7475f57464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206023ad97cf22d3acdbd59f843cfb78c093bd4fa7be3dc027abf68d4c7475f57464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x23 0xAD SWAP8 0xCF 0x22 0xD3 0xAC 0xDB 0xD5 SWAP16 DUP5 EXTCODECOPY 0xFB PUSH25 0xC093BD4FA7BE3DC027ABF68D4C7475F57464736F6C63430008 GT STOP CALLER ",
							"sourceMap": "679:3380:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;679:3380:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206023ad97cf22d3acdbd59f843cfb78c093bd4fa7be3dc027abf68d4c7475f57464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x23 0xAD SWAP8 0xCF 0x22 0xD3 0xAC 0xDB 0xD5 SWAP16 DUP5 EXTCODECOPY 0xFB PUSH25 0xC093BD4FA7BE3DC027ABF68D4C7475F57464736F6C63430008 GT STOP CALLER ",
							"sourceMap": "679:3380:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 679,
									"end": 4059,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206023ad97cf22d3acdbd59f843cfb78c093bd4fa7be3dc027abf68d4c7475f57464736f6c63430008110033",
									".code": [
										{
											"begin": 679,
											"end": 4059,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 679,
											"end": 4059,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"FixedTermStack.sol",
								"interfaces/IBEP20.sol",
								"libraries/SafeBEP20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeBEP20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"interfaces/IBEP20.sol\":{\"keccak256\":\"0xf36c35eca28d777110537c36ce958e6e1cba1b63e81c6db425063a9a8070b8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51a5d4ed4a94421d08abdd3c2f4df8387a17d17e89f30181e215fc72d835dc73\",\"dweb:/ipfs/QmTaw8PKYx4p9LLSjU3eaS5DM5WDGtBGKPdT5cms6k23W9\"]},\"libraries/SafeBEP20.sol\":{\"keccak256\":\"0xf0273c9b6c17cde2082d82836ffe196aef2b3d80a08359ebcf2f982074efd6ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://353692949012e08e5d1b86c6a9b17c11029ad18748c37e55e34d10e07eb22c4a\",\"dweb:/ipfs/QmbyRELSAZaeajhiFKBBcreCpLYUeEQYUrEbjs9bwZn4r9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							464
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 465,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 464,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								464
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							442
						]
					},
					"id": 443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 442,
							"linearizedBaseContracts": [
								442
							],
							"name": "Address",
							"nameLocation": "202:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1241:254:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 123,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "1465:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 122,
												"id": 128,
												"nodeType": "Return",
												"src": "1458:30:1"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1195:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:1"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1235:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 120,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:1"
									},
									"scope": 442,
									"src": "1175:320:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "2483:241:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 141,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$442",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$442",
																				"typeString": "library Address"
																			}
																		],
																		"id": 140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 139,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 144,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "2526:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:1"
											},
											{
												"assignments": [
													150,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 163,
														"src": "2578:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 157,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 151,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "2596:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 153,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "2618:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 159,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "2647:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "2431:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "2458:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:1"
									},
									"scope": 442,
									"src": "2412:312:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "3555:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "3594:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 176,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "3602:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 174,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															222,
															266
														],
														"referencedDeclaration": 266,
														"src": "3572:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 173,
												"id": 180,
												"nodeType": "Return",
												"src": "3565:79:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "3488:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "3504:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 168,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "3541:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 171,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:1"
									},
									"scope": 442,
									"src": "3466:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "4020:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 195,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "4059:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 196,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "4067:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 198,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "4076:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 194,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															222,
															266
														],
														"referencedDeclaration": 266,
														"src": "4037:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 193,
												"id": 200,
												"nodeType": "Return",
												"src": "4030:59:1"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3904:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3928:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3955:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "4006:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 191,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:1"
									},
									"scope": 442,
									"src": "3873:223:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "4601:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "4640:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "4648:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 217,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "4654:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 214,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															222,
															266
														],
														"referencedDeclaration": 266,
														"src": "4618:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 213,
												"id": 220,
												"nodeType": "Return",
												"src": "4611:94:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4498:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4522:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 206,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4549:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:1"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4587:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:1"
									},
									"scope": 442,
									"src": "4458:254:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "5139:267:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 239,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$442",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$442",
																				"typeString": "library Address"
																			}
																		],
																		"id": 238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 237,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 242,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "5182:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:1"
											},
											{
												"assignments": [
													248,
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 265,
														"src": "5241:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 250,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 265,
														"src": "5255:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 249,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 257,
												"initialValue": {
													"arguments": [
														{
															"id": 255,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "5308:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 251,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "5282:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 253,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "5301:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 259,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "5357:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 260,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "5365:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 261,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "5374:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 262,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "5386:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 258,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "5330:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 235,
												"id": 264,
												"nodeType": "Return",
												"src": "5323:76:1"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5024:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5074:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 230,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5125:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:1"
									},
									"scope": 442,
									"src": "4960:446:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "5683:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 277,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "5719:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 278,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "5727:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 276,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															283,
															312
														],
														"referencedDeclaration": 312,
														"src": "5700:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 275,
												"id": 281,
												"nodeType": "Return",
												"src": "5693:80:1"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "5611:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "5627:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:1"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "5669:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:1"
									},
									"scope": 442,
									"src": "5583:197:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "6122:168:1",
										"statements": [
											{
												"assignments": [
													296,
													298
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "6133:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 295,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "6147:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 297,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 303,
												"initialValue": {
													"arguments": [
														{
															"id": 301,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "6192:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 299,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "6174:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:1",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "6241:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 306,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "6249:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 307,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "6258:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 308,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "6270:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 304,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "6214:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 294,
												"id": 310,
												"nodeType": "Return",
												"src": "6207:76:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "6001:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "6025:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "6052:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:1"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "6108:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 292,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:1"
									},
									"scope": 442,
									"src": "5964:326:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "6566:101:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 323,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6604:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 324,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "6612:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 322,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															329,
															358
														],
														"referencedDeclaration": 358,
														"src": "6583:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 321,
												"id": 327,
												"nodeType": "Return",
												"src": "6576:84:1"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6499:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6515:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6552:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:1"
									},
									"scope": 442,
									"src": "6469:198:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "7008:170:1",
										"statements": [
											{
												"assignments": [
													342,
													344
												],
												"declarations": [
													{
														"constant": false,
														"id": 342,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 357,
														"src": "7019:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 341,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 357,
														"src": "7033:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 343,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 349,
												"initialValue": {
													"arguments": [
														{
															"id": 347,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "7080:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 345,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "7060:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:1",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 351,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "7129:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 352,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "7137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 353,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "7146:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 354,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "7158:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 350,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "7102:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 340,
												"id": 356,
												"nodeType": "Return",
												"src": "7095:76:1"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "6892:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "6916:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 333,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "6943:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:1"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "6994:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:1"
									},
									"scope": 442,
									"src": "6853:325:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "7660:434:1",
										"statements": [
											{
												"condition": {
													"id": 372,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 363,
													"src": "7674:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 394,
													"nodeType": "Block",
													"src": "8030:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 390,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "8052:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 391,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "8064:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 389,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "8044:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 393,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:1"
														}
													]
												},
												"id": 395,
												"nodeType": "IfStatement",
												"src": "7670:418:1",
												"trueBody": {
													"id": 388,
													"nodeType": "Block",
													"src": "7683:341:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 373,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "7701:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 385,
															"nodeType": "IfStatement",
															"src": "7697:286:1",
															"trueBody": {
																"id": 384,
																"nodeType": "Block",
																"src": "7725:258:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 379,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 361,
																							"src": "7927:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 378,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 130,
																						"src": "7916:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 380,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 381,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 377,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 383,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 386,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "8003:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 371,
															"id": 387,
															"nodeType": "Return",
															"src": "7996:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:1",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "7511:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "7535:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "7557:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 364,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "7590:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 366,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:1"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "7646:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:1"
									},
									"scope": 442,
									"src": "7466:628:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "8475:135:1",
										"statements": [
											{
												"condition": {
													"id": 409,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 400,
													"src": "8489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 418,
													"nodeType": "Block",
													"src": "8546:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 414,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "8568:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 415,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "8580:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 413,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "8560:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 417,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:1"
														}
													]
												},
												"id": 419,
												"nodeType": "IfStatement",
												"src": "8485:119:1",
												"trueBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "8498:42:1",
													"statements": [
														{
															"expression": {
																"id": 410,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "8519:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 408,
															"id": 411,
															"nodeType": "Return",
															"src": "8512:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:1",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "8350:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "8372:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 401,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "8405:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 403,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "8461:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:1"
									},
									"scope": 442,
									"src": "8315:295:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "8699:457:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 428,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "8775:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "9105:45:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 435,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "9126:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 434,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:1"
														}
													]
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "8771:379:1",
												"trueBody": {
													"id": 433,
													"nodeType": "Block",
													"src": "8798:301:1",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:1"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:1",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:1"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:1"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 423,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:1",
																	"valueSize": 1
																},
																{
																	"declaration": 423,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:1",
																	"valueSize": 1
																}
															],
															"id": 432,
															"nodeType": "InlineAssembly",
															"src": "8947:142:1"
														}
													]
												}
											}
										]
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "8633:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 422,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "8658:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 424,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:1"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:1"
									},
									"scope": 442,
									"src": "8616:540:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 443,
							"src": "194:8964:1",
							"usedErrors": []
						}
					],
					"src": "101:9058:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							464
						]
					},
					"id": 465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 445,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 464,
							"linearizedBaseContracts": [
								464
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 450,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 449,
												"id": 452,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 464,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 459,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 458,
												"id": 461,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 456,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 464,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 465,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							776
						]
					},
					"id": 777,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 466,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 467,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 776,
							"linearizedBaseContracts": [
								776
							],
							"name": "SafeMath",
							"nameLocation": "490:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "717:140:3",
										"statements": [
											{
												"id": 497,
												"nodeType": "UncheckedBlock",
												"src": "727:124:3",
												"statements": [
													{
														"assignments": [
															480
														],
														"declarations": [
															{
																"constant": false,
																"id": 480,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 497,
																"src": "751:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 479,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 484,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 481,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "763:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 482,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "767:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "786:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 486,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "790:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 492,
														"nodeType": "IfStatement",
														"src": "782:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 478,
															"id": 491,
															"nodeType": "Return",
															"src": "793:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 494,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "838:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 495,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 478,
														"id": 496,
														"nodeType": "Return",
														"src": "824:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "657:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "668:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:3"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "702:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 474,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "708:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:3"
									},
									"scope": 776,
									"src": "641:216:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "1078:113:3",
										"statements": [
											{
												"id": 525,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 511,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "1116:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 512,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "1120:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 518,
														"nodeType": "IfStatement",
														"src": "1112:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 516,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 510,
															"id": 517,
															"nodeType": "Return",
															"src": "1123:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 520,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 502,
																		"src": "1168:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 521,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "1172:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 523,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 510,
														"id": 524,
														"nodeType": "Return",
														"src": "1154:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:3",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "1018:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "1029:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:3"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "1063:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "1069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:3"
									},
									"scope": 776,
									"src": "1002:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "1415:417:3",
										"statements": [
											{
												"id": 567,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 539,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "1683:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 546,
														"nodeType": "IfStatement",
														"src": "1679:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 544,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 538,
															"id": 545,
															"nodeType": "Return",
															"src": "1691:16:3"
														}
													},
													{
														"assignments": [
															548
														],
														"declarations": [
															{
																"constant": false,
																"id": 548,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 567,
																"src": "1721:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 547,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 552,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 549,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "1733:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 550,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "1737:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 553,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "1756:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 554,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "1760:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 556,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "1765:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 562,
														"nodeType": "IfStatement",
														"src": "1752:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 560,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 538,
															"id": 561,
															"nodeType": "Return",
															"src": "1768:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 564,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "1813:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 565,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 538,
														"id": 566,
														"nodeType": "Return",
														"src": "1799:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1355:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1366:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:3"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1400:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 534,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1406:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:3"
									},
									"scope": 776,
									"src": "1339:493:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "2057:114:3",
										"statements": [
											{
												"id": 595,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 581,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "2095:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 588,
														"nodeType": "IfStatement",
														"src": "2091:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 586,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 580,
															"id": 587,
															"nodeType": "Return",
															"src": "2103:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 590,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "2148:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 591,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "2152:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 593,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 580,
														"id": 594,
														"nodeType": "Return",
														"src": "2134:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1997:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "2008:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:3"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "2042:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 576,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "2048:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:3"
									},
									"scope": 776,
									"src": "1981:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "2406:114:3",
										"statements": [
											{
												"id": 623,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 609,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "2444:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 616,
														"nodeType": "IfStatement",
														"src": "2440:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 614,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 608,
															"id": 615,
															"nodeType": "Return",
															"src": "2452:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 618,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "2497:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 619,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "2501:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 621,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 608,
														"id": 622,
														"nodeType": "Return",
														"src": "2483:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2346:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2357:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:3"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2391:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 604,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2397:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:3"
									},
									"scope": 776,
									"src": "2330:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "2822:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 635,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "2839:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 636,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2843:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 634,
												"id": 638,
												"nodeType": "Return",
												"src": "2832:12:3"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2768:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2779:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:3"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2813:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:3"
									},
									"scope": 776,
									"src": "2755:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "3189:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 650,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "3206:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 651,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "3210:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 653,
												"nodeType": "Return",
												"src": "3199:12:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "3135:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "3146:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "3180:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:3"
									},
									"scope": 776,
									"src": "3122:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "3532:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 665,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "3549:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 666,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "3553:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 664,
												"id": 668,
												"nodeType": "Return",
												"src": "3542:12:3"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "3478:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "3489:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:3"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "3523:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:3"
									},
									"scope": 776,
									"src": "3465:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "3917:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 680,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "3934:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 681,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "3938:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 679,
												"id": 683,
												"nodeType": "Return",
												"src": "3927:12:3"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "3863:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "3874:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:3"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "3908:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:3"
									},
									"scope": 776,
									"src": "3850:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "4466:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 695,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "4483:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 696,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "4487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 694,
												"id": 698,
												"nodeType": "Return",
												"src": "4476:12:3"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "4412:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "4423:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:3"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "4457:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:3"
									},
									"scope": 776,
									"src": "4399:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "5084:106:3",
										"statements": [
											{
												"id": 723,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 713,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 705,
																		"src": "5126:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 714,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 703,
																		"src": "5131:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 716,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "5134:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 712,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 718,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 719,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 703,
																"src": "5168:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 720,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "5172:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 711,
														"id": 722,
														"nodeType": "Return",
														"src": "5161:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "4981:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5000:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5019:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 706,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5075:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:3"
									},
									"scope": 776,
									"src": "4959:231:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "5799:105:3",
										"statements": [
											{
												"id": 748,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 738,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "5841:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 741,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "5848:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 737,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 743,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 744,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "5882:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 745,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5886:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 736,
														"id": 747,
														"nodeType": "Return",
														"src": "5875:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5696:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5715:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5734:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 731,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:3"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5790:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:3"
									},
									"scope": 776,
									"src": "5674:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "6675:105:3",
										"statements": [
											{
												"id": 773,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 763,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "6717:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 766,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "6724:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 762,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 768,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 769,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 753,
																"src": "6758:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 770,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "6762:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 761,
														"id": 772,
														"nodeType": "Return",
														"src": "6751:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6572:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6591:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6610:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 756,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:3"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6666:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:3"
									},
									"scope": 776,
									"src": "6550:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 777,
							"src": "482:6300:3",
							"usedErrors": []
						}
					],
					"src": "107:6676:3"
				},
				"id": 3
			},
			"FixedTermStack.sol": {
				"ast": {
					"absolutePath": "FixedTermStack.sol",
					"exportedSymbols": {
						"Address": [
							442
						],
						"Context": [
							464
						],
						"FixedTermStack": [
							1899
						],
						"IBEP20": [
							2000
						],
						"Ownable": [
							112
						],
						"SafeBEP20": [
							2219
						],
						"SafeMath": [
							776
						]
					},
					"id": 1900,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 778,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 779,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1900,
							"sourceUnit": 777,
							"src": "60:57:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1900,
							"sourceUnit": 443,
							"src": "119:51:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 781,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1900,
							"sourceUnit": 113,
							"src": "172:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IBEP20.sol",
							"file": "./interfaces/IBEP20.sol",
							"id": 782,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1900,
							"sourceUnit": 2001,
							"src": "230:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/SafeBEP20.sol",
							"file": "./libraries/SafeBEP20.sol",
							"id": 783,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1900,
							"sourceUnit": 2220,
							"src": "265:35:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 784,
										"name": "Ownable",
										"nameLocations": [
											"333:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "333:7:4"
									},
									"id": 785,
									"nodeType": "InheritanceSpecifier",
									"src": "333:7:4"
								}
							],
							"canonicalName": "FixedTermStack",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1899,
							"linearizedBaseContracts": [
								1899,
								112,
								464
							],
							"name": "FixedTermStack",
							"nameLocation": "315:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 788,
									"libraryName": {
										"id": 786,
										"name": "SafeMath",
										"nameLocations": [
											"410:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 776,
										"src": "410:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "404:27:4",
									"typeName": {
										"id": 787,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "423:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 792,
									"libraryName": {
										"id": 789,
										"name": "SafeBEP20",
										"nameLocations": [
											"507:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2219,
										"src": "507:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "501:27:4",
									"typeName": {
										"id": 791,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 790,
											"name": "IBEP20",
											"nameLocations": [
												"521:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2000,
											"src": "521:6:4"
										},
										"referencedDeclaration": 2000,
										"src": "521:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$2000",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "918f8674",
									"id": 795,
									"mutability": "constant",
									"name": "DENOMINATOR",
									"nameLocation": "560:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1899,
									"src": "536:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 793,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "536:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 794,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "574:8:4",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ec342ad0",
									"id": 798,
									"mutability": "constant",
									"name": "BASE",
									"nameLocation": "617:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1899,
									"src": "593:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 796,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "593:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 797,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "624:3:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e3d0b2bf",
									"id": 801,
									"mutability": "constant",
									"name": "DENOMINATOR_TEST",
									"nameLocation": "660:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 1899,
									"src": "636:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 799,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "636:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 800,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "679:10:4",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_600_by_1",
											"typeString": "int_const 600"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "FixedTermStack.UserInfo",
									"id": 808,
									"members": [
										{
											"constant": false,
											"id": 803,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1486:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 808,
											"src": "1478:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 802,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1478:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 805,
											"mutability": "mutable",
											"name": "lockStartTime",
											"nameLocation": "1560:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 808,
											"src": "1552:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 804,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1552:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 807,
											"mutability": "mutable",
											"name": "offset",
											"nameLocation": "1592:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 808,
											"src": "1584:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 806,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1584:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "1458:8:4",
									"nodeType": "StructDefinition",
									"scope": 1899,
									"src": "1451:156:4",
									"visibility": "public"
								},
								{
									"canonicalName": "FixedTermStack.AprInfo",
									"id": 813,
									"members": [
										{
											"constant": false,
											"id": 810,
											"mutability": "mutable",
											"name": "apr",
											"nameLocation": "1649:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 813,
											"src": "1641:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 809,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1641:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 812,
											"mutability": "mutable",
											"name": "time",
											"nameLocation": "1671:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 813,
											"src": "1663:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 811,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1663:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AprInfo",
									"nameLocation": "1622:7:4",
									"nodeType": "StructDefinition",
									"scope": 1899,
									"src": "1615:68:4",
									"visibility": "public"
								},
								{
									"canonicalName": "FixedTermStack.PoolInfo",
									"id": 824,
									"members": [
										{
											"constant": false,
											"id": 815,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "1727:2:4",
											"nodeType": "VariableDeclaration",
											"scope": 824,
											"src": "1719:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 814,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1719:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 817,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1748:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 824,
											"src": "1740:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 816,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1740:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 819,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "1773:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 824,
											"src": "1765:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 818,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1765:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 823,
											"mutability": "mutable",
											"name": "aprs",
											"nameLocation": "1802:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 824,
											"src": "1792:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage_ptr",
												"typeString": "struct FixedTermStack.AprInfo[]"
											},
											"typeName": {
												"baseType": {
													"id": 821,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 820,
														"name": "AprInfo",
														"nameLocations": [
															"1792:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 813,
														"src": "1792:7:4"
													},
													"referencedDeclaration": 813,
													"src": "1792:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AprInfo_$813_storage_ptr",
														"typeString": "struct FixedTermStack.AprInfo"
													}
												},
												"id": 822,
												"nodeType": "ArrayTypeName",
												"src": "1792:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage_ptr",
													"typeString": "struct FixedTermStack.AprInfo[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "1700:8:4",
									"nodeType": "StructDefinition",
									"scope": 1899,
									"src": "1693:121:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 828,
									"mutability": "mutable",
									"name": "poolInfos",
									"nameLocation": "1833:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1899,
									"src": "1822:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage",
										"typeString": "struct FixedTermStack.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 826,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 825,
												"name": "PoolInfo",
												"nameLocations": [
													"1822:8:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 824,
												"src": "1822:8:4"
											},
											"referencedDeclaration": 824,
											"src": "1822:8:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
												"typeString": "struct FixedTermStack.PoolInfo"
											}
										},
										"id": 827,
										"nodeType": "ArrayTypeName",
										"src": "1822:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage_ptr",
											"typeString": "struct FixedTermStack.PoolInfo[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 835,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "1909:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1899,
									"src": "1851:66:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$808_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct FixedTermStack.UserInfo))"
									},
									"typeName": {
										"id": 834,
										"keyType": {
											"id": 829,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1860:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1851:50:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$808_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct FixedTermStack.UserInfo))"
										},
										"valueType": {
											"id": 833,
											"keyType": {
												"id": 830,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1880:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1871:29:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$808_storage_$",
												"typeString": "mapping(address => struct FixedTermStack.UserInfo)"
											},
											"valueType": {
												"id": 832,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 831,
													"name": "UserInfo",
													"nameLocations": [
														"1891:8:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 808,
													"src": "1891:8:4"
												},
												"referencedDeclaration": 808,
												"src": "1891:8:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
													"typeString": "struct FixedTermStack.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "1928:38:4",
										"text": " The reward token!"
									},
									"functionSelector": "3e3cca90",
									"id": 839,
									"mutability": "mutable",
									"name": "para",
									"nameLocation": "1986:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1899,
									"src": "1972:18:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$2000",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 838,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 837,
											"name": "IBEP20",
											"nameLocations": [
												"1972:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2000,
											"src": "1972:6:4"
										},
										"referencedDeclaration": 2000,
										"src": "1972:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$2000",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "2003:57:4",
										"text": " The block number when mining starts."
									},
									"eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
									"id": 848,
									"name": "Deposit",
									"nameLocation": "2109:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2133:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2117:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2155:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2139:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2168:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2160:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2116:59:4"
									},
									"src": "2103:73:4"
								},
								{
									"anonymous": false,
									"eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
									"id": 856,
									"name": "Withdraw",
									"nameLocation": "2188:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2213:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "2197:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2197:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2235:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "2219:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2248:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "2240:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2196:59:4"
									},
									"src": "2182:74:4"
								},
								{
									"anonymous": false,
									"eventSelector": "4d93067d0d628fe42c457623322c0f22ad92f71762a2eebe06e2a0e7d2aa61c7",
									"id": 864,
									"name": "AddPool",
									"nameLocation": "2268:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2292:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2276:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2276:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"indexed": true,
												"mutability": "mutable",
												"name": "apr",
												"nameLocation": "2312:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2296:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2296:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"indexed": true,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "2333:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2317:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2317:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2275:67:4"
									},
									"src": "2262:81:4"
								},
								{
									"anonymous": false,
									"eventSelector": "6ec6d062a87c4b42fe40885d2e8955d89ab9275e14d24354dd2b6b130043bba5",
									"id": 870,
									"name": "SetApr",
									"nameLocation": "2355:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2378:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2362:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2362:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"indexed": true,
												"mutability": "mutable",
												"name": "apr",
												"nameLocation": "2398:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2382:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2361:41:4"
									},
									"src": "2349:54:4"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "2455:57:4",
										"statements": [
											{
												"expression": {
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 876,
														"name": "para",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "2466:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$2000",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 877,
														"name": "_para",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "2473:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$2000",
															"typeString": "contract IBEP20"
														}
													},
													"src": "2466:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "2466:12:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 880,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "2491:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2491:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "2491:13:4"
											}
										]
									},
									"id": 884,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "_para",
												"nameLocation": "2440:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2433:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2000",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 872,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 871,
														"name": "IBEP20",
														"nameLocations": [
															"2433:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "2433:6:4"
													},
													"referencedDeclaration": 2000,
													"src": "2433:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:32:4"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:0:4"
									},
									"scope": 1899,
									"src": "2411:101:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "2552:235:4",
										"statements": [
											{
												"assignments": [
													888
												],
												"declarations": [
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "_id",
														"nameLocation": "2570:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "2565:8:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 887,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2565:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 891,
												"initialValue": {
													"expression": {
														"id": 889,
														"name": "poolInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "2576:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage",
															"typeString": "struct FixedTermStack.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2586:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2576:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2565:27:4"
											},
											{
												"assignments": [
													894
												],
												"declarations": [
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "2620:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "2603:18:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
															"typeString": "struct FixedTermStack.PoolInfo"
														},
														"typeName": {
															"id": 893,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 892,
																"name": "PoolInfo",
																"nameLocations": [
																	"2603:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 824,
																"src": "2603:8:4"
															},
															"referencedDeclaration": 824,
															"src": "2603:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 898,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 895,
															"name": "poolInfos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "2624:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage",
																"typeString": "struct FixedTermStack.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2634:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2624:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage_ptr_$returns$_t_struct$_PoolInfo_$824_storage_$bound_to$_t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct FixedTermStack.PoolInfo storage ref[] storage pointer) returns (struct FixedTermStack.PoolInfo storage ref)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2624:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$824_storage",
														"typeString": "struct FixedTermStack.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2603:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "3230",
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2673:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																{
																	"expression": {
																		"id": 906,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2677:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2683:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2677:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 904,
																"name": "AprInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "2665:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_AprInfo_$813_storage_ptr_$",
																	"typeString": "type(struct FixedTermStack.AprInfo storage pointer)"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2665:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AprInfo_$813_memory_ptr",
																"typeString": "struct FixedTermStack.AprInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AprInfo_$813_memory_ptr",
																"typeString": "struct FixedTermStack.AprInfo memory"
															}
														],
														"expression": {
															"expression": {
																"id": 899,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "2653:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																	"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2655:4:4",
															"memberName": "aprs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 823,
															"src": "2653:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
															}
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2660:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2653:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage_ptr_$_t_struct$_AprInfo_$813_storage_$returns$__$bound_to$_t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct FixedTermStack.AprInfo storage ref[] storage pointer,struct FixedTermStack.AprInfo storage ref)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "2653:41:4"
											},
											{
												"expression": {
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 911,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "2705:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo storage pointer"
															}
														},
														"id": 913,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2707:8:4",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 819,
														"src": "2705:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_300_by_1",
															"typeString": "int_const 300"
														},
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "35",
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2718:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2722:9:4",
															"subdenomination": "minutes",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "1"
														},
														"src": "2718:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_300_by_1",
															"typeString": "int_const 300"
														}
													},
													"src": "2705:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "2705:26:4"
											},
											{
												"expression": {
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 919,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "2742:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo storage pointer"
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2744:2:4",
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 815,
														"src": "2742:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 922,
														"name": "_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "2749:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2742:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "2742:10:4"
											},
											{
												"expression": {
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 925,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "2763:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo storage pointer"
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2765:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 817,
														"src": "2763:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2774:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2763:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "2763:12:4"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialized",
									"nameLocation": "2531:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2542:2:4"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2552:0:4"
									},
									"scope": 1899,
									"src": "2522:265:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "2911:42:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 938,
														"name": "poolInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "2929:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage",
															"typeString": "struct FixedTermStack.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2939:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2929:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 937,
												"id": 940,
												"nodeType": "Return",
												"src": "2922:23:4"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "2806:45:4",
										"text": " @dev Number of the pools"
									},
									"functionSelector": "081e3eda",
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "2866:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2876:2:4"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2902:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2901:9:4"
									},
									"scope": 1899,
									"src": "2857:96:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "3040:41:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 950,
														"name": "poolInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "3058:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage",
															"typeString": "struct FixedTermStack.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 952,
													"indexExpression": {
														"id": 951,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3068:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3058:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$824_storage",
														"typeString": "struct FixedTermStack.PoolInfo storage ref"
													}
												},
												"functionReturnParameters": 949,
												"id": 953,
												"nodeType": "Return",
												"src": "3051:22:4"
											}
										]
									},
									"functionSelector": "2f380b35",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolInfo",
									"nameLocation": "2970:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "2990:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "2982:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2981:14:4"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "info",
												"nameLocation": "3035:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3019:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolInfo_$824_memory_ptr",
													"typeString": "struct FixedTermStack.PoolInfo"
												},
												"typeName": {
													"id": 947,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 946,
														"name": "PoolInfo",
														"nameLocations": [
															"3019:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 824,
														"src": "3019:8:4"
													},
													"referencedDeclaration": 824,
													"src": "3019:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
														"typeString": "struct FixedTermStack.PoolInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3018:22:4"
									},
									"scope": 1899,
									"src": "2961:120:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "3268:40:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 967,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "3294:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 965,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "3286:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3290:3:4",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 655,
														"src": "3286:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3286:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 964,
												"id": 969,
												"nodeType": "Return",
												"src": "3279:21:4"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "3096:85:4",
										"text": " @dev Return reward multiplier over the given _from to _to block."
									},
									"functionSelector": "8dbb1e3a",
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nameLocation": "3196:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3218:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "3210:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3233:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "3225:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3225:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:28:4"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "3259:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3259:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3258:9:4"
									},
									"scope": 1899,
									"src": "3187:121:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "3488:1344:4",
										"statements": [
											{
												"assignments": [
													983
												],
												"declarations": [
													{
														"constant": false,
														"id": 983,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "3516:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "3499:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
															"typeString": "struct FixedTermStack.PoolInfo"
														},
														"typeName": {
															"id": 982,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 981,
																"name": "PoolInfo",
																"nameLocations": [
																	"3499:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 824,
																"src": "3499:8:4"
															},
															"referencedDeclaration": 824,
															"src": "3499:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 987,
												"initialValue": {
													"baseExpression": {
														"id": 984,
														"name": "poolInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "3523:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage",
															"typeString": "struct FixedTermStack.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 986,
													"indexExpression": {
														"id": 985,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "3533:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3523:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$824_storage",
														"typeString": "struct FixedTermStack.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3499:39:4"
											},
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "3566:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "3549:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
															"typeString": "struct FixedTermStack.UserInfo"
														},
														"typeName": {
															"id": 989,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 988,
																"name": "UserInfo",
																"nameLocations": [
																	"3549:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 808,
																"src": "3549:8:4"
															},
															"referencedDeclaration": 808,
															"src": "3549:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																"typeString": "struct FixedTermStack.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 996,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 991,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "3573:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$808_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct FixedTermStack.UserInfo storage ref))"
															}
														},
														"id": 993,
														"indexExpression": {
															"id": 992,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "3582:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3573:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$808_storage_$",
															"typeString": "mapping(address => struct FixedTermStack.UserInfo storage ref)"
														}
													},
													"id": 995,
													"indexExpression": {
														"id": 994,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "3588:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3573:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$808_storage",
														"typeString": "struct FixedTermStack.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3549:45:4"
											},
											{
												"assignments": [
													998
												],
												"declarations": [
													{
														"constant": false,
														"id": 998,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "3613:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "3605:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 997,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3605:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1002,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 999,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "3619:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo storage pointer"
															}
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3624:4:4",
														"memberName": "aprs",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 823,
														"src": "3619:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
															"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3629:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3619:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3605:30:4"
											},
											{
												"assignments": [
													1004
												],
												"declarations": [
													{
														"constant": false,
														"id": 1004,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "3654:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "3646:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1003,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3646:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1005,
												"nodeType": "VariableDeclarationStatement",
												"src": "3646:18:4"
											},
											{
												"assignments": [
													1007
												],
												"declarations": [
													{
														"constant": false,
														"id": 1007,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "3680:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "3675:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1006,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3675:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1008,
												"nodeType": "VariableDeclarationStatement",
												"src": "3675:9:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 1009,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "3699:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																		"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3704:4:4",
																"memberName": "aprs",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 823,
																"src": "3699:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																	"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																}
															},
															"id": 1014,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1011,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "3709:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3713:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3709:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3699:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																"typeString": "struct FixedTermStack.AprInfo storage ref"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3716:4:4",
														"memberName": "time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 812,
														"src": "3699:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1016,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "3723:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																"typeString": "struct FixedTermStack.UserInfo storage pointer"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3728:13:4",
														"memberName": "lockStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 805,
														"src": "3723:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3699:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1058,
												"nodeType": "IfStatement",
												"src": "3695:302:4",
												"trueBody": {
													"id": 1057,
													"nodeType": "Block",
													"src": "3742:255:4",
													"statements": [
														{
															"expression": {
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1019,
																	"name": "multiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "3757:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1021,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 990,
																				"src": "3784:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																					"typeString": "struct FixedTermStack.UserInfo storage pointer"
																				}
																			},
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3789:13:4",
																			"memberName": "lockStartTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 805,
																			"src": "3784:18:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1023,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "3803:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3809:9:4",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "3803:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1020,
																		"name": "getMultiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "3770:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3770:49:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3757:62:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1027,
															"nodeType": "ExpressionStatement",
															"src": "3757:62:4"
														},
														{
															"expression": {
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1028,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "3834:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1040,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 990,
																				"src": "3884:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																					"typeString": "struct FixedTermStack.UserInfo storage pointer"
																				}
																			},
																			"id": 1041,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3889:6:4",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 803,
																			"src": "3884:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"expression": {
																								"id": 1031,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 983,
																								"src": "3858:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																									"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																								}
																							},
																							"id": 1032,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3863:4:4",
																							"memberName": "aprs",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 823,
																							"src": "3858:9:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																								"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																							}
																						},
																						"id": 1036,
																						"indexExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1035,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1033,
																								"name": "len",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 998,
																								"src": "3868:3:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 1034,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3872:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "3868:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3858:16:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																							"typeString": "struct FixedTermStack.AprInfo storage ref"
																						}
																					},
																					"id": 1037,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3875:3:4",
																					"memberName": "apr",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 810,
																					"src": "3858:20:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1029,
																					"name": "multiplier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1004,
																					"src": "3843:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1030,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3854:3:4",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 670,
																				"src": "3843:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3843:36:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3880:3:4",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 670,
																		"src": "3843:40:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3843:53:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3834:62:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1044,
															"nodeType": "ExpressionStatement",
															"src": "3834:62:4"
														},
														{
															"expression": {
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1045,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "3911:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 1051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3953:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1048,
																					"name": "DENOMINATOR_TEST",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 801,
																					"src": "3931:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1046,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 979,
																					"src": "3920:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1047,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3927:3:4",
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 685,
																				"src": "3920:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3920:28:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3949:3:4",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 685,
																		"src": "3920:32:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3920:37:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3911:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1054,
															"nodeType": "ExpressionStatement",
															"src": "3911:46:4"
														},
														{
															"expression": {
																"id": 1055,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "3979:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 980,
															"id": 1056,
															"nodeType": "Return",
															"src": "3972:13:4"
														}
													]
												}
											},
											{
												"body": {
													"id": 1152,
													"nodeType": "Block",
													"src": "4048:532:4",
													"statements": [
														{
															"condition": {
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4069:5:4",
																"subExpression": {
																	"id": 1072,
																	"name": "flag",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "4070:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1109,
															"nodeType": "IfStatement",
															"src": "4065:247:4",
															"trueBody": {
																"id": 1108,
																"nodeType": "Block",
																"src": "4075:237:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1074,
																				"name": "multiplier",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1004,
																				"src": "4094:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1076,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 990,
																							"src": "4121:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																								"typeString": "struct FixedTermStack.UserInfo storage pointer"
																							}
																						},
																						"id": 1077,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4126:13:4",
																						"memberName": "lockStartTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 805,
																						"src": "4121:18:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"expression": {
																									"id": 1078,
																									"name": "pool",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 983,
																									"src": "4141:4:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																										"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																									}
																								},
																								"id": 1079,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "4146:4:4",
																								"memberName": "aprs",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 823,
																								"src": "4141:9:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																									"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																								}
																							},
																							"id": 1083,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1082,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1080,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1060,
																									"src": "4151:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1081,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "4153:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "4151:3:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "4141:14:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																								"typeString": "struct FixedTermStack.AprInfo storage ref"
																							}
																						},
																						"id": 1084,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4156:4:4",
																						"memberName": "time",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 812,
																						"src": "4141:19:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1075,
																					"name": "getMultiplier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "4107:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4107:54:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4094:67:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1087,
																		"nodeType": "ExpressionStatement",
																		"src": "4094:67:4"
																	},
																	{
																		"expression": {
																			"id": 1101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1088,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 979,
																				"src": "4180:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1098,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 990,
																							"src": "4226:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																								"typeString": "struct FixedTermStack.UserInfo storage pointer"
																							}
																						},
																						"id": 1099,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4231:6:4",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 803,
																						"src": "4226:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"baseExpression": {
																										"expression": {
																											"id": 1091,
																											"name": "pool",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 983,
																											"src": "4204:4:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																												"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																											}
																										},
																										"id": 1092,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "4209:4:4",
																										"memberName": "aprs",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 823,
																										"src": "4204:9:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																											"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																										}
																									},
																									"id": 1094,
																									"indexExpression": {
																										"id": 1093,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1060,
																										"src": "4214:1:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "4204:12:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																										"typeString": "struct FixedTermStack.AprInfo storage ref"
																									}
																								},
																								"id": 1095,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "4217:3:4",
																								"memberName": "apr",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 810,
																								"src": "4204:16:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1089,
																								"name": "multiplier",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1004,
																								"src": "4189:10:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1090,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4200:3:4",
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 670,
																							"src": "4189:14:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1096,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4189:32:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1097,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4222:3:4",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 670,
																					"src": "4189:36:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4189:49:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4180:58:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1102,
																		"nodeType": "ExpressionStatement",
																		"src": "4180:58:4"
																	},
																	{
																		"expression": {
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1103,
																				"name": "flag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1007,
																				"src": "4257:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1104,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4264:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "4257:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1106,
																		"nodeType": "ExpressionStatement",
																		"src": "4257:11:4"
																	},
																	{
																		"id": 1107,
																		"nodeType": "Continue",
																		"src": "4287:8:4"
																	}
																]
															}
														},
														{
															"assignments": [
																1111
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1111,
																	"mutability": "mutable",
																	"name": "tempNumber",
																	"nameLocation": "4336:10:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1152,
																	"src": "4328:18:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1110,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4328:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1126,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 1113,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "4363:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																						"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																					}
																				},
																				"id": 1114,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4368:4:4",
																				"memberName": "aprs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 823,
																				"src": "4363:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																					"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1116,
																			"indexExpression": {
																				"id": 1115,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1060,
																				"src": "4373:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4363:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																				"typeString": "struct FixedTermStack.AprInfo storage ref"
																			}
																		},
																		"id": 1117,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4376:4:4",
																		"memberName": "time",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 812,
																		"src": "4363:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 1118,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "4382:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																						"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																					}
																				},
																				"id": 1119,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4387:4:4",
																				"memberName": "aprs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 823,
																				"src": "4382:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																					"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1123,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1120,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1060,
																					"src": "4392:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1121,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4394:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "4392:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4382:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																				"typeString": "struct FixedTermStack.AprInfo storage ref"
																			}
																		},
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4397:4:4",
																		"memberName": "time",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 812,
																		"src": "4382:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1112,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "4349:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4349:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4328:74:4"
														},
														{
															"expression": {
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1127,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "4419:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1139,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 990,
																						"src": "4475:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																							"typeString": "struct FixedTermStack.UserInfo storage pointer"
																						}
																					},
																					"id": 1140,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4480:6:4",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 803,
																					"src": "4475:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 1132,
																										"name": "pool",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 983,
																										"src": "4453:4:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																											"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																										}
																									},
																									"id": 1133,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "4458:4:4",
																									"memberName": "aprs",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 823,
																									"src": "4453:9:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																										"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																									}
																								},
																								"id": 1135,
																								"indexExpression": {
																									"id": 1134,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1060,
																									"src": "4463:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "4453:12:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																									"typeString": "struct FixedTermStack.AprInfo storage ref"
																								}
																							},
																							"id": 1136,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4466:3:4",
																							"memberName": "apr",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 810,
																							"src": "4453:16:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1130,
																							"name": "tempNumber",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1111,
																							"src": "4438:10:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1131,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4449:3:4",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 670,
																						"src": "4438:14:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1137,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4438:32:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4471:3:4",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 670,
																				"src": "4438:36:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4438:49:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1128,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 979,
																			"src": "4427:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4434:3:4",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 640,
																		"src": "4427:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4427:61:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4419:69:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1144,
															"nodeType": "ExpressionStatement",
															"src": "4419:69:4"
														},
														{
															"expression": {
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1145,
																	"name": "multiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "4505:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1148,
																			"name": "tempNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1111,
																			"src": "4533:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1146,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1004,
																			"src": "4518:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4529:3:4",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 640,
																		"src": "4518:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4518:26:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4505:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1151,
															"nodeType": "ExpressionStatement",
															"src": "4505:39:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1064,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "4035:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1065,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "4038:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4042:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4038:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4035:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1153,
												"initializationExpression": {
													"assignments": [
														1060
													],
													"declarations": [
														{
															"constant": false,
															"id": 1060,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4019:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1153,
															"src": "4014:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1059,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4014:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1063,
													"initialValue": {
														"expression": {
															"id": 1061,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "4023:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																"typeString": "struct FixedTermStack.UserInfo storage pointer"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4028:6:4",
														"memberName": "offset",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 807,
														"src": "4023:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4014:20:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4044:3:4",
														"subExpression": {
															"id": 1069,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "4044:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1071,
													"nodeType": "ExpressionStatement",
													"src": "4044:3:4"
												},
												"nodeType": "ForStatement",
												"src": "4009:571:4"
											},
											{
												"expression": {
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1154,
														"name": "multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "4592:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1156,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "4619:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																				"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																			}
																		},
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4624:4:4",
																		"memberName": "aprs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 823,
																		"src": "4619:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																			"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																		}
																	},
																	"id": 1161,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1158,
																			"name": "len",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 998,
																			"src": "4629:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4633:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4629:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4619:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																		"typeString": "struct FixedTermStack.AprInfo storage ref"
																	}
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4636:4:4",
																"memberName": "time",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 812,
																"src": "4619:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1163,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4642:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4648:6:4",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "4642:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1155,
															"name": "getMultiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "4605:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4605:50:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4592:63:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "4592:63:4"
											},
											{
												"expression": {
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1168,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "4666:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 1182,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 990,
																			"src": "4726:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																				"typeString": "struct FixedTermStack.UserInfo storage pointer"
																			}
																		},
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4731:6:4",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 803,
																		"src": "4726:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1173,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 983,
																							"src": "4700:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																								"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																							}
																						},
																						"id": 1174,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4705:4:4",
																						"memberName": "aprs",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 823,
																						"src": "4700:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																							"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																						}
																					},
																					"id": 1178,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1177,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1175,
																							"name": "len",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 998,
																							"src": "4710:3:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1176,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4714:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4710:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4700:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																						"typeString": "struct FixedTermStack.AprInfo storage ref"
																					}
																				},
																				"id": 1179,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4717:3:4",
																				"memberName": "apr",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 810,
																				"src": "4700:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1171,
																				"name": "multiplier",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1004,
																				"src": "4685:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4696:3:4",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 670,
																			"src": "4685:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4685:36:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4722:3:4",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 670,
																	"src": "4685:40:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4685:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1169,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "4674:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4681:3:4",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 640,
															"src": "4674:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4674:65:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4666:73:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "4666:73:4"
											},
											{
												"expression": {
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1188,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "4750:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "313030",
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4792:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1191,
																		"name": "DENOMINATOR_TEST",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "4770:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1189,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "4759:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4766:3:4",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 685,
																	"src": "4759:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4759:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4788:3:4",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 685,
															"src": "4759:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4759:37:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4750:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "4750:46:4"
											},
											{
												"expression": {
													"id": 1198,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 979,
													"src": "4816:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 980,
												"id": 1199,
												"nodeType": "Return",
												"src": "4809:13:4"
											}
										]
									},
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "3316:75:4",
										"text": " @dev View function to see pending rewards on frontend."
									},
									"functionSelector": "98969e82",
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingReward",
									"nameLocation": "3406:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "3428:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3420:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3420:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3442:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3434:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3434:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3419:29:4"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "3480:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3472:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3472:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3471:16:4"
									},
									"scope": 1899,
									"src": "3397:1435:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "4933:1851:4",
										"statements": [
											{
												"assignments": [
													1212
												],
												"declarations": [
													{
														"constant": false,
														"id": 1212,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4961:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "4944:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
															"typeString": "struct FixedTermStack.PoolInfo"
														},
														"typeName": {
															"id": 1211,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1210,
																"name": "PoolInfo",
																"nameLocations": [
																	"4944:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 824,
																"src": "4944:8:4"
															},
															"referencedDeclaration": 824,
															"src": "4944:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1216,
												"initialValue": {
													"baseExpression": {
														"id": 1213,
														"name": "poolInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "4968:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage",
															"typeString": "struct FixedTermStack.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1215,
													"indexExpression": {
														"id": 1214,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "4978:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4968:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$824_storage",
														"typeString": "struct FixedTermStack.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4944:39:4"
											},
											{
												"assignments": [
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "5011:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "4994:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
															"typeString": "struct FixedTermStack.UserInfo"
														},
														"typeName": {
															"id": 1218,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1217,
																"name": "UserInfo",
																"nameLocations": [
																	"4994:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 808,
																"src": "4994:8:4"
															},
															"referencedDeclaration": 808,
															"src": "4994:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																"typeString": "struct FixedTermStack.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1225,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1220,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "5018:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$808_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct FixedTermStack.UserInfo storage ref))"
															}
														},
														"id": 1222,
														"indexExpression": {
															"id": 1221,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "5027:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5018:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$808_storage_$",
															"typeString": "mapping(address => struct FixedTermStack.UserInfo storage ref)"
														}
													},
													"id": 1224,
													"indexExpression": {
														"id": 1223,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "5033:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5018:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$808_storage",
														"typeString": "struct FixedTermStack.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4994:45:4"
											},
											{
												"assignments": [
													1227
												],
												"declarations": [
													{
														"constant": false,
														"id": 1227,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "5058:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "5050:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1226,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5050:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1231,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 1228,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "5064:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo storage pointer"
															}
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5069:4:4",
														"memberName": "aprs",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 823,
														"src": "5064:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
															"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5074:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5064:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5050:30:4"
											},
											{
												"assignments": [
													1233
												],
												"declarations": [
													{
														"constant": false,
														"id": 1233,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "5099:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "5091:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1232,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5091:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1234,
												"nodeType": "VariableDeclarationStatement",
												"src": "5091:18:4"
											},
											{
												"assignments": [
													1236
												],
												"declarations": [
													{
														"constant": false,
														"id": 1236,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "5125:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "5120:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1235,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5120:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1237,
												"nodeType": "VariableDeclarationStatement",
												"src": "5120:9:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 1238,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "5163:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																		"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																	}
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5168:4:4",
																"memberName": "aprs",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 823,
																"src": "5163:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																	"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																}
															},
															"id": 1243,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1240,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "5173:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5177:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5173:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5163:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																"typeString": "struct FixedTermStack.AprInfo storage ref"
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5180:4:4",
														"memberName": "time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 812,
														"src": "5163:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1245,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "5187:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																"typeString": "struct FixedTermStack.UserInfo storage pointer"
															}
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5192:13:4",
														"memberName": "lockStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 805,
														"src": "5187:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5163:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1283,
												"nodeType": "IfStatement",
												"src": "5159:266:4",
												"trueBody": {
													"id": 1282,
													"nodeType": "Block",
													"src": "5206:219:4",
													"statements": [
														{
															"expression": {
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1248,
																	"name": "multiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "5221:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1249,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1212,
																		"src": "5234:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																			"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																		}
																	},
																	"id": 1250,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5239:8:4",
																	"memberName": "duration",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 819,
																	"src": "5234:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5221:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1252,
															"nodeType": "ExpressionStatement",
															"src": "5221:26:4"
														},
														{
															"expression": {
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1253,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "5262:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1265,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1219,
																				"src": "5312:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																					"typeString": "struct FixedTermStack.UserInfo storage pointer"
																				}
																			},
																			"id": 1266,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5317:6:4",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 803,
																			"src": "5312:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"expression": {
																								"id": 1256,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1212,
																								"src": "5286:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																									"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																								}
																							},
																							"id": 1257,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5291:4:4",
																							"memberName": "aprs",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 823,
																							"src": "5286:9:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																								"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																							}
																						},
																						"id": 1261,
																						"indexExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1260,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1258,
																								"name": "len",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1227,
																								"src": "5296:3:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 1259,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5300:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "5296:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5286:16:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																							"typeString": "struct FixedTermStack.AprInfo storage ref"
																						}
																					},
																					"id": 1262,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5303:3:4",
																					"memberName": "apr",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 810,
																					"src": "5286:20:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1254,
																					"name": "multiplier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1233,
																					"src": "5271:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5282:3:4",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 670,
																				"src": "5271:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5271:36:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5308:3:4",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 670,
																		"src": "5271:40:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5271:53:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5262:62:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1269,
															"nodeType": "ExpressionStatement",
															"src": "5262:62:4"
														},
														{
															"expression": {
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1270,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "5339:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5381:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1273,
																					"name": "DENOMINATOR_TEST",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 801,
																					"src": "5359:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1271,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1208,
																					"src": "5348:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5355:3:4",
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 685,
																				"src": "5348:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5348:28:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5377:3:4",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 685,
																		"src": "5348:32:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5348:37:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5339:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1279,
															"nodeType": "ExpressionStatement",
															"src": "5339:46:4"
														},
														{
															"expression": {
																"id": 1280,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "5407:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1209,
															"id": 1281,
															"nodeType": "Return",
															"src": "5400:13:4"
														}
													]
												}
											},
											{
												"body": {
													"id": 1454,
													"nodeType": "Block",
													"src": "5474:1084:4",
													"statements": [
														{
															"condition": {
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "5495:5:4",
																"subExpression": {
																	"id": 1297,
																	"name": "flag",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1236,
																	"src": "5496:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1368,
															"nodeType": "IfStatement",
															"src": "5491:509:4",
															"trueBody": {
																"id": 1367,
																"nodeType": "Block",
																"src": "5501:499:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1299,
																				"name": "multiplier",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "5520:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1301,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1219,
																							"src": "5547:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																								"typeString": "struct FixedTermStack.UserInfo storage pointer"
																							}
																						},
																						"id": 1302,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5552:13:4",
																						"memberName": "lockStartTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 805,
																						"src": "5547:18:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"expression": {
																									"id": 1303,
																									"name": "pool",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1212,
																									"src": "5567:4:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																										"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																									}
																								},
																								"id": 1304,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "5572:4:4",
																								"memberName": "aprs",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 823,
																								"src": "5567:9:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																									"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																								}
																							},
																							"id": 1308,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1307,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1305,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1285,
																									"src": "5577:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1306,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5579:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "5577:3:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5567:14:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																								"typeString": "struct FixedTermStack.AprInfo storage ref"
																							}
																						},
																						"id": 1309,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5582:4:4",
																						"memberName": "time",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 812,
																						"src": "5567:19:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1300,
																					"name": "getMultiplier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "5533:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1310,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5533:54:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5520:67:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1312,
																		"nodeType": "ExpressionStatement",
																		"src": "5520:67:4"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1313,
																				"name": "multiplier",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "5610:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"id": 1314,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1212,
																					"src": "5623:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																						"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																					}
																				},
																				"id": 1315,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5628:8:4",
																				"memberName": "duration",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 819,
																				"src": "5623:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5610:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1346,
																		"nodeType": "IfStatement",
																		"src": "5606:244:4",
																		"trueBody": {
																			"id": 1345,
																			"nodeType": "Block",
																			"src": "5637:213:4",
																			"statements": [
																				{
																					"expression": {
																						"id": 1331,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1317,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1208,
																							"src": "5660:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 1328,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1219,
																										"src": "5709:4:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																											"typeString": "struct FixedTermStack.UserInfo storage pointer"
																										}
																									},
																									"id": 1329,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "5714:6:4",
																									"memberName": "amount",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 803,
																									"src": "5709:11:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"expression": {
																												"baseExpression": {
																													"expression": {
																														"id": 1321,
																														"name": "pool",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1212,
																														"src": "5687:4:4",
																														"typeDescriptions": {
																															"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																															"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																														}
																													},
																													"id": 1322,
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberLocation": "5692:4:4",
																													"memberName": "aprs",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 823,
																													"src": "5687:9:4",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																														"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																													}
																												},
																												"id": 1324,
																												"indexExpression": {
																													"id": 1323,
																													"name": "i",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1285,
																													"src": "5697:1:4",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "5687:12:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																													"typeString": "struct FixedTermStack.AprInfo storage ref"
																												}
																											},
																											"id": 1325,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "5700:3:4",
																											"memberName": "apr",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 810,
																											"src": "5687:16:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"expression": {
																												"id": 1318,
																												"name": "pool",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1212,
																												"src": "5669:4:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																													"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																												}
																											},
																											"id": 1319,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "5674:8:4",
																											"memberName": "duration",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 819,
																											"src": "5669:13:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1320,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "5683:3:4",
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 670,
																										"src": "5669:17:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1326,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "5669:35:4",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1327,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "5705:3:4",
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 670,
																								"src": "5669:39:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1330,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5669:52:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5660:61:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1332,
																					"nodeType": "ExpressionStatement",
																					"src": "5660:61:4"
																				},
																				{
																					"expression": {
																						"id": 1341,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1333,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1208,
																							"src": "5744:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"hexValue": "313030",
																									"id": 1339,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5786:3:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_100_by_1",
																										"typeString": "int_const 100"
																									},
																									"value": "100"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_100_by_1",
																										"typeString": "int_const 100"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"id": 1336,
																											"name": "DENOMINATOR_TEST",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 801,
																											"src": "5764:16:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 1334,
																											"name": "reward",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1208,
																											"src": "5753:6:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1335,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "5760:3:4",
																										"memberName": "div",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 685,
																										"src": "5753:10:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1337,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "5753:28:4",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1338,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "5782:3:4",
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 685,
																								"src": "5753:32:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1340,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5753:37:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5744:46:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1342,
																					"nodeType": "ExpressionStatement",
																					"src": "5744:46:4"
																				},
																				{
																					"expression": {
																						"id": 1343,
																						"name": "reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1208,
																						"src": "5820:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 1209,
																					"id": 1344,
																					"nodeType": "Return",
																					"src": "5813:13:4"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1347,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1208,
																				"src": "5868:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1357,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1219,
																							"src": "5914:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																								"typeString": "struct FixedTermStack.UserInfo storage pointer"
																							}
																						},
																						"id": 1358,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5919:6:4",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 803,
																						"src": "5914:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"baseExpression": {
																										"expression": {
																											"id": 1350,
																											"name": "pool",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1212,
																											"src": "5892:4:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																												"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																											}
																										},
																										"id": 1351,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "5897:4:4",
																										"memberName": "aprs",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 823,
																										"src": "5892:9:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																											"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																										}
																									},
																									"id": 1353,
																									"indexExpression": {
																										"id": 1352,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1285,
																										"src": "5902:1:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "5892:12:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																										"typeString": "struct FixedTermStack.AprInfo storage ref"
																									}
																								},
																								"id": 1354,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "5905:3:4",
																								"memberName": "apr",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 810,
																								"src": "5892:16:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1348,
																								"name": "multiplier",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1233,
																								"src": "5877:10:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1349,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5888:3:4",
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 670,
																							"src": "5877:14:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1355,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5877:32:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1356,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5910:3:4",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 670,
																					"src": "5877:36:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5877:49:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5868:58:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1361,
																		"nodeType": "ExpressionStatement",
																		"src": "5868:58:4"
																	},
																	{
																		"expression": {
																			"id": 1364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1362,
																				"name": "flag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1236,
																				"src": "5945:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5952:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "5945:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1365,
																		"nodeType": "ExpressionStatement",
																		"src": "5945:11:4"
																	},
																	{
																		"id": 1366,
																		"nodeType": "Continue",
																		"src": "5975:8:4"
																	}
																]
															}
														},
														{
															"assignments": [
																1370
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1370,
																	"mutability": "mutable",
																	"name": "tempNumber",
																	"nameLocation": "6024:10:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1454,
																	"src": "6016:18:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1369,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6016:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1385,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 1372,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1212,
																					"src": "6051:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																						"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																					}
																				},
																				"id": 1373,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6056:4:4",
																				"memberName": "aprs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 823,
																				"src": "6051:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																					"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1375,
																			"indexExpression": {
																				"id": 1374,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1285,
																				"src": "6061:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6051:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																				"typeString": "struct FixedTermStack.AprInfo storage ref"
																			}
																		},
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6064:4:4",
																		"memberName": "time",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 812,
																		"src": "6051:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 1377,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1212,
																					"src": "6070:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																						"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																					}
																				},
																				"id": 1378,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6075:4:4",
																				"memberName": "aprs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 823,
																				"src": "6070:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																					"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1382,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1381,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1379,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1285,
																					"src": "6080:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1380,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6082:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "6080:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6070:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																				"typeString": "struct FixedTermStack.AprInfo storage ref"
																			}
																		},
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6085:4:4",
																		"memberName": "time",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 812,
																		"src": "6070:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1371,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "6037:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6037:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6016:74:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1388,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1233,
																			"src": "6126:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1386,
																			"name": "tempNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1370,
																			"src": "6111:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6122:3:4",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 640,
																		"src": "6111:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6111:26:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1390,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1212,
																		"src": "6140:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																			"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																		}
																	},
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6145:8:4",
																	"memberName": "duration",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 819,
																	"src": "6140:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6111:42:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1428,
															"nodeType": "IfStatement",
															"src": "6107:272:4",
															"trueBody": {
																"id": 1427,
																"nodeType": "Block",
																"src": "6154:225:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1393,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1208,
																				"src": "6173:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"expression": {
																									"id": 1409,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1219,
																									"src": "6249:4:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																										"typeString": "struct FixedTermStack.UserInfo storage pointer"
																									}
																								},
																								"id": 1410,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "6254:6:4",
																								"memberName": "amount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 803,
																								"src": "6249:11:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"baseExpression": {
																												"expression": {
																													"id": 1402,
																													"name": "pool",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1212,
																													"src": "6227:4:4",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																														"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																													}
																												},
																												"id": 1403,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "6232:4:4",
																												"memberName": "aprs",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 823,
																												"src": "6227:9:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																													"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																												}
																											},
																											"id": 1405,
																											"indexExpression": {
																												"id": 1404,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1285,
																												"src": "6237:1:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "6227:12:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																												"typeString": "struct FixedTermStack.AprInfo storage ref"
																											}
																										},
																										"id": 1406,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "6240:3:4",
																										"memberName": "apr",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 810,
																										"src": "6227:16:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"arguments": [
																											{
																												"id": 1399,
																												"name": "multiplier",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1233,
																												"src": "6211:10:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"expression": {
																													"id": 1396,
																													"name": "pool",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1212,
																													"src": "6193:4:4",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																														"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																													}
																												},
																												"id": 1397,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "6198:8:4",
																												"memberName": "duration",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 819,
																												"src": "6193:13:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1398,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "6207:3:4",
																											"memberName": "sub",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 655,
																											"src": "6193:17:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1400,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "6193:29:4",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1401,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "6223:3:4",
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 670,
																									"src": "6193:33:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1407,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "6193:51:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1408,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6245:3:4",
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 670,
																							"src": "6193:55:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1411,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6193:68:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1394,
																						"name": "reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1208,
																						"src": "6182:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1395,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6189:3:4",
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 640,
																					"src": "6182:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6182:80:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6173:89:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1414,
																		"nodeType": "ExpressionStatement",
																		"src": "6173:89:4"
																	},
																	{
																		"expression": {
																			"id": 1423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1415,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1208,
																				"src": "6281:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"hexValue": "313030",
																						"id": 1421,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6323:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 1418,
																								"name": "DENOMINATOR_TEST",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 801,
																								"src": "6301:16:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1416,
																								"name": "reward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1208,
																								"src": "6290:6:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1417,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6297:3:4",
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 685,
																							"src": "6290:10:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1419,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6290:28:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1420,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6319:3:4",
																					"memberName": "div",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 685,
																					"src": "6290:32:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6290:37:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6281:46:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1424,
																		"nodeType": "ExpressionStatement",
																		"src": "6281:46:4"
																	},
																	{
																		"expression": {
																			"id": 1425,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1208,
																			"src": "6353:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1209,
																		"id": 1426,
																		"nodeType": "Return",
																		"src": "6346:13:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1429,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "6411:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1441,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1219,
																						"src": "6467:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																							"typeString": "struct FixedTermStack.UserInfo storage pointer"
																						}
																					},
																					"id": 1442,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6472:6:4",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 803,
																					"src": "6467:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 1434,
																										"name": "pool",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1212,
																										"src": "6445:4:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																											"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																										}
																									},
																									"id": 1435,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "6450:4:4",
																									"memberName": "aprs",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 823,
																									"src": "6445:9:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																										"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																									}
																								},
																								"id": 1437,
																								"indexExpression": {
																									"id": 1436,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1285,
																									"src": "6455:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6445:12:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																									"typeString": "struct FixedTermStack.AprInfo storage ref"
																								}
																							},
																							"id": 1438,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6458:3:4",
																							"memberName": "apr",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 810,
																							"src": "6445:16:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1432,
																							"name": "tempNumber",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1370,
																							"src": "6430:10:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1433,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6441:3:4",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 670,
																						"src": "6430:14:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1439,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6430:32:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6463:3:4",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 670,
																				"src": "6430:36:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6430:49:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1430,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1208,
																			"src": "6419:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6426:3:4",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 640,
																		"src": "6419:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6419:61:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6411:69:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1446,
															"nodeType": "ExpressionStatement",
															"src": "6411:69:4"
														},
														{
															"expression": {
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1447,
																	"name": "multiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "6497:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1450,
																			"name": "tempNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1370,
																			"src": "6525:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1448,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1233,
																			"src": "6510:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6521:3:4",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 640,
																		"src": "6510:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6510:26:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6497:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1453,
															"nodeType": "ExpressionStatement",
															"src": "6497:39:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1289,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "5461:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1290,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "5464:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5468:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "5464:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5461:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1455,
												"initializationExpression": {
													"assignments": [
														1285
													],
													"declarations": [
														{
															"constant": false,
															"id": 1285,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5445:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1455,
															"src": "5440:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1284,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5440:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1288,
													"initialValue": {
														"expression": {
															"id": 1286,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "5449:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																"typeString": "struct FixedTermStack.UserInfo storage pointer"
															}
														},
														"id": 1287,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5454:6:4",
														"memberName": "offset",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 807,
														"src": "5449:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5440:20:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5470:3:4",
														"subExpression": {
															"id": 1294,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "5470:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1296,
													"nodeType": "ExpressionStatement",
													"src": "5470:3:4"
												},
												"nodeType": "ForStatement",
												"src": "5435:1123:4"
											},
											{
												"expression": {
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1456,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "6574:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 1474,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "6654:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																				"typeString": "struct FixedTermStack.UserInfo storage pointer"
																			}
																		},
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6659:6:4",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 803,
																		"src": "6654:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1465,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1212,
																							"src": "6628:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																								"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																							}
																						},
																						"id": 1466,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6633:4:4",
																						"memberName": "aprs",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 823,
																						"src": "6628:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																							"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																						}
																					},
																					"id": 1470,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1469,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1467,
																							"name": "len",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1227,
																							"src": "6638:3:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1468,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6642:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "6638:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6628:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AprInfo_$813_storage",
																						"typeString": "struct FixedTermStack.AprInfo storage ref"
																					}
																				},
																				"id": 1471,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6645:3:4",
																				"memberName": "apr",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 810,
																				"src": "6628:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1462,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1233,
																						"src": "6612:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1459,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1212,
																							"src": "6594:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																								"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																							}
																						},
																						"id": 1460,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6599:8:4",
																						"memberName": "duration",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 819,
																						"src": "6594:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1461,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6608:3:4",
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 655,
																					"src": "6594:17:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6594:29:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6624:3:4",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 670,
																			"src": "6594:33:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6594:55:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6650:3:4",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 670,
																	"src": "6594:59:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6594:72:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1457,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "6583:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6590:3:4",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 640,
															"src": "6583:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6583:84:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6574:93:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "6574:93:4"
											},
											{
												"expression": {
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1480,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "6682:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "313030",
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6724:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1483,
																		"name": "DENOMINATOR_TEST",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "6702:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1481,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1208,
																		"src": "6691:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6698:3:4",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 685,
																	"src": "6691:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6691:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6720:3:4",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 685,
															"src": "6691:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6691:37:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6682:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "6682:46:4"
											},
											{
												"expression": {
													"id": 1490,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1208,
													"src": "6750:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1209,
												"id": 1491,
												"nodeType": "Return",
												"src": "6743:13:4"
											}
										]
									},
									"functionSelector": "a18f07a0",
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "4851:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "4875:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "4867:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4867:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "4889:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "4881:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4881:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:29:4"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "4925:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "4917:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:16:4"
									},
									"scope": 1899,
									"src": "4842:1942:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1624,
										"nodeType": "Block",
										"src": "6929:1010:4",
										"statements": [
											{
												"assignments": [
													1503
												],
												"declarations": [
													{
														"constant": false,
														"id": 1503,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "6957:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1624,
														"src": "6940:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
															"typeString": "struct FixedTermStack.PoolInfo"
														},
														"typeName": {
															"id": 1502,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1501,
																"name": "PoolInfo",
																"nameLocations": [
																	"6940:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 824,
																"src": "6940:8:4"
															},
															"referencedDeclaration": 824,
															"src": "6940:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1507,
												"initialValue": {
													"baseExpression": {
														"id": 1504,
														"name": "poolInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "6964:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage",
															"typeString": "struct FixedTermStack.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1506,
													"indexExpression": {
														"id": 1505,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "6974:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6964:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$824_storage",
														"typeString": "struct FixedTermStack.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6940:39:4"
											},
											{
												"assignments": [
													1510
												],
												"declarations": [
													{
														"constant": false,
														"id": 1510,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "7007:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1624,
														"src": "6990:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
															"typeString": "struct FixedTermStack.UserInfo"
														},
														"typeName": {
															"id": 1509,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1508,
																"name": "UserInfo",
																"nameLocations": [
																	"6990:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 808,
																"src": "6990:8:4"
															},
															"referencedDeclaration": 808,
															"src": "6990:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																"typeString": "struct FixedTermStack.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1517,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1511,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "7014:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$808_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct FixedTermStack.UserInfo storage ref))"
															}
														},
														"id": 1513,
														"indexExpression": {
															"id": 1512,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "7023:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7014:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$808_storage_$",
															"typeString": "mapping(address => struct FixedTermStack.UserInfo storage ref)"
														}
													},
													"id": 1516,
													"indexExpression": {
														"expression": {
															"id": 1514,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7029:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7033:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7029:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7014:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$808_storage",
														"typeString": "struct FixedTermStack.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6990:50:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1519,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "7059:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7069:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7059:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46697865645465726d537461636b3a2042656c6f77206d696e696d756d",
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7071:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2efb8e85246ee1857a12421d86999caef163a0bf04c075c8ce124ac837b8f35",
																"typeString": "literal_string \"FixedTermStack: Below minimum\""
															},
															"value": "FixedTermStack: Below minimum"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2efb8e85246ee1857a12421d86999caef163a0bf04c075c8ce124ac837b8f35",
																"typeString": "literal_string \"FixedTermStack: Below minimum\""
															}
														],
														"id": 1518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7051:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7051:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "7051:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1525,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "7120:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																"typeString": "struct FixedTermStack.UserInfo storage pointer"
															}
														},
														"id": 1526,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7125:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 803,
														"src": "7120:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7134:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7120:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1563,
												"nodeType": "IfStatement",
												"src": "7116:393:4",
												"trueBody": {
													"id": 1562,
													"nodeType": "Block",
													"src": "7136:373:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1532,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1503,
																				"src": "7191:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																					"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																				}
																			},
																			"id": 1533,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7196:8:4",
																			"memberName": "duration",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 819,
																			"src": "7191:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1529,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1510,
																				"src": "7168:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																					"typeString": "struct FixedTermStack.UserInfo storage pointer"
																				}
																			},
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7173:13:4",
																			"memberName": "lockStartTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 805,
																			"src": "7168:18:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7187:3:4",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 640,
																		"src": "7168:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7168:37:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1535,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7207:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7213:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7207:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7168:54:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1561,
															"nodeType": "IfStatement",
															"src": "7165:316:4",
															"trueBody": {
																"id": 1560,
																"nodeType": "Block",
																"src": "7223:258:4",
																"statements": [
																	{
																		"assignments": [
																			1539
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1539,
																				"mutability": "mutable",
																				"name": "pending",
																				"nameLocation": "7298:7:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1560,
																				"src": "7290:15:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1538,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7290:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1545,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1541,
																					"name": "_pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1496,
																					"src": "7324:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1542,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "7329:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1543,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "7333:6:4",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "7329:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1540,
																				"name": "calculateReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1493,
																				"src": "7308:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (uint256,address) view returns (uint256)"
																				}
																			},
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7308:32:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7290:50:4"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1546,
																				"name": "pending",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1539,
																				"src": "7362:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1547,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7372:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "7362:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1559,
																		"nodeType": "IfStatement",
																		"src": "7359:105:4",
																		"trueBody": {
																			"id": 1558,
																			"nodeType": "Block",
																			"src": "7375:89:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1553,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "7424:3:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 1554,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "7428:6:4",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "7424:10:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1555,
																								"name": "pending",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1539,
																								"src": "7436:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"id": 1550,
																										"name": "para",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 839,
																										"src": "7405:4:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IBEP20_$2000",
																											"typeString": "contract IBEP20"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_contract$_IBEP20_$2000",
																											"typeString": "contract IBEP20"
																										}
																									],
																									"id": 1549,
																									"name": "IBEP20",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2000,
																									"src": "7398:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IBEP20_$2000_$",
																										"typeString": "type(contract IBEP20)"
																									}
																								},
																								"id": 1551,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "7398:12:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IBEP20_$2000",
																									"typeString": "contract IBEP20"
																								}
																							},
																							"id": 1552,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7411:12:4",
																							"memberName": "safeTransfer",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2035,
																							"src": "7398:25:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2000_$",
																								"typeString": "function (contract IBEP20,address,uint256)"
																							}
																						},
																						"id": 1556,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7398:46:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1557,
																					"nodeType": "ExpressionStatement",
																					"src": "7398:46:4"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1564,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "7605:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																"typeString": "struct FixedTermStack.UserInfo storage pointer"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7610:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 803,
														"src": "7605:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1570,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "7635:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1567,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1510,
																	"src": "7619:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																		"typeString": "struct FixedTermStack.UserInfo storage pointer"
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7624:6:4",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 803,
																"src": "7619:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7631:3:4",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 640,
															"src": "7619:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7619:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7605:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "7605:38:4"
											},
											{
												"expression": {
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1574,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "7654:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																"typeString": "struct FixedTermStack.UserInfo storage pointer"
															}
														},
														"id": 1576,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7659:13:4",
														"memberName": "lockStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 805,
														"src": "7654:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1577,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7675:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7681:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7675:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7654:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1580,
												"nodeType": "ExpressionStatement",
												"src": "7654:36:4"
											},
											{
												"expression": {
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1581,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "7701:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																"typeString": "struct FixedTermStack.UserInfo storage pointer"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7706:6:4",
														"memberName": "offset",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 807,
														"src": "7701:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"id": 1584,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "7715:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																		"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																	}
																},
																"id": 1585,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7720:4:4",
																"memberName": "aprs",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 823,
																"src": "7715:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																	"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																}
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7725:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "7715:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7734:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "7715:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7701:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1590,
												"nodeType": "ExpressionStatement",
												"src": "7701:34:4"
											},
											{
												"expression": {
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1591,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "7746:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo storage pointer"
															}
														},
														"id": 1593,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7751:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 817,
														"src": "7746:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1597,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "7776:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1594,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "7760:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																		"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																	}
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7765:6:4",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 817,
																"src": "7760:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7772:3:4",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 640,
															"src": "7760:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7760:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7746:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "7746:38:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1607,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7835:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7839:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7835:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7827:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1605,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7827:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7827:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1612,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7856:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FixedTermStack_$1899",
																		"typeString": "contract FixedTermStack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FixedTermStack_$1899",
																		"typeString": "contract FixedTermStack"
																	}
																],
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7848:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1610,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7848:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7848:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1614,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "7863:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1602,
																	"name": "para",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "7804:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$2000",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$2000",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 1601,
																"name": "IBEP20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2000,
																"src": "7797:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBEP20_$2000_$",
																	"typeString": "type(contract IBEP20)"
																}
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7797:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7810:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2061,
														"src": "7797:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2000_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7797:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "7797:74:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1618,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7895:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7899:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7895:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1620,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "7907:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1621,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "7913:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1617,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "7887:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1623,
												"nodeType": "EmitStatement",
												"src": "7882:39:4"
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "6792:76:4",
										"text": " @dev Deposit LP tokens to LPMining for bfly allocation."
									},
									"functionSelector": "e2bbb158",
									"id": 1625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "6883:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "6899:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "6891:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6891:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6913:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "6905:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6905:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6890:31:4"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6929:0:4"
									},
									"scope": 1899,
									"src": "6874:1065:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "8070:840:4",
										"statements": [
											{
												"assignments": [
													1635
												],
												"declarations": [
													{
														"constant": false,
														"id": 1635,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "8098:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1744,
														"src": "8081:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
															"typeString": "struct FixedTermStack.PoolInfo"
														},
														"typeName": {
															"id": 1634,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1633,
																"name": "PoolInfo",
																"nameLocations": [
																	"8081:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 824,
																"src": "8081:8:4"
															},
															"referencedDeclaration": 824,
															"src": "8081:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1639,
												"initialValue": {
													"baseExpression": {
														"id": 1636,
														"name": "poolInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "8105:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage",
															"typeString": "struct FixedTermStack.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1638,
													"indexExpression": {
														"id": 1637,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "8115:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8105:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$824_storage",
														"typeString": "struct FixedTermStack.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8081:39:4"
											},
											{
												"assignments": [
													1642
												],
												"declarations": [
													{
														"constant": false,
														"id": 1642,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "8148:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1744,
														"src": "8131:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
															"typeString": "struct FixedTermStack.UserInfo"
														},
														"typeName": {
															"id": 1641,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1640,
																"name": "UserInfo",
																"nameLocations": [
																	"8131:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 808,
																"src": "8131:8:4"
															},
															"referencedDeclaration": 808,
															"src": "8131:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																"typeString": "struct FixedTermStack.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1649,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1643,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8155:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$808_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct FixedTermStack.UserInfo storage ref))"
															}
														},
														"id": 1645,
														"indexExpression": {
															"id": 1644,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "8164:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8155:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$808_storage_$",
															"typeString": "mapping(address => struct FixedTermStack.UserInfo storage ref)"
														}
													},
													"id": 1648,
													"indexExpression": {
														"expression": {
															"id": 1646,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8170:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8174:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8170:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8155:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$808_storage",
														"typeString": "struct FixedTermStack.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8131:50:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1651,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "8200:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																		"typeString": "struct FixedTermStack.UserInfo storage pointer"
																	}
																},
																"id": 1652,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8205:6:4",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 803,
																"src": "8200:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1653,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "8215:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8200:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46697865645465726d537461636b3a2053554646494349454e545f42414c414e4345",
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8224:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35c1107469db871bb90433534220e8bf05ffb140bd424f1bee70dc03556326ce",
																"typeString": "literal_string \"FixedTermStack: SUFFICIENT_BALANCE\""
															},
															"value": "FixedTermStack: SUFFICIENT_BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35c1107469db871bb90433534220e8bf05ffb140bd424f1bee70dc03556326ce",
																"typeString": "literal_string \"FixedTermStack: SUFFICIENT_BALANCE\""
															}
														],
														"id": 1650,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8192:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8192:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "8192:69:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1661,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1635,
																	"src": "8300:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																		"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																	}
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8305:8:4",
																"memberName": "duration",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 819,
																"src": "8300:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1658,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "8277:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																		"typeString": "struct FixedTermStack.UserInfo storage pointer"
																	}
																},
																"id": 1659,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8282:13:4",
																"memberName": "lockStartTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 805,
																"src": "8277:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:3:4",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 640,
															"src": "8277:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8277:37:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1664,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8316:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8322:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8316:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8277:54:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1690,
												"nodeType": "IfStatement",
												"src": "8274:303:4",
												"trueBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "8332:245:4",
													"statements": [
														{
															"assignments": [
																1668
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1668,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "8386:7:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1689,
																	"src": "8378:15:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1667,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8378:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1674,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1670,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "8412:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1671,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8417:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8421:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8417:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1669,
																	"name": "calculateReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "8396:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (uint256,address) view returns (uint256)"
																	}
																},
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8396:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8378:50:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1675,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1668,
																	"src": "8450:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8460:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8450:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1688,
															"nodeType": "IfStatement",
															"src": "8447:105:4",
															"trueBody": {
																"id": 1687,
																"nodeType": "Block",
																"src": "8463:89:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1682,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "8512:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1683,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8516:6:4",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "8512:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1684,
																					"name": "pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1668,
																					"src": "8524:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1679,
																							"name": "para",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 839,
																							"src": "8493:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IBEP20_$2000",
																								"typeString": "contract IBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IBEP20_$2000",
																								"typeString": "contract IBEP20"
																							}
																						],
																						"id": 1678,
																						"name": "IBEP20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2000,
																						"src": "8486:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IBEP20_$2000_$",
																							"typeString": "type(contract IBEP20)"
																						}
																					},
																					"id": 1680,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8486:12:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$2000",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 1681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8499:12:4",
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2035,
																				"src": "8486:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2000_$",
																					"typeString": "function (contract IBEP20,address,uint256)"
																				}
																			},
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8486:46:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1686,
																		"nodeType": "ExpressionStatement",
																		"src": "8486:46:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1691,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "8589:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																"typeString": "struct FixedTermStack.UserInfo storage pointer"
															}
														},
														"id": 1693,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8594:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 803,
														"src": "8589:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1697,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "8619:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1694,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "8603:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																		"typeString": "struct FixedTermStack.UserInfo storage pointer"
																	}
																},
																"id": 1695,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8608:6:4",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 803,
																"src": "8603:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8615:3:4",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 655,
															"src": "8603:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8603:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8589:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "8589:38:4"
											},
											{
												"expression": {
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1701,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "8638:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																"typeString": "struct FixedTermStack.UserInfo storage pointer"
															}
														},
														"id": 1703,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8643:13:4",
														"memberName": "lockStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 805,
														"src": "8638:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1704,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8659:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8665:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8659:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8638:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1707,
												"nodeType": "ExpressionStatement",
												"src": "8638:36:4"
											},
											{
												"expression": {
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1708,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "8685:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$808_storage_ptr",
																"typeString": "struct FixedTermStack.UserInfo storage pointer"
															}
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8690:6:4",
														"memberName": "offset",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 807,
														"src": "8685:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"id": 1711,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1635,
																	"src": "8699:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																		"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																	}
																},
																"id": 1712,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8704:4:4",
																"memberName": "aprs",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 823,
																"src": "8699:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																	"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8709:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8699:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8718:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8699:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8685:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1717,
												"nodeType": "ExpressionStatement",
												"src": "8685:34:4"
											},
											{
												"expression": {
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1718,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1635,
															"src": "8730:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo storage pointer"
															}
														},
														"id": 1720,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8735:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 817,
														"src": "8730:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1724,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "8760:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1721,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1635,
																	"src": "8744:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																		"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																	}
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8749:6:4",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 817,
																"src": "8744:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8756:3:4",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 655,
															"src": "8744:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8744:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8730:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "8730:38:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1732,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8819:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8823:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8819:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1734,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "8831:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1729,
																	"name": "para",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "8800:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$2000",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$2000",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 1728,
																"name": "IBEP20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2000,
																"src": "8793:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBEP20_$2000_$",
																	"typeString": "type(contract IBEP20)"
																}
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8793:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8806:12:4",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2035,
														"src": "8793:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2000_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8793:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1736,
												"nodeType": "ExpressionStatement",
												"src": "8793:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1738,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8866:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8870:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8866:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1740,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "8878:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1741,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "8884:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1737,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "8857:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8857:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1743,
												"nodeType": "EmitStatement",
												"src": "8852:40:4"
											}
										]
									},
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "7947:61:4",
										"text": " @dev Withdraw LP tokens from MasterChef."
									},
									"functionSelector": "441a3e70",
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "8023:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "8040:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "8032:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8054:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "8046:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8046:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8031:31:4"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8070:0:4"
									},
									"scope": 1899,
									"src": "8014:896:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1776,
										"nodeType": "Block",
										"src": "9012:168:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1755,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1747,
																"src": "9031:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1758,
																		"name": "para",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "9056:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2000",
																			"typeString": "contract IBEP20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IBEP20_$2000",
																			"typeString": "contract IBEP20"
																		}
																	],
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9048:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1756,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9048:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9048:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9031:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206265207374616b656420746f6b656e",
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9063:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2234c59bb9b24bd9eea0d80dd308fa837e87d8c6a3de9b68b0a40a73104da8b",
																"typeString": "literal_string \"Cannot be staked token\""
															},
															"value": "Cannot be staked token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2234c59bb9b24bd9eea0d80dd308fa837e87d8c6a3de9b68b0a40a73104da8b",
																"typeString": "literal_string \"Cannot be staked token\""
															}
														],
														"id": 1754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9023:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9023:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1763,
												"nodeType": "ExpressionStatement",
												"src": "9023:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1770,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9144:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9148:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9144:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9136:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1768,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9136:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9136:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1773,
															"name": "_tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "9157:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1765,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "9108:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1764,
																"name": "IBEP20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2000,
																"src": "9101:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBEP20_$2000_$",
																	"typeString": "type(contract IBEP20)"
																}
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9101:21:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9123:12:4",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2035,
														"src": "9101:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2000_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9101:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "9101:69:4"
											}
										]
									},
									"functionSelector": "3f138d4b",
									"id": 1777,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1752,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1751,
												"name": "onlyOwner",
												"nameLocations": [
													"9002:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "9002:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "9002:9:4"
										}
									],
									"name": "recoverWrongTokens",
									"nameLocation": "8929:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "8956:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "8948:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8948:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "_tokenAmount",
												"nameLocation": "8979:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "8971:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8947:45:4"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9012:0:4"
									},
									"scope": 1899,
									"src": "8920:260:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "9249:118:4",
										"statements": [
											{
												"body": {
													"id": 1800,
													"nodeType": "Block",
													"src": "9301:59:4",
													"statements": [
														{
															"expression": {
																"id": 1798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1793,
																	"name": "allAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1780,
																	"src": "9316:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1794,
																			"name": "poolInfos",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 828,
																			"src": "9329:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage",
																				"typeString": "struct FixedTermStack.PoolInfo storage ref[] storage ref"
																			}
																		},
																		"id": 1796,
																		"indexExpression": {
																			"id": 1795,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1783,
																			"src": "9339:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9329:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$824_storage",
																			"typeString": "struct FixedTermStack.PoolInfo storage ref"
																		}
																	},
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9342:6:4",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 817,
																	"src": "9329:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9316:32:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1799,
															"nodeType": "ExpressionStatement",
															"src": "9316:32:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1786,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "9276:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1787,
															"name": "poolInfos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "9280:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage",
																"typeString": "struct FixedTermStack.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9290:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9280:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9276:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1801,
												"initializationExpression": {
													"assignments": [
														1783
													],
													"declarations": [
														{
															"constant": false,
															"id": 1783,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9269:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1801,
															"src": "9264:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1782,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "9264:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1785,
													"initialValue": {
														"hexValue": "30",
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9273:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9264:10:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9297:3:4",
														"subExpression": {
															"id": 1790,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "9297:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1792,
													"nodeType": "ExpressionStatement",
													"src": "9297:3:4"
												},
												"nodeType": "ForStatement",
												"src": "9260:100:4"
											}
										]
									},
									"functionSelector": "51166d78",
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllAmount",
									"nameLocation": "9197:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9209:2:4"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "allAmount",
												"nameLocation": "9239:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "9231:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9231:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9230:19:4"
									},
									"scope": 1899,
									"src": "9188:179:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1862,
										"nodeType": "Block",
										"src": "9447:288:4",
										"statements": [
											{
												"assignments": [
													1813
												],
												"declarations": [
													{
														"constant": false,
														"id": 1813,
														"mutability": "mutable",
														"name": "_id",
														"nameLocation": "9465:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 1862,
														"src": "9460:8:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1812,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9460:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1816,
												"initialValue": {
													"expression": {
														"id": 1814,
														"name": "poolInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "9471:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage",
															"typeString": "struct FixedTermStack.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9481:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "9471:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9460:27:4"
											},
											{
												"assignments": [
													1819
												],
												"declarations": [
													{
														"constant": false,
														"id": 1819,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "9515:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1862,
														"src": "9498:18:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
															"typeString": "struct FixedTermStack.PoolInfo"
														},
														"typeName": {
															"id": 1818,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1817,
																"name": "PoolInfo",
																"nameLocations": [
																	"9498:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 824,
																"src": "9498:8:4"
															},
															"referencedDeclaration": 824,
															"src": "9498:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1823,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1820,
															"name": "poolInfos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "9519:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage",
																"typeString": "struct FixedTermStack.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9529:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "9519:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage_ptr_$returns$_t_struct$_PoolInfo_$824_storage_$bound_to$_t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct FixedTermStack.PoolInfo storage ref[] storage pointer) returns (struct FixedTermStack.PoolInfo storage ref)"
														}
													},
													"id": 1822,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9519:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$824_storage",
														"typeString": "struct FixedTermStack.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9498:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1830,
																	"name": "_apr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1805,
																	"src": "9568:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1831,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "9574:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9580:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "9574:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1829,
																"name": "AprInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "9560:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_AprInfo_$813_storage_ptr_$",
																	"typeString": "type(struct FixedTermStack.AprInfo storage pointer)"
																}
															},
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9560:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AprInfo_$813_memory_ptr",
																"typeString": "struct FixedTermStack.AprInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AprInfo_$813_memory_ptr",
																"typeString": "struct FixedTermStack.AprInfo memory"
															}
														],
														"expression": {
															"expression": {
																"id": 1824,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "9548:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																	"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																}
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9550:4:4",
															"memberName": "aprs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 823,
															"src": "9548:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9555:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "9548:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage_ptr_$_t_struct$_AprInfo_$813_storage_$returns$__$bound_to$_t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct FixedTermStack.AprInfo storage ref[] storage pointer,struct FixedTermStack.AprInfo storage ref)"
														}
													},
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9548:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1835,
												"nodeType": "ExpressionStatement",
												"src": "9548:43:4"
											},
											{
												"expression": {
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1836,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "9602:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo storage pointer"
															}
														},
														"id": 1838,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9604:8:4",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 819,
														"src": "9602:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1839,
															"name": "_duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "9615:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9627:9:4",
															"subdenomination": "minutes",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "1"
														},
														"src": "9615:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9602:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "9602:34:4"
											},
											{
												"expression": {
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1844,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "9647:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo storage pointer"
															}
														},
														"id": 1846,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9649:2:4",
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 815,
														"src": "9647:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1847,
														"name": "_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1813,
														"src": "9654:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9647:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1849,
												"nodeType": "ExpressionStatement",
												"src": "9647:10:4"
											},
											{
												"expression": {
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1850,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "9668:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo storage pointer"
															}
														},
														"id": 1852,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9670:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 817,
														"src": "9668:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9679:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9668:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1855,
												"nodeType": "ExpressionStatement",
												"src": "9668:12:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1857,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "9706:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1858,
															"name": "_apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "9710:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1859,
															"name": "_duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "9715:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1856,
														"name": "AddPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "9698:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9698:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1861,
												"nodeType": "EmitStatement",
												"src": "9693:32:4"
											}
										]
									},
									"functionSelector": "6d89dbc5",
									"id": 1863,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1810,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1809,
												"name": "onlyOwner",
												"nameLocations": [
													"9437:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "9437:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "9437:9:4"
										}
									],
									"name": "addPool",
									"nameLocation": "9386:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "_apr",
												"nameLocation": "9402:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "9394:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9394:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "9416:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "9408:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9408:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9393:33:4"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9447:0:4"
									},
									"scope": 1899,
									"src": "9377:358:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "9915:202:4",
										"statements": [
											{
												"assignments": [
													1875
												],
												"declarations": [
													{
														"constant": false,
														"id": 1875,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "9943:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1897,
														"src": "9926:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
															"typeString": "struct FixedTermStack.PoolInfo"
														},
														"typeName": {
															"id": 1874,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1873,
																"name": "PoolInfo",
																"nameLocations": [
																	"9926:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 824,
																"src": "9926:8:4"
															},
															"referencedDeclaration": 824,
															"src": "9926:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																"typeString": "struct FixedTermStack.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1879,
												"initialValue": {
													"baseExpression": {
														"id": 1876,
														"name": "poolInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "9950:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$824_storage_$dyn_storage",
															"typeString": "struct FixedTermStack.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1878,
													"indexExpression": {
														"id": 1877,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "9960:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9950:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$824_storage",
														"typeString": "struct FixedTermStack.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9926:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1886,
																	"name": "_apr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1868,
																	"src": "10018:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1887,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10042:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10048:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "10042:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1885,
																"name": "AprInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "9991:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_AprInfo_$813_storage_ptr_$",
																	"typeString": "type(struct FixedTermStack.AprInfo storage pointer)"
																}
															},
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"10014:3:4",
																"10037:4:4"
															],
															"names": [
																"apr",
																"time"
															],
															"nodeType": "FunctionCall",
															"src": "9991:82:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AprInfo_$813_memory_ptr",
																"typeString": "struct FixedTermStack.AprInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AprInfo_$813_memory_ptr",
																"typeString": "struct FixedTermStack.AprInfo memory"
															}
														],
														"expression": {
															"expression": {
																"id": 1880,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1875,
																"src": "9976:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$824_storage_ptr",
																	"typeString": "struct FixedTermStack.PoolInfo storage pointer"
																}
															},
															"id": 1883,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9981:4:4",
															"memberName": "aprs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 823,
															"src": "9976:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage",
																"typeString": "struct FixedTermStack.AprInfo storage ref[] storage ref"
															}
														},
														"id": 1884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9986:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "9976:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage_ptr_$_t_struct$_AprInfo_$813_storage_$returns$__$bound_to$_t_array$_t_struct$_AprInfo_$813_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct FixedTermStack.AprInfo storage ref[] storage pointer,struct FixedTermStack.AprInfo storage ref)"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9976:98:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1891,
												"nodeType": "ExpressionStatement",
												"src": "9976:98:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1893,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "10099:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1894,
															"name": "_apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "10104:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1892,
														"name": "SetApr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "10092:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10092:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1896,
												"nodeType": "EmitStatement",
												"src": "10087:22:4"
											}
										]
									},
									"documentation": {
										"id": 1864,
										"nodeType": "StructuredDocumentation",
										"src": "9743:105:4",
										"text": " @dev Update the given pool's BFLY allocation point. Can only be called by the owner."
									},
									"functionSelector": "cfbb3dbd",
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1871,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1870,
												"name": "onlyOwner",
												"nameLocations": [
													"9905:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "9905:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "9905:9:4"
										}
									],
									"name": "setApr",
									"nameLocation": "9863:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "9878:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "9870:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "_apr",
												"nameLocation": "9892:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "9884:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9884:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9869:28:4"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9915:0:4"
									},
									"scope": 1899,
									"src": "9854:263:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1900,
							"src": "306:9818:4",
							"usedErrors": []
						}
					],
					"src": "33:10091:4"
				},
				"id": 4
			},
			"interfaces/IBEP20.sol": {
				"ast": {
					"absolutePath": "interfaces/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							2000
						]
					},
					"id": 2001,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1901,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2000,
							"linearizedBaseContracts": [
								2000
							],
							"name": "IBEP20",
							"nameLocation": "70:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1902,
										"nodeType": "StructuredDocumentation",
										"src": "84:68:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1907,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "167:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:2:5"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "204:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:5"
									},
									"scope": 2000,
									"src": "158:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "221:53:5",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 1913,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "289:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "297:2:5"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "323:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1910,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "323:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:7:5"
									},
									"scope": 2000,
									"src": "280:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1914,
										"nodeType": "StructuredDocumentation",
										"src": "338:51:5",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "404:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:2:5"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "436:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1916,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "436:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "435:15:5"
									},
									"scope": 2000,
									"src": "395:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1920,
										"nodeType": "StructuredDocumentation",
										"src": "459:49:5",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 1925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "523:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "527:2:5"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "553:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1922,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "553:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "552:15:5"
									},
									"scope": 2000,
									"src": "514:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "576:54:5",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 1931,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "645:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "653:2:5"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "679:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:9:5"
									},
									"scope": 2000,
									"src": "636:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "696:74:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1939,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "785:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "803:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "795:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:17:5"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "835:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:9:5"
									},
									"scope": 2000,
									"src": "776:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1940,
										"nodeType": "StructuredDocumentation",
										"src": "852:215:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1082:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1099:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1091:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1118:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1110:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:35:5"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1144:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1946,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1144:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1143:6:5"
									},
									"scope": 2000,
									"src": "1073:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "1158:270:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1959,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1443:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1461:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "1453:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1477:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "1469:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:33:5"
									},
									"returnParameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "1509:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:9:5"
									},
									"scope": 2000,
									"src": "1434:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "1526:655:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1969,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2196:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2212:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "2204:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2229:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "2221:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:33:5"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "2255:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2255:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:6:5"
									},
									"scope": 2000,
									"src": "2187:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1970,
										"nodeType": "StructuredDocumentation",
										"src": "2269:304:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2588:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2619:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "2611:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2611:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2644:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "2636:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2672:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "2664:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2664:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2600:85:5"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "2704:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1978,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2704:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:6:5"
									},
									"scope": 2000,
									"src": "2579:131:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1982,
										"nodeType": "StructuredDocumentation",
										"src": "2718:163:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1990,
									"name": "Transfer",
									"nameLocation": "2893:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2918:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "2902:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1986,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2940:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "2924:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2924:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1988,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2952:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "2944:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2944:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2901:57:5"
									},
									"src": "2887:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "2967:151:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1999,
									"name": "Approval",
									"nameLocation": "3130:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3155:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "3139:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3178:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "3162:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3162:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3195:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "3187:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3187:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3138:63:5"
									},
									"src": "3124:78:5"
								}
							],
							"scope": 2001,
							"src": "60:3145:5",
							"usedErrors": []
						}
					],
					"src": "33:3172:5"
				},
				"id": 5
			},
			"libraries/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "libraries/SafeBEP20.sol",
					"exportedSymbols": {
						"Address": [
							442
						],
						"IBEP20": [
							2000
						],
						"SafeBEP20": [
							2219
						],
						"SafeMath": [
							776
						]
					},
					"id": 2220,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2002,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2003,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2220,
							"sourceUnit": 777,
							"src": "60:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 2004,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2220,
							"sourceUnit": 443,
							"src": "119:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IBEP20.sol",
							"file": "../interfaces/IBEP20.sol",
							"id": 2005,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2220,
							"sourceUnit": 2001,
							"src": "174:34:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeBEP20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2006,
								"nodeType": "StructuredDocumentation",
								"src": "212:465:6",
								"text": " @title SafeBEP20\n @dev Wrappers around BEP20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2219,
							"linearizedBaseContracts": [
								2219
							],
							"name": "SafeBEP20",
							"nameLocation": "687:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2009,
									"libraryName": {
										"id": 2007,
										"name": "SafeMath",
										"nameLocations": [
											"710:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 776,
										"src": "710:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "704:27:6",
									"typeName": {
										"id": 2008,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "723:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2012,
									"libraryName": {
										"id": 2010,
										"name": "Address",
										"nameLocations": [
											"743:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 442,
										"src": "743:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "737:26:6",
									"typeName": {
										"id": 2011,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "755:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 2034,
										"nodeType": "Block",
										"src": "877:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2023,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "908:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2026,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2015,
																			"src": "938:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2000",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "944:8:6",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1949,
																		"src": "938:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "953:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "938:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2029,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2017,
																	"src": "963:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2030,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2019,
																	"src": "967:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2024,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "915:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "919:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "915:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "915:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2022,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2218,
														"src": "888:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "888:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2033,
												"nodeType": "ExpressionStatement",
												"src": "888:86:6"
											}
										]
									},
									"id": 2035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "780:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "810:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "803:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2000",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 2014,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2013,
														"name": "IBEP20",
														"nameLocations": [
															"803:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "803:6:6"
													},
													"referencedDeclaration": 2000,
													"src": "803:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "834:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "826:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "855:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "847:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:75:6"
									},
									"returnParameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "877:0:6"
									},
									"scope": 2219,
									"src": "771:211:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "1123:115:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2048,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "1154:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2051,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2038,
																			"src": "1184:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2000",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1190:12:6",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1981,
																		"src": "1184:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1203:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1184:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2054,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2040,
																	"src": "1213:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2055,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2042,
																	"src": "1219:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2056,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2044,
																	"src": "1223:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2049,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1161:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1165:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1161:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1161:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2047,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2218,
														"src": "1134:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2059,
												"nodeType": "ExpressionStatement",
												"src": "1134:96:6"
											}
										]
									},
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "999:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1033:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "1026:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2000",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 2037,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2036,
														"name": "IBEP20",
														"nameLocations": [
															"1026:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "1026:6:6"
													},
													"referencedDeclaration": 2000,
													"src": "1026:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1057:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "1049:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1080:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "1072:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1101:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "1093:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:98:6"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:0:6"
									},
									"scope": 2219,
									"src": "990:248:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2104,
										"nodeType": "Block",
										"src": "1617:560:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2073,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2069,
																			"src": "1925:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1934:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1925:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2076,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1924:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2081,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1965:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$2219",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$2219",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 2080,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1957:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2079,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1957:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2082,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1957:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2083,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2067,
																					"src": "1972:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 2077,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2065,
																					"src": "1941:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$2000",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 2078,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1947:9:6",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1959,
																				"src": "1941:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 2084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1941:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1984:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1941:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2087,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1924:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2001:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 2072,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1902:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1902:166:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2091,
												"nodeType": "ExpressionStatement",
												"src": "1902:166:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2093,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "2099:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2096,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2065,
																			"src": "2129:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2000",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2135:7:6",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1969,
																		"src": "2129:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2143:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2129:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2099,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2067,
																	"src": "2153:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2100,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2069,
																	"src": "2162:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2094,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2106:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2110:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2106:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2106:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2092,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2218,
														"src": "2079:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2079:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2103,
												"nodeType": "ExpressionStatement",
												"src": "2079:90:6"
											}
										]
									},
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "1246:255:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 2105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1516:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1545:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "1538:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2000",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 2064,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2063,
														"name": "IBEP20",
														"nameLocations": [
															"1538:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "1538:6:6"
													},
													"referencedDeclaration": 2000,
													"src": "1538:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1569:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "1561:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1595:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "1587:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1527:80:6"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1617:0:6"
									},
									"scope": 2219,
									"src": "1507:670:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2141,
										"nodeType": "Block",
										"src": "2305:200:6",
										"statements": [
											{
												"assignments": [
													2116
												],
												"declarations": [
													{
														"constant": false,
														"id": 2116,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2324:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 2141,
														"src": "2316:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2316:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2128,
												"initialValue": {
													"arguments": [
														{
															"id": 2126,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2112,
															"src": "2383:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2121,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2363:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$2219",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$2219",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 2120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2119,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2123,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "2370:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2117,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2108,
																	"src": "2339:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$2000",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2345:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1959,
																"src": "2339:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2339:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2379:3:6",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 640,
														"src": "2339:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2339:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2316:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2130,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2108,
															"src": "2420:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2133,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2108,
																			"src": "2450:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2000",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2456:7:6",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1969,
																		"src": "2450:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2464:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2450:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2136,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "2474:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2137,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2116,
																	"src": "2483:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2131,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2427:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2431:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2427:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2427:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2129,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2218,
														"src": "2400:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2400:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2140,
												"nodeType": "ExpressionStatement",
												"src": "2400:97:6"
											}
										]
									},
									"id": 2142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2194:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2233:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "2226:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2000",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 2107,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2106,
														"name": "IBEP20",
														"nameLocations": [
															"2226:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "2226:6:6"
													},
													"referencedDeclaration": 2000,
													"src": "2226:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2257:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "2249:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2283:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "2275:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2215:80:6"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2305:0:6"
									},
									"scope": 2219,
									"src": "2185:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2179,
										"nodeType": "Block",
										"src": "2633:258:6",
										"statements": [
											{
												"assignments": [
													2153
												],
												"declarations": [
													{
														"constant": false,
														"id": 2153,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2652:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 2179,
														"src": "2644:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2152,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2644:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2166,
												"initialValue": {
													"arguments": [
														{
															"id": 2163,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "2724:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 2164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2731:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2158,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2704:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$2219",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$2219",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 2157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2696:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2156,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2696:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2696:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2160,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2147,
																	"src": "2711:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2154,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2145,
																	"src": "2680:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$2000",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2686:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1959,
																"src": "2680:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2680:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2720:3:6",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 725,
														"src": "2680:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2680:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2644:131:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2168,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "2806:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2171,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2145,
																			"src": "2836:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2000",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2842:7:6",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1969,
																		"src": "2836:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2850:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2836:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2174,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2147,
																	"src": "2860:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2175,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2153,
																	"src": "2869:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2169,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2813:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2817:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2813:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2813:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2167,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2218,
														"src": "2786:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2786:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2178,
												"nodeType": "ExpressionStatement",
												"src": "2786:97:6"
											}
										]
									},
									"id": 2180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2522:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2561:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "2554:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2000",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 2144,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2143,
														"name": "IBEP20",
														"nameLocations": [
															"2554:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "2554:6:6"
													},
													"referencedDeclaration": 2000,
													"src": "2554:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2585:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "2577:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2577:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2611:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "2603:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2543:80:6"
									},
									"returnParameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2633:0:6"
									},
									"scope": 2219,
									"src": "2513:378:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2217,
										"nodeType": "Block",
										"src": "3352:704:6",
										"statements": [
											{
												"assignments": [
													2190
												],
												"declarations": [
													{
														"constant": false,
														"id": 2190,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3719:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 2217,
														"src": "3706:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2189,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3706:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2199,
												"initialValue": {
													"arguments": [
														{
															"id": 2196,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2186,
															"src": "3760:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3766:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2193,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2184,
																	"src": "3740:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$2000",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$2000",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3732:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2191,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3732:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3732:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3747:12:6",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 202,
														"src": "3732:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3732:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3706:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2200,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2190,
															"src": "3816:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3827:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3816:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3836:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3816:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2216,
												"nodeType": "IfStatement",
												"src": "3812:237:6",
												"trueBody": {
													"id": 2215,
													"nodeType": "Block",
													"src": "3839:210:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2207,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2190,
																				"src": "3971:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2209,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3984:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2208,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3984:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2210,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3983:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 2205,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3960:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3964:6:6",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3960:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3960:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 2212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3992:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 2204,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3952:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3952:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2214,
															"nodeType": "ExpressionStatement",
															"src": "3952:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2181,
										"nodeType": "StructuredDocumentation",
										"src": "2899:377:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3291:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3318:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3311:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2000",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 2183,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2182,
														"name": "IBEP20",
														"nameLocations": [
															"3311:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "3311:6:6"
													},
													"referencedDeclaration": 2000,
													"src": "3311:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3338:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3325:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2185,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3325:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3310:33:6"
									},
									"returnParameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3352:0:6"
									},
									"scope": 2219,
									"src": "3282:774:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2220,
							"src": "679:3380:6",
							"usedErrors": []
						}
					],
					"src": "33:4026:6"
				},
				"id": 6
			}
		}
	}
}